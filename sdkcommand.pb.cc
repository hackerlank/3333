// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdkcommand.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sdkcommand.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Pmd {

namespace {

const ::google::protobuf::Descriptor* Sdk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sdk_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Sdk_Param_descriptor_ = NULL;
const ::google::protobuf::Descriptor* StartUpGameRequestSdkPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartUpGameRequestSdkPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartUpGameReturnSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartUpGameReturnSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* SdkPlatInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SdkPlatInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* GamePlatList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GamePlatList_reflection_ = NULL;
const ::google::protobuf::Descriptor* SupportGamePlatListSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SupportGamePlatListSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlatBaseData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlatBaseData_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserLoginPlatRequestSdkPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserLoginPlatRequestSdkPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserLoginPlatReturnSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserLoginPlatReturnSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreatePlatOrderRequestSdkPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreatePlatOrderRequestSdkPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreatePlatOrderReturnSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreatePlatOrderReturnSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyRechargeRequestSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyRechargeRequestSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyRechargeReturnSdkPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyRechargeReturnSdkPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* RechargeQueryRequestIOSSdkPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RechargeQueryRequestIOSSdkPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestQueryPlatPointSdkPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestQueryPlatPointSdkPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReturnQueryPlatPointSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReturnQueryPlatPointSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestRedeemPlatPointSdkPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestRedeemPlatPointSdkPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReturnRedeemPlatPointSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReturnRedeemPlatPointSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestRedeemBackPlatPointSdkPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestRedeemBackPlatPointSdkPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReturnRedeemBackPlatPointSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReturnRedeemBackPlatPointSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReturnErrorCodeSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReturnErrorCodeSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestBindAccountSdkPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestBindAccountSdkPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlatAccountInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlatAccountInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestBindPlatInfoSdkPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestBindPlatInfoSdkPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestAccidByPlatinfoSdkPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestAccidByPlatinfoSdkPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestUnbindAccountSdkPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestUnbindAccountSdkPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyTapJoyRequestSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyTapJoyRequestSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushMsgRequestSdkPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushMsgRequestSdkPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* PushMsgReturnSdkPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PushMsgReturnSdkPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindAccountPhoneSdkPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindAccountPhoneSdkPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestMobileRegistRandCodeSdkPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestMobileRegistRandCodeSdkPmd_CS_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sdkcommand_2eproto() {
  protobuf_AddDesc_sdkcommand_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sdkcommand.proto");
  GOOGLE_CHECK(file != NULL);
  Sdk_descriptor_ = file->message_type(0);
  static const int Sdk_offsets_[1] = {
  };
  Sdk_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Sdk_descriptor_,
      Sdk::default_instance_,
      Sdk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdk, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sdk, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Sdk));
  Sdk_Param_descriptor_ = Sdk_descriptor_->enum_type(0);
  StartUpGameRequestSdkPmd_C_descriptor_ = file->message_type(1);
  static const int StartUpGameRequestSdkPmd_C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameRequestSdkPmd_C, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameRequestSdkPmd_C, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameRequestSdkPmd_C, compress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameRequestSdkPmd_C, encrypt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameRequestSdkPmd_C, encryptkey_),
  };
  StartUpGameRequestSdkPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StartUpGameRequestSdkPmd_C_descriptor_,
      StartUpGameRequestSdkPmd_C::default_instance_,
      StartUpGameRequestSdkPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameRequestSdkPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameRequestSdkPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StartUpGameRequestSdkPmd_C));
  StartUpGameReturnSdkPmd_S_descriptor_ = file->message_type(2);
  static const int StartUpGameReturnSdkPmd_S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameReturnSdkPmd_S, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameReturnSdkPmd_S, retdesc_),
  };
  StartUpGameReturnSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StartUpGameReturnSdkPmd_S_descriptor_,
      StartUpGameReturnSdkPmd_S::default_instance_,
      StartUpGameReturnSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameReturnSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartUpGameReturnSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StartUpGameReturnSdkPmd_S));
  SdkPlatInfo_descriptor_ = file->message_type(3);
  static const int SdkPlatInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkPlatInfo, platid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkPlatInfo, platname_),
  };
  SdkPlatInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SdkPlatInfo_descriptor_,
      SdkPlatInfo::default_instance_,
      SdkPlatInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkPlatInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SdkPlatInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SdkPlatInfo));
  GamePlatList_descriptor_ = file->message_type(4);
  static const int GamePlatList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePlatList, gamezone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePlatList, platinfo_),
  };
  GamePlatList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GamePlatList_descriptor_,
      GamePlatList::default_instance_,
      GamePlatList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePlatList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePlatList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GamePlatList));
  SupportGamePlatListSdkPmd_S_descriptor_ = file->message_type(5);
  static const int SupportGamePlatListSdkPmd_S_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SupportGamePlatListSdkPmd_S, list_),
  };
  SupportGamePlatListSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SupportGamePlatListSdkPmd_S_descriptor_,
      SupportGamePlatListSdkPmd_S::default_instance_,
      SupportGamePlatListSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SupportGamePlatListSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SupportGamePlatListSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SupportGamePlatListSdkPmd_S));
  PlatBaseData_descriptor_ = file->message_type(6);
  static const int PlatBaseData_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, gamezone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, myaccid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, platid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, subplatid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, plataccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, session_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, extdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, extdata1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, oldplataccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, faceurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, sdkserverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, oldplatid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, clienttype_),
  };
  PlatBaseData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlatBaseData_descriptor_,
      PlatBaseData::default_instance_,
      PlatBaseData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatBaseData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlatBaseData));
  UserLoginPlatRequestSdkPmd_C_descriptor_ = file->message_type(7);
  static const int UserLoginPlatRequestSdkPmd_C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginPlatRequestSdkPmd_C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginPlatRequestSdkPmd_C, sessiontype_),
  };
  UserLoginPlatRequestSdkPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserLoginPlatRequestSdkPmd_C_descriptor_,
      UserLoginPlatRequestSdkPmd_C::default_instance_,
      UserLoginPlatRequestSdkPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginPlatRequestSdkPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginPlatRequestSdkPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserLoginPlatRequestSdkPmd_C));
  UserLoginPlatReturnSdkPmd_S_descriptor_ = file->message_type(8);
  static const int UserLoginPlatReturnSdkPmd_S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginPlatReturnSdkPmd_S, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginPlatReturnSdkPmd_S, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginPlatReturnSdkPmd_S, retdesc_),
  };
  UserLoginPlatReturnSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserLoginPlatReturnSdkPmd_S_descriptor_,
      UserLoginPlatReturnSdkPmd_S::default_instance_,
      UserLoginPlatReturnSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginPlatReturnSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLoginPlatReturnSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserLoginPlatReturnSdkPmd_S));
  CreatePlatOrderRequestSdkPmd_C_descriptor_ = file->message_type(9);
  static const int CreatePlatOrderRequestSdkPmd_C_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, originalmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, ordermoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, goodid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, goodnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, goodname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, gooddesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, redirecturl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, payplatid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, extdata_),
  };
  CreatePlatOrderRequestSdkPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreatePlatOrderRequestSdkPmd_C_descriptor_,
      CreatePlatOrderRequestSdkPmd_C::default_instance_,
      CreatePlatOrderRequestSdkPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderRequestSdkPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreatePlatOrderRequestSdkPmd_C));
  CreatePlatOrderReturnSdkPmd_S_descriptor_ = file->message_type(10);
  static const int CreatePlatOrderReturnSdkPmd_S_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, originalmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, ordermoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, goodid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, goodnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, noticeurl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, platorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, redirecturl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, payplatid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, extdata_),
  };
  CreatePlatOrderReturnSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreatePlatOrderReturnSdkPmd_S_descriptor_,
      CreatePlatOrderReturnSdkPmd_S::default_instance_,
      CreatePlatOrderReturnSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlatOrderReturnSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreatePlatOrderReturnSdkPmd_S));
  NotifyRechargeRequestSdkPmd_S_descriptor_ = file->message_type(11);
  static const int NotifyRechargeRequestSdkPmd_S_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, platorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, originalmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, ordermoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, goodid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, goodnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, extdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, type_),
  };
  NotifyRechargeRequestSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyRechargeRequestSdkPmd_S_descriptor_,
      NotifyRechargeRequestSdkPmd_S::default_instance_,
      NotifyRechargeRequestSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeRequestSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyRechargeRequestSdkPmd_S));
  NotifyRechargeReturnSdkPmd_C_descriptor_ = file->message_type(12);
  static const int NotifyRechargeReturnSdkPmd_C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeReturnSdkPmd_C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeReturnSdkPmd_C, platorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeReturnSdkPmd_C, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeReturnSdkPmd_C, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeReturnSdkPmd_C, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeReturnSdkPmd_C, extdata_),
  };
  NotifyRechargeReturnSdkPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyRechargeReturnSdkPmd_C_descriptor_,
      NotifyRechargeReturnSdkPmd_C::default_instance_,
      NotifyRechargeReturnSdkPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeReturnSdkPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyRechargeReturnSdkPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyRechargeReturnSdkPmd_C));
  RechargeQueryRequestIOSSdkPmd_C_descriptor_ = file->message_type(13);
  static const int RechargeQueryRequestIOSSdkPmd_C_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, originalmoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, ordermoney_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, extdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, payplatid_),
  };
  RechargeQueryRequestIOSSdkPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RechargeQueryRequestIOSSdkPmd_C_descriptor_,
      RechargeQueryRequestIOSSdkPmd_C::default_instance_,
      RechargeQueryRequestIOSSdkPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeQueryRequestIOSSdkPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RechargeQueryRequestIOSSdkPmd_C));
  RequestQueryPlatPointSdkPmd_C_descriptor_ = file->message_type(14);
  static const int RequestQueryPlatPointSdkPmd_C_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestQueryPlatPointSdkPmd_C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestQueryPlatPointSdkPmd_C, gameorder_),
  };
  RequestQueryPlatPointSdkPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestQueryPlatPointSdkPmd_C_descriptor_,
      RequestQueryPlatPointSdkPmd_C::default_instance_,
      RequestQueryPlatPointSdkPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestQueryPlatPointSdkPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestQueryPlatPointSdkPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestQueryPlatPointSdkPmd_C));
  ReturnQueryPlatPointSdkPmd_S_descriptor_ = file->message_type(15);
  static const int ReturnQueryPlatPointSdkPmd_S_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnQueryPlatPointSdkPmd_S, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnQueryPlatPointSdkPmd_S, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnQueryPlatPointSdkPmd_S, balance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnQueryPlatPointSdkPmd_S, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnQueryPlatPointSdkPmd_S, retdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnQueryPlatPointSdkPmd_S, money_),
  };
  ReturnQueryPlatPointSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReturnQueryPlatPointSdkPmd_S_descriptor_,
      ReturnQueryPlatPointSdkPmd_S::default_instance_,
      ReturnQueryPlatPointSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnQueryPlatPointSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnQueryPlatPointSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReturnQueryPlatPointSdkPmd_S));
  RequestRedeemPlatPointSdkPmd_C_descriptor_ = file->message_type(16);
  static const int RequestRedeemPlatPointSdkPmd_C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemPlatPointSdkPmd_C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemPlatPointSdkPmd_C, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemPlatPointSdkPmd_C, goodid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemPlatPointSdkPmd_C, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemPlatPointSdkPmd_C, extdata_),
  };
  RequestRedeemPlatPointSdkPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestRedeemPlatPointSdkPmd_C_descriptor_,
      RequestRedeemPlatPointSdkPmd_C::default_instance_,
      RequestRedeemPlatPointSdkPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemPlatPointSdkPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemPlatPointSdkPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestRedeemPlatPointSdkPmd_C));
  ReturnRedeemPlatPointSdkPmd_S_descriptor_ = file->message_type(17);
  static const int ReturnRedeemPlatPointSdkPmd_S_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemPlatPointSdkPmd_S, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemPlatPointSdkPmd_S, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemPlatPointSdkPmd_S, goodid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemPlatPointSdkPmd_S, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemPlatPointSdkPmd_S, balance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemPlatPointSdkPmd_S, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemPlatPointSdkPmd_S, retdesc_),
  };
  ReturnRedeemPlatPointSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReturnRedeemPlatPointSdkPmd_S_descriptor_,
      ReturnRedeemPlatPointSdkPmd_S::default_instance_,
      ReturnRedeemPlatPointSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemPlatPointSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemPlatPointSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReturnRedeemPlatPointSdkPmd_S));
  RequestRedeemBackPlatPointSdkPmd_C_descriptor_ = file->message_type(18);
  static const int RequestRedeemBackPlatPointSdkPmd_C_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemBackPlatPointSdkPmd_C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemBackPlatPointSdkPmd_C, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemBackPlatPointSdkPmd_C, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemBackPlatPointSdkPmd_C, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemBackPlatPointSdkPmd_C, extdata_),
  };
  RequestRedeemBackPlatPointSdkPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestRedeemBackPlatPointSdkPmd_C_descriptor_,
      RequestRedeemBackPlatPointSdkPmd_C::default_instance_,
      RequestRedeemBackPlatPointSdkPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemBackPlatPointSdkPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRedeemBackPlatPointSdkPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestRedeemBackPlatPointSdkPmd_C));
  ReturnRedeemBackPlatPointSdkPmd_S_descriptor_ = file->message_type(19);
  static const int ReturnRedeemBackPlatPointSdkPmd_S_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemBackPlatPointSdkPmd_S, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemBackPlatPointSdkPmd_S, gameorder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemBackPlatPointSdkPmd_S, balance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemBackPlatPointSdkPmd_S, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemBackPlatPointSdkPmd_S, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemBackPlatPointSdkPmd_S, retdesc_),
  };
  ReturnRedeemBackPlatPointSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReturnRedeemBackPlatPointSdkPmd_S_descriptor_,
      ReturnRedeemBackPlatPointSdkPmd_S::default_instance_,
      ReturnRedeemBackPlatPointSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemBackPlatPointSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnRedeemBackPlatPointSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReturnRedeemBackPlatPointSdkPmd_S));
  ReturnErrorCodeSdkPmd_S_descriptor_ = file->message_type(20);
  static const int ReturnErrorCodeSdkPmd_S_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnErrorCodeSdkPmd_S, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnErrorCodeSdkPmd_S, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnErrorCodeSdkPmd_S, retdesc_),
  };
  ReturnErrorCodeSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReturnErrorCodeSdkPmd_S_descriptor_,
      ReturnErrorCodeSdkPmd_S::default_instance_,
      ReturnErrorCodeSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnErrorCodeSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnErrorCodeSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReturnErrorCodeSdkPmd_S));
  RequestBindAccountSdkPmd_CS_descriptor_ = file->message_type(21);
  static const int RequestBindAccountSdkPmd_CS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBindAccountSdkPmd_CS, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBindAccountSdkPmd_CS, ret_),
  };
  RequestBindAccountSdkPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestBindAccountSdkPmd_CS_descriptor_,
      RequestBindAccountSdkPmd_CS::default_instance_,
      RequestBindAccountSdkPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBindAccountSdkPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBindAccountSdkPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestBindAccountSdkPmd_CS));
  PlatAccountInfo_descriptor_ = file->message_type(22);
  static const int PlatAccountInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatAccountInfo, platid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatAccountInfo, plataccount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatAccountInfo, platname_),
  };
  PlatAccountInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlatAccountInfo_descriptor_,
      PlatAccountInfo::default_instance_,
      PlatAccountInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatAccountInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatAccountInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlatAccountInfo));
  RequestBindPlatInfoSdkPmd_CS_descriptor_ = file->message_type(23);
  static const int RequestBindPlatInfoSdkPmd_CS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBindPlatInfoSdkPmd_CS, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBindPlatInfoSdkPmd_CS, bindplat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBindPlatInfoSdkPmd_CS, ret_),
  };
  RequestBindPlatInfoSdkPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestBindPlatInfoSdkPmd_CS_descriptor_,
      RequestBindPlatInfoSdkPmd_CS::default_instance_,
      RequestBindPlatInfoSdkPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBindPlatInfoSdkPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestBindPlatInfoSdkPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestBindPlatInfoSdkPmd_CS));
  RequestAccidByPlatinfoSdkPmd_CS_descriptor_ = file->message_type(24);
  static const int RequestAccidByPlatinfoSdkPmd_CS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAccidByPlatinfoSdkPmd_CS, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAccidByPlatinfoSdkPmd_CS, reqdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAccidByPlatinfoSdkPmd_CS, ret_),
  };
  RequestAccidByPlatinfoSdkPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestAccidByPlatinfoSdkPmd_CS_descriptor_,
      RequestAccidByPlatinfoSdkPmd_CS::default_instance_,
      RequestAccidByPlatinfoSdkPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAccidByPlatinfoSdkPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestAccidByPlatinfoSdkPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestAccidByPlatinfoSdkPmd_CS));
  RequestUnbindAccountSdkPmd_CS_descriptor_ = file->message_type(25);
  static const int RequestUnbindAccountSdkPmd_CS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestUnbindAccountSdkPmd_CS, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestUnbindAccountSdkPmd_CS, ret_),
  };
  RequestUnbindAccountSdkPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestUnbindAccountSdkPmd_CS_descriptor_,
      RequestUnbindAccountSdkPmd_CS::default_instance_,
      RequestUnbindAccountSdkPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestUnbindAccountSdkPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestUnbindAccountSdkPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestUnbindAccountSdkPmd_CS));
  NotifyTapJoyRequestSdkPmd_S_descriptor_ = file->message_type(26);
  static const int NotifyTapJoyRequestSdkPmd_S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyTapJoyRequestSdkPmd_S, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyTapJoyRequestSdkPmd_S, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyTapJoyRequestSdkPmd_S, placement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyTapJoyRequestSdkPmd_S, extdata_),
  };
  NotifyTapJoyRequestSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyTapJoyRequestSdkPmd_S_descriptor_,
      NotifyTapJoyRequestSdkPmd_S::default_instance_,
      NotifyTapJoyRequestSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyTapJoyRequestSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyTapJoyRequestSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyTapJoyRequestSdkPmd_S));
  PushMsgRequestSdkPmd_C_descriptor_ = file->message_type(27);
  static const int PushMsgRequestSdkPmd_C_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgRequestSdkPmd_C, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgRequestSdkPmd_C, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgRequestSdkPmd_C, tokens_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgRequestSdkPmd_C, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgRequestSdkPmd_C, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgRequestSdkPmd_C, extdata_),
  };
  PushMsgRequestSdkPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PushMsgRequestSdkPmd_C_descriptor_,
      PushMsgRequestSdkPmd_C::default_instance_,
      PushMsgRequestSdkPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgRequestSdkPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgRequestSdkPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PushMsgRequestSdkPmd_C));
  PushMsgReturnSdkPmd_S_descriptor_ = file->message_type(28);
  static const int PushMsgReturnSdkPmd_S_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgReturnSdkPmd_S, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgReturnSdkPmd_S, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgReturnSdkPmd_S, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgReturnSdkPmd_S, retdesc_),
  };
  PushMsgReturnSdkPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PushMsgReturnSdkPmd_S_descriptor_,
      PushMsgReturnSdkPmd_S::default_instance_,
      PushMsgReturnSdkPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgReturnSdkPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushMsgReturnSdkPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PushMsgReturnSdkPmd_S));
  BindAccountPhoneSdkPmd_CS_descriptor_ = file->message_type(29);
  static const int BindAccountPhoneSdkPmd_CS_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAccountPhoneSdkPmd_CS, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAccountPhoneSdkPmd_CS, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAccountPhoneSdkPmd_CS, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAccountPhoneSdkPmd_CS, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAccountPhoneSdkPmd_CS, retdesc_),
  };
  BindAccountPhoneSdkPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BindAccountPhoneSdkPmd_CS_descriptor_,
      BindAccountPhoneSdkPmd_CS::default_instance_,
      BindAccountPhoneSdkPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAccountPhoneSdkPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindAccountPhoneSdkPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BindAccountPhoneSdkPmd_CS));
  RequestMobileRegistRandCodeSdkPmd_CS_descriptor_ = file->message_type(30);
  static const int RequestMobileRegistRandCodeSdkPmd_CS_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMobileRegistRandCodeSdkPmd_CS, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMobileRegistRandCodeSdkPmd_CS, mobilenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMobileRegistRandCodeSdkPmd_CS, randcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMobileRegistRandCodeSdkPmd_CS, logintempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMobileRegistRandCodeSdkPmd_CS, clienttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMobileRegistRandCodeSdkPmd_CS, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMobileRegistRandCodeSdkPmd_CS, retdesc_),
  };
  RequestMobileRegistRandCodeSdkPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestMobileRegistRandCodeSdkPmd_CS_descriptor_,
      RequestMobileRegistRandCodeSdkPmd_CS::default_instance_,
      RequestMobileRegistRandCodeSdkPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMobileRegistRandCodeSdkPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestMobileRegistRandCodeSdkPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestMobileRegistRandCodeSdkPmd_CS));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sdkcommand_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Sdk_descriptor_, &Sdk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StartUpGameRequestSdkPmd_C_descriptor_, &StartUpGameRequestSdkPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StartUpGameReturnSdkPmd_S_descriptor_, &StartUpGameReturnSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SdkPlatInfo_descriptor_, &SdkPlatInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GamePlatList_descriptor_, &GamePlatList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SupportGamePlatListSdkPmd_S_descriptor_, &SupportGamePlatListSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlatBaseData_descriptor_, &PlatBaseData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserLoginPlatRequestSdkPmd_C_descriptor_, &UserLoginPlatRequestSdkPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserLoginPlatReturnSdkPmd_S_descriptor_, &UserLoginPlatReturnSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreatePlatOrderRequestSdkPmd_C_descriptor_, &CreatePlatOrderRequestSdkPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreatePlatOrderReturnSdkPmd_S_descriptor_, &CreatePlatOrderReturnSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyRechargeRequestSdkPmd_S_descriptor_, &NotifyRechargeRequestSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyRechargeReturnSdkPmd_C_descriptor_, &NotifyRechargeReturnSdkPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RechargeQueryRequestIOSSdkPmd_C_descriptor_, &RechargeQueryRequestIOSSdkPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestQueryPlatPointSdkPmd_C_descriptor_, &RequestQueryPlatPointSdkPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReturnQueryPlatPointSdkPmd_S_descriptor_, &ReturnQueryPlatPointSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestRedeemPlatPointSdkPmd_C_descriptor_, &RequestRedeemPlatPointSdkPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReturnRedeemPlatPointSdkPmd_S_descriptor_, &ReturnRedeemPlatPointSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestRedeemBackPlatPointSdkPmd_C_descriptor_, &RequestRedeemBackPlatPointSdkPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReturnRedeemBackPlatPointSdkPmd_S_descriptor_, &ReturnRedeemBackPlatPointSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReturnErrorCodeSdkPmd_S_descriptor_, &ReturnErrorCodeSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestBindAccountSdkPmd_CS_descriptor_, &RequestBindAccountSdkPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlatAccountInfo_descriptor_, &PlatAccountInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestBindPlatInfoSdkPmd_CS_descriptor_, &RequestBindPlatInfoSdkPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestAccidByPlatinfoSdkPmd_CS_descriptor_, &RequestAccidByPlatinfoSdkPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestUnbindAccountSdkPmd_CS_descriptor_, &RequestUnbindAccountSdkPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyTapJoyRequestSdkPmd_S_descriptor_, &NotifyTapJoyRequestSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PushMsgRequestSdkPmd_C_descriptor_, &PushMsgRequestSdkPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PushMsgReturnSdkPmd_S_descriptor_, &PushMsgReturnSdkPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BindAccountPhoneSdkPmd_CS_descriptor_, &BindAccountPhoneSdkPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestMobileRegistRandCodeSdkPmd_CS_descriptor_, &RequestMobileRegistRandCodeSdkPmd_CS::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sdkcommand_2eproto() {
  delete Sdk::default_instance_;
  delete Sdk_reflection_;
  delete StartUpGameRequestSdkPmd_C::default_instance_;
  delete StartUpGameRequestSdkPmd_C_reflection_;
  delete StartUpGameReturnSdkPmd_S::default_instance_;
  delete StartUpGameReturnSdkPmd_S_reflection_;
  delete SdkPlatInfo::default_instance_;
  delete SdkPlatInfo_reflection_;
  delete GamePlatList::default_instance_;
  delete GamePlatList_reflection_;
  delete SupportGamePlatListSdkPmd_S::default_instance_;
  delete SupportGamePlatListSdkPmd_S_reflection_;
  delete PlatBaseData::default_instance_;
  delete PlatBaseData_reflection_;
  delete UserLoginPlatRequestSdkPmd_C::default_instance_;
  delete UserLoginPlatRequestSdkPmd_C_reflection_;
  delete UserLoginPlatReturnSdkPmd_S::default_instance_;
  delete UserLoginPlatReturnSdkPmd_S_reflection_;
  delete CreatePlatOrderRequestSdkPmd_C::default_instance_;
  delete CreatePlatOrderRequestSdkPmd_C_reflection_;
  delete CreatePlatOrderReturnSdkPmd_S::default_instance_;
  delete CreatePlatOrderReturnSdkPmd_S_reflection_;
  delete NotifyRechargeRequestSdkPmd_S::default_instance_;
  delete NotifyRechargeRequestSdkPmd_S_reflection_;
  delete NotifyRechargeReturnSdkPmd_C::default_instance_;
  delete NotifyRechargeReturnSdkPmd_C_reflection_;
  delete RechargeQueryRequestIOSSdkPmd_C::default_instance_;
  delete RechargeQueryRequestIOSSdkPmd_C_reflection_;
  delete RequestQueryPlatPointSdkPmd_C::default_instance_;
  delete RequestQueryPlatPointSdkPmd_C_reflection_;
  delete ReturnQueryPlatPointSdkPmd_S::default_instance_;
  delete ReturnQueryPlatPointSdkPmd_S_reflection_;
  delete RequestRedeemPlatPointSdkPmd_C::default_instance_;
  delete RequestRedeemPlatPointSdkPmd_C_reflection_;
  delete ReturnRedeemPlatPointSdkPmd_S::default_instance_;
  delete ReturnRedeemPlatPointSdkPmd_S_reflection_;
  delete RequestRedeemBackPlatPointSdkPmd_C::default_instance_;
  delete RequestRedeemBackPlatPointSdkPmd_C_reflection_;
  delete ReturnRedeemBackPlatPointSdkPmd_S::default_instance_;
  delete ReturnRedeemBackPlatPointSdkPmd_S_reflection_;
  delete ReturnErrorCodeSdkPmd_S::default_instance_;
  delete ReturnErrorCodeSdkPmd_S_reflection_;
  delete RequestBindAccountSdkPmd_CS::default_instance_;
  delete RequestBindAccountSdkPmd_CS_reflection_;
  delete PlatAccountInfo::default_instance_;
  delete PlatAccountInfo_reflection_;
  delete RequestBindPlatInfoSdkPmd_CS::default_instance_;
  delete RequestBindPlatInfoSdkPmd_CS_reflection_;
  delete RequestAccidByPlatinfoSdkPmd_CS::default_instance_;
  delete RequestAccidByPlatinfoSdkPmd_CS_reflection_;
  delete RequestUnbindAccountSdkPmd_CS::default_instance_;
  delete RequestUnbindAccountSdkPmd_CS_reflection_;
  delete NotifyTapJoyRequestSdkPmd_S::default_instance_;
  delete NotifyTapJoyRequestSdkPmd_S_reflection_;
  delete PushMsgRequestSdkPmd_C::default_instance_;
  delete PushMsgRequestSdkPmd_C_reflection_;
  delete PushMsgReturnSdkPmd_S::default_instance_;
  delete PushMsgReturnSdkPmd_S_reflection_;
  delete BindAccountPhoneSdkPmd_CS::default_instance_;
  delete BindAccountPhoneSdkPmd_CS_reflection_;
  delete RequestMobileRegistRandCodeSdkPmd_CS::default_instance_;
  delete RequestMobileRegistRandCodeSdkPmd_CS_reflection_;
}

void protobuf_AddDesc_sdkcommand_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Pmd::protobuf_AddDesc_pmd_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020sdkcommand.proto\022\003Pmd\032\tpmd.proto\"\207\007\n\003S"
    "dk\"\377\006\n\005Param\022\036\n\032StartUpGameRequestSdkPmd"
    "_C\020\001\022\035\n\031StartUpGameReturnSdkPmd_S\020\002\022\037\n\033S"
    "upportGamePlatListSdkPmd_S\020\003\022 \n\034UserLogi"
    "nPlatRequestSdkPmd_C\020\004\022\037\n\033UserLoginPlatR"
    "eturnSdkPmd_S\020\005\022\"\n\036CreatePlatOrderReques"
    "tSdkPmd_C\020\006\022!\n\035CreatePlatOrderReturnSdkP"
    "md_S\020\007\022!\n\035NotifyRechargeRequestSdkPmd_S\020"
    "\010\022 \n\034NotifyRechargeReturnSdkPmd_C\020\t\022#\n\037R"
    "echargeQueryRequestIOSSdkPmd_C\020\n\022!\n\035Requ"
    "estQueryPlatPointSdkPmd_C\020\013\022 \n\034ReturnQue"
    "ryPlatPointSdkPmd_S\020\014\022\"\n\036RequestRedeemPl"
    "atPointSdkPmd_C\020\r\022!\n\035ReturnRedeemPlatPoi"
    "ntSdkPmd_S\020\016\022\033\n\027ReturnErrorCodeSdkPmd_S\020"
    "\017\022\037\n\033RequestBindAccountSdkPmd_CS\020\020\022 \n\034Re"
    "questBindPlatInfoSdkPmd_CS\020\021\022#\n\037RequestA"
    "ccidByPlatinfoSdkPmd_CS\020\022\022&\n\"RequestRede"
    "emBackPlatPointSdkPmd_C\020\023\022%\n!ReturnRedee"
    "mBackPlatPointSdkPmd_S\020\024\022!\n\035RequestUnbin"
    "dAccountSdkPmd_CS\020\025\022\037\n\033NotifyTapJoyReque"
    "stSdkPmd_S\020\026\022\032\n\026PushMsgRequestSdkPmd_C\020\027"
    "\022\031\n\025PushMsgReturnSdkPmd_S\020\030\022\035\n\031BindAccou"
    "ntPhoneSdkPmd_CS\020\031\022(\n$RequestMobileRegis"
    "tRandCodeSdkPmd_CS\020\032\"q\n\032StartUpGameReque"
    "stSdkPmd_C\022\013\n\003key\030\001 \002(\t\022\017\n\007version\030\002 \002(\r"
    "\022\020\n\010compress\030\003 \001(\t\022\017\n\007encrypt\030\004 \001(\t\022\022\n\ne"
    "ncryptkey\030\005 \001(\t\"9\n\031StartUpGameReturnSdkP"
    "md_S\022\013\n\003ret\030\001 \002(\010\022\017\n\007retdesc\030\002 \001(\t\"/\n\013Sd"
    "kPlatInfo\022\016\n\006platid\030\001 \001(\r\022\020\n\010platname\030\005 "
    "\001(\t\"W\n\014GamePlatList\022#\n\010gamezone\030\001 \002(\0132\021."
    "Pmd.GameZoneInfo\022\"\n\010Platinfo\030\002 \003(\0132\020.Pmd"
    ".SdkPlatInfo\">\n\033SupportGamePlatListSdkPm"
    "d_S\022\037\n\004list\030\001 \003(\0132\021.Pmd.GamePlatList\"\247\002\n"
    "\014PlatBaseData\022#\n\010gamezone\030\001 \001(\0132\021.Pmd.Ga"
    "meZoneInfo\022\017\n\007myaccid\030\002 \001(\004\022\016\n\006platid\030\003 "
    "\001(\r\022\021\n\tsubplatid\030\004 \001(\r\022\023\n\013plataccount\030\005 "
    "\001(\t\022\017\n\007session\030\006 \001(\t\022\017\n\007extdata\030\007 \001(\t\022\020\n"
    "\010extdata1\030\010 \001(\t\022\026\n\016oldplataccount\030\t \001(\t\022"
    "\020\n\010nickname\030\n \001(\t\022\017\n\007faceurl\030\013 \001(\t\022\023\n\013sd"
    "kserverid\030\014 \001(\004\022\021\n\toldplatid\030\r \001(\r\022\022\n\ncl"
    "ienttype\030\016 \001(\r\"T\n\034UserLoginPlatRequestSd"
    "kPmd_C\022\037\n\004data\030\001 \002(\0132\021.Pmd.PlatBaseData\022"
    "\023\n\013sessiontype\030\002 \001(\r\"\\\n\033UserLoginPlatRet"
    "urnSdkPmd_S\022\037\n\004data\030\001 \002(\0132\021.Pmd.PlatBase"
    "Data\022\013\n\003ret\030\002 \002(\r\022\017\n\007retdesc\030\003 \001(\t\"\237\002\n\036C"
    "reatePlatOrderRequestSdkPmd_C\022\037\n\004data\030\001 "
    "\002(\0132\021.Pmd.PlatBaseData\022\021\n\tgameorder\030\002 \002("
    "\t\022\016\n\006roleid\030\003 \002(\004\022\020\n\010rolename\030\004 \002(\t\022\025\n\ro"
    "riginalmoney\030\005 \002(\002\022\022\n\nordermoney\030\006 \002(\002\022\016"
    "\n\006goodid\030\007 \002(\r\022\017\n\007goodnum\030\010 \002(\r\022\020\n\010goodn"
    "ame\030\t \001(\t\022\020\n\010gooddesc\030\n \001(\t\022\023\n\013redirectu"
    "rl\030\013 \001(\t\022\021\n\tpayplatid\030\014 \001(\r\022\017\n\007extdata\030\r"
    " \001(\t\"\254\002\n\035CreatePlatOrderReturnSdkPmd_S\022\037"
    "\n\004data\030\001 \002(\0132\021.Pmd.PlatBaseData\022\021\n\tgameo"
    "rder\030\002 \002(\t\022\016\n\006roleid\030\003 \002(\004\022\025\n\roriginalmo"
    "ney\030\004 \002(\002\022\022\n\nordermoney\030\005 \002(\002\022\016\n\006goodid\030"
    "\006 \002(\r\022\017\n\007goodnum\030\007 \002(\r\022\016\n\006result\030\010 \002(\r\022\021"
    "\n\tnoticeurl\030\t \001(\t\022\021\n\tplatorder\030\n \001(\t\022\014\n\004"
    "sign\030\013 \001(\t\022\023\n\013redirecturl\030\014 \001(\t\022\021\n\tpaypl"
    "atid\030\r \001(\r\022\017\n\007extdata\030\016 \001(\t\"\361\001\n\035NotifyRe"
    "chargeRequestSdkPmd_S\022\037\n\004data\030\001 \002(\0132\021.Pm"
    "d.PlatBaseData\022\021\n\tplatorder\030\002 \002(\t\022\021\n\tgam"
    "eorder\030\003 \002(\t\022\016\n\006roleid\030\004 \002(\004\022\025\n\roriginal"
    "money\030\005 \002(\002\022\022\n\nordermoney\030\006 \002(\002\022\016\n\006goodi"
    "d\030\007 \002(\r\022\017\n\007goodnum\030\010 \002(\r\022\016\n\006result\030\t \002(\r"
    "\022\017\n\007extdata\030\n \001(\t\022\014\n\004type\030\013 \001(\r\"\226\001\n\034Noti"
    "fyRechargeReturnSdkPmd_C\022\037\n\004data\030\001 \002(\0132\021"
    ".Pmd.PlatBaseData\022\021\n\tplatorder\030\002 \002(\t\022\021\n\t"
    "gameorder\030\003 \002(\t\022\016\n\006roleid\030\004 \002(\004\022\016\n\006resul"
    "t\030\005 \002(\r\022\017\n\007extdata\030\006 \001(\t\"\303\001\n\037RechargeQue"
    "ryRequestIOSSdkPmd_C\022\037\n\004data\030\001 \002(\0132\021.Pmd"
    ".PlatBaseData\022\021\n\tgameorder\030\002 \002(\t\022\016\n\006role"
    "id\030\003 \002(\004\022\025\n\roriginalmoney\030\004 \002(\002\022\022\n\norder"
    "money\030\005 \002(\002\022\r\n\005token\030\006 \001(\t\022\017\n\007extdata\030\007 "
    "\001(\t\022\021\n\tpayplatid\030\010 \001(\r\"S\n\035RequestQueryPl"
    "atPointSdkPmd_C\022\037\n\004data\030\001 \002(\0132\021.Pmd.Plat"
    "BaseData\022\021\n\tgameorder\030\002 \001(\t\"\220\001\n\034ReturnQu"
    "eryPlatPointSdkPmd_S\022\037\n\004data\030\001 \002(\0132\021.Pmd"
    ".PlatBaseData\022\021\n\tgameorder\030\002 \002(\t\022\017\n\007bala"
    "nce\030\003 \002(\004\022\013\n\003ret\030\004 \002(\r\022\017\n\007retdesc\030\005 \001(\t\022"
    "\r\n\005money\030\006 \001(\002\"\204\001\n\036RequestRedeemPlatPoin"
    "tSdkPmd_C\022\037\n\004data\030\001 \002(\0132\021.Pmd.PlatBaseDa"
    "ta\022\021\n\tgameorder\030\002 \001(\t\022\016\n\006goodid\030\003 \001(\r\022\r\n"
    "\005money\030\004 \001(\002\022\017\n\007extdata\030\005 \001(\t\"\241\001\n\035Return"
    "RedeemPlatPointSdkPmd_S\022\037\n\004data\030\001 \002(\0132\021."
    "Pmd.PlatBaseData\022\021\n\tgameorder\030\002 \002(\t\022\016\n\006g"
    "oodid\030\003 \002(\r\022\r\n\005money\030\004 \002(\002\022\017\n\007balance\030\005 "
    "\002(\004\022\013\n\003ret\030\006 \002(\r\022\017\n\007retdesc\030\007 \001(\t\"\207\001\n\"Re"
    "questRedeemBackPlatPointSdkPmd_C\022\037\n\004data"
    "\030\001 \002(\0132\021.Pmd.PlatBaseData\022\021\n\tgameorder\030\002"
    " \001(\t\022\r\n\005point\030\003 \001(\r\022\r\n\005money\030\004 \001(\002\022\017\n\007ex"
    "tdata\030\005 \001(\t\"\225\001\n!ReturnRedeemBackPlatPoin"
    "tSdkPmd_S\022\037\n\004data\030\001 \002(\0132\021.Pmd.PlatBaseDa"
    "ta\022\021\n\tgameorder\030\002 \002(\t\022\017\n\007balance\030\003 \002(\004\022\r"
    "\n\005money\030\004 \001(\002\022\013\n\003ret\030\005 \002(\r\022\017\n\007retdesc\030\006 "
    "\001(\t\"X\n\027ReturnErrorCodeSdkPmd_S\022\037\n\004data\030\001"
    " \001(\0132\021.Pmd.PlatBaseData\022\013\n\003ret\030\002 \001(\r\022\017\n\007"
    "retdesc\030\003 \001(\t\"K\n\033RequestBindAccountSdkPm"
    "d_CS\022\037\n\004data\030\001 \001(\0132\021.Pmd.PlatBaseData\022\013\n"
    "\003ret\030\002 \001(\r\"H\n\017PlatAccountInfo\022\016\n\006platid\030"
    "\001 \001(\r\022\023\n\013plataccount\030\002 \001(\t\022\020\n\010platname\030\003"
    " \001(\t\"t\n\034RequestBindPlatInfoSdkPmd_CS\022\037\n\004"
    "data\030\001 \001(\0132\021.Pmd.PlatBaseData\022&\n\010bindpla"
    "t\030\002 \003(\0132\024.Pmd.PlatAccountInfo\022\013\n\003ret\030\003 \001"
    "(\r\"s\n\037RequestAccidByPlatinfoSdkPmd_CS\022\037\n"
    "\004data\030\001 \001(\0132\021.Pmd.PlatBaseData\022\"\n\007reqdat"
    "a\030\002 \003(\0132\021.Pmd.PlatBaseData\022\013\n\003ret\030\003 \001(\r\""
    "M\n\035RequestUnbindAccountSdkPmd_CS\022\037\n\004data"
    "\030\001 \001(\0132\021.Pmd.PlatBaseData\022\013\n\003ret\030\002 \001(\r\"q"
    "\n\033NotifyTapJoyRequestSdkPmd_S\022\037\n\004data\030\001 "
    "\001(\0132\021.Pmd.PlatBaseData\022\r\n\005point\030\002 \001(\005\022\021\n"
    "\tplacement\030\003 \001(\r\022\017\n\007extdata\030\004 \001(\t\"\211\001\n\026Pu"
    "shMsgRequestSdkPmd_C\022\037\n\004data\030\001 \001(\0132\021.Pmd"
    ".PlatBaseData\022\r\n\005msgid\030\002 \001(\r\022\016\n\006tokens\030\003"
    " \003(\t\022\r\n\005title\030\004 \001(\t\022\017\n\007message\030\005 \001(\t\022\017\n\007"
    "extdata\030\006 \001(\t\"e\n\025PushMsgReturnSdkPmd_S\022\037"
    "\n\004data\030\001 \001(\0132\021.Pmd.PlatBaseData\022\r\n\005msgid"
    "\030\002 \001(\r\022\013\n\003ret\030\003 \001(\r\022\017\n\007retdesc\030\004 \001(\t\"w\n\031"
    "BindAccountPhoneSdkPmd_CS\022\037\n\004data\030\001 \002(\0132"
    "\021.Pmd.PlatBaseData\022\r\n\005phone\030\002 \002(\t\022\014\n\004cod"
    "e\030\003 \001(\t\022\013\n\003ret\030\004 \001(\r\022\017\n\007retdesc\030\005 \001(\t\"\263\001"
    "\n$RequestMobileRegistRandCodeSdkPmd_CS\022\037"
    "\n\004data\030\001 \002(\0132\021.Pmd.PlatBaseData\022\021\n\tmobil"
    "enum\030\002 \001(\t\022\020\n\010randcode\030\003 \001(\t\022\023\n\013logintem"
    "pid\030\004 \001(\004\022\022\n\nclienttype\030\005 \001(\r\022\013\n\003ret\030\006 \001"
    "(\r\022\017\n\007retdesc\030\007 \001(\t", 5019);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sdkcommand.proto", &protobuf_RegisterTypes);
  Sdk::default_instance_ = new Sdk();
  StartUpGameRequestSdkPmd_C::default_instance_ = new StartUpGameRequestSdkPmd_C();
  StartUpGameReturnSdkPmd_S::default_instance_ = new StartUpGameReturnSdkPmd_S();
  SdkPlatInfo::default_instance_ = new SdkPlatInfo();
  GamePlatList::default_instance_ = new GamePlatList();
  SupportGamePlatListSdkPmd_S::default_instance_ = new SupportGamePlatListSdkPmd_S();
  PlatBaseData::default_instance_ = new PlatBaseData();
  UserLoginPlatRequestSdkPmd_C::default_instance_ = new UserLoginPlatRequestSdkPmd_C();
  UserLoginPlatReturnSdkPmd_S::default_instance_ = new UserLoginPlatReturnSdkPmd_S();
  CreatePlatOrderRequestSdkPmd_C::default_instance_ = new CreatePlatOrderRequestSdkPmd_C();
  CreatePlatOrderReturnSdkPmd_S::default_instance_ = new CreatePlatOrderReturnSdkPmd_S();
  NotifyRechargeRequestSdkPmd_S::default_instance_ = new NotifyRechargeRequestSdkPmd_S();
  NotifyRechargeReturnSdkPmd_C::default_instance_ = new NotifyRechargeReturnSdkPmd_C();
  RechargeQueryRequestIOSSdkPmd_C::default_instance_ = new RechargeQueryRequestIOSSdkPmd_C();
  RequestQueryPlatPointSdkPmd_C::default_instance_ = new RequestQueryPlatPointSdkPmd_C();
  ReturnQueryPlatPointSdkPmd_S::default_instance_ = new ReturnQueryPlatPointSdkPmd_S();
  RequestRedeemPlatPointSdkPmd_C::default_instance_ = new RequestRedeemPlatPointSdkPmd_C();
  ReturnRedeemPlatPointSdkPmd_S::default_instance_ = new ReturnRedeemPlatPointSdkPmd_S();
  RequestRedeemBackPlatPointSdkPmd_C::default_instance_ = new RequestRedeemBackPlatPointSdkPmd_C();
  ReturnRedeemBackPlatPointSdkPmd_S::default_instance_ = new ReturnRedeemBackPlatPointSdkPmd_S();
  ReturnErrorCodeSdkPmd_S::default_instance_ = new ReturnErrorCodeSdkPmd_S();
  RequestBindAccountSdkPmd_CS::default_instance_ = new RequestBindAccountSdkPmd_CS();
  PlatAccountInfo::default_instance_ = new PlatAccountInfo();
  RequestBindPlatInfoSdkPmd_CS::default_instance_ = new RequestBindPlatInfoSdkPmd_CS();
  RequestAccidByPlatinfoSdkPmd_CS::default_instance_ = new RequestAccidByPlatinfoSdkPmd_CS();
  RequestUnbindAccountSdkPmd_CS::default_instance_ = new RequestUnbindAccountSdkPmd_CS();
  NotifyTapJoyRequestSdkPmd_S::default_instance_ = new NotifyTapJoyRequestSdkPmd_S();
  PushMsgRequestSdkPmd_C::default_instance_ = new PushMsgRequestSdkPmd_C();
  PushMsgReturnSdkPmd_S::default_instance_ = new PushMsgReturnSdkPmd_S();
  BindAccountPhoneSdkPmd_CS::default_instance_ = new BindAccountPhoneSdkPmd_CS();
  RequestMobileRegistRandCodeSdkPmd_CS::default_instance_ = new RequestMobileRegistRandCodeSdkPmd_CS();
  Sdk::default_instance_->InitAsDefaultInstance();
  StartUpGameRequestSdkPmd_C::default_instance_->InitAsDefaultInstance();
  StartUpGameReturnSdkPmd_S::default_instance_->InitAsDefaultInstance();
  SdkPlatInfo::default_instance_->InitAsDefaultInstance();
  GamePlatList::default_instance_->InitAsDefaultInstance();
  SupportGamePlatListSdkPmd_S::default_instance_->InitAsDefaultInstance();
  PlatBaseData::default_instance_->InitAsDefaultInstance();
  UserLoginPlatRequestSdkPmd_C::default_instance_->InitAsDefaultInstance();
  UserLoginPlatReturnSdkPmd_S::default_instance_->InitAsDefaultInstance();
  CreatePlatOrderRequestSdkPmd_C::default_instance_->InitAsDefaultInstance();
  CreatePlatOrderReturnSdkPmd_S::default_instance_->InitAsDefaultInstance();
  NotifyRechargeRequestSdkPmd_S::default_instance_->InitAsDefaultInstance();
  NotifyRechargeReturnSdkPmd_C::default_instance_->InitAsDefaultInstance();
  RechargeQueryRequestIOSSdkPmd_C::default_instance_->InitAsDefaultInstance();
  RequestQueryPlatPointSdkPmd_C::default_instance_->InitAsDefaultInstance();
  ReturnQueryPlatPointSdkPmd_S::default_instance_->InitAsDefaultInstance();
  RequestRedeemPlatPointSdkPmd_C::default_instance_->InitAsDefaultInstance();
  ReturnRedeemPlatPointSdkPmd_S::default_instance_->InitAsDefaultInstance();
  RequestRedeemBackPlatPointSdkPmd_C::default_instance_->InitAsDefaultInstance();
  ReturnRedeemBackPlatPointSdkPmd_S::default_instance_->InitAsDefaultInstance();
  ReturnErrorCodeSdkPmd_S::default_instance_->InitAsDefaultInstance();
  RequestBindAccountSdkPmd_CS::default_instance_->InitAsDefaultInstance();
  PlatAccountInfo::default_instance_->InitAsDefaultInstance();
  RequestBindPlatInfoSdkPmd_CS::default_instance_->InitAsDefaultInstance();
  RequestAccidByPlatinfoSdkPmd_CS::default_instance_->InitAsDefaultInstance();
  RequestUnbindAccountSdkPmd_CS::default_instance_->InitAsDefaultInstance();
  NotifyTapJoyRequestSdkPmd_S::default_instance_->InitAsDefaultInstance();
  PushMsgRequestSdkPmd_C::default_instance_->InitAsDefaultInstance();
  PushMsgReturnSdkPmd_S::default_instance_->InitAsDefaultInstance();
  BindAccountPhoneSdkPmd_CS::default_instance_->InitAsDefaultInstance();
  RequestMobileRegistRandCodeSdkPmd_CS::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sdkcommand_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sdkcommand_2eproto {
  StaticDescriptorInitializer_sdkcommand_2eproto() {
    protobuf_AddDesc_sdkcommand_2eproto();
  }
} static_descriptor_initializer_sdkcommand_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Sdk_Param_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sdk_Param_descriptor_;
}
bool Sdk_Param_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Sdk_Param Sdk::StartUpGameRequestSdkPmd_C;
const Sdk_Param Sdk::StartUpGameReturnSdkPmd_S;
const Sdk_Param Sdk::SupportGamePlatListSdkPmd_S;
const Sdk_Param Sdk::UserLoginPlatRequestSdkPmd_C;
const Sdk_Param Sdk::UserLoginPlatReturnSdkPmd_S;
const Sdk_Param Sdk::CreatePlatOrderRequestSdkPmd_C;
const Sdk_Param Sdk::CreatePlatOrderReturnSdkPmd_S;
const Sdk_Param Sdk::NotifyRechargeRequestSdkPmd_S;
const Sdk_Param Sdk::NotifyRechargeReturnSdkPmd_C;
const Sdk_Param Sdk::RechargeQueryRequestIOSSdkPmd_C;
const Sdk_Param Sdk::RequestQueryPlatPointSdkPmd_C;
const Sdk_Param Sdk::ReturnQueryPlatPointSdkPmd_S;
const Sdk_Param Sdk::RequestRedeemPlatPointSdkPmd_C;
const Sdk_Param Sdk::ReturnRedeemPlatPointSdkPmd_S;
const Sdk_Param Sdk::ReturnErrorCodeSdkPmd_S;
const Sdk_Param Sdk::RequestBindAccountSdkPmd_CS;
const Sdk_Param Sdk::RequestBindPlatInfoSdkPmd_CS;
const Sdk_Param Sdk::RequestAccidByPlatinfoSdkPmd_CS;
const Sdk_Param Sdk::RequestRedeemBackPlatPointSdkPmd_C;
const Sdk_Param Sdk::ReturnRedeemBackPlatPointSdkPmd_S;
const Sdk_Param Sdk::RequestUnbindAccountSdkPmd_CS;
const Sdk_Param Sdk::NotifyTapJoyRequestSdkPmd_S;
const Sdk_Param Sdk::PushMsgRequestSdkPmd_C;
const Sdk_Param Sdk::PushMsgReturnSdkPmd_S;
const Sdk_Param Sdk::BindAccountPhoneSdkPmd_CS;
const Sdk_Param Sdk::RequestMobileRegistRandCodeSdkPmd_CS;
const Sdk_Param Sdk::Param_MIN;
const Sdk_Param Sdk::Param_MAX;
const int Sdk::Param_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

Sdk::Sdk()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.Sdk)
}

void Sdk::InitAsDefaultInstance() {
}

Sdk::Sdk(const Sdk& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.Sdk)
}

void Sdk::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Sdk::~Sdk() {
  // @@protoc_insertion_point(destructor:Pmd.Sdk)
  SharedDtor();
}

void Sdk::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Sdk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sdk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sdk_descriptor_;
}

const Sdk& Sdk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

Sdk* Sdk::default_instance_ = NULL;

Sdk* Sdk::New() const {
  return new Sdk;
}

void Sdk::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Sdk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.Sdk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.Sdk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.Sdk)
  return false;
#undef DO_
}

void Sdk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.Sdk)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.Sdk)
}

::google::protobuf::uint8* Sdk::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.Sdk)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.Sdk)
  return target;
}

int Sdk::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sdk::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Sdk* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Sdk*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sdk::MergeFrom(const Sdk& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Sdk::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sdk::CopyFrom(const Sdk& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sdk::IsInitialized() const {

  return true;
}

void Sdk::Swap(Sdk* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Sdk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sdk_descriptor_;
  metadata.reflection = Sdk_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StartUpGameRequestSdkPmd_C::kKeyFieldNumber;
const int StartUpGameRequestSdkPmd_C::kVersionFieldNumber;
const int StartUpGameRequestSdkPmd_C::kCompressFieldNumber;
const int StartUpGameRequestSdkPmd_C::kEncryptFieldNumber;
const int StartUpGameRequestSdkPmd_C::kEncryptkeyFieldNumber;
#endif  // !_MSC_VER

StartUpGameRequestSdkPmd_C::StartUpGameRequestSdkPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.StartUpGameRequestSdkPmd_C)
}

void StartUpGameRequestSdkPmd_C::InitAsDefaultInstance() {
}

StartUpGameRequestSdkPmd_C::StartUpGameRequestSdkPmd_C(const StartUpGameRequestSdkPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.StartUpGameRequestSdkPmd_C)
}

void StartUpGameRequestSdkPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0u;
  compress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encryptkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartUpGameRequestSdkPmd_C::~StartUpGameRequestSdkPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.StartUpGameRequestSdkPmd_C)
  SharedDtor();
}

void StartUpGameRequestSdkPmd_C::SharedDtor() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (compress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete compress_;
  }
  if (encrypt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encrypt_;
  }
  if (encryptkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encryptkey_;
  }
  if (this != default_instance_) {
  }
}

void StartUpGameRequestSdkPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartUpGameRequestSdkPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartUpGameRequestSdkPmd_C_descriptor_;
}

const StartUpGameRequestSdkPmd_C& StartUpGameRequestSdkPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

StartUpGameRequestSdkPmd_C* StartUpGameRequestSdkPmd_C::default_instance_ = NULL;

StartUpGameRequestSdkPmd_C* StartUpGameRequestSdkPmd_C::New() const {
  return new StartUpGameRequestSdkPmd_C;
}

void StartUpGameRequestSdkPmd_C::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_key()) {
      if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        key_->clear();
      }
    }
    version_ = 0u;
    if (has_compress()) {
      if (compress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        compress_->clear();
      }
    }
    if (has_encrypt()) {
      if (encrypt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        encrypt_->clear();
      }
    }
    if (has_encryptkey()) {
      if (encryptkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        encryptkey_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StartUpGameRequestSdkPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.StartUpGameRequestSdkPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // required uint32 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_compress;
        break;
      }

      // optional string compress = 3;
      case 3: {
        if (tag == 26) {
         parse_compress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->compress().data(), this->compress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "compress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_encrypt;
        break;
      }

      // optional string encrypt = 4;
      case 4: {
        if (tag == 34) {
         parse_encrypt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encrypt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encrypt().data(), this->encrypt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "encrypt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_encryptkey;
        break;
      }

      // optional string encryptkey = 5;
      case 5: {
        if (tag == 42) {
         parse_encryptkey:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encryptkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encryptkey().data(), this->encryptkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "encryptkey");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.StartUpGameRequestSdkPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.StartUpGameRequestSdkPmd_C)
  return false;
#undef DO_
}

void StartUpGameRequestSdkPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.StartUpGameRequestSdkPmd_C)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required uint32 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // optional string compress = 3;
  if (has_compress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compress().data(), this->compress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->compress(), output);
  }

  // optional string encrypt = 4;
  if (has_encrypt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encrypt().data(), this->encrypt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "encrypt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->encrypt(), output);
  }

  // optional string encryptkey = 5;
  if (has_encryptkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encryptkey().data(), this->encryptkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "encryptkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->encryptkey(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.StartUpGameRequestSdkPmd_C)
}

::google::protobuf::uint8* StartUpGameRequestSdkPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.StartUpGameRequestSdkPmd_C)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required uint32 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // optional string compress = 3;
  if (has_compress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->compress().data(), this->compress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "compress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->compress(), target);
  }

  // optional string encrypt = 4;
  if (has_encrypt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encrypt().data(), this->encrypt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "encrypt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->encrypt(), target);
  }

  // optional string encryptkey = 5;
  if (has_encryptkey()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encryptkey().data(), this->encryptkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "encryptkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->encryptkey(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.StartUpGameRequestSdkPmd_C)
  return target;
}

int StartUpGameRequestSdkPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // required uint32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional string compress = 3;
    if (has_compress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->compress());
    }

    // optional string encrypt = 4;
    if (has_encrypt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->encrypt());
    }

    // optional string encryptkey = 5;
    if (has_encryptkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->encryptkey());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartUpGameRequestSdkPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StartUpGameRequestSdkPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StartUpGameRequestSdkPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartUpGameRequestSdkPmd_C::MergeFrom(const StartUpGameRequestSdkPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_compress()) {
      set_compress(from.compress());
    }
    if (from.has_encrypt()) {
      set_encrypt(from.encrypt());
    }
    if (from.has_encryptkey()) {
      set_encryptkey(from.encryptkey());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StartUpGameRequestSdkPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartUpGameRequestSdkPmd_C::CopyFrom(const StartUpGameRequestSdkPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartUpGameRequestSdkPmd_C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void StartUpGameRequestSdkPmd_C::Swap(StartUpGameRequestSdkPmd_C* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(version_, other->version_);
    std::swap(compress_, other->compress_);
    std::swap(encrypt_, other->encrypt_);
    std::swap(encryptkey_, other->encryptkey_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StartUpGameRequestSdkPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartUpGameRequestSdkPmd_C_descriptor_;
  metadata.reflection = StartUpGameRequestSdkPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StartUpGameReturnSdkPmd_S::kRetFieldNumber;
const int StartUpGameReturnSdkPmd_S::kRetdescFieldNumber;
#endif  // !_MSC_VER

StartUpGameReturnSdkPmd_S::StartUpGameReturnSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.StartUpGameReturnSdkPmd_S)
}

void StartUpGameReturnSdkPmd_S::InitAsDefaultInstance() {
}

StartUpGameReturnSdkPmd_S::StartUpGameReturnSdkPmd_S(const StartUpGameReturnSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.StartUpGameReturnSdkPmd_S)
}

void StartUpGameReturnSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ret_ = false;
  retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartUpGameReturnSdkPmd_S::~StartUpGameReturnSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.StartUpGameReturnSdkPmd_S)
  SharedDtor();
}

void StartUpGameReturnSdkPmd_S::SharedDtor() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (this != default_instance_) {
  }
}

void StartUpGameReturnSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartUpGameReturnSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartUpGameReturnSdkPmd_S_descriptor_;
}

const StartUpGameReturnSdkPmd_S& StartUpGameReturnSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

StartUpGameReturnSdkPmd_S* StartUpGameReturnSdkPmd_S::default_instance_ = NULL;

StartUpGameReturnSdkPmd_S* StartUpGameReturnSdkPmd_S::New() const {
  return new StartUpGameReturnSdkPmd_S;
}

void StartUpGameReturnSdkPmd_S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    ret_ = false;
    if (has_retdesc()) {
      if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retdesc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StartUpGameReturnSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.StartUpGameReturnSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_retdesc;
        break;
      }

      // optional string retdesc = 2;
      case 2: {
        if (tag == 18) {
         parse_retdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retdesc().data(), this->retdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.StartUpGameReturnSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.StartUpGameReturnSdkPmd_S)
  return false;
#undef DO_
}

void StartUpGameReturnSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.StartUpGameReturnSdkPmd_S)
  // required bool ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ret(), output);
  }

  // optional string retdesc = 2;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retdesc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.StartUpGameReturnSdkPmd_S)
}

::google::protobuf::uint8* StartUpGameReturnSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.StartUpGameReturnSdkPmd_S)
  // required bool ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ret(), target);
  }

  // optional string retdesc = 2;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retdesc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.StartUpGameReturnSdkPmd_S)
  return target;
}

int StartUpGameReturnSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool ret = 1;
    if (has_ret()) {
      total_size += 1 + 1;
    }

    // optional string retdesc = 2;
    if (has_retdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retdesc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartUpGameReturnSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StartUpGameReturnSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StartUpGameReturnSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartUpGameReturnSdkPmd_S::MergeFrom(const StartUpGameReturnSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_retdesc()) {
      set_retdesc(from.retdesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StartUpGameReturnSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartUpGameReturnSdkPmd_S::CopyFrom(const StartUpGameReturnSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartUpGameReturnSdkPmd_S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StartUpGameReturnSdkPmd_S::Swap(StartUpGameReturnSdkPmd_S* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(retdesc_, other->retdesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StartUpGameReturnSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartUpGameReturnSdkPmd_S_descriptor_;
  metadata.reflection = StartUpGameReturnSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SdkPlatInfo::kPlatidFieldNumber;
const int SdkPlatInfo::kPlatnameFieldNumber;
#endif  // !_MSC_VER

SdkPlatInfo::SdkPlatInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.SdkPlatInfo)
}

void SdkPlatInfo::InitAsDefaultInstance() {
}

SdkPlatInfo::SdkPlatInfo(const SdkPlatInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.SdkPlatInfo)
}

void SdkPlatInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  platid_ = 0u;
  platname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SdkPlatInfo::~SdkPlatInfo() {
  // @@protoc_insertion_point(destructor:Pmd.SdkPlatInfo)
  SharedDtor();
}

void SdkPlatInfo::SharedDtor() {
  if (platname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platname_;
  }
  if (this != default_instance_) {
  }
}

void SdkPlatInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SdkPlatInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SdkPlatInfo_descriptor_;
}

const SdkPlatInfo& SdkPlatInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

SdkPlatInfo* SdkPlatInfo::default_instance_ = NULL;

SdkPlatInfo* SdkPlatInfo::New() const {
  return new SdkPlatInfo;
}

void SdkPlatInfo::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    platid_ = 0u;
    if (has_platname()) {
      if (platname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        platname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SdkPlatInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.SdkPlatInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 platid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platid_)));
          set_has_platid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_platname;
        break;
      }

      // optional string platname = 5;
      case 5: {
        if (tag == 42) {
         parse_platname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platname().data(), this->platname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "platname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.SdkPlatInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.SdkPlatInfo)
  return false;
#undef DO_
}

void SdkPlatInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.SdkPlatInfo)
  // optional uint32 platid = 1;
  if (has_platid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->platid(), output);
  }

  // optional string platname = 5;
  if (has_platname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platname().data(), this->platname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->platname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.SdkPlatInfo)
}

::google::protobuf::uint8* SdkPlatInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.SdkPlatInfo)
  // optional uint32 platid = 1;
  if (has_platid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->platid(), target);
  }

  // optional string platname = 5;
  if (has_platname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platname().data(), this->platname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->platname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.SdkPlatInfo)
  return target;
}

int SdkPlatInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 platid = 1;
    if (has_platid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->platid());
    }

    // optional string platname = 5;
    if (has_platname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SdkPlatInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SdkPlatInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SdkPlatInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SdkPlatInfo::MergeFrom(const SdkPlatInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_platid()) {
      set_platid(from.platid());
    }
    if (from.has_platname()) {
      set_platname(from.platname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SdkPlatInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SdkPlatInfo::CopyFrom(const SdkPlatInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SdkPlatInfo::IsInitialized() const {

  return true;
}

void SdkPlatInfo::Swap(SdkPlatInfo* other) {
  if (other != this) {
    std::swap(platid_, other->platid_);
    std::swap(platname_, other->platname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SdkPlatInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SdkPlatInfo_descriptor_;
  metadata.reflection = SdkPlatInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GamePlatList::kGamezoneFieldNumber;
const int GamePlatList::kPlatinfoFieldNumber;
#endif  // !_MSC_VER

GamePlatList::GamePlatList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.GamePlatList)
}

void GamePlatList::InitAsDefaultInstance() {
  gamezone_ = const_cast< ::Pmd::GameZoneInfo*>(&::Pmd::GameZoneInfo::default_instance());
}

GamePlatList::GamePlatList(const GamePlatList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.GamePlatList)
}

void GamePlatList::SharedCtor() {
  _cached_size_ = 0;
  gamezone_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GamePlatList::~GamePlatList() {
  // @@protoc_insertion_point(destructor:Pmd.GamePlatList)
  SharedDtor();
}

void GamePlatList::SharedDtor() {
  if (this != default_instance_) {
    delete gamezone_;
  }
}

void GamePlatList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GamePlatList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GamePlatList_descriptor_;
}

const GamePlatList& GamePlatList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

GamePlatList* GamePlatList::default_instance_ = NULL;

GamePlatList* GamePlatList::New() const {
  return new GamePlatList;
}

void GamePlatList::Clear() {
  if (has_gamezone()) {
    if (gamezone_ != NULL) gamezone_->::Pmd::GameZoneInfo::Clear();
  }
  platinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GamePlatList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.GamePlatList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.GameZoneInfo gamezone = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamezone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Platinfo;
        break;
      }

      // repeated .Pmd.SdkPlatInfo Platinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_Platinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_platinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Platinfo;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.GamePlatList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.GamePlatList)
  return false;
#undef DO_
}

void GamePlatList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.GamePlatList)
  // required .Pmd.GameZoneInfo gamezone = 1;
  if (has_gamezone()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gamezone(), output);
  }

  // repeated .Pmd.SdkPlatInfo Platinfo = 2;
  for (int i = 0; i < this->platinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->platinfo(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.GamePlatList)
}

::google::protobuf::uint8* GamePlatList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.GamePlatList)
  // required .Pmd.GameZoneInfo gamezone = 1;
  if (has_gamezone()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gamezone(), target);
  }

  // repeated .Pmd.SdkPlatInfo Platinfo = 2;
  for (int i = 0; i < this->platinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->platinfo(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.GamePlatList)
  return target;
}

int GamePlatList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.GameZoneInfo gamezone = 1;
    if (has_gamezone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gamezone());
    }

  }
  // repeated .Pmd.SdkPlatInfo Platinfo = 2;
  total_size += 1 * this->platinfo_size();
  for (int i = 0; i < this->platinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->platinfo(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GamePlatList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GamePlatList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GamePlatList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GamePlatList::MergeFrom(const GamePlatList& from) {
  GOOGLE_CHECK_NE(&from, this);
  platinfo_.MergeFrom(from.platinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gamezone()) {
      mutable_gamezone()->::Pmd::GameZoneInfo::MergeFrom(from.gamezone());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GamePlatList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GamePlatList::CopyFrom(const GamePlatList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GamePlatList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GamePlatList::Swap(GamePlatList* other) {
  if (other != this) {
    std::swap(gamezone_, other->gamezone_);
    platinfo_.Swap(&other->platinfo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GamePlatList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GamePlatList_descriptor_;
  metadata.reflection = GamePlatList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SupportGamePlatListSdkPmd_S::kListFieldNumber;
#endif  // !_MSC_VER

SupportGamePlatListSdkPmd_S::SupportGamePlatListSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.SupportGamePlatListSdkPmd_S)
}

void SupportGamePlatListSdkPmd_S::InitAsDefaultInstance() {
}

SupportGamePlatListSdkPmd_S::SupportGamePlatListSdkPmd_S(const SupportGamePlatListSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.SupportGamePlatListSdkPmd_S)
}

void SupportGamePlatListSdkPmd_S::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SupportGamePlatListSdkPmd_S::~SupportGamePlatListSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.SupportGamePlatListSdkPmd_S)
  SharedDtor();
}

void SupportGamePlatListSdkPmd_S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SupportGamePlatListSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SupportGamePlatListSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SupportGamePlatListSdkPmd_S_descriptor_;
}

const SupportGamePlatListSdkPmd_S& SupportGamePlatListSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

SupportGamePlatListSdkPmd_S* SupportGamePlatListSdkPmd_S::default_instance_ = NULL;

SupportGamePlatListSdkPmd_S* SupportGamePlatListSdkPmd_S::New() const {
  return new SupportGamePlatListSdkPmd_S;
}

void SupportGamePlatListSdkPmd_S::Clear() {
  list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SupportGamePlatListSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.SupportGamePlatListSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pmd.GamePlatList list = 1;
      case 1: {
        if (tag == 10) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.SupportGamePlatListSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.SupportGamePlatListSdkPmd_S)
  return false;
#undef DO_
}

void SupportGamePlatListSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.SupportGamePlatListSdkPmd_S)
  // repeated .Pmd.GamePlatList list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.SupportGamePlatListSdkPmd_S)
}

::google::protobuf::uint8* SupportGamePlatListSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.SupportGamePlatListSdkPmd_S)
  // repeated .Pmd.GamePlatList list = 1;
  for (int i = 0; i < this->list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.SupportGamePlatListSdkPmd_S)
  return target;
}

int SupportGamePlatListSdkPmd_S::ByteSize() const {
  int total_size = 0;

  // repeated .Pmd.GamePlatList list = 1;
  total_size += 1 * this->list_size();
  for (int i = 0; i < this->list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SupportGamePlatListSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SupportGamePlatListSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SupportGamePlatListSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SupportGamePlatListSdkPmd_S::MergeFrom(const SupportGamePlatListSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  list_.MergeFrom(from.list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SupportGamePlatListSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SupportGamePlatListSdkPmd_S::CopyFrom(const SupportGamePlatListSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SupportGamePlatListSdkPmd_S::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void SupportGamePlatListSdkPmd_S::Swap(SupportGamePlatListSdkPmd_S* other) {
  if (other != this) {
    list_.Swap(&other->list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SupportGamePlatListSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SupportGamePlatListSdkPmd_S_descriptor_;
  metadata.reflection = SupportGamePlatListSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlatBaseData::kGamezoneFieldNumber;
const int PlatBaseData::kMyaccidFieldNumber;
const int PlatBaseData::kPlatidFieldNumber;
const int PlatBaseData::kSubplatidFieldNumber;
const int PlatBaseData::kPlataccountFieldNumber;
const int PlatBaseData::kSessionFieldNumber;
const int PlatBaseData::kExtdataFieldNumber;
const int PlatBaseData::kExtdata1FieldNumber;
const int PlatBaseData::kOldplataccountFieldNumber;
const int PlatBaseData::kNicknameFieldNumber;
const int PlatBaseData::kFaceurlFieldNumber;
const int PlatBaseData::kSdkserveridFieldNumber;
const int PlatBaseData::kOldplatidFieldNumber;
const int PlatBaseData::kClienttypeFieldNumber;
#endif  // !_MSC_VER

PlatBaseData::PlatBaseData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.PlatBaseData)
}

void PlatBaseData::InitAsDefaultInstance() {
  gamezone_ = const_cast< ::Pmd::GameZoneInfo*>(&::Pmd::GameZoneInfo::default_instance());
}

PlatBaseData::PlatBaseData(const PlatBaseData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.PlatBaseData)
}

void PlatBaseData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gamezone_ = NULL;
  myaccid_ = GOOGLE_ULONGLONG(0);
  platid_ = 0u;
  subplatid_ = 0u;
  plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extdata1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  oldplataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  faceurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkserverid_ = GOOGLE_ULONGLONG(0);
  oldplatid_ = 0u;
  clienttype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlatBaseData::~PlatBaseData() {
  // @@protoc_insertion_point(destructor:Pmd.PlatBaseData)
  SharedDtor();
}

void PlatBaseData::SharedDtor() {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete plataccount_;
  }
  if (session_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete session_;
  }
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata1_;
  }
  if (oldplataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete oldplataccount_;
  }
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (faceurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete faceurl_;
  }
  if (this != default_instance_) {
    delete gamezone_;
  }
}

void PlatBaseData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatBaseData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlatBaseData_descriptor_;
}

const PlatBaseData& PlatBaseData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

PlatBaseData* PlatBaseData::default_instance_ = NULL;

PlatBaseData* PlatBaseData::New() const {
  return new PlatBaseData;
}

void PlatBaseData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PlatBaseData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(myaccid_, subplatid_);
    if (has_gamezone()) {
      if (gamezone_ != NULL) gamezone_->::Pmd::GameZoneInfo::Clear();
    }
    if (has_plataccount()) {
      if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        plataccount_->clear();
      }
    }
    if (has_session()) {
      if (session_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        session_->clear();
      }
    }
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
    if (has_extdata1()) {
      if (extdata1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata1_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 16128) {
    ZR_(sdkserverid_, clienttype_);
    if (has_oldplataccount()) {
      if (oldplataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        oldplataccount_->clear();
      }
    }
    if (has_nickname()) {
      if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        nickname_->clear();
      }
    }
    if (has_faceurl()) {
      if (faceurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        faceurl_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlatBaseData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.PlatBaseData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Pmd.GameZoneInfo gamezone = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamezone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_myaccid;
        break;
      }

      // optional uint64 myaccid = 2;
      case 2: {
        if (tag == 16) {
         parse_myaccid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &myaccid_)));
          set_has_myaccid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_platid;
        break;
      }

      // optional uint32 platid = 3;
      case 3: {
        if (tag == 24) {
         parse_platid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platid_)));
          set_has_platid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_subplatid;
        break;
      }

      // optional uint32 subplatid = 4;
      case 4: {
        if (tag == 32) {
         parse_subplatid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subplatid_)));
          set_has_subplatid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_plataccount;
        break;
      }

      // optional string plataccount = 5;
      case 5: {
        if (tag == 42) {
         parse_plataccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plataccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->plataccount().data(), this->plataccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plataccount");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_session;
        break;
      }

      // optional string session = 6;
      case 6: {
        if (tag == 50) {
         parse_session:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->session().data(), this->session().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "session");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_extdata;
        break;
      }

      // optional string extdata = 7;
      case 7: {
        if (tag == 58) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_extdata1;
        break;
      }

      // optional string extdata1 = 8;
      case 8: {
        if (tag == 66) {
         parse_extdata1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata1().data(), this->extdata1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_oldplataccount;
        break;
      }

      // optional string oldplataccount = 9;
      case 9: {
        if (tag == 74) {
         parse_oldplataccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldplataccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oldplataccount().data(), this->oldplataccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "oldplataccount");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_nickname;
        break;
      }

      // optional string nickname = 10;
      case 10: {
        if (tag == 82) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_faceurl;
        break;
      }

      // optional string faceurl = 11;
      case 11: {
        if (tag == 90) {
         parse_faceurl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_faceurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->faceurl().data(), this->faceurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "faceurl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_sdkserverid;
        break;
      }

      // optional uint64 sdkserverid = 12;
      case 12: {
        if (tag == 96) {
         parse_sdkserverid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sdkserverid_)));
          set_has_sdkserverid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_oldplatid;
        break;
      }

      // optional uint32 oldplatid = 13;
      case 13: {
        if (tag == 104) {
         parse_oldplatid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldplatid_)));
          set_has_oldplatid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_clienttype;
        break;
      }

      // optional uint32 clienttype = 14;
      case 14: {
        if (tag == 112) {
         parse_clienttype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clienttype_)));
          set_has_clienttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.PlatBaseData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.PlatBaseData)
  return false;
#undef DO_
}

void PlatBaseData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.PlatBaseData)
  // optional .Pmd.GameZoneInfo gamezone = 1;
  if (has_gamezone()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gamezone(), output);
  }

  // optional uint64 myaccid = 2;
  if (has_myaccid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->myaccid(), output);
  }

  // optional uint32 platid = 3;
  if (has_platid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->platid(), output);
  }

  // optional uint32 subplatid = 4;
  if (has_subplatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->subplatid(), output);
  }

  // optional string plataccount = 5;
  if (has_plataccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plataccount().data(), this->plataccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plataccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->plataccount(), output);
  }

  // optional string session = 6;
  if (has_session()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->session(), output);
  }

  // optional string extdata = 7;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->extdata(), output);
  }

  // optional string extdata1 = 8;
  if (has_extdata1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata1().data(), this->extdata1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->extdata1(), output);
  }

  // optional string oldplataccount = 9;
  if (has_oldplataccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oldplataccount().data(), this->oldplataccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "oldplataccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->oldplataccount(), output);
  }

  // optional string nickname = 10;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->nickname(), output);
  }

  // optional string faceurl = 11;
  if (has_faceurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->faceurl().data(), this->faceurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "faceurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->faceurl(), output);
  }

  // optional uint64 sdkserverid = 12;
  if (has_sdkserverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->sdkserverid(), output);
  }

  // optional uint32 oldplatid = 13;
  if (has_oldplatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->oldplatid(), output);
  }

  // optional uint32 clienttype = 14;
  if (has_clienttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->clienttype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.PlatBaseData)
}

::google::protobuf::uint8* PlatBaseData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.PlatBaseData)
  // optional .Pmd.GameZoneInfo gamezone = 1;
  if (has_gamezone()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gamezone(), target);
  }

  // optional uint64 myaccid = 2;
  if (has_myaccid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->myaccid(), target);
  }

  // optional uint32 platid = 3;
  if (has_platid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->platid(), target);
  }

  // optional uint32 subplatid = 4;
  if (has_subplatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->subplatid(), target);
  }

  // optional string plataccount = 5;
  if (has_plataccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plataccount().data(), this->plataccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plataccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->plataccount(), target);
  }

  // optional string session = 6;
  if (has_session()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->session(), target);
  }

  // optional string extdata = 7;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->extdata(), target);
  }

  // optional string extdata1 = 8;
  if (has_extdata1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata1().data(), this->extdata1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->extdata1(), target);
  }

  // optional string oldplataccount = 9;
  if (has_oldplataccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oldplataccount().data(), this->oldplataccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "oldplataccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->oldplataccount(), target);
  }

  // optional string nickname = 10;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->nickname(), target);
  }

  // optional string faceurl = 11;
  if (has_faceurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->faceurl().data(), this->faceurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "faceurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->faceurl(), target);
  }

  // optional uint64 sdkserverid = 12;
  if (has_sdkserverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->sdkserverid(), target);
  }

  // optional uint32 oldplatid = 13;
  if (has_oldplatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->oldplatid(), target);
  }

  // optional uint32 clienttype = 14;
  if (has_clienttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->clienttype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.PlatBaseData)
  return target;
}

int PlatBaseData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Pmd.GameZoneInfo gamezone = 1;
    if (has_gamezone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gamezone());
    }

    // optional uint64 myaccid = 2;
    if (has_myaccid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->myaccid());
    }

    // optional uint32 platid = 3;
    if (has_platid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->platid());
    }

    // optional uint32 subplatid = 4;
    if (has_subplatid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->subplatid());
    }

    // optional string plataccount = 5;
    if (has_plataccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->plataccount());
    }

    // optional string session = 6;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session());
    }

    // optional string extdata = 7;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

    // optional string extdata1 = 8;
    if (has_extdata1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata1());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string oldplataccount = 9;
    if (has_oldplataccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oldplataccount());
    }

    // optional string nickname = 10;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string faceurl = 11;
    if (has_faceurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->faceurl());
    }

    // optional uint64 sdkserverid = 12;
    if (has_sdkserverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sdkserverid());
    }

    // optional uint32 oldplatid = 13;
    if (has_oldplatid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oldplatid());
    }

    // optional uint32 clienttype = 14;
    if (has_clienttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clienttype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatBaseData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlatBaseData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlatBaseData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlatBaseData::MergeFrom(const PlatBaseData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gamezone()) {
      mutable_gamezone()->::Pmd::GameZoneInfo::MergeFrom(from.gamezone());
    }
    if (from.has_myaccid()) {
      set_myaccid(from.myaccid());
    }
    if (from.has_platid()) {
      set_platid(from.platid());
    }
    if (from.has_subplatid()) {
      set_subplatid(from.subplatid());
    }
    if (from.has_plataccount()) {
      set_plataccount(from.plataccount());
    }
    if (from.has_session()) {
      set_session(from.session());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
    if (from.has_extdata1()) {
      set_extdata1(from.extdata1());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_oldplataccount()) {
      set_oldplataccount(from.oldplataccount());
    }
    if (from.has_nickname()) {
      set_nickname(from.nickname());
    }
    if (from.has_faceurl()) {
      set_faceurl(from.faceurl());
    }
    if (from.has_sdkserverid()) {
      set_sdkserverid(from.sdkserverid());
    }
    if (from.has_oldplatid()) {
      set_oldplatid(from.oldplatid());
    }
    if (from.has_clienttype()) {
      set_clienttype(from.clienttype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlatBaseData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatBaseData::CopyFrom(const PlatBaseData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatBaseData::IsInitialized() const {

  return true;
}

void PlatBaseData::Swap(PlatBaseData* other) {
  if (other != this) {
    std::swap(gamezone_, other->gamezone_);
    std::swap(myaccid_, other->myaccid_);
    std::swap(platid_, other->platid_);
    std::swap(subplatid_, other->subplatid_);
    std::swap(plataccount_, other->plataccount_);
    std::swap(session_, other->session_);
    std::swap(extdata_, other->extdata_);
    std::swap(extdata1_, other->extdata1_);
    std::swap(oldplataccount_, other->oldplataccount_);
    std::swap(nickname_, other->nickname_);
    std::swap(faceurl_, other->faceurl_);
    std::swap(sdkserverid_, other->sdkserverid_);
    std::swap(oldplatid_, other->oldplatid_);
    std::swap(clienttype_, other->clienttype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlatBaseData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlatBaseData_descriptor_;
  metadata.reflection = PlatBaseData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserLoginPlatRequestSdkPmd_C::kDataFieldNumber;
const int UserLoginPlatRequestSdkPmd_C::kSessiontypeFieldNumber;
#endif  // !_MSC_VER

UserLoginPlatRequestSdkPmd_C::UserLoginPlatRequestSdkPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.UserLoginPlatRequestSdkPmd_C)
}

void UserLoginPlatRequestSdkPmd_C::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

UserLoginPlatRequestSdkPmd_C::UserLoginPlatRequestSdkPmd_C(const UserLoginPlatRequestSdkPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.UserLoginPlatRequestSdkPmd_C)
}

void UserLoginPlatRequestSdkPmd_C::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  sessiontype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserLoginPlatRequestSdkPmd_C::~UserLoginPlatRequestSdkPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.UserLoginPlatRequestSdkPmd_C)
  SharedDtor();
}

void UserLoginPlatRequestSdkPmd_C::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void UserLoginPlatRequestSdkPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginPlatRequestSdkPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserLoginPlatRequestSdkPmd_C_descriptor_;
}

const UserLoginPlatRequestSdkPmd_C& UserLoginPlatRequestSdkPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

UserLoginPlatRequestSdkPmd_C* UserLoginPlatRequestSdkPmd_C::default_instance_ = NULL;

UserLoginPlatRequestSdkPmd_C* UserLoginPlatRequestSdkPmd_C::New() const {
  return new UserLoginPlatRequestSdkPmd_C;
}

void UserLoginPlatRequestSdkPmd_C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    sessiontype_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserLoginPlatRequestSdkPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.UserLoginPlatRequestSdkPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sessiontype;
        break;
      }

      // optional uint32 sessiontype = 2;
      case 2: {
        if (tag == 16) {
         parse_sessiontype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sessiontype_)));
          set_has_sessiontype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.UserLoginPlatRequestSdkPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.UserLoginPlatRequestSdkPmd_C)
  return false;
#undef DO_
}

void UserLoginPlatRequestSdkPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.UserLoginPlatRequestSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional uint32 sessiontype = 2;
  if (has_sessiontype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sessiontype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.UserLoginPlatRequestSdkPmd_C)
}

::google::protobuf::uint8* UserLoginPlatRequestSdkPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.UserLoginPlatRequestSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional uint32 sessiontype = 2;
  if (has_sessiontype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sessiontype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.UserLoginPlatRequestSdkPmd_C)
  return target;
}

int UserLoginPlatRequestSdkPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional uint32 sessiontype = 2;
    if (has_sessiontype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sessiontype());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginPlatRequestSdkPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserLoginPlatRequestSdkPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserLoginPlatRequestSdkPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserLoginPlatRequestSdkPmd_C::MergeFrom(const UserLoginPlatRequestSdkPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_sessiontype()) {
      set_sessiontype(from.sessiontype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserLoginPlatRequestSdkPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginPlatRequestSdkPmd_C::CopyFrom(const UserLoginPlatRequestSdkPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginPlatRequestSdkPmd_C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UserLoginPlatRequestSdkPmd_C::Swap(UserLoginPlatRequestSdkPmd_C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(sessiontype_, other->sessiontype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserLoginPlatRequestSdkPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserLoginPlatRequestSdkPmd_C_descriptor_;
  metadata.reflection = UserLoginPlatRequestSdkPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserLoginPlatReturnSdkPmd_S::kDataFieldNumber;
const int UserLoginPlatReturnSdkPmd_S::kRetFieldNumber;
const int UserLoginPlatReturnSdkPmd_S::kRetdescFieldNumber;
#endif  // !_MSC_VER

UserLoginPlatReturnSdkPmd_S::UserLoginPlatReturnSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.UserLoginPlatReturnSdkPmd_S)
}

void UserLoginPlatReturnSdkPmd_S::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

UserLoginPlatReturnSdkPmd_S::UserLoginPlatReturnSdkPmd_S(const UserLoginPlatReturnSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.UserLoginPlatReturnSdkPmd_S)
}

void UserLoginPlatReturnSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  ret_ = 0u;
  retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserLoginPlatReturnSdkPmd_S::~UserLoginPlatReturnSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.UserLoginPlatReturnSdkPmd_S)
  SharedDtor();
}

void UserLoginPlatReturnSdkPmd_S::SharedDtor() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void UserLoginPlatReturnSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLoginPlatReturnSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserLoginPlatReturnSdkPmd_S_descriptor_;
}

const UserLoginPlatReturnSdkPmd_S& UserLoginPlatReturnSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

UserLoginPlatReturnSdkPmd_S* UserLoginPlatReturnSdkPmd_S::default_instance_ = NULL;

UserLoginPlatReturnSdkPmd_S* UserLoginPlatReturnSdkPmd_S::New() const {
  return new UserLoginPlatReturnSdkPmd_S;
}

void UserLoginPlatReturnSdkPmd_S::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    ret_ = 0u;
    if (has_retdesc()) {
      if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retdesc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserLoginPlatReturnSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.UserLoginPlatReturnSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // required uint32 ret = 2;
      case 2: {
        if (tag == 16) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_retdesc;
        break;
      }

      // optional string retdesc = 3;
      case 3: {
        if (tag == 26) {
         parse_retdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retdesc().data(), this->retdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.UserLoginPlatReturnSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.UserLoginPlatReturnSdkPmd_S)
  return false;
#undef DO_
}

void UserLoginPlatReturnSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.UserLoginPlatReturnSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required uint32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ret(), output);
  }

  // optional string retdesc = 3;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->retdesc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.UserLoginPlatReturnSdkPmd_S)
}

::google::protobuf::uint8* UserLoginPlatReturnSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.UserLoginPlatReturnSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required uint32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ret(), target);
  }

  // optional string retdesc = 3;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->retdesc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.UserLoginPlatReturnSdkPmd_S)
  return target;
}

int UserLoginPlatReturnSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required uint32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

    // optional string retdesc = 3;
    if (has_retdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retdesc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginPlatReturnSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserLoginPlatReturnSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserLoginPlatReturnSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserLoginPlatReturnSdkPmd_S::MergeFrom(const UserLoginPlatReturnSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_retdesc()) {
      set_retdesc(from.retdesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserLoginPlatReturnSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLoginPlatReturnSdkPmd_S::CopyFrom(const UserLoginPlatReturnSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginPlatReturnSdkPmd_S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UserLoginPlatReturnSdkPmd_S::Swap(UserLoginPlatReturnSdkPmd_S* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(ret_, other->ret_);
    std::swap(retdesc_, other->retdesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserLoginPlatReturnSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserLoginPlatReturnSdkPmd_S_descriptor_;
  metadata.reflection = UserLoginPlatReturnSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreatePlatOrderRequestSdkPmd_C::kDataFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kGameorderFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kRoleidFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kRolenameFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kOriginalmoneyFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kOrdermoneyFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kGoodidFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kGoodnumFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kGoodnameFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kGooddescFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kRedirecturlFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kPayplatidFieldNumber;
const int CreatePlatOrderRequestSdkPmd_C::kExtdataFieldNumber;
#endif  // !_MSC_VER

CreatePlatOrderRequestSdkPmd_C::CreatePlatOrderRequestSdkPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.CreatePlatOrderRequestSdkPmd_C)
}

void CreatePlatOrderRequestSdkPmd_C::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

CreatePlatOrderRequestSdkPmd_C::CreatePlatOrderRequestSdkPmd_C(const CreatePlatOrderRequestSdkPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.CreatePlatOrderRequestSdkPmd_C)
}

void CreatePlatOrderRequestSdkPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_ULONGLONG(0);
  rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originalmoney_ = 0;
  ordermoney_ = 0;
  goodid_ = 0u;
  goodnum_ = 0u;
  goodname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gooddesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirecturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payplatid_ = 0u;
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreatePlatOrderRequestSdkPmd_C::~CreatePlatOrderRequestSdkPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.CreatePlatOrderRequestSdkPmd_C)
  SharedDtor();
}

void CreatePlatOrderRequestSdkPmd_C::SharedDtor() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (rolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rolename_;
  }
  if (goodname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete goodname_;
  }
  if (gooddesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gooddesc_;
  }
  if (redirecturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete redirecturl_;
  }
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void CreatePlatOrderRequestSdkPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePlatOrderRequestSdkPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreatePlatOrderRequestSdkPmd_C_descriptor_;
}

const CreatePlatOrderRequestSdkPmd_C& CreatePlatOrderRequestSdkPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

CreatePlatOrderRequestSdkPmd_C* CreatePlatOrderRequestSdkPmd_C::default_instance_ = NULL;

CreatePlatOrderRequestSdkPmd_C* CreatePlatOrderRequestSdkPmd_C::New() const {
  return new CreatePlatOrderRequestSdkPmd_C;
}

void CreatePlatOrderRequestSdkPmd_C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CreatePlatOrderRequestSdkPmd_C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(originalmoney_, goodnum_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
    roleid_ = GOOGLE_ULONGLONG(0);
    if (has_rolename()) {
      if (rolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        rolename_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7936) {
    if (has_goodname()) {
      if (goodname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        goodname_->clear();
      }
    }
    if (has_gooddesc()) {
      if (gooddesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gooddesc_->clear();
      }
    }
    if (has_redirecturl()) {
      if (redirecturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        redirecturl_->clear();
      }
    }
    payplatid_ = 0u;
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreatePlatOrderRequestSdkPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.CreatePlatOrderRequestSdkPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gameorder;
        break;
      }

      // required string gameorder = 2;
      case 2: {
        if (tag == 18) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_roleid;
        break;
      }

      // required uint64 roleid = 3;
      case 3: {
        if (tag == 24) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_rolename;
        break;
      }

      // required string rolename = 4;
      case 4: {
        if (tag == 34) {
         parse_rolename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "rolename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_originalmoney;
        break;
      }

      // required float originalmoney = 5;
      case 5: {
        if (tag == 45) {
         parse_originalmoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &originalmoney_)));
          set_has_originalmoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_ordermoney;
        break;
      }

      // required float ordermoney = 6;
      case 6: {
        if (tag == 53) {
         parse_ordermoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ordermoney_)));
          set_has_ordermoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_goodid;
        break;
      }

      // required uint32 goodid = 7;
      case 7: {
        if (tag == 56) {
         parse_goodid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodid_)));
          set_has_goodid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_goodnum;
        break;
      }

      // required uint32 goodnum = 8;
      case 8: {
        if (tag == 64) {
         parse_goodnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodnum_)));
          set_has_goodnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_goodname;
        break;
      }

      // optional string goodname = 9;
      case 9: {
        if (tag == 74) {
         parse_goodname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_goodname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->goodname().data(), this->goodname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "goodname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_gooddesc;
        break;
      }

      // optional string gooddesc = 10;
      case 10: {
        if (tag == 82) {
         parse_gooddesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gooddesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gooddesc().data(), this->gooddesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gooddesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_redirecturl;
        break;
      }

      // optional string redirecturl = 11;
      case 11: {
        if (tag == 90) {
         parse_redirecturl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirecturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirecturl().data(), this->redirecturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "redirecturl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_payplatid;
        break;
      }

      // optional uint32 payplatid = 12;
      case 12: {
        if (tag == 96) {
         parse_payplatid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payplatid_)));
          set_has_payplatid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_extdata;
        break;
      }

      // optional string extdata = 13;
      case 13: {
        if (tag == 106) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.CreatePlatOrderRequestSdkPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.CreatePlatOrderRequestSdkPmd_C)
  return false;
#undef DO_
}

void CreatePlatOrderRequestSdkPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.CreatePlatOrderRequestSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameorder(), output);
  }

  // required uint64 roleid = 3;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roleid(), output);
  }

  // required string rolename = 4;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rolename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->rolename(), output);
  }

  // required float originalmoney = 5;
  if (has_originalmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->originalmoney(), output);
  }

  // required float ordermoney = 6;
  if (has_ordermoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->ordermoney(), output);
  }

  // required uint32 goodid = 7;
  if (has_goodid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->goodid(), output);
  }

  // required uint32 goodnum = 8;
  if (has_goodnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->goodnum(), output);
  }

  // optional string goodname = 9;
  if (has_goodname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->goodname().data(), this->goodname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "goodname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->goodname(), output);
  }

  // optional string gooddesc = 10;
  if (has_gooddesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gooddesc().data(), this->gooddesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gooddesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->gooddesc(), output);
  }

  // optional string redirecturl = 11;
  if (has_redirecturl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirecturl().data(), this->redirecturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "redirecturl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->redirecturl(), output);
  }

  // optional uint32 payplatid = 12;
  if (has_payplatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->payplatid(), output);
  }

  // optional string extdata = 13;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->extdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.CreatePlatOrderRequestSdkPmd_C)
}

::google::protobuf::uint8* CreatePlatOrderRequestSdkPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.CreatePlatOrderRequestSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameorder(), target);
  }

  // required uint64 roleid = 3;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roleid(), target);
  }

  // required string rolename = 4;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "rolename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->rolename(), target);
  }

  // required float originalmoney = 5;
  if (has_originalmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->originalmoney(), target);
  }

  // required float ordermoney = 6;
  if (has_ordermoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->ordermoney(), target);
  }

  // required uint32 goodid = 7;
  if (has_goodid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->goodid(), target);
  }

  // required uint32 goodnum = 8;
  if (has_goodnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->goodnum(), target);
  }

  // optional string goodname = 9;
  if (has_goodname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->goodname().data(), this->goodname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "goodname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->goodname(), target);
  }

  // optional string gooddesc = 10;
  if (has_gooddesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gooddesc().data(), this->gooddesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gooddesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->gooddesc(), target);
  }

  // optional string redirecturl = 11;
  if (has_redirecturl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirecturl().data(), this->redirecturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "redirecturl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->redirecturl(), target);
  }

  // optional uint32 payplatid = 12;
  if (has_payplatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->payplatid(), target);
  }

  // optional string extdata = 13;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->extdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.CreatePlatOrderRequestSdkPmd_C)
  return target;
}

int CreatePlatOrderRequestSdkPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required string gameorder = 2;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // required uint64 roleid = 3;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

    // required string rolename = 4;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

    // required float originalmoney = 5;
    if (has_originalmoney()) {
      total_size += 1 + 4;
    }

    // required float ordermoney = 6;
    if (has_ordermoney()) {
      total_size += 1 + 4;
    }

    // required uint32 goodid = 7;
    if (has_goodid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodid());
    }

    // required uint32 goodnum = 8;
    if (has_goodnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodnum());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string goodname = 9;
    if (has_goodname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->goodname());
    }

    // optional string gooddesc = 10;
    if (has_gooddesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gooddesc());
    }

    // optional string redirecturl = 11;
    if (has_redirecturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirecturl());
    }

    // optional uint32 payplatid = 12;
    if (has_payplatid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->payplatid());
    }

    // optional string extdata = 13;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePlatOrderRequestSdkPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreatePlatOrderRequestSdkPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreatePlatOrderRequestSdkPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreatePlatOrderRequestSdkPmd_C::MergeFrom(const CreatePlatOrderRequestSdkPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_rolename()) {
      set_rolename(from.rolename());
    }
    if (from.has_originalmoney()) {
      set_originalmoney(from.originalmoney());
    }
    if (from.has_ordermoney()) {
      set_ordermoney(from.ordermoney());
    }
    if (from.has_goodid()) {
      set_goodid(from.goodid());
    }
    if (from.has_goodnum()) {
      set_goodnum(from.goodnum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_goodname()) {
      set_goodname(from.goodname());
    }
    if (from.has_gooddesc()) {
      set_gooddesc(from.gooddesc());
    }
    if (from.has_redirecturl()) {
      set_redirecturl(from.redirecturl());
    }
    if (from.has_payplatid()) {
      set_payplatid(from.payplatid());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreatePlatOrderRequestSdkPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePlatOrderRequestSdkPmd_C::CopyFrom(const CreatePlatOrderRequestSdkPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePlatOrderRequestSdkPmd_C::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void CreatePlatOrderRequestSdkPmd_C::Swap(CreatePlatOrderRequestSdkPmd_C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(roleid_, other->roleid_);
    std::swap(rolename_, other->rolename_);
    std::swap(originalmoney_, other->originalmoney_);
    std::swap(ordermoney_, other->ordermoney_);
    std::swap(goodid_, other->goodid_);
    std::swap(goodnum_, other->goodnum_);
    std::swap(goodname_, other->goodname_);
    std::swap(gooddesc_, other->gooddesc_);
    std::swap(redirecturl_, other->redirecturl_);
    std::swap(payplatid_, other->payplatid_);
    std::swap(extdata_, other->extdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreatePlatOrderRequestSdkPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreatePlatOrderRequestSdkPmd_C_descriptor_;
  metadata.reflection = CreatePlatOrderRequestSdkPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreatePlatOrderReturnSdkPmd_S::kDataFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kGameorderFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kRoleidFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kOriginalmoneyFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kOrdermoneyFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kGoodidFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kGoodnumFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kResultFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kNoticeurlFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kPlatorderFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kSignFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kRedirecturlFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kPayplatidFieldNumber;
const int CreatePlatOrderReturnSdkPmd_S::kExtdataFieldNumber;
#endif  // !_MSC_VER

CreatePlatOrderReturnSdkPmd_S::CreatePlatOrderReturnSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.CreatePlatOrderReturnSdkPmd_S)
}

void CreatePlatOrderReturnSdkPmd_S::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

CreatePlatOrderReturnSdkPmd_S::CreatePlatOrderReturnSdkPmd_S(const CreatePlatOrderReturnSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.CreatePlatOrderReturnSdkPmd_S)
}

void CreatePlatOrderReturnSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_ULONGLONG(0);
  originalmoney_ = 0;
  ordermoney_ = 0;
  goodid_ = 0u;
  goodnum_ = 0u;
  result_ = 0u;
  noticeurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirecturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payplatid_ = 0u;
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreatePlatOrderReturnSdkPmd_S::~CreatePlatOrderReturnSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.CreatePlatOrderReturnSdkPmd_S)
  SharedDtor();
}

void CreatePlatOrderReturnSdkPmd_S::SharedDtor() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (noticeurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete noticeurl_;
  }
  if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platorder_;
  }
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (redirecturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete redirecturl_;
  }
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void CreatePlatOrderReturnSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePlatOrderReturnSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreatePlatOrderReturnSdkPmd_S_descriptor_;
}

const CreatePlatOrderReturnSdkPmd_S& CreatePlatOrderReturnSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

CreatePlatOrderReturnSdkPmd_S* CreatePlatOrderReturnSdkPmd_S::default_instance_ = NULL;

CreatePlatOrderReturnSdkPmd_S* CreatePlatOrderReturnSdkPmd_S::New() const {
  return new CreatePlatOrderReturnSdkPmd_S;
}

void CreatePlatOrderReturnSdkPmd_S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CreatePlatOrderReturnSdkPmd_S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(roleid_, goodnum_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
    result_ = 0u;
  }
  if (_has_bits_[8 / 32] & 16128) {
    if (has_noticeurl()) {
      if (noticeurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        noticeurl_->clear();
      }
    }
    if (has_platorder()) {
      if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        platorder_->clear();
      }
    }
    if (has_sign()) {
      if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sign_->clear();
      }
    }
    if (has_redirecturl()) {
      if (redirecturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        redirecturl_->clear();
      }
    }
    payplatid_ = 0u;
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreatePlatOrderReturnSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.CreatePlatOrderReturnSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gameorder;
        break;
      }

      // required string gameorder = 2;
      case 2: {
        if (tag == 18) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_roleid;
        break;
      }

      // required uint64 roleid = 3;
      case 3: {
        if (tag == 24) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_originalmoney;
        break;
      }

      // required float originalmoney = 4;
      case 4: {
        if (tag == 37) {
         parse_originalmoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &originalmoney_)));
          set_has_originalmoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_ordermoney;
        break;
      }

      // required float ordermoney = 5;
      case 5: {
        if (tag == 45) {
         parse_ordermoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ordermoney_)));
          set_has_ordermoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_goodid;
        break;
      }

      // required uint32 goodid = 6;
      case 6: {
        if (tag == 48) {
         parse_goodid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodid_)));
          set_has_goodid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_goodnum;
        break;
      }

      // required uint32 goodnum = 7;
      case 7: {
        if (tag == 56) {
         parse_goodnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodnum_)));
          set_has_goodnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_result;
        break;
      }

      // required uint32 result = 8;
      case 8: {
        if (tag == 64) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_noticeurl;
        break;
      }

      // optional string noticeurl = 9;
      case 9: {
        if (tag == 74) {
         parse_noticeurl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_noticeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->noticeurl().data(), this->noticeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "noticeurl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_platorder;
        break;
      }

      // optional string platorder = 10;
      case 10: {
        if (tag == 82) {
         parse_platorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platorder().data(), this->platorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "platorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sign;
        break;
      }

      // optional string sign = 11;
      case 11: {
        if (tag == 90) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sign");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_redirecturl;
        break;
      }

      // optional string redirecturl = 12;
      case 12: {
        if (tag == 98) {
         parse_redirecturl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirecturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->redirecturl().data(), this->redirecturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "redirecturl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_payplatid;
        break;
      }

      // optional uint32 payplatid = 13;
      case 13: {
        if (tag == 104) {
         parse_payplatid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payplatid_)));
          set_has_payplatid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_extdata;
        break;
      }

      // optional string extdata = 14;
      case 14: {
        if (tag == 114) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.CreatePlatOrderReturnSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.CreatePlatOrderReturnSdkPmd_S)
  return false;
#undef DO_
}

void CreatePlatOrderReturnSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.CreatePlatOrderReturnSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameorder(), output);
  }

  // required uint64 roleid = 3;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roleid(), output);
  }

  // required float originalmoney = 4;
  if (has_originalmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->originalmoney(), output);
  }

  // required float ordermoney = 5;
  if (has_ordermoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->ordermoney(), output);
  }

  // required uint32 goodid = 6;
  if (has_goodid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->goodid(), output);
  }

  // required uint32 goodnum = 7;
  if (has_goodnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->goodnum(), output);
  }

  // required uint32 result = 8;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->result(), output);
  }

  // optional string noticeurl = 9;
  if (has_noticeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->noticeurl().data(), this->noticeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "noticeurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->noticeurl(), output);
  }

  // optional string platorder = 10;
  if (has_platorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platorder().data(), this->platorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->platorder(), output);
  }

  // optional string sign = 11;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sign(), output);
  }

  // optional string redirecturl = 12;
  if (has_redirecturl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirecturl().data(), this->redirecturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "redirecturl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->redirecturl(), output);
  }

  // optional uint32 payplatid = 13;
  if (has_payplatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->payplatid(), output);
  }

  // optional string extdata = 14;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->extdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.CreatePlatOrderReturnSdkPmd_S)
}

::google::protobuf::uint8* CreatePlatOrderReturnSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.CreatePlatOrderReturnSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameorder(), target);
  }

  // required uint64 roleid = 3;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roleid(), target);
  }

  // required float originalmoney = 4;
  if (has_originalmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->originalmoney(), target);
  }

  // required float ordermoney = 5;
  if (has_ordermoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->ordermoney(), target);
  }

  // required uint32 goodid = 6;
  if (has_goodid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->goodid(), target);
  }

  // required uint32 goodnum = 7;
  if (has_goodnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->goodnum(), target);
  }

  // required uint32 result = 8;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->result(), target);
  }

  // optional string noticeurl = 9;
  if (has_noticeurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->noticeurl().data(), this->noticeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "noticeurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->noticeurl(), target);
  }

  // optional string platorder = 10;
  if (has_platorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platorder().data(), this->platorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->platorder(), target);
  }

  // optional string sign = 11;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sign(), target);
  }

  // optional string redirecturl = 12;
  if (has_redirecturl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->redirecturl().data(), this->redirecturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "redirecturl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->redirecturl(), target);
  }

  // optional uint32 payplatid = 13;
  if (has_payplatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->payplatid(), target);
  }

  // optional string extdata = 14;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->extdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.CreatePlatOrderReturnSdkPmd_S)
  return target;
}

int CreatePlatOrderReturnSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required string gameorder = 2;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // required uint64 roleid = 3;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

    // required float originalmoney = 4;
    if (has_originalmoney()) {
      total_size += 1 + 4;
    }

    // required float ordermoney = 5;
    if (has_ordermoney()) {
      total_size += 1 + 4;
    }

    // required uint32 goodid = 6;
    if (has_goodid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodid());
    }

    // required uint32 goodnum = 7;
    if (has_goodnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodnum());
    }

    // required uint32 result = 8;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string noticeurl = 9;
    if (has_noticeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->noticeurl());
    }

    // optional string platorder = 10;
    if (has_platorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platorder());
    }

    // optional string sign = 11;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sign());
    }

    // optional string redirecturl = 12;
    if (has_redirecturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->redirecturl());
    }

    // optional uint32 payplatid = 13;
    if (has_payplatid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->payplatid());
    }

    // optional string extdata = 14;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePlatOrderReturnSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreatePlatOrderReturnSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreatePlatOrderReturnSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreatePlatOrderReturnSdkPmd_S::MergeFrom(const CreatePlatOrderReturnSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_originalmoney()) {
      set_originalmoney(from.originalmoney());
    }
    if (from.has_ordermoney()) {
      set_ordermoney(from.ordermoney());
    }
    if (from.has_goodid()) {
      set_goodid(from.goodid());
    }
    if (from.has_goodnum()) {
      set_goodnum(from.goodnum());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_noticeurl()) {
      set_noticeurl(from.noticeurl());
    }
    if (from.has_platorder()) {
      set_platorder(from.platorder());
    }
    if (from.has_sign()) {
      set_sign(from.sign());
    }
    if (from.has_redirecturl()) {
      set_redirecturl(from.redirecturl());
    }
    if (from.has_payplatid()) {
      set_payplatid(from.payplatid());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreatePlatOrderReturnSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePlatOrderReturnSdkPmd_S::CopyFrom(const CreatePlatOrderReturnSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePlatOrderReturnSdkPmd_S::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void CreatePlatOrderReturnSdkPmd_S::Swap(CreatePlatOrderReturnSdkPmd_S* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(roleid_, other->roleid_);
    std::swap(originalmoney_, other->originalmoney_);
    std::swap(ordermoney_, other->ordermoney_);
    std::swap(goodid_, other->goodid_);
    std::swap(goodnum_, other->goodnum_);
    std::swap(result_, other->result_);
    std::swap(noticeurl_, other->noticeurl_);
    std::swap(platorder_, other->platorder_);
    std::swap(sign_, other->sign_);
    std::swap(redirecturl_, other->redirecturl_);
    std::swap(payplatid_, other->payplatid_);
    std::swap(extdata_, other->extdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreatePlatOrderReturnSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreatePlatOrderReturnSdkPmd_S_descriptor_;
  metadata.reflection = CreatePlatOrderReturnSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyRechargeRequestSdkPmd_S::kDataFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kPlatorderFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kGameorderFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kRoleidFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kOriginalmoneyFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kOrdermoneyFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kGoodidFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kGoodnumFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kResultFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kExtdataFieldNumber;
const int NotifyRechargeRequestSdkPmd_S::kTypeFieldNumber;
#endif  // !_MSC_VER

NotifyRechargeRequestSdkPmd_S::NotifyRechargeRequestSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.NotifyRechargeRequestSdkPmd_S)
}

void NotifyRechargeRequestSdkPmd_S::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

NotifyRechargeRequestSdkPmd_S::NotifyRechargeRequestSdkPmd_S(const NotifyRechargeRequestSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.NotifyRechargeRequestSdkPmd_S)
}

void NotifyRechargeRequestSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  platorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_ULONGLONG(0);
  originalmoney_ = 0;
  ordermoney_ = 0;
  goodid_ = 0u;
  goodnum_ = 0u;
  result_ = 0u;
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyRechargeRequestSdkPmd_S::~NotifyRechargeRequestSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.NotifyRechargeRequestSdkPmd_S)
  SharedDtor();
}

void NotifyRechargeRequestSdkPmd_S::SharedDtor() {
  if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platorder_;
  }
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void NotifyRechargeRequestSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyRechargeRequestSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyRechargeRequestSdkPmd_S_descriptor_;
}

const NotifyRechargeRequestSdkPmd_S& NotifyRechargeRequestSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

NotifyRechargeRequestSdkPmd_S* NotifyRechargeRequestSdkPmd_S::default_instance_ = NULL;

NotifyRechargeRequestSdkPmd_S* NotifyRechargeRequestSdkPmd_S::New() const {
  return new NotifyRechargeRequestSdkPmd_S;
}

void NotifyRechargeRequestSdkPmd_S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NotifyRechargeRequestSdkPmd_S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(roleid_, goodnum_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_platorder()) {
      if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        platorder_->clear();
      }
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 1792) {
    ZR_(result_, type_);
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyRechargeRequestSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.NotifyRechargeRequestSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_platorder;
        break;
      }

      // required string platorder = 2;
      case 2: {
        if (tag == 18) {
         parse_platorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platorder().data(), this->platorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "platorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gameorder;
        break;
      }

      // required string gameorder = 3;
      case 3: {
        if (tag == 26) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_roleid;
        break;
      }

      // required uint64 roleid = 4;
      case 4: {
        if (tag == 32) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_originalmoney;
        break;
      }

      // required float originalmoney = 5;
      case 5: {
        if (tag == 45) {
         parse_originalmoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &originalmoney_)));
          set_has_originalmoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_ordermoney;
        break;
      }

      // required float ordermoney = 6;
      case 6: {
        if (tag == 53) {
         parse_ordermoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ordermoney_)));
          set_has_ordermoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_goodid;
        break;
      }

      // required uint32 goodid = 7;
      case 7: {
        if (tag == 56) {
         parse_goodid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodid_)));
          set_has_goodid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_goodnum;
        break;
      }

      // required uint32 goodnum = 8;
      case 8: {
        if (tag == 64) {
         parse_goodnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodnum_)));
          set_has_goodnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_result;
        break;
      }

      // required uint32 result = 9;
      case 9: {
        if (tag == 72) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_extdata;
        break;
      }

      // optional string extdata = 10;
      case 10: {
        if (tag == 82) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_type;
        break;
      }

      // optional uint32 type = 11;
      case 11: {
        if (tag == 88) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.NotifyRechargeRequestSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.NotifyRechargeRequestSdkPmd_S)
  return false;
#undef DO_
}

void NotifyRechargeRequestSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.NotifyRechargeRequestSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required string platorder = 2;
  if (has_platorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platorder().data(), this->platorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->platorder(), output);
  }

  // required string gameorder = 3;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gameorder(), output);
  }

  // required uint64 roleid = 4;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roleid(), output);
  }

  // required float originalmoney = 5;
  if (has_originalmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->originalmoney(), output);
  }

  // required float ordermoney = 6;
  if (has_ordermoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->ordermoney(), output);
  }

  // required uint32 goodid = 7;
  if (has_goodid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->goodid(), output);
  }

  // required uint32 goodnum = 8;
  if (has_goodnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->goodnum(), output);
  }

  // required uint32 result = 9;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->result(), output);
  }

  // optional string extdata = 10;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->extdata(), output);
  }

  // optional uint32 type = 11;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.NotifyRechargeRequestSdkPmd_S)
}

::google::protobuf::uint8* NotifyRechargeRequestSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.NotifyRechargeRequestSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required string platorder = 2;
  if (has_platorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platorder().data(), this->platorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platorder(), target);
  }

  // required string gameorder = 3;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gameorder(), target);
  }

  // required uint64 roleid = 4;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roleid(), target);
  }

  // required float originalmoney = 5;
  if (has_originalmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->originalmoney(), target);
  }

  // required float ordermoney = 6;
  if (has_ordermoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->ordermoney(), target);
  }

  // required uint32 goodid = 7;
  if (has_goodid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->goodid(), target);
  }

  // required uint32 goodnum = 8;
  if (has_goodnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->goodnum(), target);
  }

  // required uint32 result = 9;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->result(), target);
  }

  // optional string extdata = 10;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->extdata(), target);
  }

  // optional uint32 type = 11;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.NotifyRechargeRequestSdkPmd_S)
  return target;
}

int NotifyRechargeRequestSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required string platorder = 2;
    if (has_platorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platorder());
    }

    // required string gameorder = 3;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // required uint64 roleid = 4;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

    // required float originalmoney = 5;
    if (has_originalmoney()) {
      total_size += 1 + 4;
    }

    // required float ordermoney = 6;
    if (has_ordermoney()) {
      total_size += 1 + 4;
    }

    // required uint32 goodid = 7;
    if (has_goodid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodid());
    }

    // required uint32 goodnum = 8;
    if (has_goodnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodnum());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 result = 9;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

    // optional string extdata = 10;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

    // optional uint32 type = 11;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyRechargeRequestSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyRechargeRequestSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyRechargeRequestSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyRechargeRequestSdkPmd_S::MergeFrom(const NotifyRechargeRequestSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_platorder()) {
      set_platorder(from.platorder());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_originalmoney()) {
      set_originalmoney(from.originalmoney());
    }
    if (from.has_ordermoney()) {
      set_ordermoney(from.ordermoney());
    }
    if (from.has_goodid()) {
      set_goodid(from.goodid());
    }
    if (from.has_goodnum()) {
      set_goodnum(from.goodnum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyRechargeRequestSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRechargeRequestSdkPmd_S::CopyFrom(const NotifyRechargeRequestSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRechargeRequestSdkPmd_S::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void NotifyRechargeRequestSdkPmd_S::Swap(NotifyRechargeRequestSdkPmd_S* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(platorder_, other->platorder_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(roleid_, other->roleid_);
    std::swap(originalmoney_, other->originalmoney_);
    std::swap(ordermoney_, other->ordermoney_);
    std::swap(goodid_, other->goodid_);
    std::swap(goodnum_, other->goodnum_);
    std::swap(result_, other->result_);
    std::swap(extdata_, other->extdata_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyRechargeRequestSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyRechargeRequestSdkPmd_S_descriptor_;
  metadata.reflection = NotifyRechargeRequestSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyRechargeReturnSdkPmd_C::kDataFieldNumber;
const int NotifyRechargeReturnSdkPmd_C::kPlatorderFieldNumber;
const int NotifyRechargeReturnSdkPmd_C::kGameorderFieldNumber;
const int NotifyRechargeReturnSdkPmd_C::kRoleidFieldNumber;
const int NotifyRechargeReturnSdkPmd_C::kResultFieldNumber;
const int NotifyRechargeReturnSdkPmd_C::kExtdataFieldNumber;
#endif  // !_MSC_VER

NotifyRechargeReturnSdkPmd_C::NotifyRechargeReturnSdkPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.NotifyRechargeReturnSdkPmd_C)
}

void NotifyRechargeReturnSdkPmd_C::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

NotifyRechargeReturnSdkPmd_C::NotifyRechargeReturnSdkPmd_C(const NotifyRechargeReturnSdkPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.NotifyRechargeReturnSdkPmd_C)
}

void NotifyRechargeReturnSdkPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  platorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_ULONGLONG(0);
  result_ = 0u;
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyRechargeReturnSdkPmd_C::~NotifyRechargeReturnSdkPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.NotifyRechargeReturnSdkPmd_C)
  SharedDtor();
}

void NotifyRechargeReturnSdkPmd_C::SharedDtor() {
  if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platorder_;
  }
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void NotifyRechargeReturnSdkPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyRechargeReturnSdkPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyRechargeReturnSdkPmd_C_descriptor_;
}

const NotifyRechargeReturnSdkPmd_C& NotifyRechargeReturnSdkPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

NotifyRechargeReturnSdkPmd_C* NotifyRechargeReturnSdkPmd_C::default_instance_ = NULL;

NotifyRechargeReturnSdkPmd_C* NotifyRechargeReturnSdkPmd_C::New() const {
  return new NotifyRechargeReturnSdkPmd_C;
}

void NotifyRechargeReturnSdkPmd_C::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_platorder()) {
      if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        platorder_->clear();
      }
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
    roleid_ = GOOGLE_ULONGLONG(0);
    result_ = 0u;
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyRechargeReturnSdkPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.NotifyRechargeReturnSdkPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_platorder;
        break;
      }

      // required string platorder = 2;
      case 2: {
        if (tag == 18) {
         parse_platorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platorder().data(), this->platorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "platorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gameorder;
        break;
      }

      // required string gameorder = 3;
      case 3: {
        if (tag == 26) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_roleid;
        break;
      }

      // required uint64 roleid = 4;
      case 4: {
        if (tag == 32) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_result;
        break;
      }

      // required uint32 result = 5;
      case 5: {
        if (tag == 40) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_extdata;
        break;
      }

      // optional string extdata = 6;
      case 6: {
        if (tag == 50) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.NotifyRechargeReturnSdkPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.NotifyRechargeReturnSdkPmd_C)
  return false;
#undef DO_
}

void NotifyRechargeReturnSdkPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.NotifyRechargeReturnSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required string platorder = 2;
  if (has_platorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platorder().data(), this->platorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->platorder(), output);
  }

  // required string gameorder = 3;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gameorder(), output);
  }

  // required uint64 roleid = 4;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roleid(), output);
  }

  // required uint32 result = 5;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->result(), output);
  }

  // optional string extdata = 6;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->extdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.NotifyRechargeReturnSdkPmd_C)
}

::google::protobuf::uint8* NotifyRechargeReturnSdkPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.NotifyRechargeReturnSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required string platorder = 2;
  if (has_platorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platorder().data(), this->platorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platorder(), target);
  }

  // required string gameorder = 3;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gameorder(), target);
  }

  // required uint64 roleid = 4;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roleid(), target);
  }

  // required uint32 result = 5;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->result(), target);
  }

  // optional string extdata = 6;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->extdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.NotifyRechargeReturnSdkPmd_C)
  return target;
}

int NotifyRechargeReturnSdkPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required string platorder = 2;
    if (has_platorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platorder());
    }

    // required string gameorder = 3;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // required uint64 roleid = 4;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

    // required uint32 result = 5;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->result());
    }

    // optional string extdata = 6;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyRechargeReturnSdkPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyRechargeReturnSdkPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyRechargeReturnSdkPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyRechargeReturnSdkPmd_C::MergeFrom(const NotifyRechargeReturnSdkPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_platorder()) {
      set_platorder(from.platorder());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyRechargeReturnSdkPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyRechargeReturnSdkPmd_C::CopyFrom(const NotifyRechargeReturnSdkPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyRechargeReturnSdkPmd_C::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void NotifyRechargeReturnSdkPmd_C::Swap(NotifyRechargeReturnSdkPmd_C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(platorder_, other->platorder_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(roleid_, other->roleid_);
    std::swap(result_, other->result_);
    std::swap(extdata_, other->extdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyRechargeReturnSdkPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyRechargeReturnSdkPmd_C_descriptor_;
  metadata.reflection = NotifyRechargeReturnSdkPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RechargeQueryRequestIOSSdkPmd_C::kDataFieldNumber;
const int RechargeQueryRequestIOSSdkPmd_C::kGameorderFieldNumber;
const int RechargeQueryRequestIOSSdkPmd_C::kRoleidFieldNumber;
const int RechargeQueryRequestIOSSdkPmd_C::kOriginalmoneyFieldNumber;
const int RechargeQueryRequestIOSSdkPmd_C::kOrdermoneyFieldNumber;
const int RechargeQueryRequestIOSSdkPmd_C::kTokenFieldNumber;
const int RechargeQueryRequestIOSSdkPmd_C::kExtdataFieldNumber;
const int RechargeQueryRequestIOSSdkPmd_C::kPayplatidFieldNumber;
#endif  // !_MSC_VER

RechargeQueryRequestIOSSdkPmd_C::RechargeQueryRequestIOSSdkPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RechargeQueryRequestIOSSdkPmd_C)
}

void RechargeQueryRequestIOSSdkPmd_C::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

RechargeQueryRequestIOSSdkPmd_C::RechargeQueryRequestIOSSdkPmd_C(const RechargeQueryRequestIOSSdkPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RechargeQueryRequestIOSSdkPmd_C)
}

void RechargeQueryRequestIOSSdkPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_ = GOOGLE_ULONGLONG(0);
  originalmoney_ = 0;
  ordermoney_ = 0;
  token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payplatid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RechargeQueryRequestIOSSdkPmd_C::~RechargeQueryRequestIOSSdkPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.RechargeQueryRequestIOSSdkPmd_C)
  SharedDtor();
}

void RechargeQueryRequestIOSSdkPmd_C::SharedDtor() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void RechargeQueryRequestIOSSdkPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeQueryRequestIOSSdkPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RechargeQueryRequestIOSSdkPmd_C_descriptor_;
}

const RechargeQueryRequestIOSSdkPmd_C& RechargeQueryRequestIOSSdkPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

RechargeQueryRequestIOSSdkPmd_C* RechargeQueryRequestIOSSdkPmd_C::default_instance_ = NULL;

RechargeQueryRequestIOSSdkPmd_C* RechargeQueryRequestIOSSdkPmd_C::New() const {
  return new RechargeQueryRequestIOSSdkPmd_C;
}

void RechargeQueryRequestIOSSdkPmd_C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RechargeQueryRequestIOSSdkPmd_C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(roleid_, ordermoney_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
    if (has_token()) {
      if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        token_->clear();
      }
    }
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
    payplatid_ = 0u;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RechargeQueryRequestIOSSdkPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RechargeQueryRequestIOSSdkPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gameorder;
        break;
      }

      // required string gameorder = 2;
      case 2: {
        if (tag == 18) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_roleid;
        break;
      }

      // required uint64 roleid = 3;
      case 3: {
        if (tag == 24) {
         parse_roleid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_originalmoney;
        break;
      }

      // required float originalmoney = 4;
      case 4: {
        if (tag == 37) {
         parse_originalmoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &originalmoney_)));
          set_has_originalmoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_ordermoney;
        break;
      }

      // required float ordermoney = 5;
      case 5: {
        if (tag == 45) {
         parse_ordermoney:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ordermoney_)));
          set_has_ordermoney();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_token;
        break;
      }

      // optional string token = 6;
      case 6: {
        if (tag == 50) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_extdata;
        break;
      }

      // optional string extdata = 7;
      case 7: {
        if (tag == 58) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_payplatid;
        break;
      }

      // optional uint32 payplatid = 8;
      case 8: {
        if (tag == 64) {
         parse_payplatid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payplatid_)));
          set_has_payplatid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RechargeQueryRequestIOSSdkPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RechargeQueryRequestIOSSdkPmd_C)
  return false;
#undef DO_
}

void RechargeQueryRequestIOSSdkPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RechargeQueryRequestIOSSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameorder(), output);
  }

  // required uint64 roleid = 3;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roleid(), output);
  }

  // required float originalmoney = 4;
  if (has_originalmoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->originalmoney(), output);
  }

  // required float ordermoney = 5;
  if (has_ordermoney()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->ordermoney(), output);
  }

  // optional string token = 6;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->token(), output);
  }

  // optional string extdata = 7;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->extdata(), output);
  }

  // optional uint32 payplatid = 8;
  if (has_payplatid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->payplatid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RechargeQueryRequestIOSSdkPmd_C)
}

::google::protobuf::uint8* RechargeQueryRequestIOSSdkPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RechargeQueryRequestIOSSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameorder(), target);
  }

  // required uint64 roleid = 3;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roleid(), target);
  }

  // required float originalmoney = 4;
  if (has_originalmoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->originalmoney(), target);
  }

  // required float ordermoney = 5;
  if (has_ordermoney()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->ordermoney(), target);
  }

  // optional string token = 6;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->token(), target);
  }

  // optional string extdata = 7;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->extdata(), target);
  }

  // optional uint32 payplatid = 8;
  if (has_payplatid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->payplatid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RechargeQueryRequestIOSSdkPmd_C)
  return target;
}

int RechargeQueryRequestIOSSdkPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required string gameorder = 2;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // required uint64 roleid = 3;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roleid());
    }

    // required float originalmoney = 4;
    if (has_originalmoney()) {
      total_size += 1 + 4;
    }

    // required float ordermoney = 5;
    if (has_ordermoney()) {
      total_size += 1 + 4;
    }

    // optional string token = 6;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token());
    }

    // optional string extdata = 7;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

    // optional uint32 payplatid = 8;
    if (has_payplatid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->payplatid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeQueryRequestIOSSdkPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RechargeQueryRequestIOSSdkPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RechargeQueryRequestIOSSdkPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RechargeQueryRequestIOSSdkPmd_C::MergeFrom(const RechargeQueryRequestIOSSdkPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_originalmoney()) {
      set_originalmoney(from.originalmoney());
    }
    if (from.has_ordermoney()) {
      set_ordermoney(from.ordermoney());
    }
    if (from.has_token()) {
      set_token(from.token());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
    if (from.has_payplatid()) {
      set_payplatid(from.payplatid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RechargeQueryRequestIOSSdkPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeQueryRequestIOSSdkPmd_C::CopyFrom(const RechargeQueryRequestIOSSdkPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeQueryRequestIOSSdkPmd_C::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void RechargeQueryRequestIOSSdkPmd_C::Swap(RechargeQueryRequestIOSSdkPmd_C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(roleid_, other->roleid_);
    std::swap(originalmoney_, other->originalmoney_);
    std::swap(ordermoney_, other->ordermoney_);
    std::swap(token_, other->token_);
    std::swap(extdata_, other->extdata_);
    std::swap(payplatid_, other->payplatid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RechargeQueryRequestIOSSdkPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RechargeQueryRequestIOSSdkPmd_C_descriptor_;
  metadata.reflection = RechargeQueryRequestIOSSdkPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestQueryPlatPointSdkPmd_C::kDataFieldNumber;
const int RequestQueryPlatPointSdkPmd_C::kGameorderFieldNumber;
#endif  // !_MSC_VER

RequestQueryPlatPointSdkPmd_C::RequestQueryPlatPointSdkPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestQueryPlatPointSdkPmd_C)
}

void RequestQueryPlatPointSdkPmd_C::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

RequestQueryPlatPointSdkPmd_C::RequestQueryPlatPointSdkPmd_C(const RequestQueryPlatPointSdkPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestQueryPlatPointSdkPmd_C)
}

void RequestQueryPlatPointSdkPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestQueryPlatPointSdkPmd_C::~RequestQueryPlatPointSdkPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.RequestQueryPlatPointSdkPmd_C)
  SharedDtor();
}

void RequestQueryPlatPointSdkPmd_C::SharedDtor() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void RequestQueryPlatPointSdkPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestQueryPlatPointSdkPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestQueryPlatPointSdkPmd_C_descriptor_;
}

const RequestQueryPlatPointSdkPmd_C& RequestQueryPlatPointSdkPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

RequestQueryPlatPointSdkPmd_C* RequestQueryPlatPointSdkPmd_C::default_instance_ = NULL;

RequestQueryPlatPointSdkPmd_C* RequestQueryPlatPointSdkPmd_C::New() const {
  return new RequestQueryPlatPointSdkPmd_C;
}

void RequestQueryPlatPointSdkPmd_C::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestQueryPlatPointSdkPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestQueryPlatPointSdkPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gameorder;
        break;
      }

      // optional string gameorder = 2;
      case 2: {
        if (tag == 18) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestQueryPlatPointSdkPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestQueryPlatPointSdkPmd_C)
  return false;
#undef DO_
}

void RequestQueryPlatPointSdkPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestQueryPlatPointSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameorder(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestQueryPlatPointSdkPmd_C)
}

::google::protobuf::uint8* RequestQueryPlatPointSdkPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestQueryPlatPointSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameorder(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestQueryPlatPointSdkPmd_C)
  return target;
}

int RequestQueryPlatPointSdkPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional string gameorder = 2;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestQueryPlatPointSdkPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestQueryPlatPointSdkPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestQueryPlatPointSdkPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestQueryPlatPointSdkPmd_C::MergeFrom(const RequestQueryPlatPointSdkPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestQueryPlatPointSdkPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestQueryPlatPointSdkPmd_C::CopyFrom(const RequestQueryPlatPointSdkPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestQueryPlatPointSdkPmd_C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestQueryPlatPointSdkPmd_C::Swap(RequestQueryPlatPointSdkPmd_C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestQueryPlatPointSdkPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestQueryPlatPointSdkPmd_C_descriptor_;
  metadata.reflection = RequestQueryPlatPointSdkPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReturnQueryPlatPointSdkPmd_S::kDataFieldNumber;
const int ReturnQueryPlatPointSdkPmd_S::kGameorderFieldNumber;
const int ReturnQueryPlatPointSdkPmd_S::kBalanceFieldNumber;
const int ReturnQueryPlatPointSdkPmd_S::kRetFieldNumber;
const int ReturnQueryPlatPointSdkPmd_S::kRetdescFieldNumber;
const int ReturnQueryPlatPointSdkPmd_S::kMoneyFieldNumber;
#endif  // !_MSC_VER

ReturnQueryPlatPointSdkPmd_S::ReturnQueryPlatPointSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ReturnQueryPlatPointSdkPmd_S)
}

void ReturnQueryPlatPointSdkPmd_S::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

ReturnQueryPlatPointSdkPmd_S::ReturnQueryPlatPointSdkPmd_S(const ReturnQueryPlatPointSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ReturnQueryPlatPointSdkPmd_S)
}

void ReturnQueryPlatPointSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_ = GOOGLE_ULONGLONG(0);
  ret_ = 0u;
  retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReturnQueryPlatPointSdkPmd_S::~ReturnQueryPlatPointSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.ReturnQueryPlatPointSdkPmd_S)
  SharedDtor();
}

void ReturnQueryPlatPointSdkPmd_S::SharedDtor() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void ReturnQueryPlatPointSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReturnQueryPlatPointSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnQueryPlatPointSdkPmd_S_descriptor_;
}

const ReturnQueryPlatPointSdkPmd_S& ReturnQueryPlatPointSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

ReturnQueryPlatPointSdkPmd_S* ReturnQueryPlatPointSdkPmd_S::default_instance_ = NULL;

ReturnQueryPlatPointSdkPmd_S* ReturnQueryPlatPointSdkPmd_S::New() const {
  return new ReturnQueryPlatPointSdkPmd_S;
}

void ReturnQueryPlatPointSdkPmd_S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReturnQueryPlatPointSdkPmd_S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(ret_, money_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
    balance_ = GOOGLE_ULONGLONG(0);
    if (has_retdesc()) {
      if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retdesc_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReturnQueryPlatPointSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ReturnQueryPlatPointSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gameorder;
        break;
      }

      // required string gameorder = 2;
      case 2: {
        if (tag == 18) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_balance;
        break;
      }

      // required uint64 balance = 3;
      case 3: {
        if (tag == 24) {
         parse_balance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &balance_)));
          set_has_balance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ret;
        break;
      }

      // required uint32 ret = 4;
      case 4: {
        if (tag == 32) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_retdesc;
        break;
      }

      // optional string retdesc = 5;
      case 5: {
        if (tag == 42) {
         parse_retdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retdesc().data(), this->retdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_money;
        break;
      }

      // optional float money = 6;
      case 6: {
        if (tag == 53) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ReturnQueryPlatPointSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ReturnQueryPlatPointSdkPmd_S)
  return false;
#undef DO_
}

void ReturnQueryPlatPointSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ReturnQueryPlatPointSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameorder(), output);
  }

  // required uint64 balance = 3;
  if (has_balance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->balance(), output);
  }

  // required uint32 ret = 4;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ret(), output);
  }

  // optional string retdesc = 5;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->retdesc(), output);
  }

  // optional float money = 6;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->money(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ReturnQueryPlatPointSdkPmd_S)
}

::google::protobuf::uint8* ReturnQueryPlatPointSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ReturnQueryPlatPointSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameorder(), target);
  }

  // required uint64 balance = 3;
  if (has_balance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->balance(), target);
  }

  // required uint32 ret = 4;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ret(), target);
  }

  // optional string retdesc = 5;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->retdesc(), target);
  }

  // optional float money = 6;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->money(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ReturnQueryPlatPointSdkPmd_S)
  return target;
}

int ReturnQueryPlatPointSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required string gameorder = 2;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // required uint64 balance = 3;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->balance());
    }

    // required uint32 ret = 4;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

    // optional string retdesc = 5;
    if (has_retdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retdesc());
    }

    // optional float money = 6;
    if (has_money()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReturnQueryPlatPointSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReturnQueryPlatPointSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReturnQueryPlatPointSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReturnQueryPlatPointSdkPmd_S::MergeFrom(const ReturnQueryPlatPointSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_balance()) {
      set_balance(from.balance());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_retdesc()) {
      set_retdesc(from.retdesc());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReturnQueryPlatPointSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnQueryPlatPointSdkPmd_S::CopyFrom(const ReturnQueryPlatPointSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnQueryPlatPointSdkPmd_S::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void ReturnQueryPlatPointSdkPmd_S::Swap(ReturnQueryPlatPointSdkPmd_S* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(balance_, other->balance_);
    std::swap(ret_, other->ret_);
    std::swap(retdesc_, other->retdesc_);
    std::swap(money_, other->money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReturnQueryPlatPointSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReturnQueryPlatPointSdkPmd_S_descriptor_;
  metadata.reflection = ReturnQueryPlatPointSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestRedeemPlatPointSdkPmd_C::kDataFieldNumber;
const int RequestRedeemPlatPointSdkPmd_C::kGameorderFieldNumber;
const int RequestRedeemPlatPointSdkPmd_C::kGoodidFieldNumber;
const int RequestRedeemPlatPointSdkPmd_C::kMoneyFieldNumber;
const int RequestRedeemPlatPointSdkPmd_C::kExtdataFieldNumber;
#endif  // !_MSC_VER

RequestRedeemPlatPointSdkPmd_C::RequestRedeemPlatPointSdkPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestRedeemPlatPointSdkPmd_C)
}

void RequestRedeemPlatPointSdkPmd_C::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

RequestRedeemPlatPointSdkPmd_C::RequestRedeemPlatPointSdkPmd_C(const RequestRedeemPlatPointSdkPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestRedeemPlatPointSdkPmd_C)
}

void RequestRedeemPlatPointSdkPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goodid_ = 0u;
  money_ = 0;
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestRedeemPlatPointSdkPmd_C::~RequestRedeemPlatPointSdkPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.RequestRedeemPlatPointSdkPmd_C)
  SharedDtor();
}

void RequestRedeemPlatPointSdkPmd_C::SharedDtor() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void RequestRedeemPlatPointSdkPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestRedeemPlatPointSdkPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestRedeemPlatPointSdkPmd_C_descriptor_;
}

const RequestRedeemPlatPointSdkPmd_C& RequestRedeemPlatPointSdkPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

RequestRedeemPlatPointSdkPmd_C* RequestRedeemPlatPointSdkPmd_C::default_instance_ = NULL;

RequestRedeemPlatPointSdkPmd_C* RequestRedeemPlatPointSdkPmd_C::New() const {
  return new RequestRedeemPlatPointSdkPmd_C;
}

void RequestRedeemPlatPointSdkPmd_C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RequestRedeemPlatPointSdkPmd_C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(goodid_, money_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestRedeemPlatPointSdkPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestRedeemPlatPointSdkPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gameorder;
        break;
      }

      // optional string gameorder = 2;
      case 2: {
        if (tag == 18) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_goodid;
        break;
      }

      // optional uint32 goodid = 3;
      case 3: {
        if (tag == 24) {
         parse_goodid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodid_)));
          set_has_goodid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_money;
        break;
      }

      // optional float money = 4;
      case 4: {
        if (tag == 37) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_extdata;
        break;
      }

      // optional string extdata = 5;
      case 5: {
        if (tag == 42) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestRedeemPlatPointSdkPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestRedeemPlatPointSdkPmd_C)
  return false;
#undef DO_
}

void RequestRedeemPlatPointSdkPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestRedeemPlatPointSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameorder(), output);
  }

  // optional uint32 goodid = 3;
  if (has_goodid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->goodid(), output);
  }

  // optional float money = 4;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->money(), output);
  }

  // optional string extdata = 5;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestRedeemPlatPointSdkPmd_C)
}

::google::protobuf::uint8* RequestRedeemPlatPointSdkPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestRedeemPlatPointSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameorder(), target);
  }

  // optional uint32 goodid = 3;
  if (has_goodid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->goodid(), target);
  }

  // optional float money = 4;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->money(), target);
  }

  // optional string extdata = 5;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestRedeemPlatPointSdkPmd_C)
  return target;
}

int RequestRedeemPlatPointSdkPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional string gameorder = 2;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // optional uint32 goodid = 3;
    if (has_goodid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodid());
    }

    // optional float money = 4;
    if (has_money()) {
      total_size += 1 + 4;
    }

    // optional string extdata = 5;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestRedeemPlatPointSdkPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestRedeemPlatPointSdkPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestRedeemPlatPointSdkPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestRedeemPlatPointSdkPmd_C::MergeFrom(const RequestRedeemPlatPointSdkPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_goodid()) {
      set_goodid(from.goodid());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestRedeemPlatPointSdkPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestRedeemPlatPointSdkPmd_C::CopyFrom(const RequestRedeemPlatPointSdkPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestRedeemPlatPointSdkPmd_C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestRedeemPlatPointSdkPmd_C::Swap(RequestRedeemPlatPointSdkPmd_C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(goodid_, other->goodid_);
    std::swap(money_, other->money_);
    std::swap(extdata_, other->extdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestRedeemPlatPointSdkPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestRedeemPlatPointSdkPmd_C_descriptor_;
  metadata.reflection = RequestRedeemPlatPointSdkPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReturnRedeemPlatPointSdkPmd_S::kDataFieldNumber;
const int ReturnRedeemPlatPointSdkPmd_S::kGameorderFieldNumber;
const int ReturnRedeemPlatPointSdkPmd_S::kGoodidFieldNumber;
const int ReturnRedeemPlatPointSdkPmd_S::kMoneyFieldNumber;
const int ReturnRedeemPlatPointSdkPmd_S::kBalanceFieldNumber;
const int ReturnRedeemPlatPointSdkPmd_S::kRetFieldNumber;
const int ReturnRedeemPlatPointSdkPmd_S::kRetdescFieldNumber;
#endif  // !_MSC_VER

ReturnRedeemPlatPointSdkPmd_S::ReturnRedeemPlatPointSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ReturnRedeemPlatPointSdkPmd_S)
}

void ReturnRedeemPlatPointSdkPmd_S::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

ReturnRedeemPlatPointSdkPmd_S::ReturnRedeemPlatPointSdkPmd_S(const ReturnRedeemPlatPointSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ReturnRedeemPlatPointSdkPmd_S)
}

void ReturnRedeemPlatPointSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  goodid_ = 0u;
  money_ = 0;
  balance_ = GOOGLE_ULONGLONG(0);
  ret_ = 0u;
  retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReturnRedeemPlatPointSdkPmd_S::~ReturnRedeemPlatPointSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.ReturnRedeemPlatPointSdkPmd_S)
  SharedDtor();
}

void ReturnRedeemPlatPointSdkPmd_S::SharedDtor() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void ReturnRedeemPlatPointSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReturnRedeemPlatPointSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnRedeemPlatPointSdkPmd_S_descriptor_;
}

const ReturnRedeemPlatPointSdkPmd_S& ReturnRedeemPlatPointSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

ReturnRedeemPlatPointSdkPmd_S* ReturnRedeemPlatPointSdkPmd_S::default_instance_ = NULL;

ReturnRedeemPlatPointSdkPmd_S* ReturnRedeemPlatPointSdkPmd_S::New() const {
  return new ReturnRedeemPlatPointSdkPmd_S;
}

void ReturnRedeemPlatPointSdkPmd_S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReturnRedeemPlatPointSdkPmd_S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(goodid_, balance_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
    ret_ = 0u;
    if (has_retdesc()) {
      if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retdesc_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReturnRedeemPlatPointSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ReturnRedeemPlatPointSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gameorder;
        break;
      }

      // required string gameorder = 2;
      case 2: {
        if (tag == 18) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_goodid;
        break;
      }

      // required uint32 goodid = 3;
      case 3: {
        if (tag == 24) {
         parse_goodid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goodid_)));
          set_has_goodid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_money;
        break;
      }

      // required float money = 4;
      case 4: {
        if (tag == 37) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_balance;
        break;
      }

      // required uint64 balance = 5;
      case 5: {
        if (tag == 40) {
         parse_balance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &balance_)));
          set_has_balance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ret;
        break;
      }

      // required uint32 ret = 6;
      case 6: {
        if (tag == 48) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_retdesc;
        break;
      }

      // optional string retdesc = 7;
      case 7: {
        if (tag == 58) {
         parse_retdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retdesc().data(), this->retdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ReturnRedeemPlatPointSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ReturnRedeemPlatPointSdkPmd_S)
  return false;
#undef DO_
}

void ReturnRedeemPlatPointSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ReturnRedeemPlatPointSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameorder(), output);
  }

  // required uint32 goodid = 3;
  if (has_goodid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->goodid(), output);
  }

  // required float money = 4;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->money(), output);
  }

  // required uint64 balance = 5;
  if (has_balance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->balance(), output);
  }

  // required uint32 ret = 6;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ret(), output);
  }

  // optional string retdesc = 7;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->retdesc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ReturnRedeemPlatPointSdkPmd_S)
}

::google::protobuf::uint8* ReturnRedeemPlatPointSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ReturnRedeemPlatPointSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameorder(), target);
  }

  // required uint32 goodid = 3;
  if (has_goodid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->goodid(), target);
  }

  // required float money = 4;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->money(), target);
  }

  // required uint64 balance = 5;
  if (has_balance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->balance(), target);
  }

  // required uint32 ret = 6;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ret(), target);
  }

  // optional string retdesc = 7;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->retdesc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ReturnRedeemPlatPointSdkPmd_S)
  return target;
}

int ReturnRedeemPlatPointSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required string gameorder = 2;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // required uint32 goodid = 3;
    if (has_goodid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goodid());
    }

    // required float money = 4;
    if (has_money()) {
      total_size += 1 + 4;
    }

    // required uint64 balance = 5;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->balance());
    }

    // required uint32 ret = 6;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

    // optional string retdesc = 7;
    if (has_retdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retdesc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReturnRedeemPlatPointSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReturnRedeemPlatPointSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReturnRedeemPlatPointSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReturnRedeemPlatPointSdkPmd_S::MergeFrom(const ReturnRedeemPlatPointSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_goodid()) {
      set_goodid(from.goodid());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_balance()) {
      set_balance(from.balance());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_retdesc()) {
      set_retdesc(from.retdesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReturnRedeemPlatPointSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnRedeemPlatPointSdkPmd_S::CopyFrom(const ReturnRedeemPlatPointSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnRedeemPlatPointSdkPmd_S::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void ReturnRedeemPlatPointSdkPmd_S::Swap(ReturnRedeemPlatPointSdkPmd_S* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(goodid_, other->goodid_);
    std::swap(money_, other->money_);
    std::swap(balance_, other->balance_);
    std::swap(ret_, other->ret_);
    std::swap(retdesc_, other->retdesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReturnRedeemPlatPointSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReturnRedeemPlatPointSdkPmd_S_descriptor_;
  metadata.reflection = ReturnRedeemPlatPointSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestRedeemBackPlatPointSdkPmd_C::kDataFieldNumber;
const int RequestRedeemBackPlatPointSdkPmd_C::kGameorderFieldNumber;
const int RequestRedeemBackPlatPointSdkPmd_C::kPointFieldNumber;
const int RequestRedeemBackPlatPointSdkPmd_C::kMoneyFieldNumber;
const int RequestRedeemBackPlatPointSdkPmd_C::kExtdataFieldNumber;
#endif  // !_MSC_VER

RequestRedeemBackPlatPointSdkPmd_C::RequestRedeemBackPlatPointSdkPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
}

void RequestRedeemBackPlatPointSdkPmd_C::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

RequestRedeemBackPlatPointSdkPmd_C::RequestRedeemBackPlatPointSdkPmd_C(const RequestRedeemBackPlatPointSdkPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
}

void RequestRedeemBackPlatPointSdkPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  point_ = 0u;
  money_ = 0;
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestRedeemBackPlatPointSdkPmd_C::~RequestRedeemBackPlatPointSdkPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
  SharedDtor();
}

void RequestRedeemBackPlatPointSdkPmd_C::SharedDtor() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void RequestRedeemBackPlatPointSdkPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestRedeemBackPlatPointSdkPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestRedeemBackPlatPointSdkPmd_C_descriptor_;
}

const RequestRedeemBackPlatPointSdkPmd_C& RequestRedeemBackPlatPointSdkPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

RequestRedeemBackPlatPointSdkPmd_C* RequestRedeemBackPlatPointSdkPmd_C::default_instance_ = NULL;

RequestRedeemBackPlatPointSdkPmd_C* RequestRedeemBackPlatPointSdkPmd_C::New() const {
  return new RequestRedeemBackPlatPointSdkPmd_C;
}

void RequestRedeemBackPlatPointSdkPmd_C::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RequestRedeemBackPlatPointSdkPmd_C*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(point_, money_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestRedeemBackPlatPointSdkPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gameorder;
        break;
      }

      // optional string gameorder = 2;
      case 2: {
        if (tag == 18) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_point;
        break;
      }

      // optional uint32 point = 3;
      case 3: {
        if (tag == 24) {
         parse_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_)));
          set_has_point();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_money;
        break;
      }

      // optional float money = 4;
      case 4: {
        if (tag == 37) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_extdata;
        break;
      }

      // optional string extdata = 5;
      case 5: {
        if (tag == 42) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
  return false;
#undef DO_
}

void RequestRedeemBackPlatPointSdkPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameorder(), output);
  }

  // optional uint32 point = 3;
  if (has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->point(), output);
  }

  // optional float money = 4;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->money(), output);
  }

  // optional string extdata = 5;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
}

::google::protobuf::uint8* RequestRedeemBackPlatPointSdkPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameorder(), target);
  }

  // optional uint32 point = 3;
  if (has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->point(), target);
  }

  // optional float money = 4;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->money(), target);
  }

  // optional string extdata = 5;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
  return target;
}

int RequestRedeemBackPlatPointSdkPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional string gameorder = 2;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // optional uint32 point = 3;
    if (has_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->point());
    }

    // optional float money = 4;
    if (has_money()) {
      total_size += 1 + 4;
    }

    // optional string extdata = 5;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestRedeemBackPlatPointSdkPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestRedeemBackPlatPointSdkPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestRedeemBackPlatPointSdkPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestRedeemBackPlatPointSdkPmd_C::MergeFrom(const RequestRedeemBackPlatPointSdkPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_point()) {
      set_point(from.point());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestRedeemBackPlatPointSdkPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestRedeemBackPlatPointSdkPmd_C::CopyFrom(const RequestRedeemBackPlatPointSdkPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestRedeemBackPlatPointSdkPmd_C::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestRedeemBackPlatPointSdkPmd_C::Swap(RequestRedeemBackPlatPointSdkPmd_C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(point_, other->point_);
    std::swap(money_, other->money_);
    std::swap(extdata_, other->extdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestRedeemBackPlatPointSdkPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestRedeemBackPlatPointSdkPmd_C_descriptor_;
  metadata.reflection = RequestRedeemBackPlatPointSdkPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReturnRedeemBackPlatPointSdkPmd_S::kDataFieldNumber;
const int ReturnRedeemBackPlatPointSdkPmd_S::kGameorderFieldNumber;
const int ReturnRedeemBackPlatPointSdkPmd_S::kBalanceFieldNumber;
const int ReturnRedeemBackPlatPointSdkPmd_S::kMoneyFieldNumber;
const int ReturnRedeemBackPlatPointSdkPmd_S::kRetFieldNumber;
const int ReturnRedeemBackPlatPointSdkPmd_S::kRetdescFieldNumber;
#endif  // !_MSC_VER

ReturnRedeemBackPlatPointSdkPmd_S::ReturnRedeemBackPlatPointSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
}

void ReturnRedeemBackPlatPointSdkPmd_S::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

ReturnRedeemBackPlatPointSdkPmd_S::ReturnRedeemBackPlatPointSdkPmd_S(const ReturnRedeemBackPlatPointSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
}

void ReturnRedeemBackPlatPointSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_ = GOOGLE_ULONGLONG(0);
  money_ = 0;
  ret_ = 0u;
  retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReturnRedeemBackPlatPointSdkPmd_S::~ReturnRedeemBackPlatPointSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
  SharedDtor();
}

void ReturnRedeemBackPlatPointSdkPmd_S::SharedDtor() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void ReturnRedeemBackPlatPointSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReturnRedeemBackPlatPointSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnRedeemBackPlatPointSdkPmd_S_descriptor_;
}

const ReturnRedeemBackPlatPointSdkPmd_S& ReturnRedeemBackPlatPointSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

ReturnRedeemBackPlatPointSdkPmd_S* ReturnRedeemBackPlatPointSdkPmd_S::default_instance_ = NULL;

ReturnRedeemBackPlatPointSdkPmd_S* ReturnRedeemBackPlatPointSdkPmd_S::New() const {
  return new ReturnRedeemBackPlatPointSdkPmd_S;
}

void ReturnRedeemBackPlatPointSdkPmd_S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReturnRedeemBackPlatPointSdkPmd_S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(balance_, ret_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_gameorder()) {
      if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        gameorder_->clear();
      }
    }
    if (has_retdesc()) {
      if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retdesc_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReturnRedeemBackPlatPointSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gameorder;
        break;
      }

      // required string gameorder = 2;
      case 2: {
        if (tag == 18) {
         parse_gameorder:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameorder()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameorder().data(), this->gameorder().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "gameorder");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_balance;
        break;
      }

      // required uint64 balance = 3;
      case 3: {
        if (tag == 24) {
         parse_balance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &balance_)));
          set_has_balance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_money;
        break;
      }

      // optional float money = 4;
      case 4: {
        if (tag == 37) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ret;
        break;
      }

      // required uint32 ret = 5;
      case 5: {
        if (tag == 40) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_retdesc;
        break;
      }

      // optional string retdesc = 6;
      case 6: {
        if (tag == 50) {
         parse_retdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retdesc().data(), this->retdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
  return false;
#undef DO_
}

void ReturnRedeemBackPlatPointSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameorder(), output);
  }

  // required uint64 balance = 3;
  if (has_balance()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->balance(), output);
  }

  // optional float money = 4;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->money(), output);
  }

  // required uint32 ret = 5;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ret(), output);
  }

  // optional string retdesc = 6;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->retdesc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
}

::google::protobuf::uint8* ReturnRedeemBackPlatPointSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required string gameorder = 2;
  if (has_gameorder()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameorder().data(), this->gameorder().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "gameorder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameorder(), target);
  }

  // required uint64 balance = 3;
  if (has_balance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->balance(), target);
  }

  // optional float money = 4;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->money(), target);
  }

  // required uint32 ret = 5;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ret(), target);
  }

  // optional string retdesc = 6;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->retdesc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
  return target;
}

int ReturnRedeemBackPlatPointSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required string gameorder = 2;
    if (has_gameorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameorder());
    }

    // required uint64 balance = 3;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->balance());
    }

    // optional float money = 4;
    if (has_money()) {
      total_size += 1 + 4;
    }

    // required uint32 ret = 5;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

    // optional string retdesc = 6;
    if (has_retdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retdesc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReturnRedeemBackPlatPointSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReturnRedeemBackPlatPointSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReturnRedeemBackPlatPointSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReturnRedeemBackPlatPointSdkPmd_S::MergeFrom(const ReturnRedeemBackPlatPointSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_gameorder()) {
      set_gameorder(from.gameorder());
    }
    if (from.has_balance()) {
      set_balance(from.balance());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_retdesc()) {
      set_retdesc(from.retdesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReturnRedeemBackPlatPointSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnRedeemBackPlatPointSdkPmd_S::CopyFrom(const ReturnRedeemBackPlatPointSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnRedeemBackPlatPointSdkPmd_S::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000017) != 0x00000017) return false;

  return true;
}

void ReturnRedeemBackPlatPointSdkPmd_S::Swap(ReturnRedeemBackPlatPointSdkPmd_S* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(gameorder_, other->gameorder_);
    std::swap(balance_, other->balance_);
    std::swap(money_, other->money_);
    std::swap(ret_, other->ret_);
    std::swap(retdesc_, other->retdesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReturnRedeemBackPlatPointSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReturnRedeemBackPlatPointSdkPmd_S_descriptor_;
  metadata.reflection = ReturnRedeemBackPlatPointSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReturnErrorCodeSdkPmd_S::kDataFieldNumber;
const int ReturnErrorCodeSdkPmd_S::kRetFieldNumber;
const int ReturnErrorCodeSdkPmd_S::kRetdescFieldNumber;
#endif  // !_MSC_VER

ReturnErrorCodeSdkPmd_S::ReturnErrorCodeSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ReturnErrorCodeSdkPmd_S)
}

void ReturnErrorCodeSdkPmd_S::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

ReturnErrorCodeSdkPmd_S::ReturnErrorCodeSdkPmd_S(const ReturnErrorCodeSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ReturnErrorCodeSdkPmd_S)
}

void ReturnErrorCodeSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  ret_ = 0u;
  retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReturnErrorCodeSdkPmd_S::~ReturnErrorCodeSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.ReturnErrorCodeSdkPmd_S)
  SharedDtor();
}

void ReturnErrorCodeSdkPmd_S::SharedDtor() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void ReturnErrorCodeSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReturnErrorCodeSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnErrorCodeSdkPmd_S_descriptor_;
}

const ReturnErrorCodeSdkPmd_S& ReturnErrorCodeSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

ReturnErrorCodeSdkPmd_S* ReturnErrorCodeSdkPmd_S::default_instance_ = NULL;

ReturnErrorCodeSdkPmd_S* ReturnErrorCodeSdkPmd_S::New() const {
  return new ReturnErrorCodeSdkPmd_S;
}

void ReturnErrorCodeSdkPmd_S::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    ret_ = 0u;
    if (has_retdesc()) {
      if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retdesc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReturnErrorCodeSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ReturnErrorCodeSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // optional uint32 ret = 2;
      case 2: {
        if (tag == 16) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_retdesc;
        break;
      }

      // optional string retdesc = 3;
      case 3: {
        if (tag == 26) {
         parse_retdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retdesc().data(), this->retdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ReturnErrorCodeSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ReturnErrorCodeSdkPmd_S)
  return false;
#undef DO_
}

void ReturnErrorCodeSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ReturnErrorCodeSdkPmd_S)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional uint32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ret(), output);
  }

  // optional string retdesc = 3;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->retdesc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ReturnErrorCodeSdkPmd_S)
}

::google::protobuf::uint8* ReturnErrorCodeSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ReturnErrorCodeSdkPmd_S)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional uint32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ret(), target);
  }

  // optional string retdesc = 3;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->retdesc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ReturnErrorCodeSdkPmd_S)
  return target;
}

int ReturnErrorCodeSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional uint32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

    // optional string retdesc = 3;
    if (has_retdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retdesc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReturnErrorCodeSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReturnErrorCodeSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReturnErrorCodeSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReturnErrorCodeSdkPmd_S::MergeFrom(const ReturnErrorCodeSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_retdesc()) {
      set_retdesc(from.retdesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReturnErrorCodeSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnErrorCodeSdkPmd_S::CopyFrom(const ReturnErrorCodeSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnErrorCodeSdkPmd_S::IsInitialized() const {

  return true;
}

void ReturnErrorCodeSdkPmd_S::Swap(ReturnErrorCodeSdkPmd_S* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(ret_, other->ret_);
    std::swap(retdesc_, other->retdesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReturnErrorCodeSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReturnErrorCodeSdkPmd_S_descriptor_;
  metadata.reflection = ReturnErrorCodeSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestBindAccountSdkPmd_CS::kDataFieldNumber;
const int RequestBindAccountSdkPmd_CS::kRetFieldNumber;
#endif  // !_MSC_VER

RequestBindAccountSdkPmd_CS::RequestBindAccountSdkPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestBindAccountSdkPmd_CS)
}

void RequestBindAccountSdkPmd_CS::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

RequestBindAccountSdkPmd_CS::RequestBindAccountSdkPmd_CS(const RequestBindAccountSdkPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestBindAccountSdkPmd_CS)
}

void RequestBindAccountSdkPmd_CS::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ret_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestBindAccountSdkPmd_CS::~RequestBindAccountSdkPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.RequestBindAccountSdkPmd_CS)
  SharedDtor();
}

void RequestBindAccountSdkPmd_CS::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void RequestBindAccountSdkPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestBindAccountSdkPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestBindAccountSdkPmd_CS_descriptor_;
}

const RequestBindAccountSdkPmd_CS& RequestBindAccountSdkPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

RequestBindAccountSdkPmd_CS* RequestBindAccountSdkPmd_CS::default_instance_ = NULL;

RequestBindAccountSdkPmd_CS* RequestBindAccountSdkPmd_CS::New() const {
  return new RequestBindAccountSdkPmd_CS;
}

void RequestBindAccountSdkPmd_CS::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    ret_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestBindAccountSdkPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestBindAccountSdkPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // optional uint32 ret = 2;
      case 2: {
        if (tag == 16) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestBindAccountSdkPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestBindAccountSdkPmd_CS)
  return false;
#undef DO_
}

void RequestBindAccountSdkPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestBindAccountSdkPmd_CS)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional uint32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestBindAccountSdkPmd_CS)
}

::google::protobuf::uint8* RequestBindAccountSdkPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestBindAccountSdkPmd_CS)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional uint32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestBindAccountSdkPmd_CS)
  return target;
}

int RequestBindAccountSdkPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional uint32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestBindAccountSdkPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestBindAccountSdkPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestBindAccountSdkPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestBindAccountSdkPmd_CS::MergeFrom(const RequestBindAccountSdkPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestBindAccountSdkPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestBindAccountSdkPmd_CS::CopyFrom(const RequestBindAccountSdkPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestBindAccountSdkPmd_CS::IsInitialized() const {

  return true;
}

void RequestBindAccountSdkPmd_CS::Swap(RequestBindAccountSdkPmd_CS* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestBindAccountSdkPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestBindAccountSdkPmd_CS_descriptor_;
  metadata.reflection = RequestBindAccountSdkPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PlatAccountInfo::kPlatidFieldNumber;
const int PlatAccountInfo::kPlataccountFieldNumber;
const int PlatAccountInfo::kPlatnameFieldNumber;
#endif  // !_MSC_VER

PlatAccountInfo::PlatAccountInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.PlatAccountInfo)
}

void PlatAccountInfo::InitAsDefaultInstance() {
}

PlatAccountInfo::PlatAccountInfo(const PlatAccountInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.PlatAccountInfo)
}

void PlatAccountInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  platid_ = 0u;
  plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlatAccountInfo::~PlatAccountInfo() {
  // @@protoc_insertion_point(destructor:Pmd.PlatAccountInfo)
  SharedDtor();
}

void PlatAccountInfo::SharedDtor() {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete plataccount_;
  }
  if (platname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platname_;
  }
  if (this != default_instance_) {
  }
}

void PlatAccountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatAccountInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlatAccountInfo_descriptor_;
}

const PlatAccountInfo& PlatAccountInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

PlatAccountInfo* PlatAccountInfo::default_instance_ = NULL;

PlatAccountInfo* PlatAccountInfo::New() const {
  return new PlatAccountInfo;
}

void PlatAccountInfo::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    platid_ = 0u;
    if (has_plataccount()) {
      if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        plataccount_->clear();
      }
    }
    if (has_platname()) {
      if (platname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        platname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlatAccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.PlatAccountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 platid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platid_)));
          set_has_platid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_plataccount;
        break;
      }

      // optional string plataccount = 2;
      case 2: {
        if (tag == 18) {
         parse_plataccount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plataccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->plataccount().data(), this->plataccount().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plataccount");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_platname;
        break;
      }

      // optional string platname = 3;
      case 3: {
        if (tag == 26) {
         parse_platname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->platname().data(), this->platname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "platname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.PlatAccountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.PlatAccountInfo)
  return false;
#undef DO_
}

void PlatAccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.PlatAccountInfo)
  // optional uint32 platid = 1;
  if (has_platid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->platid(), output);
  }

  // optional string plataccount = 2;
  if (has_plataccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plataccount().data(), this->plataccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plataccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plataccount(), output);
  }

  // optional string platname = 3;
  if (has_platname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platname().data(), this->platname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->platname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.PlatAccountInfo)
}

::google::protobuf::uint8* PlatAccountInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.PlatAccountInfo)
  // optional uint32 platid = 1;
  if (has_platid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->platid(), target);
  }

  // optional string plataccount = 2;
  if (has_plataccount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plataccount().data(), this->plataccount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plataccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plataccount(), target);
  }

  // optional string platname = 3;
  if (has_platname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->platname().data(), this->platname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "platname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->platname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.PlatAccountInfo)
  return target;
}

int PlatAccountInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 platid = 1;
    if (has_platid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->platid());
    }

    // optional string plataccount = 2;
    if (has_plataccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->plataccount());
    }

    // optional string platname = 3;
    if (has_platname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->platname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatAccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlatAccountInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlatAccountInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlatAccountInfo::MergeFrom(const PlatAccountInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_platid()) {
      set_platid(from.platid());
    }
    if (from.has_plataccount()) {
      set_plataccount(from.plataccount());
    }
    if (from.has_platname()) {
      set_platname(from.platname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlatAccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatAccountInfo::CopyFrom(const PlatAccountInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatAccountInfo::IsInitialized() const {

  return true;
}

void PlatAccountInfo::Swap(PlatAccountInfo* other) {
  if (other != this) {
    std::swap(platid_, other->platid_);
    std::swap(plataccount_, other->plataccount_);
    std::swap(platname_, other->platname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlatAccountInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlatAccountInfo_descriptor_;
  metadata.reflection = PlatAccountInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestBindPlatInfoSdkPmd_CS::kDataFieldNumber;
const int RequestBindPlatInfoSdkPmd_CS::kBindplatFieldNumber;
const int RequestBindPlatInfoSdkPmd_CS::kRetFieldNumber;
#endif  // !_MSC_VER

RequestBindPlatInfoSdkPmd_CS::RequestBindPlatInfoSdkPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestBindPlatInfoSdkPmd_CS)
}

void RequestBindPlatInfoSdkPmd_CS::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

RequestBindPlatInfoSdkPmd_CS::RequestBindPlatInfoSdkPmd_CS(const RequestBindPlatInfoSdkPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestBindPlatInfoSdkPmd_CS)
}

void RequestBindPlatInfoSdkPmd_CS::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ret_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestBindPlatInfoSdkPmd_CS::~RequestBindPlatInfoSdkPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.RequestBindPlatInfoSdkPmd_CS)
  SharedDtor();
}

void RequestBindPlatInfoSdkPmd_CS::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void RequestBindPlatInfoSdkPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestBindPlatInfoSdkPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestBindPlatInfoSdkPmd_CS_descriptor_;
}

const RequestBindPlatInfoSdkPmd_CS& RequestBindPlatInfoSdkPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

RequestBindPlatInfoSdkPmd_CS* RequestBindPlatInfoSdkPmd_CS::default_instance_ = NULL;

RequestBindPlatInfoSdkPmd_CS* RequestBindPlatInfoSdkPmd_CS::New() const {
  return new RequestBindPlatInfoSdkPmd_CS;
}

void RequestBindPlatInfoSdkPmd_CS::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    ret_ = 0u;
  }
  bindplat_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestBindPlatInfoSdkPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestBindPlatInfoSdkPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bindplat;
        break;
      }

      // repeated .Pmd.PlatAccountInfo bindplat = 2;
      case 2: {
        if (tag == 18) {
         parse_bindplat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bindplat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bindplat;
        if (input->ExpectTag(24)) goto parse_ret;
        break;
      }

      // optional uint32 ret = 3;
      case 3: {
        if (tag == 24) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestBindPlatInfoSdkPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestBindPlatInfoSdkPmd_CS)
  return false;
#undef DO_
}

void RequestBindPlatInfoSdkPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestBindPlatInfoSdkPmd_CS)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // repeated .Pmd.PlatAccountInfo bindplat = 2;
  for (int i = 0; i < this->bindplat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bindplat(i), output);
  }

  // optional uint32 ret = 3;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestBindPlatInfoSdkPmd_CS)
}

::google::protobuf::uint8* RequestBindPlatInfoSdkPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestBindPlatInfoSdkPmd_CS)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // repeated .Pmd.PlatAccountInfo bindplat = 2;
  for (int i = 0; i < this->bindplat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bindplat(i), target);
  }

  // optional uint32 ret = 3;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestBindPlatInfoSdkPmd_CS)
  return target;
}

int RequestBindPlatInfoSdkPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional uint32 ret = 3;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

  }
  // repeated .Pmd.PlatAccountInfo bindplat = 2;
  total_size += 1 * this->bindplat_size();
  for (int i = 0; i < this->bindplat_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bindplat(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestBindPlatInfoSdkPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestBindPlatInfoSdkPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestBindPlatInfoSdkPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestBindPlatInfoSdkPmd_CS::MergeFrom(const RequestBindPlatInfoSdkPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  bindplat_.MergeFrom(from.bindplat_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestBindPlatInfoSdkPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestBindPlatInfoSdkPmd_CS::CopyFrom(const RequestBindPlatInfoSdkPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestBindPlatInfoSdkPmd_CS::IsInitialized() const {

  return true;
}

void RequestBindPlatInfoSdkPmd_CS::Swap(RequestBindPlatInfoSdkPmd_CS* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    bindplat_.Swap(&other->bindplat_);
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestBindPlatInfoSdkPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestBindPlatInfoSdkPmd_CS_descriptor_;
  metadata.reflection = RequestBindPlatInfoSdkPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestAccidByPlatinfoSdkPmd_CS::kDataFieldNumber;
const int RequestAccidByPlatinfoSdkPmd_CS::kReqdataFieldNumber;
const int RequestAccidByPlatinfoSdkPmd_CS::kRetFieldNumber;
#endif  // !_MSC_VER

RequestAccidByPlatinfoSdkPmd_CS::RequestAccidByPlatinfoSdkPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
}

void RequestAccidByPlatinfoSdkPmd_CS::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

RequestAccidByPlatinfoSdkPmd_CS::RequestAccidByPlatinfoSdkPmd_CS(const RequestAccidByPlatinfoSdkPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
}

void RequestAccidByPlatinfoSdkPmd_CS::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ret_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestAccidByPlatinfoSdkPmd_CS::~RequestAccidByPlatinfoSdkPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
  SharedDtor();
}

void RequestAccidByPlatinfoSdkPmd_CS::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void RequestAccidByPlatinfoSdkPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestAccidByPlatinfoSdkPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestAccidByPlatinfoSdkPmd_CS_descriptor_;
}

const RequestAccidByPlatinfoSdkPmd_CS& RequestAccidByPlatinfoSdkPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

RequestAccidByPlatinfoSdkPmd_CS* RequestAccidByPlatinfoSdkPmd_CS::default_instance_ = NULL;

RequestAccidByPlatinfoSdkPmd_CS* RequestAccidByPlatinfoSdkPmd_CS::New() const {
  return new RequestAccidByPlatinfoSdkPmd_CS;
}

void RequestAccidByPlatinfoSdkPmd_CS::Clear() {
  if (_has_bits_[0 / 32] & 5) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    ret_ = 0u;
  }
  reqdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestAccidByPlatinfoSdkPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reqdata;
        break;
      }

      // repeated .Pmd.PlatBaseData reqdata = 2;
      case 2: {
        if (tag == 18) {
         parse_reqdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reqdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_reqdata;
        if (input->ExpectTag(24)) goto parse_ret;
        break;
      }

      // optional uint32 ret = 3;
      case 3: {
        if (tag == 24) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
  return false;
#undef DO_
}

void RequestAccidByPlatinfoSdkPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // repeated .Pmd.PlatBaseData reqdata = 2;
  for (int i = 0; i < this->reqdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reqdata(i), output);
  }

  // optional uint32 ret = 3;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
}

::google::protobuf::uint8* RequestAccidByPlatinfoSdkPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // repeated .Pmd.PlatBaseData reqdata = 2;
  for (int i = 0; i < this->reqdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reqdata(i), target);
  }

  // optional uint32 ret = 3;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
  return target;
}

int RequestAccidByPlatinfoSdkPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional uint32 ret = 3;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

  }
  // repeated .Pmd.PlatBaseData reqdata = 2;
  total_size += 1 * this->reqdata_size();
  for (int i = 0; i < this->reqdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reqdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestAccidByPlatinfoSdkPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestAccidByPlatinfoSdkPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestAccidByPlatinfoSdkPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestAccidByPlatinfoSdkPmd_CS::MergeFrom(const RequestAccidByPlatinfoSdkPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  reqdata_.MergeFrom(from.reqdata_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestAccidByPlatinfoSdkPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestAccidByPlatinfoSdkPmd_CS::CopyFrom(const RequestAccidByPlatinfoSdkPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestAccidByPlatinfoSdkPmd_CS::IsInitialized() const {

  return true;
}

void RequestAccidByPlatinfoSdkPmd_CS::Swap(RequestAccidByPlatinfoSdkPmd_CS* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    reqdata_.Swap(&other->reqdata_);
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestAccidByPlatinfoSdkPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestAccidByPlatinfoSdkPmd_CS_descriptor_;
  metadata.reflection = RequestAccidByPlatinfoSdkPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestUnbindAccountSdkPmd_CS::kDataFieldNumber;
const int RequestUnbindAccountSdkPmd_CS::kRetFieldNumber;
#endif  // !_MSC_VER

RequestUnbindAccountSdkPmd_CS::RequestUnbindAccountSdkPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestUnbindAccountSdkPmd_CS)
}

void RequestUnbindAccountSdkPmd_CS::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

RequestUnbindAccountSdkPmd_CS::RequestUnbindAccountSdkPmd_CS(const RequestUnbindAccountSdkPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestUnbindAccountSdkPmd_CS)
}

void RequestUnbindAccountSdkPmd_CS::SharedCtor() {
  _cached_size_ = 0;
  data_ = NULL;
  ret_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestUnbindAccountSdkPmd_CS::~RequestUnbindAccountSdkPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.RequestUnbindAccountSdkPmd_CS)
  SharedDtor();
}

void RequestUnbindAccountSdkPmd_CS::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void RequestUnbindAccountSdkPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestUnbindAccountSdkPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestUnbindAccountSdkPmd_CS_descriptor_;
}

const RequestUnbindAccountSdkPmd_CS& RequestUnbindAccountSdkPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

RequestUnbindAccountSdkPmd_CS* RequestUnbindAccountSdkPmd_CS::default_instance_ = NULL;

RequestUnbindAccountSdkPmd_CS* RequestUnbindAccountSdkPmd_CS::New() const {
  return new RequestUnbindAccountSdkPmd_CS;
}

void RequestUnbindAccountSdkPmd_CS::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    ret_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestUnbindAccountSdkPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestUnbindAccountSdkPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }

      // optional uint32 ret = 2;
      case 2: {
        if (tag == 16) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestUnbindAccountSdkPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestUnbindAccountSdkPmd_CS)
  return false;
#undef DO_
}

void RequestUnbindAccountSdkPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestUnbindAccountSdkPmd_CS)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional uint32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ret(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestUnbindAccountSdkPmd_CS)
}

::google::protobuf::uint8* RequestUnbindAccountSdkPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestUnbindAccountSdkPmd_CS)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional uint32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ret(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestUnbindAccountSdkPmd_CS)
  return target;
}

int RequestUnbindAccountSdkPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional uint32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestUnbindAccountSdkPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestUnbindAccountSdkPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestUnbindAccountSdkPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestUnbindAccountSdkPmd_CS::MergeFrom(const RequestUnbindAccountSdkPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestUnbindAccountSdkPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestUnbindAccountSdkPmd_CS::CopyFrom(const RequestUnbindAccountSdkPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestUnbindAccountSdkPmd_CS::IsInitialized() const {

  return true;
}

void RequestUnbindAccountSdkPmd_CS::Swap(RequestUnbindAccountSdkPmd_CS* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestUnbindAccountSdkPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestUnbindAccountSdkPmd_CS_descriptor_;
  metadata.reflection = RequestUnbindAccountSdkPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyTapJoyRequestSdkPmd_S::kDataFieldNumber;
const int NotifyTapJoyRequestSdkPmd_S::kPointFieldNumber;
const int NotifyTapJoyRequestSdkPmd_S::kPlacementFieldNumber;
const int NotifyTapJoyRequestSdkPmd_S::kExtdataFieldNumber;
#endif  // !_MSC_VER

NotifyTapJoyRequestSdkPmd_S::NotifyTapJoyRequestSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.NotifyTapJoyRequestSdkPmd_S)
}

void NotifyTapJoyRequestSdkPmd_S::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

NotifyTapJoyRequestSdkPmd_S::NotifyTapJoyRequestSdkPmd_S(const NotifyTapJoyRequestSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.NotifyTapJoyRequestSdkPmd_S)
}

void NotifyTapJoyRequestSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  point_ = 0;
  placement_ = 0u;
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyTapJoyRequestSdkPmd_S::~NotifyTapJoyRequestSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.NotifyTapJoyRequestSdkPmd_S)
  SharedDtor();
}

void NotifyTapJoyRequestSdkPmd_S::SharedDtor() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void NotifyTapJoyRequestSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyTapJoyRequestSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyTapJoyRequestSdkPmd_S_descriptor_;
}

const NotifyTapJoyRequestSdkPmd_S& NotifyTapJoyRequestSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

NotifyTapJoyRequestSdkPmd_S* NotifyTapJoyRequestSdkPmd_S::default_instance_ = NULL;

NotifyTapJoyRequestSdkPmd_S* NotifyTapJoyRequestSdkPmd_S::New() const {
  return new NotifyTapJoyRequestSdkPmd_S;
}

void NotifyTapJoyRequestSdkPmd_S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<NotifyTapJoyRequestSdkPmd_S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(point_, placement_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyTapJoyRequestSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.NotifyTapJoyRequestSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_point;
        break;
      }

      // optional int32 point = 2;
      case 2: {
        if (tag == 16) {
         parse_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
          set_has_point();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_placement;
        break;
      }

      // optional uint32 placement = 3;
      case 3: {
        if (tag == 24) {
         parse_placement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &placement_)));
          set_has_placement();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_extdata;
        break;
      }

      // optional string extdata = 4;
      case 4: {
        if (tag == 34) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.NotifyTapJoyRequestSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.NotifyTapJoyRequestSdkPmd_S)
  return false;
#undef DO_
}

void NotifyTapJoyRequestSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.NotifyTapJoyRequestSdkPmd_S)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional int32 point = 2;
  if (has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->point(), output);
  }

  // optional uint32 placement = 3;
  if (has_placement()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->placement(), output);
  }

  // optional string extdata = 4;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->extdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.NotifyTapJoyRequestSdkPmd_S)
}

::google::protobuf::uint8* NotifyTapJoyRequestSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.NotifyTapJoyRequestSdkPmd_S)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional int32 point = 2;
  if (has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->point(), target);
  }

  // optional uint32 placement = 3;
  if (has_placement()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->placement(), target);
  }

  // optional string extdata = 4;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->extdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.NotifyTapJoyRequestSdkPmd_S)
  return target;
}

int NotifyTapJoyRequestSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional int32 point = 2;
    if (has_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->point());
    }

    // optional uint32 placement = 3;
    if (has_placement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->placement());
    }

    // optional string extdata = 4;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyTapJoyRequestSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyTapJoyRequestSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyTapJoyRequestSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyTapJoyRequestSdkPmd_S::MergeFrom(const NotifyTapJoyRequestSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_point()) {
      set_point(from.point());
    }
    if (from.has_placement()) {
      set_placement(from.placement());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyTapJoyRequestSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyTapJoyRequestSdkPmd_S::CopyFrom(const NotifyTapJoyRequestSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyTapJoyRequestSdkPmd_S::IsInitialized() const {

  return true;
}

void NotifyTapJoyRequestSdkPmd_S::Swap(NotifyTapJoyRequestSdkPmd_S* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(point_, other->point_);
    std::swap(placement_, other->placement_);
    std::swap(extdata_, other->extdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyTapJoyRequestSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyTapJoyRequestSdkPmd_S_descriptor_;
  metadata.reflection = NotifyTapJoyRequestSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PushMsgRequestSdkPmd_C::kDataFieldNumber;
const int PushMsgRequestSdkPmd_C::kMsgidFieldNumber;
const int PushMsgRequestSdkPmd_C::kTokensFieldNumber;
const int PushMsgRequestSdkPmd_C::kTitleFieldNumber;
const int PushMsgRequestSdkPmd_C::kMessageFieldNumber;
const int PushMsgRequestSdkPmd_C::kExtdataFieldNumber;
#endif  // !_MSC_VER

PushMsgRequestSdkPmd_C::PushMsgRequestSdkPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.PushMsgRequestSdkPmd_C)
}

void PushMsgRequestSdkPmd_C::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

PushMsgRequestSdkPmd_C::PushMsgRequestSdkPmd_C(const PushMsgRequestSdkPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.PushMsgRequestSdkPmd_C)
}

void PushMsgRequestSdkPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  msgid_ = 0u;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PushMsgRequestSdkPmd_C::~PushMsgRequestSdkPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.PushMsgRequestSdkPmd_C)
  SharedDtor();
}

void PushMsgRequestSdkPmd_C::SharedDtor() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void PushMsgRequestSdkPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushMsgRequestSdkPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushMsgRequestSdkPmd_C_descriptor_;
}

const PushMsgRequestSdkPmd_C& PushMsgRequestSdkPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

PushMsgRequestSdkPmd_C* PushMsgRequestSdkPmd_C::default_instance_ = NULL;

PushMsgRequestSdkPmd_C* PushMsgRequestSdkPmd_C::New() const {
  return new PushMsgRequestSdkPmd_C;
}

void PushMsgRequestSdkPmd_C::Clear() {
  if (_has_bits_[0 / 32] & 59) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    msgid_ = 0u;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        message_->clear();
      }
    }
    if (has_extdata()) {
      if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extdata_->clear();
      }
    }
  }
  tokens_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PushMsgRequestSdkPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.PushMsgRequestSdkPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgid;
        break;
      }

      // optional uint32 msgid = 2;
      case 2: {
        if (tag == 16) {
         parse_msgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
          set_has_msgid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tokens;
        break;
      }

      // repeated string tokens = 3;
      case 3: {
        if (tag == 26) {
         parse_tokens:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tokens()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tokens(this->tokens_size() - 1).data(),
            this->tokens(this->tokens_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tokens");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tokens;
        if (input->ExpectTag(34)) goto parse_title;
        break;
      }

      // optional string title = 4;
      case 4: {
        if (tag == 34) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_message;
        break;
      }

      // optional string message = 5;
      case 5: {
        if (tag == 42) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_extdata;
        break;
      }

      // optional string extdata = 6;
      case 6: {
        if (tag == 50) {
         parse_extdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extdata().data(), this->extdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.PushMsgRequestSdkPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.PushMsgRequestSdkPmd_C)
  return false;
#undef DO_
}

void PushMsgRequestSdkPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.PushMsgRequestSdkPmd_C)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional uint32 msgid = 2;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // repeated string tokens = 3;
  for (int i = 0; i < this->tokens_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->tokens(i).data(), this->tokens(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "tokens");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->tokens(i), output);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->title(), output);
  }

  // optional string message = 5;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->message(), output);
  }

  // optional string extdata = 6;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->extdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.PushMsgRequestSdkPmd_C)
}

::google::protobuf::uint8* PushMsgRequestSdkPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.PushMsgRequestSdkPmd_C)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional uint32 msgid = 2;
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // repeated string tokens = 3;
  for (int i = 0; i < this->tokens_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tokens(i).data(), this->tokens(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tokens");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->tokens(i), target);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->title(), target);
  }

  // optional string message = 5;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->message(), target);
  }

  // optional string extdata = 6;
  if (has_extdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extdata().data(), this->extdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->extdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.PushMsgRequestSdkPmd_C)
  return target;
}

int PushMsgRequestSdkPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional uint32 msgid = 2;
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgid());
    }

    // optional string title = 4;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string message = 5;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional string extdata = 6;
    if (has_extdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extdata());
    }

  }
  // repeated string tokens = 3;
  total_size += 1 * this->tokens_size();
  for (int i = 0; i < this->tokens_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tokens(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushMsgRequestSdkPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PushMsgRequestSdkPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PushMsgRequestSdkPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PushMsgRequestSdkPmd_C::MergeFrom(const PushMsgRequestSdkPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  tokens_.MergeFrom(from.tokens_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_extdata()) {
      set_extdata(from.extdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PushMsgRequestSdkPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushMsgRequestSdkPmd_C::CopyFrom(const PushMsgRequestSdkPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushMsgRequestSdkPmd_C::IsInitialized() const {

  return true;
}

void PushMsgRequestSdkPmd_C::Swap(PushMsgRequestSdkPmd_C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(msgid_, other->msgid_);
    tokens_.Swap(&other->tokens_);
    std::swap(title_, other->title_);
    std::swap(message_, other->message_);
    std::swap(extdata_, other->extdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PushMsgRequestSdkPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushMsgRequestSdkPmd_C_descriptor_;
  metadata.reflection = PushMsgRequestSdkPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PushMsgReturnSdkPmd_S::kDataFieldNumber;
const int PushMsgReturnSdkPmd_S::kMsgidFieldNumber;
const int PushMsgReturnSdkPmd_S::kRetFieldNumber;
const int PushMsgReturnSdkPmd_S::kRetdescFieldNumber;
#endif  // !_MSC_VER

PushMsgReturnSdkPmd_S::PushMsgReturnSdkPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.PushMsgReturnSdkPmd_S)
}

void PushMsgReturnSdkPmd_S::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

PushMsgReturnSdkPmd_S::PushMsgReturnSdkPmd_S(const PushMsgReturnSdkPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.PushMsgReturnSdkPmd_S)
}

void PushMsgReturnSdkPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  msgid_ = 0u;
  ret_ = 0u;
  retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PushMsgReturnSdkPmd_S::~PushMsgReturnSdkPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.PushMsgReturnSdkPmd_S)
  SharedDtor();
}

void PushMsgReturnSdkPmd_S::SharedDtor() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void PushMsgReturnSdkPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushMsgReturnSdkPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PushMsgReturnSdkPmd_S_descriptor_;
}

const PushMsgReturnSdkPmd_S& PushMsgReturnSdkPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

PushMsgReturnSdkPmd_S* PushMsgReturnSdkPmd_S::default_instance_ = NULL;

PushMsgReturnSdkPmd_S* PushMsgReturnSdkPmd_S::New() const {
  return new PushMsgReturnSdkPmd_S;
}

void PushMsgReturnSdkPmd_S::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PushMsgReturnSdkPmd_S*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(msgid_, ret_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_retdesc()) {
      if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retdesc_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PushMsgReturnSdkPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.PushMsgReturnSdkPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msgid;
        break;
      }

      // optional uint32 msgid = 2;
      case 2: {
        if (tag == 16) {
         parse_msgid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
          set_has_msgid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ret;
        break;
      }

      // optional uint32 ret = 3;
      case 3: {
        if (tag == 24) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_retdesc;
        break;
      }

      // optional string retdesc = 4;
      case 4: {
        if (tag == 34) {
         parse_retdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retdesc().data(), this->retdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.PushMsgReturnSdkPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.PushMsgReturnSdkPmd_S)
  return false;
#undef DO_
}

void PushMsgReturnSdkPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.PushMsgReturnSdkPmd_S)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional uint32 msgid = 2;
  if (has_msgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // optional uint32 ret = 3;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ret(), output);
  }

  // optional string retdesc = 4;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->retdesc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.PushMsgReturnSdkPmd_S)
}

::google::protobuf::uint8* PushMsgReturnSdkPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.PushMsgReturnSdkPmd_S)
  // optional .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional uint32 msgid = 2;
  if (has_msgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // optional uint32 ret = 3;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ret(), target);
  }

  // optional string retdesc = 4;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retdesc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.PushMsgReturnSdkPmd_S)
  return target;
}

int PushMsgReturnSdkPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional uint32 msgid = 2;
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgid());
    }

    // optional uint32 ret = 3;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

    // optional string retdesc = 4;
    if (has_retdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retdesc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PushMsgReturnSdkPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PushMsgReturnSdkPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PushMsgReturnSdkPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PushMsgReturnSdkPmd_S::MergeFrom(const PushMsgReturnSdkPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_msgid()) {
      set_msgid(from.msgid());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_retdesc()) {
      set_retdesc(from.retdesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PushMsgReturnSdkPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PushMsgReturnSdkPmd_S::CopyFrom(const PushMsgReturnSdkPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushMsgReturnSdkPmd_S::IsInitialized() const {

  return true;
}

void PushMsgReturnSdkPmd_S::Swap(PushMsgReturnSdkPmd_S* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(msgid_, other->msgid_);
    std::swap(ret_, other->ret_);
    std::swap(retdesc_, other->retdesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PushMsgReturnSdkPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PushMsgReturnSdkPmd_S_descriptor_;
  metadata.reflection = PushMsgReturnSdkPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BindAccountPhoneSdkPmd_CS::kDataFieldNumber;
const int BindAccountPhoneSdkPmd_CS::kPhoneFieldNumber;
const int BindAccountPhoneSdkPmd_CS::kCodeFieldNumber;
const int BindAccountPhoneSdkPmd_CS::kRetFieldNumber;
const int BindAccountPhoneSdkPmd_CS::kRetdescFieldNumber;
#endif  // !_MSC_VER

BindAccountPhoneSdkPmd_CS::BindAccountPhoneSdkPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.BindAccountPhoneSdkPmd_CS)
}

void BindAccountPhoneSdkPmd_CS::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

BindAccountPhoneSdkPmd_CS::BindAccountPhoneSdkPmd_CS(const BindAccountPhoneSdkPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.BindAccountPhoneSdkPmd_CS)
}

void BindAccountPhoneSdkPmd_CS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0u;
  retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BindAccountPhoneSdkPmd_CS::~BindAccountPhoneSdkPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.BindAccountPhoneSdkPmd_CS)
  SharedDtor();
}

void BindAccountPhoneSdkPmd_CS::SharedDtor() {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phone_;
  }
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void BindAccountPhoneSdkPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindAccountPhoneSdkPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindAccountPhoneSdkPmd_CS_descriptor_;
}

const BindAccountPhoneSdkPmd_CS& BindAccountPhoneSdkPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

BindAccountPhoneSdkPmd_CS* BindAccountPhoneSdkPmd_CS::default_instance_ = NULL;

BindAccountPhoneSdkPmd_CS* BindAccountPhoneSdkPmd_CS::New() const {
  return new BindAccountPhoneSdkPmd_CS;
}

void BindAccountPhoneSdkPmd_CS::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_phone()) {
      if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        phone_->clear();
      }
    }
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        code_->clear();
      }
    }
    ret_ = 0u;
    if (has_retdesc()) {
      if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retdesc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BindAccountPhoneSdkPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.BindAccountPhoneSdkPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_phone;
        break;
      }

      // required string phone = 2;
      case 2: {
        if (tag == 18) {
         parse_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "phone");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_code;
        break;
      }

      // optional string code = 3;
      case 3: {
        if (tag == 26) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ret;
        break;
      }

      // optional uint32 ret = 4;
      case 4: {
        if (tag == 32) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_retdesc;
        break;
      }

      // optional string retdesc = 5;
      case 5: {
        if (tag == 42) {
         parse_retdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retdesc().data(), this->retdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.BindAccountPhoneSdkPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.BindAccountPhoneSdkPmd_CS)
  return false;
#undef DO_
}

void BindAccountPhoneSdkPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.BindAccountPhoneSdkPmd_CS)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // required string phone = 2;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone(), output);
  }

  // optional string code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // optional uint32 ret = 4;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ret(), output);
  }

  // optional string retdesc = 5;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->retdesc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.BindAccountPhoneSdkPmd_CS)
}

::google::protobuf::uint8* BindAccountPhoneSdkPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.BindAccountPhoneSdkPmd_CS)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // required string phone = 2;
  if (has_phone()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone(), target);
  }

  // optional string code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // optional uint32 ret = 4;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ret(), target);
  }

  // optional string retdesc = 5;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->retdesc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.BindAccountPhoneSdkPmd_CS)
  return target;
}

int BindAccountPhoneSdkPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // required string phone = 2;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional string code = 3;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional uint32 ret = 4;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

    // optional string retdesc = 5;
    if (has_retdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retdesc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindAccountPhoneSdkPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BindAccountPhoneSdkPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BindAccountPhoneSdkPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BindAccountPhoneSdkPmd_CS::MergeFrom(const BindAccountPhoneSdkPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_phone()) {
      set_phone(from.phone());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_retdesc()) {
      set_retdesc(from.retdesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BindAccountPhoneSdkPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindAccountPhoneSdkPmd_CS::CopyFrom(const BindAccountPhoneSdkPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindAccountPhoneSdkPmd_CS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BindAccountPhoneSdkPmd_CS::Swap(BindAccountPhoneSdkPmd_CS* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(phone_, other->phone_);
    std::swap(code_, other->code_);
    std::swap(ret_, other->ret_);
    std::swap(retdesc_, other->retdesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BindAccountPhoneSdkPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindAccountPhoneSdkPmd_CS_descriptor_;
  metadata.reflection = BindAccountPhoneSdkPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestMobileRegistRandCodeSdkPmd_CS::kDataFieldNumber;
const int RequestMobileRegistRandCodeSdkPmd_CS::kMobilenumFieldNumber;
const int RequestMobileRegistRandCodeSdkPmd_CS::kRandcodeFieldNumber;
const int RequestMobileRegistRandCodeSdkPmd_CS::kLogintempidFieldNumber;
const int RequestMobileRegistRandCodeSdkPmd_CS::kClienttypeFieldNumber;
const int RequestMobileRegistRandCodeSdkPmd_CS::kRetFieldNumber;
const int RequestMobileRegistRandCodeSdkPmd_CS::kRetdescFieldNumber;
#endif  // !_MSC_VER

RequestMobileRegistRandCodeSdkPmd_CS::RequestMobileRegistRandCodeSdkPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
}

void RequestMobileRegistRandCodeSdkPmd_CS::InitAsDefaultInstance() {
  data_ = const_cast< ::Pmd::PlatBaseData*>(&::Pmd::PlatBaseData::default_instance());
}

RequestMobileRegistRandCodeSdkPmd_CS::RequestMobileRegistRandCodeSdkPmd_CS(const RequestMobileRegistRandCodeSdkPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
}

void RequestMobileRegistRandCodeSdkPmd_CS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = NULL;
  mobilenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  randcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logintempid_ = GOOGLE_ULONGLONG(0);
  clienttype_ = 0u;
  ret_ = 0u;
  retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestMobileRegistRandCodeSdkPmd_CS::~RequestMobileRegistRandCodeSdkPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
  SharedDtor();
}

void RequestMobileRegistRandCodeSdkPmd_CS::SharedDtor() {
  if (mobilenum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mobilenum_;
  }
  if (randcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete randcode_;
  }
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (this != default_instance_) {
    delete data_;
  }
}

void RequestMobileRegistRandCodeSdkPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestMobileRegistRandCodeSdkPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestMobileRegistRandCodeSdkPmd_CS_descriptor_;
}

const RequestMobileRegistRandCodeSdkPmd_CS& RequestMobileRegistRandCodeSdkPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sdkcommand_2eproto();
  return *default_instance_;
}

RequestMobileRegistRandCodeSdkPmd_CS* RequestMobileRegistRandCodeSdkPmd_CS::default_instance_ = NULL;

RequestMobileRegistRandCodeSdkPmd_CS* RequestMobileRegistRandCodeSdkPmd_CS::New() const {
  return new RequestMobileRegistRandCodeSdkPmd_CS;
}

void RequestMobileRegistRandCodeSdkPmd_CS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<RequestMobileRegistRandCodeSdkPmd_CS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(logintempid_, ret_);
    if (has_data()) {
      if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
    }
    if (has_mobilenum()) {
      if (mobilenum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        mobilenum_->clear();
      }
    }
    if (has_randcode()) {
      if (randcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        randcode_->clear();
      }
    }
    if (has_retdesc()) {
      if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        retdesc_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestMobileRegistRandCodeSdkPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Pmd.PlatBaseData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mobilenum;
        break;
      }

      // optional string mobilenum = 2;
      case 2: {
        if (tag == 18) {
         parse_mobilenum:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mobilenum()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mobilenum().data(), this->mobilenum().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mobilenum");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_randcode;
        break;
      }

      // optional string randcode = 3;
      case 3: {
        if (tag == 26) {
         parse_randcode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_randcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->randcode().data(), this->randcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "randcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_logintempid;
        break;
      }

      // optional uint64 logintempid = 4;
      case 4: {
        if (tag == 32) {
         parse_logintempid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logintempid_)));
          set_has_logintempid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_clienttype;
        break;
      }

      // optional uint32 clienttype = 5;
      case 5: {
        if (tag == 40) {
         parse_clienttype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clienttype_)));
          set_has_clienttype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ret;
        break;
      }

      // optional uint32 ret = 6;
      case 6: {
        if (tag == 48) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_retdesc;
        break;
      }

      // optional string retdesc = 7;
      case 7: {
        if (tag == 58) {
         parse_retdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retdesc().data(), this->retdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "retdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
  return false;
#undef DO_
}

void RequestMobileRegistRandCodeSdkPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(), output);
  }

  // optional string mobilenum = 2;
  if (has_mobilenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobilenum().data(), this->mobilenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mobilenum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mobilenum(), output);
  }

  // optional string randcode = 3;
  if (has_randcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->randcode().data(), this->randcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "randcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->randcode(), output);
  }

  // optional uint64 logintempid = 4;
  if (has_logintempid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->logintempid(), output);
  }

  // optional uint32 clienttype = 5;
  if (has_clienttype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->clienttype(), output);
  }

  // optional uint32 ret = 6;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->ret(), output);
  }

  // optional string retdesc = 7;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->retdesc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
}

::google::protobuf::uint8* RequestMobileRegistRandCodeSdkPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
  // required .Pmd.PlatBaseData data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(), target);
  }

  // optional string mobilenum = 2;
  if (has_mobilenum()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mobilenum().data(), this->mobilenum().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mobilenum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mobilenum(), target);
  }

  // optional string randcode = 3;
  if (has_randcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->randcode().data(), this->randcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "randcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->randcode(), target);
  }

  // optional uint64 logintempid = 4;
  if (has_logintempid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->logintempid(), target);
  }

  // optional uint32 clienttype = 5;
  if (has_clienttype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->clienttype(), target);
  }

  // optional uint32 ret = 6;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->ret(), target);
  }

  // optional string retdesc = 7;
  if (has_retdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retdesc().data(), this->retdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "retdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->retdesc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
  return target;
}

int RequestMobileRegistRandCodeSdkPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Pmd.PlatBaseData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional string mobilenum = 2;
    if (has_mobilenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mobilenum());
    }

    // optional string randcode = 3;
    if (has_randcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->randcode());
    }

    // optional uint64 logintempid = 4;
    if (has_logintempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->logintempid());
    }

    // optional uint32 clienttype = 5;
    if (has_clienttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clienttype());
    }

    // optional uint32 ret = 6;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

    // optional string retdesc = 7;
    if (has_retdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retdesc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestMobileRegistRandCodeSdkPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestMobileRegistRandCodeSdkPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestMobileRegistRandCodeSdkPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestMobileRegistRandCodeSdkPmd_CS::MergeFrom(const RequestMobileRegistRandCodeSdkPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      mutable_data()->::Pmd::PlatBaseData::MergeFrom(from.data());
    }
    if (from.has_mobilenum()) {
      set_mobilenum(from.mobilenum());
    }
    if (from.has_randcode()) {
      set_randcode(from.randcode());
    }
    if (from.has_logintempid()) {
      set_logintempid(from.logintempid());
    }
    if (from.has_clienttype()) {
      set_clienttype(from.clienttype());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_retdesc()) {
      set_retdesc(from.retdesc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestMobileRegistRandCodeSdkPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestMobileRegistRandCodeSdkPmd_CS::CopyFrom(const RequestMobileRegistRandCodeSdkPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMobileRegistRandCodeSdkPmd_CS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestMobileRegistRandCodeSdkPmd_CS::Swap(RequestMobileRegistRandCodeSdkPmd_CS* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(mobilenum_, other->mobilenum_);
    std::swap(randcode_, other->randcode_);
    std::swap(logintempid_, other->logintempid_);
    std::swap(clienttype_, other->clienttype_);
    std::swap(ret_, other->ret_);
    std::swap(retdesc_, other->retdesc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestMobileRegistRandCodeSdkPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestMobileRegistRandCodeSdkPmd_CS_descriptor_;
  metadata.reflection = RequestMobileRegistRandCodeSdkPmd_CS_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pmd

// @@protoc_insertion_point(global_scope)
