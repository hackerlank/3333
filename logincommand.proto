package Pmd;

message Login
{
	enum Param
	{
		AccountTokenVerifyLoginUserPmd_CS 		= 1;
		AccountTokenVerifyReturnLoginUserPmd_S		= 2;
		ZoneInfoListLoginUserPmd_S			= 3;
		UserLoginRequestLoginUserPmd_C 			= 4;
		UserLoginReturnFailLoginUserPmd_S 		= 5;
		UserLoginReturnOkLoginUserPmd_S 		= 6;
		UserLoginTokenLoginUserPmd_C 			= 7;
		ClientLogUrlLoginUserPmd_S 			= 8;
		MessageBoxLoginUserPmd_S			= 9;
		RequestAccountRegisterLoginUserPmd_C		= 10;
		ReturnAccountRegisterLoginUserPmd_S		= 11;
		UserLogoutTokenLoginUserPmd_C 			= 12;
		UserLoginReconnectLoginUserPmd_C 		= 13;
		ReconnectKickoutLoginUserPmd_S 			= 14;
	}
}
// 客户端发给登陆服务器的登陆验证消息
message AccountTokenVerifyLoginUserPmd_CS
{
	required string account 	 	= 1;// 平台账号
	required string token 		 	= 2;// token 可以是第三方认证
	required uint32 version 		= 3;// 当前客户端login版本号Version_Login
	optional uint32 gameid			= 4;///if filled ,will send ZoneInfoListLoginUserPmd_S for select ,else auto select zone
	optional string mid			= 5;//机器码
	optional uint32 platid 			= 6;// 平台编号
	optional uint32 zoneid			= 7;///if filled ,will auto login UserLoginRequestLoginUserPmd_C,UserLoginTokenLoginSmd_SC
	optional uint32 gameversion 		= 8;// 当前客户端game版本号Version_Login
	optional string compress		= 9;//压缩算法
	optional string encrypt			= 10;//加密算法
	optional string encryptkey		= 11;//加密key
}
enum VerifyReturnReason
{
	LoginOk				= 0;//登陆成功
	TokenFindError		= 1;//服务器没有token
	TokenDiffError 		= 2;//token错误
	VersionError 		= 3;//版本验证
}

// 登陆服务器返回给客户端的认证结果
message AccountTokenVerifyReturnLoginUserPmd_S
{

	required VerifyReturnReason retcode 	= 1;//返回值
	optional string desc	 				= 2;//返回错误描述,正确时不填
}
// 区服务器状态
enum ZoneState
{
	Shutdown 	= 0;//关闭状态
	Normal 		= 1;//正常运行
	Fullly 		= 2;//爆满
}
// 区服务器信息
message ZoneInfo
{
	required uint32 zoneid	 	= 1;//区编号
	required string zonename 	= 2;//区名称
	optional ZoneState state 	= 3;//ZoneState
}
// 区服务器信息列表,选区列表
message ZoneInfoListLoginUserPmd_S
{
	required string gamename		= 1;//游戏名称,(区别与区名)
	required uint32 gameid	 		= 2;//游戏编号
	repeated ZoneInfo zonelist 		= 3;
}
// 请求登陆某个区,发给LoginServer
message UserLoginRequestLoginUserPmd_C
{
	required uint32 gameid	 	= 1;//游戏编号
	required uint32 zoneid	 	= 2;//区编号
	required uint32 gameversion	= 3;//客户端游戏版本号Version_Game
	optional string mid			= 4;//机器码
}
enum LoginReturnFailReason
{
	Password 			= 1;//密码错误
	ServerShutdown 		= 2;//区服务器已关闭
	VersionTooLow 		= 3;//客户端游戏版本号太低
	UserTokenFind 		= 4;//没有找到登陆token,需要重新平台验证
	UserTokenTempId		= 5;//token错误
	UserTokenTimeOut	= 6;//token已过期
	LoginDulicate		= 7;//重复登陆
}

// 登陆某个区的错误返回,LoginServer返回
message UserLoginReturnFailLoginUserPmd_S
{

	required LoginReturnFailReason retcode 	= 1;
	required string desc	 				= 2;//错误描述
}
// 登陆某个区正确时的返回,LoginServer返回
message UserLoginReturnOkLoginUserPmd_S
{
	required uint64 accountid 		= 1;//账号
	required uint64 logintempid 	= 2;//生成一个临时编号,用于校验,登陆网关时传上去
	required uint64 tokenid			= 3;//随机token
	required string gatewayurl		= 4;//登陆的网关地址,接下来断开连接后马上登陆这个地址
	required uint32 gameid	 		= 5;//游戏编号
	required uint32 zoneid	 		= 6;//区编号
}
// 发给网关的登陆消息
message UserLoginTokenLoginUserPmd_C
{
	required uint32 gameid	 		= 1;
	required uint32 zoneid	 		= 2;
	required uint64 accountid		= 3;
	required uint64 logintempid 		= 4;
	required uint32 timestamp	 	= 5;//客户端时间戳
	required string tokenmd5		= 6;//md5sum(string(accountid) + string(logintempid) + string(timestamp) + string(tokenid)) && abs(curtime - timestamp)<25h
	optional string mid			= 7;//机器码
	optional string compress		= 8;//压缩算法
	optional string encrypt			= 9;//加密算法
	optional string encryptkey		= 10;//加密key
}
// 通知客户端发送日志的地址和日志级别
message ClientLogUrlLoginUserPmd_S
{
	required string loglevel		= 1;//日志几遍,Debug,Info,Error
	required string logurl			= 2;//日志地址
	required bool distinct			= 3;//相同日志信息的日志只发一遍
}

message MessageBoxLoginUserPmd_S
{
	optional string btnleft		= 1;
	optional string btnmiddle	= 2;
	optional string btnright	= 3;
	optional string info		= 4;
}
// 请求注册帐号
message RequestAccountRegisterLoginUserPmd_C
{
	required string account 	 	= 1;// 账号
	required string password 	 	= 2;// 密码
	optional string code			= 3;//验证码
}
// 请求注册帐号
message ReturnAccountRegisterLoginUserPmd_S
{
	required string account 	 	= 1;// 账号
	required uint64 accountid 		= 2;//账号ID
}
// 发给网关的主动退出消息
message UserLogoutTokenLoginUserPmd_C
{
}

// 发给网关的断线重连消息
message UserLoginReconnectLoginUserPmd_C
{
	required uint64 accountid		= 1;
	required uint32 timestamp	 	= 2;//客户端时间戳
	required string tokenmd5		= 3;//md5sum(string(accountid) + string(timestamp) + string(tokenkey)) && abs(curtime - timestamp)<25h
}


// 如果是重连成功需要给老的客户度发送踢下线消息，否则会永远抢下去
message ReconnectKickoutLoginUserPmd_S
{
	optional string desc			= 3;//描述
}

//平台用户信息
message PlatInfo
{
	required string account		= 1;//用户账号
	required uint32 platid		= 2;//平台id
	optional string email		= 3;//email
	optional string gender		= 4;//性别
	optional string nickname	= 5;//昵称
	required string timestamp	= 6;//时间戳
	required string uid			= 7;//用户ID
	required string sign		= 8;//平台签名串
	required uint32 gameid		= 9;//gameid
}

//第三方平台登录
message ThirdPlatLoginUserPmd_C
{
	required PlatInfo platinfo 	=1;//平台用户信息
	required uint32 gameid		=2;//游戏编号
	required string sid			=3;//签名id
	required string uid			=4;//用户ID
}

// 平台枚举
enum PlatType
{
	PlatType_Nomal 		= 0;//本平台
	PlatType_LeZhuan 	= 67;//手上活
}


