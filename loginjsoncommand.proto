package Pmd;
import "logincommand.proto";

message LoginJson
{
	enum Param
	{
		AccountTokenVerifyLoginJsonPmd_CS 		= 1;
		AccountTokenVerifyReturnLoginJsonPmd_S	= 2;
		ZoneInfoListLoginJsonPmd_S				= 3;
		UserLoginRequestLoginJsonPmd_C 			= 4;
		UserLoginReturnFailLoginJsonPmd_S 		= 5;
		UserLoginReturnOkLoginJsonPmd_S 		= 6;
		UserLoginTokenLoginJsonPmd_C 			= 7;
		ClientLogUrlLoginJsonPmd_S 				= 8;

	}
}
// 客户端发给登陆服务器的登陆验证消息
message AccountTokenVerifyLoginJsonPmd_CS
{
	required string account 	 	= 1;// 账号
	required string token 		 	= 2;// token 可以是第三方认证
	required uint32 version 		= 3;// 当前客户端版本号Version_Login
	optional uint32 gameid			= 4;///if filled ,will send ZoneInfoListLoginJsonPmd_S for select ,else auto select zone
	optional string mid				= 5;//机器码
}
// 登陆服务器返回给客户端的认证结果
message AccountTokenVerifyReturnLoginJsonPmd_S
{
	required VerifyReturnReason retcode 	= 1;//返回值
	optional string desc	 				= 2;//返回错误描述,正确时不填
}
// 区服务器信息列表,选区列表
message ZoneInfoListLoginJsonPmd_S
{
	required string gamename		= 1;//游戏名称,(区别与区名)
	required uint32 gameid	 		= 2;//游戏编号
	repeated ZoneInfo zonelist 		= 3;
}
// 请求登陆某个区,发给LoginServer
message UserLoginRequestLoginJsonPmd_C
{
	required uint32 gameid	 	= 1;//游戏编号
	required uint32 zoneid	 	= 2;//区编号
	required uint32 gameversion	= 3;//客户端游戏版本号Version_Game
	optional string mid			= 4;//机器码
}
// 登陆某个区的错误返回,LoginServer返回
message UserLoginReturnFailLoginJsonPmd_S
{
	required LoginReturnFailReason retcode 	= 1;
	required string desc	 				= 2;//错误描述
}
// 登陆某个区正确时的返回,LoginServer返回
message UserLoginReturnOkLoginJsonPmd_S
{
	required uint64 accountid 		= 1;//账号
	required uint64 logintempid 	= 2;//生成一个临时编号,用于校验,登陆网关时传上去
	required uint64 tokenid			= 3;//随机token
	required string gatewayurl		= 4;//登陆的网关地址,接下来断开连接后马上登陆这个地址
	required uint32 gameid	 		= 5;//游戏编号
	required uint32 zoneid	 		= 6;//区编号
}
// 发给网关的登陆消息
message UserLoginTokenLoginJsonPmd_C
{
	required uint32 gameid	 		= 1;
	required uint32 zoneid	 		= 2;
	required uint64 accountid		= 3;
	required uint64 logintempid 	= 4;
	required uint32 timestamp	 	= 5;//客户端时间戳
	required string tokenmd5		= 6;//md5sum(string(accountid) + string(logintempid) + string(timestamp) + string(tokenid)) && abs(curtime - timestamp)<25h
	optional string mid				= 7;//机器码
}
// 通知客户端发送日志的地址和日志级别
message ClientLogUrlLoginJsonPmd_S
{
	required string loglevel		= 1;//日志几遍,Debug,Info,Error
	required string logurl			= 2;//日志地址
	required bool distinct			= 3;//相同日志信息的日志只发一遍
}
