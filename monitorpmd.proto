package Pmd;
import "pmd.proto";

// TODO
message Monitor
{
	enum Param
	{
		StartUpGameRequestMonitorPmd_C 		= 1;
		StartUpGameReturnMonitorPmd_S 		= 2;
		SupportGameZoneListSdkPmd_C		= 3;
		RefreshServerStateListMonitorPmd_S	= 4;
		RefreshServerStateMonitorPmd_CSC	= 5;
		StRequestNewbeeCardMonitorUserCmd_C 	= 6;
		StServerShutdownMonitorUserCmd_S	= 7;
		StServerStartupMonitorUserCmd_S		= 8;
		StServerListMonitorUserCmd_S 		= 9;
		StMonitorServerMessageMonitorUserCmd_S 	= 10;
		StGameClientCmdExitMonitorUserCmd_S 	= 12;
		StErrorLogMonitorUserCmd_S 		= 13;
		QueryPackageCodeMonitorPmd_CS      = 14; // 请求查询补偿码
		RequestUsePackageCodeMonitorPmd_CS = 15; // 请求使用补偿码
		RequestInsertPackageCodeMonitorPmd_CS = 16; // 请求插入一条补偿码
		RequestResetPackageCodeMonitorPmd_CS = 17; // 请求重置一条补偿码
	}
}

// 区服务器请求连接登陆服务器的第一个消息
message StartUpGameRequestMonitorPmd_C
{
	required string key 		= 1;
	required uint32 version 	= 2;
	optional string compress	= 3;	// 压缩算法
	optional string encrypt		= 4;	// 加密算法
	optional string encryptkey	= 5;	// 加密key
}
// 返回给区服务器的连接验证状态,这里也发送区信息的原因是考虑游戏服务器可能连接名字验证服务器比连接登陆服务器快
message StartUpGameReturnMonitorPmd_S
{
	required bool ret = 1;				// 返回成功标志
	optional string retdesc = 2;		// 返回描述
}


// 希望监控的游戏区服
message SupportGameZoneListSdkPmd_C
{
	repeated GameZoneInfo gamezonelist = 1;	// 游戏类型
}

//服务器信息
message ServerState
{
	required uint32 id			= 1;
	required uint32 type		= 2;	// TaskType
	required uint32 state		= 3;	// 当前状态0关闭,1开启
	required string addr		= 4;	// id
	optional uint32 onlinenum	= 5;	// 服务器名称
	optional string name		= 6;	// 服务器名称
}

message GameZoneServerState
{
	optional GameZoneInfo gamezone	= 1;// 游戏类型
	repeated ServerState statelist	= 2;// 状态

}

// 刷新服务器状态
message RefreshServerStateListMonitorPmd_S
{
	repeated GameZoneServerState statelist = 1;	// 服务器列表
	optional bool reset = 2;					// 是否需要重置列表
}

// 刷新服务器状态
message RefreshServerStateMonitorPmd_CSC
{
	required GameZoneServerState state = 1;		// 服务器列表
	optional bool reset = 2;					// 是否需要重置列表
}

message StRequestNewbeeCardMonitorUserCmd_C
{
    optional uint32 userid = 1;
    optional string keystring = 2;
    optional uint32 mutextype = 3;
    optional uint32 accid = 4;
    optional uint64 mobile = 5;
}

enum ServerInfoState
{
    ServerInfoState_DoubleExp    	= 1;
    ServerInfoState_DoubleExp_Task    	= 2;
} 

enum MonitorServerMessageType
{
    MonitorServerMessageType_Info    = 0;
    MonitorServerMessageType_Warning    = 1;
    MonitorServerMessageType_Error    = 2;
    MonitorServerMessageType_Notify    = 3;
} 

message StServerShutdownMonitorUserCmd_S
{
    optional ServerInfo data = 1;
}

message StServerStartupMonitorUserCmd_S
{
    optional ServerInfo data = 1;
}

message StServerListMonitorUserCmd_S
{
    repeated ServerInfo data = 1;
}

message StMonitorServerMessageMonitorUserCmd_S
{
    optional uint32 gmid = 1;
    optional uint32 type = 2;
    optional string data = 3;
}

message ClientCmdExitInfo
{
	optional uint32 time = 1;
	optional uint32 zone = 2;
	optional uint32 num = 3;
	optional uint32 byCmd = 4;
	optional uint32 byParam = 5;
	optional uint32 nettype = 6;///暂时不用
};
message StGameClientCmdExitMonitorUserCmd_S
{
    optional ClientCmdExitInfo data = 1;
}

message StErrorLogMonitorUserCmd_S
{
    optional string logger 		= 1;
    optional GameZoneInfo gamezone	= 2;// 游戏类型
    optional string remoteaddr	= 3;// 服务器IP
}

// 查询礼包码
message QueryPackageCodeMonitorPmd_CS
{
	required string codeid     = 1;
	required uint64 accid      = 2;
	optional uint32 ret        = 3; // 0表示成功，1表示不存在
	optional uint32 flag       = 4; // 0表示未使用， 1表示已使用
	optional uint64 createtime = 5;
	optional uint64 usedtime   = 6;
	optional uint32 usedgameid = 7;
	optional uint32 usedzoneid = 8;
	optional uint64 useduid    = 9;
	optional string extdata    = 10; 
	optional uint32 codetype   = 11;
}

// 请求使用补偿码
message RequestUsePackageCodeMonitorPmd_CS
{
	required string codeid     = 1;
	required uint64 accid      = 2;
	optional uint32 ret        = 3; // 0成功，1补偿码不存在失败，2 补偿码超过使用时间 ，3补偿码被人使用
	optional uint64 createtime = 4;
	optional uint64 usedtime   = 5;
	optional uint32 usedgameid = 6;
	optional uint32 usedzoneid = 7;
	optional uint64 useduid    = 8;
	optional string extdata    = 9; 
	optional uint32 codetype   = 10;
}

// 请求插入补偿码 
message RequestInsertPackageCodeMonitorPmd_CS
{
	required string codeid     = 1;
	optional uint32 ret        = 2; // 0成功，1失败
	optional string extdata    = 3; 
	optional uint32 flag       = 4; // 0表示未使用， 1表示已使用
	optional uint64 createtime = 5;
	optional uint64 endtime    = 6;
	optional uint32 usedgameid = 7;
	optional uint32 usedzoneid = 8;
	optional uint64 useduid    = 9;
	optional uint32 codetype   = 10;
}

// 重置补偿码
message RequestResetPackageCodeMonitorPmd_CS
{
	required string codeid     = 1;
	optional uint32 ret        = 2; // 0成功，1失败
}
