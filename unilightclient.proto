// unilight客户端和LoginServer以及unilight之间的通信协议

package Pmd;
import "pmd.proto";
import "forwardcommand.proto";
import "logincommand.proto";

////////////////////////////////////////////////////////////////////////////////////////////////
/// Client到LoginServer和unilight之间的HTTP POST通信URL签名
////////////////////////////////////////////////////////////////////////////////////////////////
/*
URL + "?unigame_plat_sign=" + MD5(
	tojsonstring(HttpPackage) + 
	tostring(unigame_plat_timestamp) + 
	unigame_plat_key)
	
	// 可选参数。如果指定则消息被整体压缩后以arraybuffer的二进制方式发送，下行消息会以相同方式压缩
	+ "&compress=" + Pmd.CompressType // ["gzip", "flate", "zlib", "lzw"]
*/

message Any
{
}

// 只有第一条发往平台的消息用HttpPackage1，其余均采用HttpPackage
message HttpPackage1
{
	required string do = 1;							// 消息类型
	required Any data = 2;							// 应用层消息内容
	required uint32 gameid = 3;						// 游戏ID
	optional uint32 zoneid = 4;						// 如果客户端发，服务器照样返回
	optional string uid = 5;						// 可唯一代表一个用户身份的ID，由平台统一生成
	optional string sid = 6;						// 组合字段：<平台id>::<平台账户>
}
message HttpPackage
{
	required string do = 1;							// 消息类型
	required Any data = 2;							// 应用层消息内容
	required uint32 gameid = 3;						// 游戏ID
	optional uint32 zoneid = 4;						// 如果客户端发，服务器照样返回
	optional string uid = 5;						// 可唯一代表一个用户身份的ID，由平台统一生成
	optional string sid = 6;						// 组合字段：<平台id>::<平台账户>
	
	required string unigame_plat_login = 7;			// 由PlatTokenLoginReturn返回
	required uint64 unigame_plat_timestamp = 8;		// UNIX时间戳，单位秒
}

message HttpPackageReturn
{
	required string do = 1;							// 消息类型
	required Any data = 2;							// 应用层消息内容
	required uint32 gameid = 3;						// 游戏ID
	optional uint32 zoneid = 4;						// 如果客户端发，服务器照样返回
	optional HttpReturnCode errno = 7;
}

////////////////////////////////////////////////////////////////////////////////////////////////
/// unilight到平台服务器之间的消息
////////////////////////////////////////////////////////////////////////////////////////////////

// 请求区列表【不需要签名】【无时序要求】
message RequestZoneList
{
	required uint32 gameid = 4;						// 游戏ID
}
// return ZoneInfoListLoginUserPmd_S

// 选区【必须签名】
message RequestSelectZone
{
	required uint32 gameid = 1;						// 游戏ID
	required uint32 zoneid = 2;
}
message RequestSelectZoneReturn
{
	required uint32 gameid = 1;						// 游戏ID
	required uint32 zoneid = 2;
	required string gatewayurl = 3;					// 游戏逻辑服务器的http网关地址
}

// 平台登录【不需要签名】
message PlatTokenLogin
{
	required PlatInfo platinfo = 1;					// 平台用户信息
	required uint32 gameid = 2;						// 游戏ID
}
message PlatTokenLoginReturn
{
	optional PlatInfo platinfo = 1;					// 平台用户信息
	
	required string uid = 3;						// 可唯一代表一个用户身份的ID，由平台统一生成
	required string sid = 4;						// 组合字段：<平台id>::<平台账户>
	required string unigame_plat_key = 5;			// 平台登录密钥，用于上行消息URL签名
    required string unigame_plat_login = 6;			// 平台登录token，用于上行消息
    required uint32 unigame_plat_login_life = 7;	// 平台登录token从现在开始多少秒后过期，过期后或服务器返回HttpReturnCode_SignError时客户端需要重新走登陆流程
	
	optional string timezone_name = 8;				// 时区的名字
	required int32 timezone_offset = 9;				// unilight服务器时区相对于UTC的时间偏移量，单位秒
}

////////////////////////////////////////////////////////////////////////////////////////////////
/// 客户端到unilight游戏逻辑服务器之间的消息
////////////////////////////////////////////////////////////////////////////////////////////////

// 客户端向游戏逻辑服务器的http网关地址请求websocket的强联网地址
// Pmd.WebSocketForwardUserPmd_C -> Pmd.WebSocketForwardUserPmd_S




