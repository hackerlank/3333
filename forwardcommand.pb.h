// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: forwardcommand.proto

#ifndef PROTOBUF_forwardcommand_2eproto__INCLUDED
#define PROTOBUF_forwardcommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Pmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_forwardcommand_2eproto();
void protobuf_AssignDesc_forwardcommand_2eproto();
void protobuf_ShutdownFile_forwardcommand_2eproto();

class Forward;
class UserJsMessageForwardUserPmd_CS;
class WebSocketForwardUserPmd_C;
class WebSocketForwardUserPmd_S;
class BehaviorMessageForwardUserPmd_CS;

enum Forward_Param {
  Forward_Param_UserJsMessageForwardUserPmd_CS = 1,
  Forward_Param_WebSocketForwardUserPmd_C = 4,
  Forward_Param_WebSocketForwardUserPmd_S = 5,
  Forward_Param_BehaviorMessageForwardUserPmd_CS = 6
};
bool Forward_Param_IsValid(int value);
const Forward_Param Forward_Param_Param_MIN = Forward_Param_UserJsMessageForwardUserPmd_CS;
const Forward_Param Forward_Param_Param_MAX = Forward_Param_BehaviorMessageForwardUserPmd_CS;
const int Forward_Param_Param_ARRAYSIZE = Forward_Param_Param_MAX + 1;

const ::google::protobuf::EnumDescriptor* Forward_Param_descriptor();
inline const ::std::string& Forward_Param_Name(Forward_Param value) {
  return ::google::protobuf::internal::NameOfEnum(
    Forward_Param_descriptor(), value);
}
inline bool Forward_Param_Parse(
    const ::std::string& name, Forward_Param* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Forward_Param>(
    Forward_Param_descriptor(), name, value);
}
enum BehaviorMessageForwardUserPmd_CS_Type {
  BehaviorMessageForwardUserPmd_CS_Type_NormalText = 1,
  BehaviorMessageForwardUserPmd_CS_Type_UploadTree = 2
};
bool BehaviorMessageForwardUserPmd_CS_Type_IsValid(int value);
const BehaviorMessageForwardUserPmd_CS_Type BehaviorMessageForwardUserPmd_CS_Type_Type_MIN = BehaviorMessageForwardUserPmd_CS_Type_NormalText;
const BehaviorMessageForwardUserPmd_CS_Type BehaviorMessageForwardUserPmd_CS_Type_Type_MAX = BehaviorMessageForwardUserPmd_CS_Type_UploadTree;
const int BehaviorMessageForwardUserPmd_CS_Type_Type_ARRAYSIZE = BehaviorMessageForwardUserPmd_CS_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* BehaviorMessageForwardUserPmd_CS_Type_descriptor();
inline const ::std::string& BehaviorMessageForwardUserPmd_CS_Type_Name(BehaviorMessageForwardUserPmd_CS_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    BehaviorMessageForwardUserPmd_CS_Type_descriptor(), value);
}
inline bool BehaviorMessageForwardUserPmd_CS_Type_Parse(
    const ::std::string& name, BehaviorMessageForwardUserPmd_CS_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BehaviorMessageForwardUserPmd_CS_Type>(
    BehaviorMessageForwardUserPmd_CS_Type_descriptor(), name, value);
}
// ===================================================================

class Forward : public ::google::protobuf::Message {
 public:
  Forward();
  virtual ~Forward();

  Forward(const Forward& from);

  inline Forward& operator=(const Forward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Forward& default_instance();

  void Swap(Forward* other);

  // implements Message ----------------------------------------------

  Forward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Forward& from);
  void MergeFrom(const Forward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Forward_Param Param;
  static const Param UserJsMessageForwardUserPmd_CS = Forward_Param_UserJsMessageForwardUserPmd_CS;
  static const Param WebSocketForwardUserPmd_C = Forward_Param_WebSocketForwardUserPmd_C;
  static const Param WebSocketForwardUserPmd_S = Forward_Param_WebSocketForwardUserPmd_S;
  static const Param BehaviorMessageForwardUserPmd_CS = Forward_Param_BehaviorMessageForwardUserPmd_CS;
  static inline bool Param_IsValid(int value) {
    return Forward_Param_IsValid(value);
  }
  static const Param Param_MIN =
    Forward_Param_Param_MIN;
  static const Param Param_MAX =
    Forward_Param_Param_MAX;
  static const int Param_ARRAYSIZE =
    Forward_Param_Param_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Param_descriptor() {
    return Forward_Param_descriptor();
  }
  static inline const ::std::string& Param_Name(Param value) {
    return Forward_Param_Name(value);
  }
  static inline bool Param_Parse(const ::std::string& name,
      Param* value) {
    return Forward_Param_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.Forward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_forwardcommand_2eproto();
  friend void protobuf_AssignDesc_forwardcommand_2eproto();
  friend void protobuf_ShutdownFile_forwardcommand_2eproto();

  void InitAsDefaultInstance();
  static Forward* default_instance_;
};
// -------------------------------------------------------------------

class UserJsMessageForwardUserPmd_CS : public ::google::protobuf::Message {
 public:
  UserJsMessageForwardUserPmd_CS();
  virtual ~UserJsMessageForwardUserPmd_CS();

  UserJsMessageForwardUserPmd_CS(const UserJsMessageForwardUserPmd_CS& from);

  inline UserJsMessageForwardUserPmd_CS& operator=(const UserJsMessageForwardUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserJsMessageForwardUserPmd_CS& default_instance();

  void Swap(UserJsMessageForwardUserPmd_CS* other);

  // implements Message ----------------------------------------------

  UserJsMessageForwardUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserJsMessageForwardUserPmd_CS& from);
  void MergeFrom(const UserJsMessageForwardUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // optional bytes msgbytes = 2;
  inline bool has_msgbytes() const;
  inline void clear_msgbytes();
  static const int kMsgbytesFieldNumber = 2;
  inline const ::std::string& msgbytes() const;
  inline void set_msgbytes(const ::std::string& value);
  inline void set_msgbytes(const char* value);
  inline void set_msgbytes(const void* value, size_t size);
  inline ::std::string* mutable_msgbytes();
  inline ::std::string* release_msgbytes();
  inline void set_allocated_msgbytes(::std::string* msgbytes);

  // @@protoc_insertion_point(class_scope:Pmd.UserJsMessageForwardUserPmd_CS)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();
  inline void set_has_msgbytes();
  inline void clear_has_msgbytes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* msg_;
  ::std::string* msgbytes_;
  friend void  protobuf_AddDesc_forwardcommand_2eproto();
  friend void protobuf_AssignDesc_forwardcommand_2eproto();
  friend void protobuf_ShutdownFile_forwardcommand_2eproto();

  void InitAsDefaultInstance();
  static UserJsMessageForwardUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class WebSocketForwardUserPmd_C : public ::google::protobuf::Message {
 public:
  WebSocketForwardUserPmd_C();
  virtual ~WebSocketForwardUserPmd_C();

  WebSocketForwardUserPmd_C(const WebSocketForwardUserPmd_C& from);

  inline WebSocketForwardUserPmd_C& operator=(const WebSocketForwardUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebSocketForwardUserPmd_C& default_instance();

  void Swap(WebSocketForwardUserPmd_C* other);

  // implements Message ----------------------------------------------

  WebSocketForwardUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebSocketForwardUserPmd_C& from);
  void MergeFrom(const WebSocketForwardUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint64 accountid() const;
  inline void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pmd.WebSocketForwardUserPmd_C)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 accountid_;
  friend void  protobuf_AddDesc_forwardcommand_2eproto();
  friend void protobuf_AssignDesc_forwardcommand_2eproto();
  friend void protobuf_ShutdownFile_forwardcommand_2eproto();

  void InitAsDefaultInstance();
  static WebSocketForwardUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class WebSocketForwardUserPmd_S : public ::google::protobuf::Message {
 public:
  WebSocketForwardUserPmd_S();
  virtual ~WebSocketForwardUserPmd_S();

  WebSocketForwardUserPmd_S(const WebSocketForwardUserPmd_S& from);

  inline WebSocketForwardUserPmd_S& operator=(const WebSocketForwardUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WebSocketForwardUserPmd_S& default_instance();

  void Swap(WebSocketForwardUserPmd_S* other);

  // implements Message ----------------------------------------------

  WebSocketForwardUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WebSocketForwardUserPmd_S& from);
  void MergeFrom(const WebSocketForwardUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 accountid = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  inline ::google::protobuf::uint64 accountid() const;
  inline void set_accountid(::google::protobuf::uint64 value);

  // required string jsongatewayurl = 4;
  inline bool has_jsongatewayurl() const;
  inline void clear_jsongatewayurl();
  static const int kJsongatewayurlFieldNumber = 4;
  inline const ::std::string& jsongatewayurl() const;
  inline void set_jsongatewayurl(const ::std::string& value);
  inline void set_jsongatewayurl(const char* value);
  inline void set_jsongatewayurl(const char* value, size_t size);
  inline ::std::string* mutable_jsongatewayurl();
  inline ::std::string* release_jsongatewayurl();
  inline void set_allocated_jsongatewayurl(::std::string* jsongatewayurl);

  // required uint64 tokenid = 5;
  inline bool has_tokenid() const;
  inline void clear_tokenid();
  static const int kTokenidFieldNumber = 5;
  inline ::google::protobuf::uint64 tokenid() const;
  inline void set_tokenid(::google::protobuf::uint64 value);

  // required uint64 logintempid = 6;
  inline bool has_logintempid() const;
  inline void clear_logintempid();
  static const int kLogintempidFieldNumber = 6;
  inline ::google::protobuf::uint64 logintempid() const;
  inline void set_logintempid(::google::protobuf::uint64 value);

  // required string gatewayurl = 7;
  inline bool has_gatewayurl() const;
  inline void clear_gatewayurl();
  static const int kGatewayurlFieldNumber = 7;
  inline const ::std::string& gatewayurl() const;
  inline void set_gatewayurl(const ::std::string& value);
  inline void set_gatewayurl(const char* value);
  inline void set_gatewayurl(const char* value, size_t size);
  inline ::std::string* mutable_gatewayurl();
  inline ::std::string* release_gatewayurl();
  inline void set_allocated_gatewayurl(::std::string* gatewayurl);

  // required string gatewayurltcp = 8;
  inline bool has_gatewayurltcp() const;
  inline void clear_gatewayurltcp();
  static const int kGatewayurltcpFieldNumber = 8;
  inline const ::std::string& gatewayurltcp() const;
  inline void set_gatewayurltcp(const ::std::string& value);
  inline void set_gatewayurltcp(const char* value);
  inline void set_gatewayurltcp(const char* value, size_t size);
  inline ::std::string* mutable_gatewayurltcp();
  inline ::std::string* release_gatewayurltcp();
  inline void set_allocated_gatewayurltcp(::std::string* gatewayurltcp);

  // @@protoc_insertion_point(class_scope:Pmd.WebSocketForwardUserPmd_S)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_jsongatewayurl();
  inline void clear_has_jsongatewayurl();
  inline void set_has_tokenid();
  inline void clear_has_tokenid();
  inline void set_has_logintempid();
  inline void clear_has_logintempid();
  inline void set_has_gatewayurl();
  inline void clear_has_gatewayurl();
  inline void set_has_gatewayurltcp();
  inline void clear_has_gatewayurltcp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 accountid_;
  ::std::string* jsongatewayurl_;
  ::google::protobuf::uint64 tokenid_;
  ::google::protobuf::uint64 logintempid_;
  ::std::string* gatewayurl_;
  ::std::string* gatewayurltcp_;
  friend void  protobuf_AddDesc_forwardcommand_2eproto();
  friend void protobuf_AssignDesc_forwardcommand_2eproto();
  friend void protobuf_ShutdownFile_forwardcommand_2eproto();

  void InitAsDefaultInstance();
  static WebSocketForwardUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class BehaviorMessageForwardUserPmd_CS : public ::google::protobuf::Message {
 public:
  BehaviorMessageForwardUserPmd_CS();
  virtual ~BehaviorMessageForwardUserPmd_CS();

  BehaviorMessageForwardUserPmd_CS(const BehaviorMessageForwardUserPmd_CS& from);

  inline BehaviorMessageForwardUserPmd_CS& operator=(const BehaviorMessageForwardUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BehaviorMessageForwardUserPmd_CS& default_instance();

  void Swap(BehaviorMessageForwardUserPmd_CS* other);

  // implements Message ----------------------------------------------

  BehaviorMessageForwardUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BehaviorMessageForwardUserPmd_CS& from);
  void MergeFrom(const BehaviorMessageForwardUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BehaviorMessageForwardUserPmd_CS_Type Type;
  static const Type NormalText = BehaviorMessageForwardUserPmd_CS_Type_NormalText;
  static const Type UploadTree = BehaviorMessageForwardUserPmd_CS_Type_UploadTree;
  static inline bool Type_IsValid(int value) {
    return BehaviorMessageForwardUserPmd_CS_Type_IsValid(value);
  }
  static const Type Type_MIN =
    BehaviorMessageForwardUserPmd_CS_Type_Type_MIN;
  static const Type Type_MAX =
    BehaviorMessageForwardUserPmd_CS_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    BehaviorMessageForwardUserPmd_CS_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return BehaviorMessageForwardUserPmd_CS_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return BehaviorMessageForwardUserPmd_CS_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return BehaviorMessageForwardUserPmd_CS_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string msg = 1;
  inline int msg_size() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::std::string& msg(int index) const;
  inline ::std::string* mutable_msg(int index);
  inline void set_msg(int index, const ::std::string& value);
  inline void set_msg(int index, const char* value);
  inline void set_msg(int index, const char* value, size_t size);
  inline ::std::string* add_msg();
  inline void add_msg(const ::std::string& value);
  inline void add_msg(const char* value);
  inline void add_msg(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_msg();

  // optional .Pmd.BehaviorMessageForwardUserPmd_CS.Type type = 2 [default = NormalText];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::Pmd::BehaviorMessageForwardUserPmd_CS_Type type() const;
  inline void set_type(::Pmd::BehaviorMessageForwardUserPmd_CS_Type value);

  // @@protoc_insertion_point(class_scope:Pmd.BehaviorMessageForwardUserPmd_CS)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> msg_;
  int type_;
  friend void  protobuf_AddDesc_forwardcommand_2eproto();
  friend void protobuf_AssignDesc_forwardcommand_2eproto();
  friend void protobuf_ShutdownFile_forwardcommand_2eproto();

  void InitAsDefaultInstance();
  static BehaviorMessageForwardUserPmd_CS* default_instance_;
};
// ===================================================================


// ===================================================================

// Forward

// -------------------------------------------------------------------

// UserJsMessageForwardUserPmd_CS

// optional string msg = 1;
inline bool UserJsMessageForwardUserPmd_CS::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserJsMessageForwardUserPmd_CS::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserJsMessageForwardUserPmd_CS::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserJsMessageForwardUserPmd_CS::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& UserJsMessageForwardUserPmd_CS::msg() const {
  // @@protoc_insertion_point(field_get:Pmd.UserJsMessageForwardUserPmd_CS.msg)
  return *msg_;
}
inline void UserJsMessageForwardUserPmd_CS::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.UserJsMessageForwardUserPmd_CS.msg)
}
inline void UserJsMessageForwardUserPmd_CS::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.UserJsMessageForwardUserPmd_CS.msg)
}
inline void UserJsMessageForwardUserPmd_CS::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.UserJsMessageForwardUserPmd_CS.msg)
}
inline ::std::string* UserJsMessageForwardUserPmd_CS::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.UserJsMessageForwardUserPmd_CS.msg)
  return msg_;
}
inline ::std::string* UserJsMessageForwardUserPmd_CS::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserJsMessageForwardUserPmd_CS::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.UserJsMessageForwardUserPmd_CS.msg)
}

// optional bytes msgbytes = 2;
inline bool UserJsMessageForwardUserPmd_CS::has_msgbytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserJsMessageForwardUserPmd_CS::set_has_msgbytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserJsMessageForwardUserPmd_CS::clear_has_msgbytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserJsMessageForwardUserPmd_CS::clear_msgbytes() {
  if (msgbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbytes_->clear();
  }
  clear_has_msgbytes();
}
inline const ::std::string& UserJsMessageForwardUserPmd_CS::msgbytes() const {
  // @@protoc_insertion_point(field_get:Pmd.UserJsMessageForwardUserPmd_CS.msgbytes)
  return *msgbytes_;
}
inline void UserJsMessageForwardUserPmd_CS::set_msgbytes(const ::std::string& value) {
  set_has_msgbytes();
  if (msgbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbytes_ = new ::std::string;
  }
  msgbytes_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.UserJsMessageForwardUserPmd_CS.msgbytes)
}
inline void UserJsMessageForwardUserPmd_CS::set_msgbytes(const char* value) {
  set_has_msgbytes();
  if (msgbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbytes_ = new ::std::string;
  }
  msgbytes_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.UserJsMessageForwardUserPmd_CS.msgbytes)
}
inline void UserJsMessageForwardUserPmd_CS::set_msgbytes(const void* value, size_t size) {
  set_has_msgbytes();
  if (msgbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbytes_ = new ::std::string;
  }
  msgbytes_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.UserJsMessageForwardUserPmd_CS.msgbytes)
}
inline ::std::string* UserJsMessageForwardUserPmd_CS::mutable_msgbytes() {
  set_has_msgbytes();
  if (msgbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbytes_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.UserJsMessageForwardUserPmd_CS.msgbytes)
  return msgbytes_;
}
inline ::std::string* UserJsMessageForwardUserPmd_CS::release_msgbytes() {
  clear_has_msgbytes();
  if (msgbytes_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msgbytes_;
    msgbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserJsMessageForwardUserPmd_CS::set_allocated_msgbytes(::std::string* msgbytes) {
  if (msgbytes_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgbytes_;
  }
  if (msgbytes) {
    set_has_msgbytes();
    msgbytes_ = msgbytes;
  } else {
    clear_has_msgbytes();
    msgbytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.UserJsMessageForwardUserPmd_CS.msgbytes)
}

// -------------------------------------------------------------------

// WebSocketForwardUserPmd_C

// required uint64 accountid = 1;
inline bool WebSocketForwardUserPmd_C::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebSocketForwardUserPmd_C::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebSocketForwardUserPmd_C::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebSocketForwardUserPmd_C::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::uint64 WebSocketForwardUserPmd_C::accountid() const {
  // @@protoc_insertion_point(field_get:Pmd.WebSocketForwardUserPmd_C.accountid)
  return accountid_;
}
inline void WebSocketForwardUserPmd_C::set_accountid(::google::protobuf::uint64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WebSocketForwardUserPmd_C.accountid)
}

// -------------------------------------------------------------------

// WebSocketForwardUserPmd_S

// required uint64 accountid = 2;
inline bool WebSocketForwardUserPmd_S::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WebSocketForwardUserPmd_S::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WebSocketForwardUserPmd_S::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WebSocketForwardUserPmd_S::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
  clear_has_accountid();
}
inline ::google::protobuf::uint64 WebSocketForwardUserPmd_S::accountid() const {
  // @@protoc_insertion_point(field_get:Pmd.WebSocketForwardUserPmd_S.accountid)
  return accountid_;
}
inline void WebSocketForwardUserPmd_S::set_accountid(::google::protobuf::uint64 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WebSocketForwardUserPmd_S.accountid)
}

// required string jsongatewayurl = 4;
inline bool WebSocketForwardUserPmd_S::has_jsongatewayurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WebSocketForwardUserPmd_S::set_has_jsongatewayurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WebSocketForwardUserPmd_S::clear_has_jsongatewayurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WebSocketForwardUserPmd_S::clear_jsongatewayurl() {
  if (jsongatewayurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jsongatewayurl_->clear();
  }
  clear_has_jsongatewayurl();
}
inline const ::std::string& WebSocketForwardUserPmd_S::jsongatewayurl() const {
  // @@protoc_insertion_point(field_get:Pmd.WebSocketForwardUserPmd_S.jsongatewayurl)
  return *jsongatewayurl_;
}
inline void WebSocketForwardUserPmd_S::set_jsongatewayurl(const ::std::string& value) {
  set_has_jsongatewayurl();
  if (jsongatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jsongatewayurl_ = new ::std::string;
  }
  jsongatewayurl_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.WebSocketForwardUserPmd_S.jsongatewayurl)
}
inline void WebSocketForwardUserPmd_S::set_jsongatewayurl(const char* value) {
  set_has_jsongatewayurl();
  if (jsongatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jsongatewayurl_ = new ::std::string;
  }
  jsongatewayurl_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.WebSocketForwardUserPmd_S.jsongatewayurl)
}
inline void WebSocketForwardUserPmd_S::set_jsongatewayurl(const char* value, size_t size) {
  set_has_jsongatewayurl();
  if (jsongatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jsongatewayurl_ = new ::std::string;
  }
  jsongatewayurl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.WebSocketForwardUserPmd_S.jsongatewayurl)
}
inline ::std::string* WebSocketForwardUserPmd_S::mutable_jsongatewayurl() {
  set_has_jsongatewayurl();
  if (jsongatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    jsongatewayurl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.WebSocketForwardUserPmd_S.jsongatewayurl)
  return jsongatewayurl_;
}
inline ::std::string* WebSocketForwardUserPmd_S::release_jsongatewayurl() {
  clear_has_jsongatewayurl();
  if (jsongatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = jsongatewayurl_;
    jsongatewayurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WebSocketForwardUserPmd_S::set_allocated_jsongatewayurl(::std::string* jsongatewayurl) {
  if (jsongatewayurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete jsongatewayurl_;
  }
  if (jsongatewayurl) {
    set_has_jsongatewayurl();
    jsongatewayurl_ = jsongatewayurl;
  } else {
    clear_has_jsongatewayurl();
    jsongatewayurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.WebSocketForwardUserPmd_S.jsongatewayurl)
}

// required uint64 tokenid = 5;
inline bool WebSocketForwardUserPmd_S::has_tokenid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WebSocketForwardUserPmd_S::set_has_tokenid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WebSocketForwardUserPmd_S::clear_has_tokenid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WebSocketForwardUserPmd_S::clear_tokenid() {
  tokenid_ = GOOGLE_ULONGLONG(0);
  clear_has_tokenid();
}
inline ::google::protobuf::uint64 WebSocketForwardUserPmd_S::tokenid() const {
  // @@protoc_insertion_point(field_get:Pmd.WebSocketForwardUserPmd_S.tokenid)
  return tokenid_;
}
inline void WebSocketForwardUserPmd_S::set_tokenid(::google::protobuf::uint64 value) {
  set_has_tokenid();
  tokenid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WebSocketForwardUserPmd_S.tokenid)
}

// required uint64 logintempid = 6;
inline bool WebSocketForwardUserPmd_S::has_logintempid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WebSocketForwardUserPmd_S::set_has_logintempid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WebSocketForwardUserPmd_S::clear_has_logintempid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WebSocketForwardUserPmd_S::clear_logintempid() {
  logintempid_ = GOOGLE_ULONGLONG(0);
  clear_has_logintempid();
}
inline ::google::protobuf::uint64 WebSocketForwardUserPmd_S::logintempid() const {
  // @@protoc_insertion_point(field_get:Pmd.WebSocketForwardUserPmd_S.logintempid)
  return logintempid_;
}
inline void WebSocketForwardUserPmd_S::set_logintempid(::google::protobuf::uint64 value) {
  set_has_logintempid();
  logintempid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WebSocketForwardUserPmd_S.logintempid)
}

// required string gatewayurl = 7;
inline bool WebSocketForwardUserPmd_S::has_gatewayurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WebSocketForwardUserPmd_S::set_has_gatewayurl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WebSocketForwardUserPmd_S::clear_has_gatewayurl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WebSocketForwardUserPmd_S::clear_gatewayurl() {
  if (gatewayurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurl_->clear();
  }
  clear_has_gatewayurl();
}
inline const ::std::string& WebSocketForwardUserPmd_S::gatewayurl() const {
  // @@protoc_insertion_point(field_get:Pmd.WebSocketForwardUserPmd_S.gatewayurl)
  return *gatewayurl_;
}
inline void WebSocketForwardUserPmd_S::set_gatewayurl(const ::std::string& value) {
  set_has_gatewayurl();
  if (gatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurl_ = new ::std::string;
  }
  gatewayurl_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.WebSocketForwardUserPmd_S.gatewayurl)
}
inline void WebSocketForwardUserPmd_S::set_gatewayurl(const char* value) {
  set_has_gatewayurl();
  if (gatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurl_ = new ::std::string;
  }
  gatewayurl_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.WebSocketForwardUserPmd_S.gatewayurl)
}
inline void WebSocketForwardUserPmd_S::set_gatewayurl(const char* value, size_t size) {
  set_has_gatewayurl();
  if (gatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurl_ = new ::std::string;
  }
  gatewayurl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.WebSocketForwardUserPmd_S.gatewayurl)
}
inline ::std::string* WebSocketForwardUserPmd_S::mutable_gatewayurl() {
  set_has_gatewayurl();
  if (gatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.WebSocketForwardUserPmd_S.gatewayurl)
  return gatewayurl_;
}
inline ::std::string* WebSocketForwardUserPmd_S::release_gatewayurl() {
  clear_has_gatewayurl();
  if (gatewayurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gatewayurl_;
    gatewayurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WebSocketForwardUserPmd_S::set_allocated_gatewayurl(::std::string* gatewayurl) {
  if (gatewayurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gatewayurl_;
  }
  if (gatewayurl) {
    set_has_gatewayurl();
    gatewayurl_ = gatewayurl;
  } else {
    clear_has_gatewayurl();
    gatewayurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.WebSocketForwardUserPmd_S.gatewayurl)
}

// required string gatewayurltcp = 8;
inline bool WebSocketForwardUserPmd_S::has_gatewayurltcp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WebSocketForwardUserPmd_S::set_has_gatewayurltcp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WebSocketForwardUserPmd_S::clear_has_gatewayurltcp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WebSocketForwardUserPmd_S::clear_gatewayurltcp() {
  if (gatewayurltcp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurltcp_->clear();
  }
  clear_has_gatewayurltcp();
}
inline const ::std::string& WebSocketForwardUserPmd_S::gatewayurltcp() const {
  // @@protoc_insertion_point(field_get:Pmd.WebSocketForwardUserPmd_S.gatewayurltcp)
  return *gatewayurltcp_;
}
inline void WebSocketForwardUserPmd_S::set_gatewayurltcp(const ::std::string& value) {
  set_has_gatewayurltcp();
  if (gatewayurltcp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurltcp_ = new ::std::string;
  }
  gatewayurltcp_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.WebSocketForwardUserPmd_S.gatewayurltcp)
}
inline void WebSocketForwardUserPmd_S::set_gatewayurltcp(const char* value) {
  set_has_gatewayurltcp();
  if (gatewayurltcp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurltcp_ = new ::std::string;
  }
  gatewayurltcp_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.WebSocketForwardUserPmd_S.gatewayurltcp)
}
inline void WebSocketForwardUserPmd_S::set_gatewayurltcp(const char* value, size_t size) {
  set_has_gatewayurltcp();
  if (gatewayurltcp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurltcp_ = new ::std::string;
  }
  gatewayurltcp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.WebSocketForwardUserPmd_S.gatewayurltcp)
}
inline ::std::string* WebSocketForwardUserPmd_S::mutable_gatewayurltcp() {
  set_has_gatewayurltcp();
  if (gatewayurltcp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gatewayurltcp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.WebSocketForwardUserPmd_S.gatewayurltcp)
  return gatewayurltcp_;
}
inline ::std::string* WebSocketForwardUserPmd_S::release_gatewayurltcp() {
  clear_has_gatewayurltcp();
  if (gatewayurltcp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gatewayurltcp_;
    gatewayurltcp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WebSocketForwardUserPmd_S::set_allocated_gatewayurltcp(::std::string* gatewayurltcp) {
  if (gatewayurltcp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gatewayurltcp_;
  }
  if (gatewayurltcp) {
    set_has_gatewayurltcp();
    gatewayurltcp_ = gatewayurltcp;
  } else {
    clear_has_gatewayurltcp();
    gatewayurltcp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.WebSocketForwardUserPmd_S.gatewayurltcp)
}

// -------------------------------------------------------------------

// BehaviorMessageForwardUserPmd_CS

// repeated string msg = 1;
inline int BehaviorMessageForwardUserPmd_CS::msg_size() const {
  return msg_.size();
}
inline void BehaviorMessageForwardUserPmd_CS::clear_msg() {
  msg_.Clear();
}
inline const ::std::string& BehaviorMessageForwardUserPmd_CS::msg(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
  return msg_.Get(index);
}
inline ::std::string* BehaviorMessageForwardUserPmd_CS::mutable_msg(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
  return msg_.Mutable(index);
}
inline void BehaviorMessageForwardUserPmd_CS::set_msg(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
  msg_.Mutable(index)->assign(value);
}
inline void BehaviorMessageForwardUserPmd_CS::set_msg(int index, const char* value) {
  msg_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
}
inline void BehaviorMessageForwardUserPmd_CS::set_msg(int index, const char* value, size_t size) {
  msg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
}
inline ::std::string* BehaviorMessageForwardUserPmd_CS::add_msg() {
  return msg_.Add();
}
inline void BehaviorMessageForwardUserPmd_CS::add_msg(const ::std::string& value) {
  msg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
}
inline void BehaviorMessageForwardUserPmd_CS::add_msg(const char* value) {
  msg_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
}
inline void BehaviorMessageForwardUserPmd_CS::add_msg(const char* value, size_t size) {
  msg_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BehaviorMessageForwardUserPmd_CS::msg() const {
  // @@protoc_insertion_point(field_list:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
  return msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BehaviorMessageForwardUserPmd_CS::mutable_msg() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.BehaviorMessageForwardUserPmd_CS.msg)
  return &msg_;
}

// optional .Pmd.BehaviorMessageForwardUserPmd_CS.Type type = 2 [default = NormalText];
inline bool BehaviorMessageForwardUserPmd_CS::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BehaviorMessageForwardUserPmd_CS::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BehaviorMessageForwardUserPmd_CS::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BehaviorMessageForwardUserPmd_CS::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Pmd::BehaviorMessageForwardUserPmd_CS_Type BehaviorMessageForwardUserPmd_CS::type() const {
  // @@protoc_insertion_point(field_get:Pmd.BehaviorMessageForwardUserPmd_CS.type)
  return static_cast< ::Pmd::BehaviorMessageForwardUserPmd_CS_Type >(type_);
}
inline void BehaviorMessageForwardUserPmd_CS::set_type(::Pmd::BehaviorMessageForwardUserPmd_CS_Type value) {
  assert(::Pmd::BehaviorMessageForwardUserPmd_CS_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BehaviorMessageForwardUserPmd_CS.type)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Pmd::Forward_Param> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::Forward_Param>() {
  return ::Pmd::Forward_Param_descriptor();
}
template <> struct is_proto_enum< ::Pmd::BehaviorMessageForwardUserPmd_CS_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::BehaviorMessageForwardUserPmd_CS_Type>() {
  return ::Pmd::BehaviorMessageForwardUserPmd_CS_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_forwardcommand_2eproto__INCLUDED
