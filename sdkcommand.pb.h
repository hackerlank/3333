// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdkcommand.proto

#ifndef PROTOBUF_sdkcommand_2eproto__INCLUDED
#define PROTOBUF_sdkcommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "pmd.pb.h"
// @@protoc_insertion_point(includes)

namespace Pmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_sdkcommand_2eproto();
void protobuf_AssignDesc_sdkcommand_2eproto();
void protobuf_ShutdownFile_sdkcommand_2eproto();

class Sdk;
class StartUpGameRequestSdkPmd_C;
class StartUpGameReturnSdkPmd_S;
class SdkPlatInfo;
class GamePlatList;
class SupportGamePlatListSdkPmd_S;
class PlatBaseData;
class UserLoginPlatRequestSdkPmd_C;
class UserLoginPlatReturnSdkPmd_S;
class CreatePlatOrderRequestSdkPmd_C;
class CreatePlatOrderReturnSdkPmd_S;
class NotifyRechargeRequestSdkPmd_S;
class NotifyRechargeReturnSdkPmd_C;
class RechargeQueryRequestIOSSdkPmd_C;
class RequestQueryPlatPointSdkPmd_C;
class ReturnQueryPlatPointSdkPmd_S;
class RequestRedeemPlatPointSdkPmd_C;
class ReturnRedeemPlatPointSdkPmd_S;
class RequestRedeemBackPlatPointSdkPmd_C;
class ReturnRedeemBackPlatPointSdkPmd_S;
class ReturnErrorCodeSdkPmd_S;
class RequestBindAccountSdkPmd_CS;
class PlatAccountInfo;
class RequestBindPlatInfoSdkPmd_CS;
class RequestAccidByPlatinfoSdkPmd_CS;
class RequestUnbindAccountSdkPmd_CS;
class NotifyTapJoyRequestSdkPmd_S;
class PushMsgRequestSdkPmd_C;
class PushMsgReturnSdkPmd_S;
class BindAccountPhoneSdkPmd_CS;
class RequestMobileRegistRandCodeSdkPmd_CS;

enum Sdk_Param {
  Sdk_Param_StartUpGameRequestSdkPmd_C = 1,
  Sdk_Param_StartUpGameReturnSdkPmd_S = 2,
  Sdk_Param_SupportGamePlatListSdkPmd_S = 3,
  Sdk_Param_UserLoginPlatRequestSdkPmd_C = 4,
  Sdk_Param_UserLoginPlatReturnSdkPmd_S = 5,
  Sdk_Param_CreatePlatOrderRequestSdkPmd_C = 6,
  Sdk_Param_CreatePlatOrderReturnSdkPmd_S = 7,
  Sdk_Param_NotifyRechargeRequestSdkPmd_S = 8,
  Sdk_Param_NotifyRechargeReturnSdkPmd_C = 9,
  Sdk_Param_RechargeQueryRequestIOSSdkPmd_C = 10,
  Sdk_Param_RequestQueryPlatPointSdkPmd_C = 11,
  Sdk_Param_ReturnQueryPlatPointSdkPmd_S = 12,
  Sdk_Param_RequestRedeemPlatPointSdkPmd_C = 13,
  Sdk_Param_ReturnRedeemPlatPointSdkPmd_S = 14,
  Sdk_Param_ReturnErrorCodeSdkPmd_S = 15,
  Sdk_Param_RequestBindAccountSdkPmd_CS = 16,
  Sdk_Param_RequestBindPlatInfoSdkPmd_CS = 17,
  Sdk_Param_RequestAccidByPlatinfoSdkPmd_CS = 18,
  Sdk_Param_RequestRedeemBackPlatPointSdkPmd_C = 19,
  Sdk_Param_ReturnRedeemBackPlatPointSdkPmd_S = 20,
  Sdk_Param_RequestUnbindAccountSdkPmd_CS = 21,
  Sdk_Param_NotifyTapJoyRequestSdkPmd_S = 22,
  Sdk_Param_PushMsgRequestSdkPmd_C = 23,
  Sdk_Param_PushMsgReturnSdkPmd_S = 24,
  Sdk_Param_BindAccountPhoneSdkPmd_CS = 25,
  Sdk_Param_RequestMobileRegistRandCodeSdkPmd_CS = 26
};
bool Sdk_Param_IsValid(int value);
const Sdk_Param Sdk_Param_Param_MIN = Sdk_Param_StartUpGameRequestSdkPmd_C;
const Sdk_Param Sdk_Param_Param_MAX = Sdk_Param_RequestMobileRegistRandCodeSdkPmd_CS;
const int Sdk_Param_Param_ARRAYSIZE = Sdk_Param_Param_MAX + 1;

const ::google::protobuf::EnumDescriptor* Sdk_Param_descriptor();
inline const ::std::string& Sdk_Param_Name(Sdk_Param value) {
  return ::google::protobuf::internal::NameOfEnum(
    Sdk_Param_descriptor(), value);
}
inline bool Sdk_Param_Parse(
    const ::std::string& name, Sdk_Param* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Sdk_Param>(
    Sdk_Param_descriptor(), name, value);
}
// ===================================================================

class Sdk : public ::google::protobuf::Message {
 public:
  Sdk();
  virtual ~Sdk();

  Sdk(const Sdk& from);

  inline Sdk& operator=(const Sdk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Sdk& default_instance();

  void Swap(Sdk* other);

  // implements Message ----------------------------------------------

  Sdk* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Sdk& from);
  void MergeFrom(const Sdk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Sdk_Param Param;
  static const Param StartUpGameRequestSdkPmd_C = Sdk_Param_StartUpGameRequestSdkPmd_C;
  static const Param StartUpGameReturnSdkPmd_S = Sdk_Param_StartUpGameReturnSdkPmd_S;
  static const Param SupportGamePlatListSdkPmd_S = Sdk_Param_SupportGamePlatListSdkPmd_S;
  static const Param UserLoginPlatRequestSdkPmd_C = Sdk_Param_UserLoginPlatRequestSdkPmd_C;
  static const Param UserLoginPlatReturnSdkPmd_S = Sdk_Param_UserLoginPlatReturnSdkPmd_S;
  static const Param CreatePlatOrderRequestSdkPmd_C = Sdk_Param_CreatePlatOrderRequestSdkPmd_C;
  static const Param CreatePlatOrderReturnSdkPmd_S = Sdk_Param_CreatePlatOrderReturnSdkPmd_S;
  static const Param NotifyRechargeRequestSdkPmd_S = Sdk_Param_NotifyRechargeRequestSdkPmd_S;
  static const Param NotifyRechargeReturnSdkPmd_C = Sdk_Param_NotifyRechargeReturnSdkPmd_C;
  static const Param RechargeQueryRequestIOSSdkPmd_C = Sdk_Param_RechargeQueryRequestIOSSdkPmd_C;
  static const Param RequestQueryPlatPointSdkPmd_C = Sdk_Param_RequestQueryPlatPointSdkPmd_C;
  static const Param ReturnQueryPlatPointSdkPmd_S = Sdk_Param_ReturnQueryPlatPointSdkPmd_S;
  static const Param RequestRedeemPlatPointSdkPmd_C = Sdk_Param_RequestRedeemPlatPointSdkPmd_C;
  static const Param ReturnRedeemPlatPointSdkPmd_S = Sdk_Param_ReturnRedeemPlatPointSdkPmd_S;
  static const Param ReturnErrorCodeSdkPmd_S = Sdk_Param_ReturnErrorCodeSdkPmd_S;
  static const Param RequestBindAccountSdkPmd_CS = Sdk_Param_RequestBindAccountSdkPmd_CS;
  static const Param RequestBindPlatInfoSdkPmd_CS = Sdk_Param_RequestBindPlatInfoSdkPmd_CS;
  static const Param RequestAccidByPlatinfoSdkPmd_CS = Sdk_Param_RequestAccidByPlatinfoSdkPmd_CS;
  static const Param RequestRedeemBackPlatPointSdkPmd_C = Sdk_Param_RequestRedeemBackPlatPointSdkPmd_C;
  static const Param ReturnRedeemBackPlatPointSdkPmd_S = Sdk_Param_ReturnRedeemBackPlatPointSdkPmd_S;
  static const Param RequestUnbindAccountSdkPmd_CS = Sdk_Param_RequestUnbindAccountSdkPmd_CS;
  static const Param NotifyTapJoyRequestSdkPmd_S = Sdk_Param_NotifyTapJoyRequestSdkPmd_S;
  static const Param PushMsgRequestSdkPmd_C = Sdk_Param_PushMsgRequestSdkPmd_C;
  static const Param PushMsgReturnSdkPmd_S = Sdk_Param_PushMsgReturnSdkPmd_S;
  static const Param BindAccountPhoneSdkPmd_CS = Sdk_Param_BindAccountPhoneSdkPmd_CS;
  static const Param RequestMobileRegistRandCodeSdkPmd_CS = Sdk_Param_RequestMobileRegistRandCodeSdkPmd_CS;
  static inline bool Param_IsValid(int value) {
    return Sdk_Param_IsValid(value);
  }
  static const Param Param_MIN =
    Sdk_Param_Param_MIN;
  static const Param Param_MAX =
    Sdk_Param_Param_MAX;
  static const int Param_ARRAYSIZE =
    Sdk_Param_Param_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Param_descriptor() {
    return Sdk_Param_descriptor();
  }
  static inline const ::std::string& Param_Name(Param value) {
    return Sdk_Param_Name(value);
  }
  static inline bool Param_Parse(const ::std::string& name,
      Param* value) {
    return Sdk_Param_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.Sdk)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static Sdk* default_instance_;
};
// -------------------------------------------------------------------

class StartUpGameRequestSdkPmd_C : public ::google::protobuf::Message {
 public:
  StartUpGameRequestSdkPmd_C();
  virtual ~StartUpGameRequestSdkPmd_C();

  StartUpGameRequestSdkPmd_C(const StartUpGameRequestSdkPmd_C& from);

  inline StartUpGameRequestSdkPmd_C& operator=(const StartUpGameRequestSdkPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartUpGameRequestSdkPmd_C& default_instance();

  void Swap(StartUpGameRequestSdkPmd_C* other);

  // implements Message ----------------------------------------------

  StartUpGameRequestSdkPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartUpGameRequestSdkPmd_C& from);
  void MergeFrom(const StartUpGameRequestSdkPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required uint32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional string compress = 3;
  inline bool has_compress() const;
  inline void clear_compress();
  static const int kCompressFieldNumber = 3;
  inline const ::std::string& compress() const;
  inline void set_compress(const ::std::string& value);
  inline void set_compress(const char* value);
  inline void set_compress(const char* value, size_t size);
  inline ::std::string* mutable_compress();
  inline ::std::string* release_compress();
  inline void set_allocated_compress(::std::string* compress);

  // optional string encrypt = 4;
  inline bool has_encrypt() const;
  inline void clear_encrypt();
  static const int kEncryptFieldNumber = 4;
  inline const ::std::string& encrypt() const;
  inline void set_encrypt(const ::std::string& value);
  inline void set_encrypt(const char* value);
  inline void set_encrypt(const char* value, size_t size);
  inline ::std::string* mutable_encrypt();
  inline ::std::string* release_encrypt();
  inline void set_allocated_encrypt(::std::string* encrypt);

  // optional string encryptkey = 5;
  inline bool has_encryptkey() const;
  inline void clear_encryptkey();
  static const int kEncryptkeyFieldNumber = 5;
  inline const ::std::string& encryptkey() const;
  inline void set_encryptkey(const ::std::string& value);
  inline void set_encryptkey(const char* value);
  inline void set_encryptkey(const char* value, size_t size);
  inline ::std::string* mutable_encryptkey();
  inline ::std::string* release_encryptkey();
  inline void set_allocated_encryptkey(::std::string* encryptkey);

  // @@protoc_insertion_point(class_scope:Pmd.StartUpGameRequestSdkPmd_C)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_compress();
  inline void clear_has_compress();
  inline void set_has_encrypt();
  inline void clear_has_encrypt();
  inline void set_has_encryptkey();
  inline void clear_has_encryptkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::std::string* compress_;
  ::std::string* encrypt_;
  ::std::string* encryptkey_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static StartUpGameRequestSdkPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class StartUpGameReturnSdkPmd_S : public ::google::protobuf::Message {
 public:
  StartUpGameReturnSdkPmd_S();
  virtual ~StartUpGameReturnSdkPmd_S();

  StartUpGameReturnSdkPmd_S(const StartUpGameReturnSdkPmd_S& from);

  inline StartUpGameReturnSdkPmd_S& operator=(const StartUpGameReturnSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartUpGameReturnSdkPmd_S& default_instance();

  void Swap(StartUpGameReturnSdkPmd_S* other);

  // implements Message ----------------------------------------------

  StartUpGameReturnSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartUpGameReturnSdkPmd_S& from);
  void MergeFrom(const StartUpGameReturnSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline bool ret() const;
  inline void set_ret(bool value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.StartUpGameReturnSdkPmd_S)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  bool ret_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static StartUpGameReturnSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class SdkPlatInfo : public ::google::protobuf::Message {
 public:
  SdkPlatInfo();
  virtual ~SdkPlatInfo();

  SdkPlatInfo(const SdkPlatInfo& from);

  inline SdkPlatInfo& operator=(const SdkPlatInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SdkPlatInfo& default_instance();

  void Swap(SdkPlatInfo* other);

  // implements Message ----------------------------------------------

  SdkPlatInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SdkPlatInfo& from);
  void MergeFrom(const SdkPlatInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 platid = 1;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatidFieldNumber = 1;
  inline ::google::protobuf::uint32 platid() const;
  inline void set_platid(::google::protobuf::uint32 value);

  // optional string platname = 5;
  inline bool has_platname() const;
  inline void clear_platname();
  static const int kPlatnameFieldNumber = 5;
  inline const ::std::string& platname() const;
  inline void set_platname(const ::std::string& value);
  inline void set_platname(const char* value);
  inline void set_platname(const char* value, size_t size);
  inline ::std::string* mutable_platname();
  inline ::std::string* release_platname();
  inline void set_allocated_platname(::std::string* platname);

  // @@protoc_insertion_point(class_scope:Pmd.SdkPlatInfo)
 private:
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_platname();
  inline void clear_has_platname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* platname_;
  ::google::protobuf::uint32 platid_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static SdkPlatInfo* default_instance_;
};
// -------------------------------------------------------------------

class GamePlatList : public ::google::protobuf::Message {
 public:
  GamePlatList();
  virtual ~GamePlatList();

  GamePlatList(const GamePlatList& from);

  inline GamePlatList& operator=(const GamePlatList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GamePlatList& default_instance();

  void Swap(GamePlatList* other);

  // implements Message ----------------------------------------------

  GamePlatList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GamePlatList& from);
  void MergeFrom(const GamePlatList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.GameZoneInfo gamezone = 1;
  inline bool has_gamezone() const;
  inline void clear_gamezone();
  static const int kGamezoneFieldNumber = 1;
  inline const ::Pmd::GameZoneInfo& gamezone() const;
  inline ::Pmd::GameZoneInfo* mutable_gamezone();
  inline ::Pmd::GameZoneInfo* release_gamezone();
  inline void set_allocated_gamezone(::Pmd::GameZoneInfo* gamezone);

  // repeated .Pmd.SdkPlatInfo Platinfo = 2;
  inline int platinfo_size() const;
  inline void clear_platinfo();
  static const int kPlatinfoFieldNumber = 2;
  inline const ::Pmd::SdkPlatInfo& platinfo(int index) const;
  inline ::Pmd::SdkPlatInfo* mutable_platinfo(int index);
  inline ::Pmd::SdkPlatInfo* add_platinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::SdkPlatInfo >&
      platinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::SdkPlatInfo >*
      mutable_platinfo();

  // @@protoc_insertion_point(class_scope:Pmd.GamePlatList)
 private:
  inline void set_has_gamezone();
  inline void clear_has_gamezone();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::GameZoneInfo* gamezone_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::SdkPlatInfo > platinfo_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static GamePlatList* default_instance_;
};
// -------------------------------------------------------------------

class SupportGamePlatListSdkPmd_S : public ::google::protobuf::Message {
 public:
  SupportGamePlatListSdkPmd_S();
  virtual ~SupportGamePlatListSdkPmd_S();

  SupportGamePlatListSdkPmd_S(const SupportGamePlatListSdkPmd_S& from);

  inline SupportGamePlatListSdkPmd_S& operator=(const SupportGamePlatListSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SupportGamePlatListSdkPmd_S& default_instance();

  void Swap(SupportGamePlatListSdkPmd_S* other);

  // implements Message ----------------------------------------------

  SupportGamePlatListSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SupportGamePlatListSdkPmd_S& from);
  void MergeFrom(const SupportGamePlatListSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pmd.GamePlatList list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::Pmd::GamePlatList& list(int index) const;
  inline ::Pmd::GamePlatList* mutable_list(int index);
  inline ::Pmd::GamePlatList* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::GamePlatList >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::GamePlatList >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:Pmd.SupportGamePlatListSdkPmd_S)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::GamePlatList > list_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static SupportGamePlatListSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class PlatBaseData : public ::google::protobuf::Message {
 public:
  PlatBaseData();
  virtual ~PlatBaseData();

  PlatBaseData(const PlatBaseData& from);

  inline PlatBaseData& operator=(const PlatBaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatBaseData& default_instance();

  void Swap(PlatBaseData* other);

  // implements Message ----------------------------------------------

  PlatBaseData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlatBaseData& from);
  void MergeFrom(const PlatBaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.GameZoneInfo gamezone = 1;
  inline bool has_gamezone() const;
  inline void clear_gamezone();
  static const int kGamezoneFieldNumber = 1;
  inline const ::Pmd::GameZoneInfo& gamezone() const;
  inline ::Pmd::GameZoneInfo* mutable_gamezone();
  inline ::Pmd::GameZoneInfo* release_gamezone();
  inline void set_allocated_gamezone(::Pmd::GameZoneInfo* gamezone);

  // optional uint64 myaccid = 2;
  inline bool has_myaccid() const;
  inline void clear_myaccid();
  static const int kMyaccidFieldNumber = 2;
  inline ::google::protobuf::uint64 myaccid() const;
  inline void set_myaccid(::google::protobuf::uint64 value);

  // optional uint32 platid = 3;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatidFieldNumber = 3;
  inline ::google::protobuf::uint32 platid() const;
  inline void set_platid(::google::protobuf::uint32 value);

  // optional uint32 subplatid = 4;
  inline bool has_subplatid() const;
  inline void clear_subplatid();
  static const int kSubplatidFieldNumber = 4;
  inline ::google::protobuf::uint32 subplatid() const;
  inline void set_subplatid(::google::protobuf::uint32 value);

  // optional string plataccount = 5;
  inline bool has_plataccount() const;
  inline void clear_plataccount();
  static const int kPlataccountFieldNumber = 5;
  inline const ::std::string& plataccount() const;
  inline void set_plataccount(const ::std::string& value);
  inline void set_plataccount(const char* value);
  inline void set_plataccount(const char* value, size_t size);
  inline ::std::string* mutable_plataccount();
  inline ::std::string* release_plataccount();
  inline void set_allocated_plataccount(::std::string* plataccount);

  // optional string session = 6;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 6;
  inline const ::std::string& session() const;
  inline void set_session(const ::std::string& value);
  inline void set_session(const char* value);
  inline void set_session(const char* value, size_t size);
  inline ::std::string* mutable_session();
  inline ::std::string* release_session();
  inline void set_allocated_session(::std::string* session);

  // optional string extdata = 7;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 7;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // optional string extdata1 = 8;
  inline bool has_extdata1() const;
  inline void clear_extdata1();
  static const int kExtdata1FieldNumber = 8;
  inline const ::std::string& extdata1() const;
  inline void set_extdata1(const ::std::string& value);
  inline void set_extdata1(const char* value);
  inline void set_extdata1(const char* value, size_t size);
  inline ::std::string* mutable_extdata1();
  inline ::std::string* release_extdata1();
  inline void set_allocated_extdata1(::std::string* extdata1);

  // optional string oldplataccount = 9;
  inline bool has_oldplataccount() const;
  inline void clear_oldplataccount();
  static const int kOldplataccountFieldNumber = 9;
  inline const ::std::string& oldplataccount() const;
  inline void set_oldplataccount(const ::std::string& value);
  inline void set_oldplataccount(const char* value);
  inline void set_oldplataccount(const char* value, size_t size);
  inline ::std::string* mutable_oldplataccount();
  inline ::std::string* release_oldplataccount();
  inline void set_allocated_oldplataccount(::std::string* oldplataccount);

  // optional string nickname = 10;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 10;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string faceurl = 11;
  inline bool has_faceurl() const;
  inline void clear_faceurl();
  static const int kFaceurlFieldNumber = 11;
  inline const ::std::string& faceurl() const;
  inline void set_faceurl(const ::std::string& value);
  inline void set_faceurl(const char* value);
  inline void set_faceurl(const char* value, size_t size);
  inline ::std::string* mutable_faceurl();
  inline ::std::string* release_faceurl();
  inline void set_allocated_faceurl(::std::string* faceurl);

  // optional uint64 sdkserverid = 12;
  inline bool has_sdkserverid() const;
  inline void clear_sdkserverid();
  static const int kSdkserveridFieldNumber = 12;
  inline ::google::protobuf::uint64 sdkserverid() const;
  inline void set_sdkserverid(::google::protobuf::uint64 value);

  // optional uint32 oldplatid = 13;
  inline bool has_oldplatid() const;
  inline void clear_oldplatid();
  static const int kOldplatidFieldNumber = 13;
  inline ::google::protobuf::uint32 oldplatid() const;
  inline void set_oldplatid(::google::protobuf::uint32 value);

  // optional uint32 clienttype = 14;
  inline bool has_clienttype() const;
  inline void clear_clienttype();
  static const int kClienttypeFieldNumber = 14;
  inline ::google::protobuf::uint32 clienttype() const;
  inline void set_clienttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.PlatBaseData)
 private:
  inline void set_has_gamezone();
  inline void clear_has_gamezone();
  inline void set_has_myaccid();
  inline void clear_has_myaccid();
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_subplatid();
  inline void clear_has_subplatid();
  inline void set_has_plataccount();
  inline void clear_has_plataccount();
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_extdata();
  inline void clear_has_extdata();
  inline void set_has_extdata1();
  inline void clear_has_extdata1();
  inline void set_has_oldplataccount();
  inline void clear_has_oldplataccount();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_faceurl();
  inline void clear_has_faceurl();
  inline void set_has_sdkserverid();
  inline void clear_has_sdkserverid();
  inline void set_has_oldplatid();
  inline void clear_has_oldplatid();
  inline void set_has_clienttype();
  inline void clear_has_clienttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::GameZoneInfo* gamezone_;
  ::google::protobuf::uint64 myaccid_;
  ::google::protobuf::uint32 platid_;
  ::google::protobuf::uint32 subplatid_;
  ::std::string* plataccount_;
  ::std::string* session_;
  ::std::string* extdata_;
  ::std::string* extdata1_;
  ::std::string* oldplataccount_;
  ::std::string* nickname_;
  ::std::string* faceurl_;
  ::google::protobuf::uint64 sdkserverid_;
  ::google::protobuf::uint32 oldplatid_;
  ::google::protobuf::uint32 clienttype_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static PlatBaseData* default_instance_;
};
// -------------------------------------------------------------------

class UserLoginPlatRequestSdkPmd_C : public ::google::protobuf::Message {
 public:
  UserLoginPlatRequestSdkPmd_C();
  virtual ~UserLoginPlatRequestSdkPmd_C();

  UserLoginPlatRequestSdkPmd_C(const UserLoginPlatRequestSdkPmd_C& from);

  inline UserLoginPlatRequestSdkPmd_C& operator=(const UserLoginPlatRequestSdkPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginPlatRequestSdkPmd_C& default_instance();

  void Swap(UserLoginPlatRequestSdkPmd_C* other);

  // implements Message ----------------------------------------------

  UserLoginPlatRequestSdkPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLoginPlatRequestSdkPmd_C& from);
  void MergeFrom(const UserLoginPlatRequestSdkPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional uint32 sessiontype = 2;
  inline bool has_sessiontype() const;
  inline void clear_sessiontype();
  static const int kSessiontypeFieldNumber = 2;
  inline ::google::protobuf::uint32 sessiontype() const;
  inline void set_sessiontype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.UserLoginPlatRequestSdkPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_sessiontype();
  inline void clear_has_sessiontype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::google::protobuf::uint32 sessiontype_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static UserLoginPlatRequestSdkPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class UserLoginPlatReturnSdkPmd_S : public ::google::protobuf::Message {
 public:
  UserLoginPlatReturnSdkPmd_S();
  virtual ~UserLoginPlatReturnSdkPmd_S();

  UserLoginPlatReturnSdkPmd_S(const UserLoginPlatReturnSdkPmd_S& from);

  inline UserLoginPlatReturnSdkPmd_S& operator=(const UserLoginPlatReturnSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLoginPlatReturnSdkPmd_S& default_instance();

  void Swap(UserLoginPlatReturnSdkPmd_S* other);

  // implements Message ----------------------------------------------

  UserLoginPlatReturnSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLoginPlatReturnSdkPmd_S& from);
  void MergeFrom(const UserLoginPlatReturnSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional string retdesc = 3;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 3;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.UserLoginPlatReturnSdkPmd_S)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static UserLoginPlatReturnSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class CreatePlatOrderRequestSdkPmd_C : public ::google::protobuf::Message {
 public:
  CreatePlatOrderRequestSdkPmd_C();
  virtual ~CreatePlatOrderRequestSdkPmd_C();

  CreatePlatOrderRequestSdkPmd_C(const CreatePlatOrderRequestSdkPmd_C& from);

  inline CreatePlatOrderRequestSdkPmd_C& operator=(const CreatePlatOrderRequestSdkPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePlatOrderRequestSdkPmd_C& default_instance();

  void Swap(CreatePlatOrderRequestSdkPmd_C* other);

  // implements Message ----------------------------------------------

  CreatePlatOrderRequestSdkPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatePlatOrderRequestSdkPmd_C& from);
  void MergeFrom(const CreatePlatOrderRequestSdkPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required string gameorder = 2;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 2;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // required uint64 roleid = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 3;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required string rolename = 4;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 4;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required float originalmoney = 5;
  inline bool has_originalmoney() const;
  inline void clear_originalmoney();
  static const int kOriginalmoneyFieldNumber = 5;
  inline float originalmoney() const;
  inline void set_originalmoney(float value);

  // required float ordermoney = 6;
  inline bool has_ordermoney() const;
  inline void clear_ordermoney();
  static const int kOrdermoneyFieldNumber = 6;
  inline float ordermoney() const;
  inline void set_ordermoney(float value);

  // required uint32 goodid = 7;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodidFieldNumber = 7;
  inline ::google::protobuf::uint32 goodid() const;
  inline void set_goodid(::google::protobuf::uint32 value);

  // required uint32 goodnum = 8;
  inline bool has_goodnum() const;
  inline void clear_goodnum();
  static const int kGoodnumFieldNumber = 8;
  inline ::google::protobuf::uint32 goodnum() const;
  inline void set_goodnum(::google::protobuf::uint32 value);

  // optional string goodname = 9;
  inline bool has_goodname() const;
  inline void clear_goodname();
  static const int kGoodnameFieldNumber = 9;
  inline const ::std::string& goodname() const;
  inline void set_goodname(const ::std::string& value);
  inline void set_goodname(const char* value);
  inline void set_goodname(const char* value, size_t size);
  inline ::std::string* mutable_goodname();
  inline ::std::string* release_goodname();
  inline void set_allocated_goodname(::std::string* goodname);

  // optional string gooddesc = 10;
  inline bool has_gooddesc() const;
  inline void clear_gooddesc();
  static const int kGooddescFieldNumber = 10;
  inline const ::std::string& gooddesc() const;
  inline void set_gooddesc(const ::std::string& value);
  inline void set_gooddesc(const char* value);
  inline void set_gooddesc(const char* value, size_t size);
  inline ::std::string* mutable_gooddesc();
  inline ::std::string* release_gooddesc();
  inline void set_allocated_gooddesc(::std::string* gooddesc);

  // optional string redirecturl = 11;
  inline bool has_redirecturl() const;
  inline void clear_redirecturl();
  static const int kRedirecturlFieldNumber = 11;
  inline const ::std::string& redirecturl() const;
  inline void set_redirecturl(const ::std::string& value);
  inline void set_redirecturl(const char* value);
  inline void set_redirecturl(const char* value, size_t size);
  inline ::std::string* mutable_redirecturl();
  inline ::std::string* release_redirecturl();
  inline void set_allocated_redirecturl(::std::string* redirecturl);

  // optional uint32 payplatid = 12;
  inline bool has_payplatid() const;
  inline void clear_payplatid();
  static const int kPayplatidFieldNumber = 12;
  inline ::google::protobuf::uint32 payplatid() const;
  inline void set_payplatid(::google::protobuf::uint32 value);

  // optional string extdata = 13;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 13;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // @@protoc_insertion_point(class_scope:Pmd.CreatePlatOrderRequestSdkPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_originalmoney();
  inline void clear_has_originalmoney();
  inline void set_has_ordermoney();
  inline void clear_has_ordermoney();
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_goodnum();
  inline void clear_has_goodnum();
  inline void set_has_goodname();
  inline void clear_has_goodname();
  inline void set_has_gooddesc();
  inline void clear_has_gooddesc();
  inline void set_has_redirecturl();
  inline void clear_has_redirecturl();
  inline void set_has_payplatid();
  inline void clear_has_payplatid();
  inline void set_has_extdata();
  inline void clear_has_extdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* gameorder_;
  ::google::protobuf::uint64 roleid_;
  ::std::string* rolename_;
  float originalmoney_;
  float ordermoney_;
  ::google::protobuf::uint32 goodid_;
  ::google::protobuf::uint32 goodnum_;
  ::std::string* goodname_;
  ::std::string* gooddesc_;
  ::std::string* redirecturl_;
  ::std::string* extdata_;
  ::google::protobuf::uint32 payplatid_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static CreatePlatOrderRequestSdkPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class CreatePlatOrderReturnSdkPmd_S : public ::google::protobuf::Message {
 public:
  CreatePlatOrderReturnSdkPmd_S();
  virtual ~CreatePlatOrderReturnSdkPmd_S();

  CreatePlatOrderReturnSdkPmd_S(const CreatePlatOrderReturnSdkPmd_S& from);

  inline CreatePlatOrderReturnSdkPmd_S& operator=(const CreatePlatOrderReturnSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePlatOrderReturnSdkPmd_S& default_instance();

  void Swap(CreatePlatOrderReturnSdkPmd_S* other);

  // implements Message ----------------------------------------------

  CreatePlatOrderReturnSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatePlatOrderReturnSdkPmd_S& from);
  void MergeFrom(const CreatePlatOrderReturnSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required string gameorder = 2;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 2;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // required uint64 roleid = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 3;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required float originalmoney = 4;
  inline bool has_originalmoney() const;
  inline void clear_originalmoney();
  static const int kOriginalmoneyFieldNumber = 4;
  inline float originalmoney() const;
  inline void set_originalmoney(float value);

  // required float ordermoney = 5;
  inline bool has_ordermoney() const;
  inline void clear_ordermoney();
  static const int kOrdermoneyFieldNumber = 5;
  inline float ordermoney() const;
  inline void set_ordermoney(float value);

  // required uint32 goodid = 6;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodidFieldNumber = 6;
  inline ::google::protobuf::uint32 goodid() const;
  inline void set_goodid(::google::protobuf::uint32 value);

  // required uint32 goodnum = 7;
  inline bool has_goodnum() const;
  inline void clear_goodnum();
  static const int kGoodnumFieldNumber = 7;
  inline ::google::protobuf::uint32 goodnum() const;
  inline void set_goodnum(::google::protobuf::uint32 value);

  // required uint32 result = 8;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 8;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string noticeurl = 9;
  inline bool has_noticeurl() const;
  inline void clear_noticeurl();
  static const int kNoticeurlFieldNumber = 9;
  inline const ::std::string& noticeurl() const;
  inline void set_noticeurl(const ::std::string& value);
  inline void set_noticeurl(const char* value);
  inline void set_noticeurl(const char* value, size_t size);
  inline ::std::string* mutable_noticeurl();
  inline ::std::string* release_noticeurl();
  inline void set_allocated_noticeurl(::std::string* noticeurl);

  // optional string platorder = 10;
  inline bool has_platorder() const;
  inline void clear_platorder();
  static const int kPlatorderFieldNumber = 10;
  inline const ::std::string& platorder() const;
  inline void set_platorder(const ::std::string& value);
  inline void set_platorder(const char* value);
  inline void set_platorder(const char* value, size_t size);
  inline ::std::string* mutable_platorder();
  inline ::std::string* release_platorder();
  inline void set_allocated_platorder(::std::string* platorder);

  // optional string sign = 11;
  inline bool has_sign() const;
  inline void clear_sign();
  static const int kSignFieldNumber = 11;
  inline const ::std::string& sign() const;
  inline void set_sign(const ::std::string& value);
  inline void set_sign(const char* value);
  inline void set_sign(const char* value, size_t size);
  inline ::std::string* mutable_sign();
  inline ::std::string* release_sign();
  inline void set_allocated_sign(::std::string* sign);

  // optional string redirecturl = 12;
  inline bool has_redirecturl() const;
  inline void clear_redirecturl();
  static const int kRedirecturlFieldNumber = 12;
  inline const ::std::string& redirecturl() const;
  inline void set_redirecturl(const ::std::string& value);
  inline void set_redirecturl(const char* value);
  inline void set_redirecturl(const char* value, size_t size);
  inline ::std::string* mutable_redirecturl();
  inline ::std::string* release_redirecturl();
  inline void set_allocated_redirecturl(::std::string* redirecturl);

  // optional uint32 payplatid = 13;
  inline bool has_payplatid() const;
  inline void clear_payplatid();
  static const int kPayplatidFieldNumber = 13;
  inline ::google::protobuf::uint32 payplatid() const;
  inline void set_payplatid(::google::protobuf::uint32 value);

  // optional string extdata = 14;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 14;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // @@protoc_insertion_point(class_scope:Pmd.CreatePlatOrderReturnSdkPmd_S)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_originalmoney();
  inline void clear_has_originalmoney();
  inline void set_has_ordermoney();
  inline void clear_has_ordermoney();
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_goodnum();
  inline void clear_has_goodnum();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_noticeurl();
  inline void clear_has_noticeurl();
  inline void set_has_platorder();
  inline void clear_has_platorder();
  inline void set_has_sign();
  inline void clear_has_sign();
  inline void set_has_redirecturl();
  inline void clear_has_redirecturl();
  inline void set_has_payplatid();
  inline void clear_has_payplatid();
  inline void set_has_extdata();
  inline void clear_has_extdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* gameorder_;
  ::google::protobuf::uint64 roleid_;
  float originalmoney_;
  float ordermoney_;
  ::google::protobuf::uint32 goodid_;
  ::google::protobuf::uint32 goodnum_;
  ::std::string* noticeurl_;
  ::std::string* platorder_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 payplatid_;
  ::std::string* sign_;
  ::std::string* redirecturl_;
  ::std::string* extdata_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static CreatePlatOrderReturnSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRechargeRequestSdkPmd_S : public ::google::protobuf::Message {
 public:
  NotifyRechargeRequestSdkPmd_S();
  virtual ~NotifyRechargeRequestSdkPmd_S();

  NotifyRechargeRequestSdkPmd_S(const NotifyRechargeRequestSdkPmd_S& from);

  inline NotifyRechargeRequestSdkPmd_S& operator=(const NotifyRechargeRequestSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRechargeRequestSdkPmd_S& default_instance();

  void Swap(NotifyRechargeRequestSdkPmd_S* other);

  // implements Message ----------------------------------------------

  NotifyRechargeRequestSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRechargeRequestSdkPmd_S& from);
  void MergeFrom(const NotifyRechargeRequestSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required string platorder = 2;
  inline bool has_platorder() const;
  inline void clear_platorder();
  static const int kPlatorderFieldNumber = 2;
  inline const ::std::string& platorder() const;
  inline void set_platorder(const ::std::string& value);
  inline void set_platorder(const char* value);
  inline void set_platorder(const char* value, size_t size);
  inline ::std::string* mutable_platorder();
  inline ::std::string* release_platorder();
  inline void set_allocated_platorder(::std::string* platorder);

  // required string gameorder = 3;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 3;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // required uint64 roleid = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 4;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required float originalmoney = 5;
  inline bool has_originalmoney() const;
  inline void clear_originalmoney();
  static const int kOriginalmoneyFieldNumber = 5;
  inline float originalmoney() const;
  inline void set_originalmoney(float value);

  // required float ordermoney = 6;
  inline bool has_ordermoney() const;
  inline void clear_ordermoney();
  static const int kOrdermoneyFieldNumber = 6;
  inline float ordermoney() const;
  inline void set_ordermoney(float value);

  // required uint32 goodid = 7;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodidFieldNumber = 7;
  inline ::google::protobuf::uint32 goodid() const;
  inline void set_goodid(::google::protobuf::uint32 value);

  // required uint32 goodnum = 8;
  inline bool has_goodnum() const;
  inline void clear_goodnum();
  static const int kGoodnumFieldNumber = 8;
  inline ::google::protobuf::uint32 goodnum() const;
  inline void set_goodnum(::google::protobuf::uint32 value);

  // required uint32 result = 9;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 9;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string extdata = 10;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 10;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // optional uint32 type = 11;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.NotifyRechargeRequestSdkPmd_S)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_platorder();
  inline void clear_has_platorder();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_originalmoney();
  inline void clear_has_originalmoney();
  inline void set_has_ordermoney();
  inline void clear_has_ordermoney();
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_goodnum();
  inline void clear_has_goodnum();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_extdata();
  inline void clear_has_extdata();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* platorder_;
  ::std::string* gameorder_;
  ::google::protobuf::uint64 roleid_;
  float originalmoney_;
  float ordermoney_;
  ::google::protobuf::uint32 goodid_;
  ::google::protobuf::uint32 goodnum_;
  ::std::string* extdata_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static NotifyRechargeRequestSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class NotifyRechargeReturnSdkPmd_C : public ::google::protobuf::Message {
 public:
  NotifyRechargeReturnSdkPmd_C();
  virtual ~NotifyRechargeReturnSdkPmd_C();

  NotifyRechargeReturnSdkPmd_C(const NotifyRechargeReturnSdkPmd_C& from);

  inline NotifyRechargeReturnSdkPmd_C& operator=(const NotifyRechargeReturnSdkPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyRechargeReturnSdkPmd_C& default_instance();

  void Swap(NotifyRechargeReturnSdkPmd_C* other);

  // implements Message ----------------------------------------------

  NotifyRechargeReturnSdkPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyRechargeReturnSdkPmd_C& from);
  void MergeFrom(const NotifyRechargeReturnSdkPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required string platorder = 2;
  inline bool has_platorder() const;
  inline void clear_platorder();
  static const int kPlatorderFieldNumber = 2;
  inline const ::std::string& platorder() const;
  inline void set_platorder(const ::std::string& value);
  inline void set_platorder(const char* value);
  inline void set_platorder(const char* value, size_t size);
  inline ::std::string* mutable_platorder();
  inline ::std::string* release_platorder();
  inline void set_allocated_platorder(::std::string* platorder);

  // required string gameorder = 3;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 3;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // required uint64 roleid = 4;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 4;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required uint32 result = 5;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string extdata = 6;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 6;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // @@protoc_insertion_point(class_scope:Pmd.NotifyRechargeReturnSdkPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_platorder();
  inline void clear_has_platorder();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_extdata();
  inline void clear_has_extdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* platorder_;
  ::std::string* gameorder_;
  ::google::protobuf::uint64 roleid_;
  ::std::string* extdata_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static NotifyRechargeReturnSdkPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class RechargeQueryRequestIOSSdkPmd_C : public ::google::protobuf::Message {
 public:
  RechargeQueryRequestIOSSdkPmd_C();
  virtual ~RechargeQueryRequestIOSSdkPmd_C();

  RechargeQueryRequestIOSSdkPmd_C(const RechargeQueryRequestIOSSdkPmd_C& from);

  inline RechargeQueryRequestIOSSdkPmd_C& operator=(const RechargeQueryRequestIOSSdkPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeQueryRequestIOSSdkPmd_C& default_instance();

  void Swap(RechargeQueryRequestIOSSdkPmd_C* other);

  // implements Message ----------------------------------------------

  RechargeQueryRequestIOSSdkPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeQueryRequestIOSSdkPmd_C& from);
  void MergeFrom(const RechargeQueryRequestIOSSdkPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required string gameorder = 2;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 2;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // required uint64 roleid = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleidFieldNumber = 3;
  inline ::google::protobuf::uint64 roleid() const;
  inline void set_roleid(::google::protobuf::uint64 value);

  // required float originalmoney = 4;
  inline bool has_originalmoney() const;
  inline void clear_originalmoney();
  static const int kOriginalmoneyFieldNumber = 4;
  inline float originalmoney() const;
  inline void set_originalmoney(float value);

  // required float ordermoney = 5;
  inline bool has_ordermoney() const;
  inline void clear_ordermoney();
  static const int kOrdermoneyFieldNumber = 5;
  inline float ordermoney() const;
  inline void set_ordermoney(float value);

  // optional string token = 6;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 6;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // optional string extdata = 7;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 7;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // optional uint32 payplatid = 8;
  inline bool has_payplatid() const;
  inline void clear_payplatid();
  static const int kPayplatidFieldNumber = 8;
  inline ::google::protobuf::uint32 payplatid() const;
  inline void set_payplatid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RechargeQueryRequestIOSSdkPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_originalmoney();
  inline void clear_has_originalmoney();
  inline void set_has_ordermoney();
  inline void clear_has_ordermoney();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_extdata();
  inline void clear_has_extdata();
  inline void set_has_payplatid();
  inline void clear_has_payplatid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* gameorder_;
  ::google::protobuf::uint64 roleid_;
  float originalmoney_;
  float ordermoney_;
  ::std::string* token_;
  ::std::string* extdata_;
  ::google::protobuf::uint32 payplatid_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static RechargeQueryRequestIOSSdkPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class RequestQueryPlatPointSdkPmd_C : public ::google::protobuf::Message {
 public:
  RequestQueryPlatPointSdkPmd_C();
  virtual ~RequestQueryPlatPointSdkPmd_C();

  RequestQueryPlatPointSdkPmd_C(const RequestQueryPlatPointSdkPmd_C& from);

  inline RequestQueryPlatPointSdkPmd_C& operator=(const RequestQueryPlatPointSdkPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestQueryPlatPointSdkPmd_C& default_instance();

  void Swap(RequestQueryPlatPointSdkPmd_C* other);

  // implements Message ----------------------------------------------

  RequestQueryPlatPointSdkPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestQueryPlatPointSdkPmd_C& from);
  void MergeFrom(const RequestQueryPlatPointSdkPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional string gameorder = 2;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 2;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // @@protoc_insertion_point(class_scope:Pmd.RequestQueryPlatPointSdkPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* gameorder_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestQueryPlatPointSdkPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnQueryPlatPointSdkPmd_S : public ::google::protobuf::Message {
 public:
  ReturnQueryPlatPointSdkPmd_S();
  virtual ~ReturnQueryPlatPointSdkPmd_S();

  ReturnQueryPlatPointSdkPmd_S(const ReturnQueryPlatPointSdkPmd_S& from);

  inline ReturnQueryPlatPointSdkPmd_S& operator=(const ReturnQueryPlatPointSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnQueryPlatPointSdkPmd_S& default_instance();

  void Swap(ReturnQueryPlatPointSdkPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnQueryPlatPointSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnQueryPlatPointSdkPmd_S& from);
  void MergeFrom(const ReturnQueryPlatPointSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required string gameorder = 2;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 2;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // required uint64 balance = 3;
  inline bool has_balance() const;
  inline void clear_balance();
  static const int kBalanceFieldNumber = 3;
  inline ::google::protobuf::uint64 balance() const;
  inline void set_balance(::google::protobuf::uint64 value);

  // required uint32 ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional string retdesc = 5;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 5;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // optional float money = 6;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 6;
  inline float money() const;
  inline void set_money(float value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnQueryPlatPointSdkPmd_S)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_balance();
  inline void clear_has_balance();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_money();
  inline void clear_has_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* gameorder_;
  ::google::protobuf::uint64 balance_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 ret_;
  float money_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnQueryPlatPointSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestRedeemPlatPointSdkPmd_C : public ::google::protobuf::Message {
 public:
  RequestRedeemPlatPointSdkPmd_C();
  virtual ~RequestRedeemPlatPointSdkPmd_C();

  RequestRedeemPlatPointSdkPmd_C(const RequestRedeemPlatPointSdkPmd_C& from);

  inline RequestRedeemPlatPointSdkPmd_C& operator=(const RequestRedeemPlatPointSdkPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRedeemPlatPointSdkPmd_C& default_instance();

  void Swap(RequestRedeemPlatPointSdkPmd_C* other);

  // implements Message ----------------------------------------------

  RequestRedeemPlatPointSdkPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestRedeemPlatPointSdkPmd_C& from);
  void MergeFrom(const RequestRedeemPlatPointSdkPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional string gameorder = 2;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 2;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // optional uint32 goodid = 3;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodidFieldNumber = 3;
  inline ::google::protobuf::uint32 goodid() const;
  inline void set_goodid(::google::protobuf::uint32 value);

  // optional float money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline float money() const;
  inline void set_money(float value);

  // optional string extdata = 5;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 5;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // @@protoc_insertion_point(class_scope:Pmd.RequestRedeemPlatPointSdkPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_extdata();
  inline void clear_has_extdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* gameorder_;
  ::google::protobuf::uint32 goodid_;
  float money_;
  ::std::string* extdata_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestRedeemPlatPointSdkPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnRedeemPlatPointSdkPmd_S : public ::google::protobuf::Message {
 public:
  ReturnRedeemPlatPointSdkPmd_S();
  virtual ~ReturnRedeemPlatPointSdkPmd_S();

  ReturnRedeemPlatPointSdkPmd_S(const ReturnRedeemPlatPointSdkPmd_S& from);

  inline ReturnRedeemPlatPointSdkPmd_S& operator=(const ReturnRedeemPlatPointSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnRedeemPlatPointSdkPmd_S& default_instance();

  void Swap(ReturnRedeemPlatPointSdkPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnRedeemPlatPointSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnRedeemPlatPointSdkPmd_S& from);
  void MergeFrom(const ReturnRedeemPlatPointSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required string gameorder = 2;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 2;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // required uint32 goodid = 3;
  inline bool has_goodid() const;
  inline void clear_goodid();
  static const int kGoodidFieldNumber = 3;
  inline ::google::protobuf::uint32 goodid() const;
  inline void set_goodid(::google::protobuf::uint32 value);

  // required float money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline float money() const;
  inline void set_money(float value);

  // required uint64 balance = 5;
  inline bool has_balance() const;
  inline void clear_balance();
  static const int kBalanceFieldNumber = 5;
  inline ::google::protobuf::uint64 balance() const;
  inline void set_balance(::google::protobuf::uint64 value);

  // required uint32 ret = 6;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 6;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional string retdesc = 7;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 7;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnRedeemPlatPointSdkPmd_S)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_goodid();
  inline void clear_has_goodid();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_balance();
  inline void clear_has_balance();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* gameorder_;
  ::google::protobuf::uint32 goodid_;
  float money_;
  ::google::protobuf::uint64 balance_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnRedeemPlatPointSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestRedeemBackPlatPointSdkPmd_C : public ::google::protobuf::Message {
 public:
  RequestRedeemBackPlatPointSdkPmd_C();
  virtual ~RequestRedeemBackPlatPointSdkPmd_C();

  RequestRedeemBackPlatPointSdkPmd_C(const RequestRedeemBackPlatPointSdkPmd_C& from);

  inline RequestRedeemBackPlatPointSdkPmd_C& operator=(const RequestRedeemBackPlatPointSdkPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRedeemBackPlatPointSdkPmd_C& default_instance();

  void Swap(RequestRedeemBackPlatPointSdkPmd_C* other);

  // implements Message ----------------------------------------------

  RequestRedeemBackPlatPointSdkPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestRedeemBackPlatPointSdkPmd_C& from);
  void MergeFrom(const RequestRedeemBackPlatPointSdkPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional string gameorder = 2;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 2;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // optional uint32 point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::uint32 point() const;
  inline void set_point(::google::protobuf::uint32 value);

  // optional float money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline float money() const;
  inline void set_money(float value);

  // optional string extdata = 5;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 5;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // @@protoc_insertion_point(class_scope:Pmd.RequestRedeemBackPlatPointSdkPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_extdata();
  inline void clear_has_extdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* gameorder_;
  ::google::protobuf::uint32 point_;
  float money_;
  ::std::string* extdata_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestRedeemBackPlatPointSdkPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnRedeemBackPlatPointSdkPmd_S : public ::google::protobuf::Message {
 public:
  ReturnRedeemBackPlatPointSdkPmd_S();
  virtual ~ReturnRedeemBackPlatPointSdkPmd_S();

  ReturnRedeemBackPlatPointSdkPmd_S(const ReturnRedeemBackPlatPointSdkPmd_S& from);

  inline ReturnRedeemBackPlatPointSdkPmd_S& operator=(const ReturnRedeemBackPlatPointSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnRedeemBackPlatPointSdkPmd_S& default_instance();

  void Swap(ReturnRedeemBackPlatPointSdkPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnRedeemBackPlatPointSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnRedeemBackPlatPointSdkPmd_S& from);
  void MergeFrom(const ReturnRedeemBackPlatPointSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required string gameorder = 2;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 2;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // required uint64 balance = 3;
  inline bool has_balance() const;
  inline void clear_balance();
  static const int kBalanceFieldNumber = 3;
  inline ::google::protobuf::uint64 balance() const;
  inline void set_balance(::google::protobuf::uint64 value);

  // optional float money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline float money() const;
  inline void set_money(float value);

  // required uint32 ret = 5;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 5;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional string retdesc = 6;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 6;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnRedeemBackPlatPointSdkPmd_S)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_balance();
  inline void clear_has_balance();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* gameorder_;
  ::google::protobuf::uint64 balance_;
  float money_;
  ::google::protobuf::uint32 ret_;
  ::std::string* retdesc_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnRedeemBackPlatPointSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class ReturnErrorCodeSdkPmd_S : public ::google::protobuf::Message {
 public:
  ReturnErrorCodeSdkPmd_S();
  virtual ~ReturnErrorCodeSdkPmd_S();

  ReturnErrorCodeSdkPmd_S(const ReturnErrorCodeSdkPmd_S& from);

  inline ReturnErrorCodeSdkPmd_S& operator=(const ReturnErrorCodeSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnErrorCodeSdkPmd_S& default_instance();

  void Swap(ReturnErrorCodeSdkPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnErrorCodeSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnErrorCodeSdkPmd_S& from);
  void MergeFrom(const ReturnErrorCodeSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional string retdesc = 3;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 3;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnErrorCodeSdkPmd_S)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnErrorCodeSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestBindAccountSdkPmd_CS : public ::google::protobuf::Message {
 public:
  RequestBindAccountSdkPmd_CS();
  virtual ~RequestBindAccountSdkPmd_CS();

  RequestBindAccountSdkPmd_CS(const RequestBindAccountSdkPmd_CS& from);

  inline RequestBindAccountSdkPmd_CS& operator=(const RequestBindAccountSdkPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestBindAccountSdkPmd_CS& default_instance();

  void Swap(RequestBindAccountSdkPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestBindAccountSdkPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestBindAccountSdkPmd_CS& from);
  void MergeFrom(const RequestBindAccountSdkPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestBindAccountSdkPmd_CS)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestBindAccountSdkPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class PlatAccountInfo : public ::google::protobuf::Message {
 public:
  PlatAccountInfo();
  virtual ~PlatAccountInfo();

  PlatAccountInfo(const PlatAccountInfo& from);

  inline PlatAccountInfo& operator=(const PlatAccountInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatAccountInfo& default_instance();

  void Swap(PlatAccountInfo* other);

  // implements Message ----------------------------------------------

  PlatAccountInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlatAccountInfo& from);
  void MergeFrom(const PlatAccountInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 platid = 1;
  inline bool has_platid() const;
  inline void clear_platid();
  static const int kPlatidFieldNumber = 1;
  inline ::google::protobuf::uint32 platid() const;
  inline void set_platid(::google::protobuf::uint32 value);

  // optional string plataccount = 2;
  inline bool has_plataccount() const;
  inline void clear_plataccount();
  static const int kPlataccountFieldNumber = 2;
  inline const ::std::string& plataccount() const;
  inline void set_plataccount(const ::std::string& value);
  inline void set_plataccount(const char* value);
  inline void set_plataccount(const char* value, size_t size);
  inline ::std::string* mutable_plataccount();
  inline ::std::string* release_plataccount();
  inline void set_allocated_plataccount(::std::string* plataccount);

  // optional string platname = 3;
  inline bool has_platname() const;
  inline void clear_platname();
  static const int kPlatnameFieldNumber = 3;
  inline const ::std::string& platname() const;
  inline void set_platname(const ::std::string& value);
  inline void set_platname(const char* value);
  inline void set_platname(const char* value, size_t size);
  inline ::std::string* mutable_platname();
  inline ::std::string* release_platname();
  inline void set_allocated_platname(::std::string* platname);

  // @@protoc_insertion_point(class_scope:Pmd.PlatAccountInfo)
 private:
  inline void set_has_platid();
  inline void clear_has_platid();
  inline void set_has_plataccount();
  inline void clear_has_plataccount();
  inline void set_has_platname();
  inline void clear_has_platname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* plataccount_;
  ::std::string* platname_;
  ::google::protobuf::uint32 platid_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static PlatAccountInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestBindPlatInfoSdkPmd_CS : public ::google::protobuf::Message {
 public:
  RequestBindPlatInfoSdkPmd_CS();
  virtual ~RequestBindPlatInfoSdkPmd_CS();

  RequestBindPlatInfoSdkPmd_CS(const RequestBindPlatInfoSdkPmd_CS& from);

  inline RequestBindPlatInfoSdkPmd_CS& operator=(const RequestBindPlatInfoSdkPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestBindPlatInfoSdkPmd_CS& default_instance();

  void Swap(RequestBindPlatInfoSdkPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestBindPlatInfoSdkPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestBindPlatInfoSdkPmd_CS& from);
  void MergeFrom(const RequestBindPlatInfoSdkPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // repeated .Pmd.PlatAccountInfo bindplat = 2;
  inline int bindplat_size() const;
  inline void clear_bindplat();
  static const int kBindplatFieldNumber = 2;
  inline const ::Pmd::PlatAccountInfo& bindplat(int index) const;
  inline ::Pmd::PlatAccountInfo* mutable_bindplat(int index);
  inline ::Pmd::PlatAccountInfo* add_bindplat();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PlatAccountInfo >&
      bindplat() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::PlatAccountInfo >*
      mutable_bindplat();

  // optional uint32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestBindPlatInfoSdkPmd_CS)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::PlatAccountInfo > bindplat_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestBindPlatInfoSdkPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestAccidByPlatinfoSdkPmd_CS : public ::google::protobuf::Message {
 public:
  RequestAccidByPlatinfoSdkPmd_CS();
  virtual ~RequestAccidByPlatinfoSdkPmd_CS();

  RequestAccidByPlatinfoSdkPmd_CS(const RequestAccidByPlatinfoSdkPmd_CS& from);

  inline RequestAccidByPlatinfoSdkPmd_CS& operator=(const RequestAccidByPlatinfoSdkPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAccidByPlatinfoSdkPmd_CS& default_instance();

  void Swap(RequestAccidByPlatinfoSdkPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestAccidByPlatinfoSdkPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestAccidByPlatinfoSdkPmd_CS& from);
  void MergeFrom(const RequestAccidByPlatinfoSdkPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // repeated .Pmd.PlatBaseData reqdata = 2;
  inline int reqdata_size() const;
  inline void clear_reqdata();
  static const int kReqdataFieldNumber = 2;
  inline const ::Pmd::PlatBaseData& reqdata(int index) const;
  inline ::Pmd::PlatBaseData* mutable_reqdata(int index);
  inline ::Pmd::PlatBaseData* add_reqdata();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PlatBaseData >&
      reqdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::PlatBaseData >*
      mutable_reqdata();

  // optional uint32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestAccidByPlatinfoSdkPmd_CS)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::PlatBaseData > reqdata_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestAccidByPlatinfoSdkPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestUnbindAccountSdkPmd_CS : public ::google::protobuf::Message {
 public:
  RequestUnbindAccountSdkPmd_CS();
  virtual ~RequestUnbindAccountSdkPmd_CS();

  RequestUnbindAccountSdkPmd_CS(const RequestUnbindAccountSdkPmd_CS& from);

  inline RequestUnbindAccountSdkPmd_CS& operator=(const RequestUnbindAccountSdkPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestUnbindAccountSdkPmd_CS& default_instance();

  void Swap(RequestUnbindAccountSdkPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestUnbindAccountSdkPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestUnbindAccountSdkPmd_CS& from);
  void MergeFrom(const RequestUnbindAccountSdkPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional uint32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestUnbindAccountSdkPmd_CS)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestUnbindAccountSdkPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class NotifyTapJoyRequestSdkPmd_S : public ::google::protobuf::Message {
 public:
  NotifyTapJoyRequestSdkPmd_S();
  virtual ~NotifyTapJoyRequestSdkPmd_S();

  NotifyTapJoyRequestSdkPmd_S(const NotifyTapJoyRequestSdkPmd_S& from);

  inline NotifyTapJoyRequestSdkPmd_S& operator=(const NotifyTapJoyRequestSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyTapJoyRequestSdkPmd_S& default_instance();

  void Swap(NotifyTapJoyRequestSdkPmd_S* other);

  // implements Message ----------------------------------------------

  NotifyTapJoyRequestSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NotifyTapJoyRequestSdkPmd_S& from);
  void MergeFrom(const NotifyTapJoyRequestSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional int32 point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // optional uint32 placement = 3;
  inline bool has_placement() const;
  inline void clear_placement();
  static const int kPlacementFieldNumber = 3;
  inline ::google::protobuf::uint32 placement() const;
  inline void set_placement(::google::protobuf::uint32 value);

  // optional string extdata = 4;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 4;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // @@protoc_insertion_point(class_scope:Pmd.NotifyTapJoyRequestSdkPmd_S)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_placement();
  inline void clear_has_placement();
  inline void set_has_extdata();
  inline void clear_has_extdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::uint32 placement_;
  ::std::string* extdata_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static NotifyTapJoyRequestSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class PushMsgRequestSdkPmd_C : public ::google::protobuf::Message {
 public:
  PushMsgRequestSdkPmd_C();
  virtual ~PushMsgRequestSdkPmd_C();

  PushMsgRequestSdkPmd_C(const PushMsgRequestSdkPmd_C& from);

  inline PushMsgRequestSdkPmd_C& operator=(const PushMsgRequestSdkPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMsgRequestSdkPmd_C& default_instance();

  void Swap(PushMsgRequestSdkPmd_C* other);

  // implements Message ----------------------------------------------

  PushMsgRequestSdkPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMsgRequestSdkPmd_C& from);
  void MergeFrom(const PushMsgRequestSdkPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // repeated string tokens = 3;
  inline int tokens_size() const;
  inline void clear_tokens();
  static const int kTokensFieldNumber = 3;
  inline const ::std::string& tokens(int index) const;
  inline ::std::string* mutable_tokens(int index);
  inline void set_tokens(int index, const ::std::string& value);
  inline void set_tokens(int index, const char* value);
  inline void set_tokens(int index, const char* value, size_t size);
  inline ::std::string* add_tokens();
  inline void add_tokens(const ::std::string& value);
  inline void add_tokens(const char* value);
  inline void add_tokens(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& tokens() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tokens();

  // optional string title = 4;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 4;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string message = 5;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 5;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional string extdata = 6;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 6;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // @@protoc_insertion_point(class_scope:Pmd.PushMsgRequestSdkPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_extdata();
  inline void clear_has_extdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tokens_;
  ::std::string* title_;
  ::std::string* message_;
  ::std::string* extdata_;
  ::google::protobuf::uint32 msgid_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static PushMsgRequestSdkPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class PushMsgReturnSdkPmd_S : public ::google::protobuf::Message {
 public:
  PushMsgReturnSdkPmd_S();
  virtual ~PushMsgReturnSdkPmd_S();

  PushMsgReturnSdkPmd_S(const PushMsgReturnSdkPmd_S& from);

  inline PushMsgReturnSdkPmd_S& operator=(const PushMsgReturnSdkPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushMsgReturnSdkPmd_S& default_instance();

  void Swap(PushMsgReturnSdkPmd_S* other);

  // implements Message ----------------------------------------------

  PushMsgReturnSdkPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushMsgReturnSdkPmd_S& from);
  void MergeFrom(const PushMsgReturnSdkPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional uint32 msgid = 2;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 2;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // optional uint32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional string retdesc = 4;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 4;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.PushMsgReturnSdkPmd_S)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 ret_;
  ::std::string* retdesc_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static PushMsgReturnSdkPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class BindAccountPhoneSdkPmd_CS : public ::google::protobuf::Message {
 public:
  BindAccountPhoneSdkPmd_CS();
  virtual ~BindAccountPhoneSdkPmd_CS();

  BindAccountPhoneSdkPmd_CS(const BindAccountPhoneSdkPmd_CS& from);

  inline BindAccountPhoneSdkPmd_CS& operator=(const BindAccountPhoneSdkPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindAccountPhoneSdkPmd_CS& default_instance();

  void Swap(BindAccountPhoneSdkPmd_CS* other);

  // implements Message ----------------------------------------------

  BindAccountPhoneSdkPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindAccountPhoneSdkPmd_CS& from);
  void MergeFrom(const BindAccountPhoneSdkPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // required string phone = 2;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 2;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  inline void set_allocated_phone(::std::string* phone);

  // optional string code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // optional uint32 ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional string retdesc = 5;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 5;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.BindAccountPhoneSdkPmd_CS)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* phone_;
  ::std::string* code_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static BindAccountPhoneSdkPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestMobileRegistRandCodeSdkPmd_CS : public ::google::protobuf::Message {
 public:
  RequestMobileRegistRandCodeSdkPmd_CS();
  virtual ~RequestMobileRegistRandCodeSdkPmd_CS();

  RequestMobileRegistRandCodeSdkPmd_CS(const RequestMobileRegistRandCodeSdkPmd_CS& from);

  inline RequestMobileRegistRandCodeSdkPmd_CS& operator=(const RequestMobileRegistRandCodeSdkPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMobileRegistRandCodeSdkPmd_CS& default_instance();

  void Swap(RequestMobileRegistRandCodeSdkPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestMobileRegistRandCodeSdkPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMobileRegistRandCodeSdkPmd_CS& from);
  void MergeFrom(const RequestMobileRegistRandCodeSdkPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PlatBaseData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PlatBaseData& data() const;
  inline ::Pmd::PlatBaseData* mutable_data();
  inline ::Pmd::PlatBaseData* release_data();
  inline void set_allocated_data(::Pmd::PlatBaseData* data);

  // optional string mobilenum = 2;
  inline bool has_mobilenum() const;
  inline void clear_mobilenum();
  static const int kMobilenumFieldNumber = 2;
  inline const ::std::string& mobilenum() const;
  inline void set_mobilenum(const ::std::string& value);
  inline void set_mobilenum(const char* value);
  inline void set_mobilenum(const char* value, size_t size);
  inline ::std::string* mutable_mobilenum();
  inline ::std::string* release_mobilenum();
  inline void set_allocated_mobilenum(::std::string* mobilenum);

  // optional string randcode = 3;
  inline bool has_randcode() const;
  inline void clear_randcode();
  static const int kRandcodeFieldNumber = 3;
  inline const ::std::string& randcode() const;
  inline void set_randcode(const ::std::string& value);
  inline void set_randcode(const char* value);
  inline void set_randcode(const char* value, size_t size);
  inline ::std::string* mutable_randcode();
  inline ::std::string* release_randcode();
  inline void set_allocated_randcode(::std::string* randcode);

  // optional uint64 logintempid = 4;
  inline bool has_logintempid() const;
  inline void clear_logintempid();
  static const int kLogintempidFieldNumber = 4;
  inline ::google::protobuf::uint64 logintempid() const;
  inline void set_logintempid(::google::protobuf::uint64 value);

  // optional uint32 clienttype = 5;
  inline bool has_clienttype() const;
  inline void clear_clienttype();
  static const int kClienttypeFieldNumber = 5;
  inline ::google::protobuf::uint32 clienttype() const;
  inline void set_clienttype(::google::protobuf::uint32 value);

  // optional uint32 ret = 6;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 6;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional string retdesc = 7;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 7;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.RequestMobileRegistRandCodeSdkPmd_CS)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_mobilenum();
  inline void clear_has_mobilenum();
  inline void set_has_randcode();
  inline void clear_has_randcode();
  inline void set_has_logintempid();
  inline void clear_has_logintempid();
  inline void set_has_clienttype();
  inline void clear_has_clienttype();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PlatBaseData* data_;
  ::std::string* mobilenum_;
  ::std::string* randcode_;
  ::google::protobuf::uint64 logintempid_;
  ::google::protobuf::uint32 clienttype_;
  ::google::protobuf::uint32 ret_;
  ::std::string* retdesc_;
  friend void  protobuf_AddDesc_sdkcommand_2eproto();
  friend void protobuf_AssignDesc_sdkcommand_2eproto();
  friend void protobuf_ShutdownFile_sdkcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestMobileRegistRandCodeSdkPmd_CS* default_instance_;
};
// ===================================================================


// ===================================================================

// Sdk

// -------------------------------------------------------------------

// StartUpGameRequestSdkPmd_C

// required string key = 1;
inline bool StartUpGameRequestSdkPmd_C::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartUpGameRequestSdkPmd_C::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartUpGameRequestSdkPmd_C::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartUpGameRequestSdkPmd_C::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& StartUpGameRequestSdkPmd_C::key() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestSdkPmd_C.key)
  return *key_;
}
inline void StartUpGameRequestSdkPmd_C::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestSdkPmd_C.key)
}
inline void StartUpGameRequestSdkPmd_C::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameRequestSdkPmd_C.key)
}
inline void StartUpGameRequestSdkPmd_C::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameRequestSdkPmd_C.key)
}
inline ::std::string* StartUpGameRequestSdkPmd_C::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameRequestSdkPmd_C.key)
  return key_;
}
inline ::std::string* StartUpGameRequestSdkPmd_C::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameRequestSdkPmd_C::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameRequestSdkPmd_C.key)
}

// required uint32 version = 2;
inline bool StartUpGameRequestSdkPmd_C::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartUpGameRequestSdkPmd_C::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartUpGameRequestSdkPmd_C::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartUpGameRequestSdkPmd_C::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 StartUpGameRequestSdkPmd_C::version() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestSdkPmd_C.version)
  return version_;
}
inline void StartUpGameRequestSdkPmd_C::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestSdkPmd_C.version)
}

// optional string compress = 3;
inline bool StartUpGameRequestSdkPmd_C::has_compress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartUpGameRequestSdkPmd_C::set_has_compress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartUpGameRequestSdkPmd_C::clear_has_compress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartUpGameRequestSdkPmd_C::clear_compress() {
  if (compress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_->clear();
  }
  clear_has_compress();
}
inline const ::std::string& StartUpGameRequestSdkPmd_C::compress() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestSdkPmd_C.compress)
  return *compress_;
}
inline void StartUpGameRequestSdkPmd_C::set_compress(const ::std::string& value) {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  compress_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestSdkPmd_C.compress)
}
inline void StartUpGameRequestSdkPmd_C::set_compress(const char* value) {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  compress_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameRequestSdkPmd_C.compress)
}
inline void StartUpGameRequestSdkPmd_C::set_compress(const char* value, size_t size) {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  compress_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameRequestSdkPmd_C.compress)
}
inline ::std::string* StartUpGameRequestSdkPmd_C::mutable_compress() {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameRequestSdkPmd_C.compress)
  return compress_;
}
inline ::std::string* StartUpGameRequestSdkPmd_C::release_compress() {
  clear_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = compress_;
    compress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameRequestSdkPmd_C::set_allocated_compress(::std::string* compress) {
  if (compress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete compress_;
  }
  if (compress) {
    set_has_compress();
    compress_ = compress;
  } else {
    clear_has_compress();
    compress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameRequestSdkPmd_C.compress)
}

// optional string encrypt = 4;
inline bool StartUpGameRequestSdkPmd_C::has_encrypt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartUpGameRequestSdkPmd_C::set_has_encrypt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartUpGameRequestSdkPmd_C::clear_has_encrypt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartUpGameRequestSdkPmd_C::clear_encrypt() {
  if (encrypt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_->clear();
  }
  clear_has_encrypt();
}
inline const ::std::string& StartUpGameRequestSdkPmd_C::encrypt() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestSdkPmd_C.encrypt)
  return *encrypt_;
}
inline void StartUpGameRequestSdkPmd_C::set_encrypt(const ::std::string& value) {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  encrypt_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestSdkPmd_C.encrypt)
}
inline void StartUpGameRequestSdkPmd_C::set_encrypt(const char* value) {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  encrypt_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameRequestSdkPmd_C.encrypt)
}
inline void StartUpGameRequestSdkPmd_C::set_encrypt(const char* value, size_t size) {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  encrypt_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameRequestSdkPmd_C.encrypt)
}
inline ::std::string* StartUpGameRequestSdkPmd_C::mutable_encrypt() {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameRequestSdkPmd_C.encrypt)
  return encrypt_;
}
inline ::std::string* StartUpGameRequestSdkPmd_C::release_encrypt() {
  clear_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = encrypt_;
    encrypt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameRequestSdkPmd_C::set_allocated_encrypt(::std::string* encrypt) {
  if (encrypt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encrypt_;
  }
  if (encrypt) {
    set_has_encrypt();
    encrypt_ = encrypt;
  } else {
    clear_has_encrypt();
    encrypt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameRequestSdkPmd_C.encrypt)
}

// optional string encryptkey = 5;
inline bool StartUpGameRequestSdkPmd_C::has_encryptkey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartUpGameRequestSdkPmd_C::set_has_encryptkey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartUpGameRequestSdkPmd_C::clear_has_encryptkey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartUpGameRequestSdkPmd_C::clear_encryptkey() {
  if (encryptkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_->clear();
  }
  clear_has_encryptkey();
}
inline const ::std::string& StartUpGameRequestSdkPmd_C::encryptkey() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestSdkPmd_C.encryptkey)
  return *encryptkey_;
}
inline void StartUpGameRequestSdkPmd_C::set_encryptkey(const ::std::string& value) {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestSdkPmd_C.encryptkey)
}
inline void StartUpGameRequestSdkPmd_C::set_encryptkey(const char* value) {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameRequestSdkPmd_C.encryptkey)
}
inline void StartUpGameRequestSdkPmd_C::set_encryptkey(const char* value, size_t size) {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameRequestSdkPmd_C.encryptkey)
}
inline ::std::string* StartUpGameRequestSdkPmd_C::mutable_encryptkey() {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameRequestSdkPmd_C.encryptkey)
  return encryptkey_;
}
inline ::std::string* StartUpGameRequestSdkPmd_C::release_encryptkey() {
  clear_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = encryptkey_;
    encryptkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameRequestSdkPmd_C::set_allocated_encryptkey(::std::string* encryptkey) {
  if (encryptkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encryptkey_;
  }
  if (encryptkey) {
    set_has_encryptkey();
    encryptkey_ = encryptkey;
  } else {
    clear_has_encryptkey();
    encryptkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameRequestSdkPmd_C.encryptkey)
}

// -------------------------------------------------------------------

// StartUpGameReturnSdkPmd_S

// required bool ret = 1;
inline bool StartUpGameReturnSdkPmd_S::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartUpGameReturnSdkPmd_S::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartUpGameReturnSdkPmd_S::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartUpGameReturnSdkPmd_S::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool StartUpGameReturnSdkPmd_S::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameReturnSdkPmd_S.ret)
  return ret_;
}
inline void StartUpGameReturnSdkPmd_S::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameReturnSdkPmd_S.ret)
}

// optional string retdesc = 2;
inline bool StartUpGameReturnSdkPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartUpGameReturnSdkPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartUpGameReturnSdkPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartUpGameReturnSdkPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& StartUpGameReturnSdkPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameReturnSdkPmd_S.retdesc)
  return *retdesc_;
}
inline void StartUpGameReturnSdkPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameReturnSdkPmd_S.retdesc)
}
inline void StartUpGameReturnSdkPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameReturnSdkPmd_S.retdesc)
}
inline void StartUpGameReturnSdkPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameReturnSdkPmd_S.retdesc)
}
inline ::std::string* StartUpGameReturnSdkPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameReturnSdkPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* StartUpGameReturnSdkPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameReturnSdkPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameReturnSdkPmd_S.retdesc)
}

// -------------------------------------------------------------------

// SdkPlatInfo

// optional uint32 platid = 1;
inline bool SdkPlatInfo::has_platid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SdkPlatInfo::set_has_platid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SdkPlatInfo::clear_has_platid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SdkPlatInfo::clear_platid() {
  platid_ = 0u;
  clear_has_platid();
}
inline ::google::protobuf::uint32 SdkPlatInfo::platid() const {
  // @@protoc_insertion_point(field_get:Pmd.SdkPlatInfo.platid)
  return platid_;
}
inline void SdkPlatInfo::set_platid(::google::protobuf::uint32 value) {
  set_has_platid();
  platid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.SdkPlatInfo.platid)
}

// optional string platname = 5;
inline bool SdkPlatInfo::has_platname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SdkPlatInfo::set_has_platname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SdkPlatInfo::clear_has_platname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SdkPlatInfo::clear_platname() {
  if (platname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_->clear();
  }
  clear_has_platname();
}
inline const ::std::string& SdkPlatInfo::platname() const {
  // @@protoc_insertion_point(field_get:Pmd.SdkPlatInfo.platname)
  return *platname_;
}
inline void SdkPlatInfo::set_platname(const ::std::string& value) {
  set_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_ = new ::std::string;
  }
  platname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.SdkPlatInfo.platname)
}
inline void SdkPlatInfo::set_platname(const char* value) {
  set_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_ = new ::std::string;
  }
  platname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.SdkPlatInfo.platname)
}
inline void SdkPlatInfo::set_platname(const char* value, size_t size) {
  set_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_ = new ::std::string;
  }
  platname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.SdkPlatInfo.platname)
}
inline ::std::string* SdkPlatInfo::mutable_platname() {
  set_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.SdkPlatInfo.platname)
  return platname_;
}
inline ::std::string* SdkPlatInfo::release_platname() {
  clear_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platname_;
    platname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SdkPlatInfo::set_allocated_platname(::std::string* platname) {
  if (platname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platname_;
  }
  if (platname) {
    set_has_platname();
    platname_ = platname;
  } else {
    clear_has_platname();
    platname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.SdkPlatInfo.platname)
}

// -------------------------------------------------------------------

// GamePlatList

// required .Pmd.GameZoneInfo gamezone = 1;
inline bool GamePlatList::has_gamezone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GamePlatList::set_has_gamezone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GamePlatList::clear_has_gamezone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GamePlatList::clear_gamezone() {
  if (gamezone_ != NULL) gamezone_->::Pmd::GameZoneInfo::Clear();
  clear_has_gamezone();
}
inline const ::Pmd::GameZoneInfo& GamePlatList::gamezone() const {
  // @@protoc_insertion_point(field_get:Pmd.GamePlatList.gamezone)
  return gamezone_ != NULL ? *gamezone_ : *default_instance_->gamezone_;
}
inline ::Pmd::GameZoneInfo* GamePlatList::mutable_gamezone() {
  set_has_gamezone();
  if (gamezone_ == NULL) gamezone_ = new ::Pmd::GameZoneInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.GamePlatList.gamezone)
  return gamezone_;
}
inline ::Pmd::GameZoneInfo* GamePlatList::release_gamezone() {
  clear_has_gamezone();
  ::Pmd::GameZoneInfo* temp = gamezone_;
  gamezone_ = NULL;
  return temp;
}
inline void GamePlatList::set_allocated_gamezone(::Pmd::GameZoneInfo* gamezone) {
  delete gamezone_;
  gamezone_ = gamezone;
  if (gamezone) {
    set_has_gamezone();
  } else {
    clear_has_gamezone();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.GamePlatList.gamezone)
}

// repeated .Pmd.SdkPlatInfo Platinfo = 2;
inline int GamePlatList::platinfo_size() const {
  return platinfo_.size();
}
inline void GamePlatList::clear_platinfo() {
  platinfo_.Clear();
}
inline const ::Pmd::SdkPlatInfo& GamePlatList::platinfo(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.GamePlatList.Platinfo)
  return platinfo_.Get(index);
}
inline ::Pmd::SdkPlatInfo* GamePlatList::mutable_platinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.GamePlatList.Platinfo)
  return platinfo_.Mutable(index);
}
inline ::Pmd::SdkPlatInfo* GamePlatList::add_platinfo() {
  // @@protoc_insertion_point(field_add:Pmd.GamePlatList.Platinfo)
  return platinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::SdkPlatInfo >&
GamePlatList::platinfo() const {
  // @@protoc_insertion_point(field_list:Pmd.GamePlatList.Platinfo)
  return platinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::SdkPlatInfo >*
GamePlatList::mutable_platinfo() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.GamePlatList.Platinfo)
  return &platinfo_;
}

// -------------------------------------------------------------------

// SupportGamePlatListSdkPmd_S

// repeated .Pmd.GamePlatList list = 1;
inline int SupportGamePlatListSdkPmd_S::list_size() const {
  return list_.size();
}
inline void SupportGamePlatListSdkPmd_S::clear_list() {
  list_.Clear();
}
inline const ::Pmd::GamePlatList& SupportGamePlatListSdkPmd_S::list(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.SupportGamePlatListSdkPmd_S.list)
  return list_.Get(index);
}
inline ::Pmd::GamePlatList* SupportGamePlatListSdkPmd_S::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.SupportGamePlatListSdkPmd_S.list)
  return list_.Mutable(index);
}
inline ::Pmd::GamePlatList* SupportGamePlatListSdkPmd_S::add_list() {
  // @@protoc_insertion_point(field_add:Pmd.SupportGamePlatListSdkPmd_S.list)
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::GamePlatList >&
SupportGamePlatListSdkPmd_S::list() const {
  // @@protoc_insertion_point(field_list:Pmd.SupportGamePlatListSdkPmd_S.list)
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::GamePlatList >*
SupportGamePlatListSdkPmd_S::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.SupportGamePlatListSdkPmd_S.list)
  return &list_;
}

// -------------------------------------------------------------------

// PlatBaseData

// optional .Pmd.GameZoneInfo gamezone = 1;
inline bool PlatBaseData::has_gamezone() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlatBaseData::set_has_gamezone() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlatBaseData::clear_has_gamezone() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlatBaseData::clear_gamezone() {
  if (gamezone_ != NULL) gamezone_->::Pmd::GameZoneInfo::Clear();
  clear_has_gamezone();
}
inline const ::Pmd::GameZoneInfo& PlatBaseData::gamezone() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.gamezone)
  return gamezone_ != NULL ? *gamezone_ : *default_instance_->gamezone_;
}
inline ::Pmd::GameZoneInfo* PlatBaseData::mutable_gamezone() {
  set_has_gamezone();
  if (gamezone_ == NULL) gamezone_ = new ::Pmd::GameZoneInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.PlatBaseData.gamezone)
  return gamezone_;
}
inline ::Pmd::GameZoneInfo* PlatBaseData::release_gamezone() {
  clear_has_gamezone();
  ::Pmd::GameZoneInfo* temp = gamezone_;
  gamezone_ = NULL;
  return temp;
}
inline void PlatBaseData::set_allocated_gamezone(::Pmd::GameZoneInfo* gamezone) {
  delete gamezone_;
  gamezone_ = gamezone;
  if (gamezone) {
    set_has_gamezone();
  } else {
    clear_has_gamezone();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatBaseData.gamezone)
}

// optional uint64 myaccid = 2;
inline bool PlatBaseData::has_myaccid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlatBaseData::set_has_myaccid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlatBaseData::clear_has_myaccid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlatBaseData::clear_myaccid() {
  myaccid_ = GOOGLE_ULONGLONG(0);
  clear_has_myaccid();
}
inline ::google::protobuf::uint64 PlatBaseData::myaccid() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.myaccid)
  return myaccid_;
}
inline void PlatBaseData::set_myaccid(::google::protobuf::uint64 value) {
  set_has_myaccid();
  myaccid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.myaccid)
}

// optional uint32 platid = 3;
inline bool PlatBaseData::has_platid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlatBaseData::set_has_platid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlatBaseData::clear_has_platid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlatBaseData::clear_platid() {
  platid_ = 0u;
  clear_has_platid();
}
inline ::google::protobuf::uint32 PlatBaseData::platid() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.platid)
  return platid_;
}
inline void PlatBaseData::set_platid(::google::protobuf::uint32 value) {
  set_has_platid();
  platid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.platid)
}

// optional uint32 subplatid = 4;
inline bool PlatBaseData::has_subplatid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlatBaseData::set_has_subplatid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlatBaseData::clear_has_subplatid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlatBaseData::clear_subplatid() {
  subplatid_ = 0u;
  clear_has_subplatid();
}
inline ::google::protobuf::uint32 PlatBaseData::subplatid() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.subplatid)
  return subplatid_;
}
inline void PlatBaseData::set_subplatid(::google::protobuf::uint32 value) {
  set_has_subplatid();
  subplatid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.subplatid)
}

// optional string plataccount = 5;
inline bool PlatBaseData::has_plataccount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlatBaseData::set_has_plataccount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlatBaseData::clear_has_plataccount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlatBaseData::clear_plataccount() {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_->clear();
  }
  clear_has_plataccount();
}
inline const ::std::string& PlatBaseData::plataccount() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.plataccount)
  return *plataccount_;
}
inline void PlatBaseData::set_plataccount(const ::std::string& value) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.plataccount)
}
inline void PlatBaseData::set_plataccount(const char* value) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PlatBaseData.plataccount)
}
inline void PlatBaseData::set_plataccount(const char* value, size_t size) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PlatBaseData.plataccount)
}
inline ::std::string* PlatBaseData::mutable_plataccount() {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PlatBaseData.plataccount)
  return plataccount_;
}
inline ::std::string* PlatBaseData::release_plataccount() {
  clear_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = plataccount_;
    plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlatBaseData::set_allocated_plataccount(::std::string* plataccount) {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete plataccount_;
  }
  if (plataccount) {
    set_has_plataccount();
    plataccount_ = plataccount;
  } else {
    clear_has_plataccount();
    plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatBaseData.plataccount)
}

// optional string session = 6;
inline bool PlatBaseData::has_session() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlatBaseData::set_has_session() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlatBaseData::clear_has_session() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlatBaseData::clear_session() {
  if (session_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_->clear();
  }
  clear_has_session();
}
inline const ::std::string& PlatBaseData::session() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.session)
  return *session_;
}
inline void PlatBaseData::set_session(const ::std::string& value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_ = new ::std::string;
  }
  session_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.session)
}
inline void PlatBaseData::set_session(const char* value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_ = new ::std::string;
  }
  session_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PlatBaseData.session)
}
inline void PlatBaseData::set_session(const char* value, size_t size) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_ = new ::std::string;
  }
  session_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PlatBaseData.session)
}
inline ::std::string* PlatBaseData::mutable_session() {
  set_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    session_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PlatBaseData.session)
  return session_;
}
inline ::std::string* PlatBaseData::release_session() {
  clear_has_session();
  if (session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = session_;
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlatBaseData::set_allocated_session(::std::string* session) {
  if (session_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete session_;
  }
  if (session) {
    set_has_session();
    session_ = session;
  } else {
    clear_has_session();
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatBaseData.session)
}

// optional string extdata = 7;
inline bool PlatBaseData::has_extdata() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlatBaseData::set_has_extdata() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlatBaseData::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlatBaseData::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& PlatBaseData::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.extdata)
  return *extdata_;
}
inline void PlatBaseData::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.extdata)
}
inline void PlatBaseData::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PlatBaseData.extdata)
}
inline void PlatBaseData::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PlatBaseData.extdata)
}
inline ::std::string* PlatBaseData::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PlatBaseData.extdata)
  return extdata_;
}
inline ::std::string* PlatBaseData::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlatBaseData::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatBaseData.extdata)
}

// optional string extdata1 = 8;
inline bool PlatBaseData::has_extdata1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlatBaseData::set_has_extdata1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlatBaseData::clear_has_extdata1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlatBaseData::clear_extdata1() {
  if (extdata1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata1_->clear();
  }
  clear_has_extdata1();
}
inline const ::std::string& PlatBaseData::extdata1() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.extdata1)
  return *extdata1_;
}
inline void PlatBaseData::set_extdata1(const ::std::string& value) {
  set_has_extdata1();
  if (extdata1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata1_ = new ::std::string;
  }
  extdata1_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.extdata1)
}
inline void PlatBaseData::set_extdata1(const char* value) {
  set_has_extdata1();
  if (extdata1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata1_ = new ::std::string;
  }
  extdata1_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PlatBaseData.extdata1)
}
inline void PlatBaseData::set_extdata1(const char* value, size_t size) {
  set_has_extdata1();
  if (extdata1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata1_ = new ::std::string;
  }
  extdata1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PlatBaseData.extdata1)
}
inline ::std::string* PlatBaseData::mutable_extdata1() {
  set_has_extdata1();
  if (extdata1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PlatBaseData.extdata1)
  return extdata1_;
}
inline ::std::string* PlatBaseData::release_extdata1() {
  clear_has_extdata1();
  if (extdata1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata1_;
    extdata1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlatBaseData::set_allocated_extdata1(::std::string* extdata1) {
  if (extdata1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata1_;
  }
  if (extdata1) {
    set_has_extdata1();
    extdata1_ = extdata1;
  } else {
    clear_has_extdata1();
    extdata1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatBaseData.extdata1)
}

// optional string oldplataccount = 9;
inline bool PlatBaseData::has_oldplataccount() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlatBaseData::set_has_oldplataccount() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlatBaseData::clear_has_oldplataccount() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlatBaseData::clear_oldplataccount() {
  if (oldplataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldplataccount_->clear();
  }
  clear_has_oldplataccount();
}
inline const ::std::string& PlatBaseData::oldplataccount() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.oldplataccount)
  return *oldplataccount_;
}
inline void PlatBaseData::set_oldplataccount(const ::std::string& value) {
  set_has_oldplataccount();
  if (oldplataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldplataccount_ = new ::std::string;
  }
  oldplataccount_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.oldplataccount)
}
inline void PlatBaseData::set_oldplataccount(const char* value) {
  set_has_oldplataccount();
  if (oldplataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldplataccount_ = new ::std::string;
  }
  oldplataccount_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PlatBaseData.oldplataccount)
}
inline void PlatBaseData::set_oldplataccount(const char* value, size_t size) {
  set_has_oldplataccount();
  if (oldplataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldplataccount_ = new ::std::string;
  }
  oldplataccount_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PlatBaseData.oldplataccount)
}
inline ::std::string* PlatBaseData::mutable_oldplataccount() {
  set_has_oldplataccount();
  if (oldplataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldplataccount_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PlatBaseData.oldplataccount)
  return oldplataccount_;
}
inline ::std::string* PlatBaseData::release_oldplataccount() {
  clear_has_oldplataccount();
  if (oldplataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = oldplataccount_;
    oldplataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlatBaseData::set_allocated_oldplataccount(::std::string* oldplataccount) {
  if (oldplataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete oldplataccount_;
  }
  if (oldplataccount) {
    set_has_oldplataccount();
    oldplataccount_ = oldplataccount;
  } else {
    clear_has_oldplataccount();
    oldplataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatBaseData.oldplataccount)
}

// optional string nickname = 10;
inline bool PlatBaseData::has_nickname() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlatBaseData::set_has_nickname() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlatBaseData::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlatBaseData::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& PlatBaseData::nickname() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.nickname)
  return *nickname_;
}
inline void PlatBaseData::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.nickname)
}
inline void PlatBaseData::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PlatBaseData.nickname)
}
inline void PlatBaseData::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PlatBaseData.nickname)
}
inline ::std::string* PlatBaseData::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PlatBaseData.nickname)
  return nickname_;
}
inline ::std::string* PlatBaseData::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlatBaseData::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatBaseData.nickname)
}

// optional string faceurl = 11;
inline bool PlatBaseData::has_faceurl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlatBaseData::set_has_faceurl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlatBaseData::clear_has_faceurl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlatBaseData::clear_faceurl() {
  if (faceurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceurl_->clear();
  }
  clear_has_faceurl();
}
inline const ::std::string& PlatBaseData::faceurl() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.faceurl)
  return *faceurl_;
}
inline void PlatBaseData::set_faceurl(const ::std::string& value) {
  set_has_faceurl();
  if (faceurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceurl_ = new ::std::string;
  }
  faceurl_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.faceurl)
}
inline void PlatBaseData::set_faceurl(const char* value) {
  set_has_faceurl();
  if (faceurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceurl_ = new ::std::string;
  }
  faceurl_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PlatBaseData.faceurl)
}
inline void PlatBaseData::set_faceurl(const char* value, size_t size) {
  set_has_faceurl();
  if (faceurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceurl_ = new ::std::string;
  }
  faceurl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PlatBaseData.faceurl)
}
inline ::std::string* PlatBaseData::mutable_faceurl() {
  set_has_faceurl();
  if (faceurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    faceurl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PlatBaseData.faceurl)
  return faceurl_;
}
inline ::std::string* PlatBaseData::release_faceurl() {
  clear_has_faceurl();
  if (faceurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = faceurl_;
    faceurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlatBaseData::set_allocated_faceurl(::std::string* faceurl) {
  if (faceurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete faceurl_;
  }
  if (faceurl) {
    set_has_faceurl();
    faceurl_ = faceurl;
  } else {
    clear_has_faceurl();
    faceurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatBaseData.faceurl)
}

// optional uint64 sdkserverid = 12;
inline bool PlatBaseData::has_sdkserverid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PlatBaseData::set_has_sdkserverid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PlatBaseData::clear_has_sdkserverid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PlatBaseData::clear_sdkserverid() {
  sdkserverid_ = GOOGLE_ULONGLONG(0);
  clear_has_sdkserverid();
}
inline ::google::protobuf::uint64 PlatBaseData::sdkserverid() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.sdkserverid)
  return sdkserverid_;
}
inline void PlatBaseData::set_sdkserverid(::google::protobuf::uint64 value) {
  set_has_sdkserverid();
  sdkserverid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.sdkserverid)
}

// optional uint32 oldplatid = 13;
inline bool PlatBaseData::has_oldplatid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PlatBaseData::set_has_oldplatid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PlatBaseData::clear_has_oldplatid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PlatBaseData::clear_oldplatid() {
  oldplatid_ = 0u;
  clear_has_oldplatid();
}
inline ::google::protobuf::uint32 PlatBaseData::oldplatid() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.oldplatid)
  return oldplatid_;
}
inline void PlatBaseData::set_oldplatid(::google::protobuf::uint32 value) {
  set_has_oldplatid();
  oldplatid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.oldplatid)
}

// optional uint32 clienttype = 14;
inline bool PlatBaseData::has_clienttype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PlatBaseData::set_has_clienttype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PlatBaseData::clear_has_clienttype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PlatBaseData::clear_clienttype() {
  clienttype_ = 0u;
  clear_has_clienttype();
}
inline ::google::protobuf::uint32 PlatBaseData::clienttype() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatBaseData.clienttype)
  return clienttype_;
}
inline void PlatBaseData::set_clienttype(::google::protobuf::uint32 value) {
  set_has_clienttype();
  clienttype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PlatBaseData.clienttype)
}

// -------------------------------------------------------------------

// UserLoginPlatRequestSdkPmd_C

// required .Pmd.PlatBaseData data = 1;
inline bool UserLoginPlatRequestSdkPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginPlatRequestSdkPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginPlatRequestSdkPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginPlatRequestSdkPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& UserLoginPlatRequestSdkPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.UserLoginPlatRequestSdkPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* UserLoginPlatRequestSdkPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.UserLoginPlatRequestSdkPmd_C.data)
  return data_;
}
inline ::Pmd::PlatBaseData* UserLoginPlatRequestSdkPmd_C::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void UserLoginPlatRequestSdkPmd_C::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.UserLoginPlatRequestSdkPmd_C.data)
}

// optional uint32 sessiontype = 2;
inline bool UserLoginPlatRequestSdkPmd_C::has_sessiontype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginPlatRequestSdkPmd_C::set_has_sessiontype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginPlatRequestSdkPmd_C::clear_has_sessiontype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginPlatRequestSdkPmd_C::clear_sessiontype() {
  sessiontype_ = 0u;
  clear_has_sessiontype();
}
inline ::google::protobuf::uint32 UserLoginPlatRequestSdkPmd_C::sessiontype() const {
  // @@protoc_insertion_point(field_get:Pmd.UserLoginPlatRequestSdkPmd_C.sessiontype)
  return sessiontype_;
}
inline void UserLoginPlatRequestSdkPmd_C::set_sessiontype(::google::protobuf::uint32 value) {
  set_has_sessiontype();
  sessiontype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserLoginPlatRequestSdkPmd_C.sessiontype)
}

// -------------------------------------------------------------------

// UserLoginPlatReturnSdkPmd_S

// required .Pmd.PlatBaseData data = 1;
inline bool UserLoginPlatReturnSdkPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserLoginPlatReturnSdkPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserLoginPlatReturnSdkPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserLoginPlatReturnSdkPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& UserLoginPlatReturnSdkPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.UserLoginPlatReturnSdkPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* UserLoginPlatReturnSdkPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.UserLoginPlatReturnSdkPmd_S.data)
  return data_;
}
inline ::Pmd::PlatBaseData* UserLoginPlatReturnSdkPmd_S::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void UserLoginPlatReturnSdkPmd_S::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.UserLoginPlatReturnSdkPmd_S.data)
}

// required uint32 ret = 2;
inline bool UserLoginPlatReturnSdkPmd_S::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserLoginPlatReturnSdkPmd_S::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserLoginPlatReturnSdkPmd_S::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserLoginPlatReturnSdkPmd_S::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 UserLoginPlatReturnSdkPmd_S::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.UserLoginPlatReturnSdkPmd_S.ret)
  return ret_;
}
inline void UserLoginPlatReturnSdkPmd_S::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserLoginPlatReturnSdkPmd_S.ret)
}

// optional string retdesc = 3;
inline bool UserLoginPlatReturnSdkPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserLoginPlatReturnSdkPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserLoginPlatReturnSdkPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserLoginPlatReturnSdkPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& UserLoginPlatReturnSdkPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.UserLoginPlatReturnSdkPmd_S.retdesc)
  return *retdesc_;
}
inline void UserLoginPlatReturnSdkPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.UserLoginPlatReturnSdkPmd_S.retdesc)
}
inline void UserLoginPlatReturnSdkPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.UserLoginPlatReturnSdkPmd_S.retdesc)
}
inline void UserLoginPlatReturnSdkPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.UserLoginPlatReturnSdkPmd_S.retdesc)
}
inline ::std::string* UserLoginPlatReturnSdkPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.UserLoginPlatReturnSdkPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* UserLoginPlatReturnSdkPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserLoginPlatReturnSdkPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.UserLoginPlatReturnSdkPmd_S.retdesc)
}

// -------------------------------------------------------------------

// CreatePlatOrderRequestSdkPmd_C

// required .Pmd.PlatBaseData data = 1;
inline bool CreatePlatOrderRequestSdkPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& CreatePlatOrderRequestSdkPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* CreatePlatOrderRequestSdkPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderRequestSdkPmd_C.data)
  return data_;
}
inline ::Pmd::PlatBaseData* CreatePlatOrderRequestSdkPmd_C::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderRequestSdkPmd_C.data)
}

// required string gameorder = 2;
inline bool CreatePlatOrderRequestSdkPmd_C::has_gameorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_gameorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& CreatePlatOrderRequestSdkPmd_C::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.gameorder)
  return *gameorder_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.gameorder)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderRequestSdkPmd_C.gameorder)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderRequestSdkPmd_C.gameorder)
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderRequestSdkPmd_C.gameorder)
  return gameorder_;
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderRequestSdkPmd_C::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderRequestSdkPmd_C.gameorder)
}

// required uint64 roleid = 3;
inline bool CreatePlatOrderRequestSdkPmd_C::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 CreatePlatOrderRequestSdkPmd_C::roleid() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.roleid)
  return roleid_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.roleid)
}

// required string rolename = 4;
inline bool CreatePlatOrderRequestSdkPmd_C::has_rolename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_rolename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& CreatePlatOrderRequestSdkPmd_C::rolename() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.rolename)
  return *rolename_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.rolename)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderRequestSdkPmd_C.rolename)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderRequestSdkPmd_C.rolename)
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderRequestSdkPmd_C.rolename)
  return rolename_;
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderRequestSdkPmd_C::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderRequestSdkPmd_C.rolename)
}

// required float originalmoney = 5;
inline bool CreatePlatOrderRequestSdkPmd_C::has_originalmoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_originalmoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_originalmoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_originalmoney() {
  originalmoney_ = 0;
  clear_has_originalmoney();
}
inline float CreatePlatOrderRequestSdkPmd_C::originalmoney() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.originalmoney)
  return originalmoney_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_originalmoney(float value) {
  set_has_originalmoney();
  originalmoney_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.originalmoney)
}

// required float ordermoney = 6;
inline bool CreatePlatOrderRequestSdkPmd_C::has_ordermoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_ordermoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_ordermoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_ordermoney() {
  ordermoney_ = 0;
  clear_has_ordermoney();
}
inline float CreatePlatOrderRequestSdkPmd_C::ordermoney() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.ordermoney)
  return ordermoney_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_ordermoney(float value) {
  set_has_ordermoney();
  ordermoney_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.ordermoney)
}

// required uint32 goodid = 7;
inline bool CreatePlatOrderRequestSdkPmd_C::has_goodid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_goodid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_goodid() {
  goodid_ = 0u;
  clear_has_goodid();
}
inline ::google::protobuf::uint32 CreatePlatOrderRequestSdkPmd_C::goodid() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.goodid)
  return goodid_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_goodid(::google::protobuf::uint32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.goodid)
}

// required uint32 goodnum = 8;
inline bool CreatePlatOrderRequestSdkPmd_C::has_goodnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_goodnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_goodnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_goodnum() {
  goodnum_ = 0u;
  clear_has_goodnum();
}
inline ::google::protobuf::uint32 CreatePlatOrderRequestSdkPmd_C::goodnum() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.goodnum)
  return goodnum_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_goodnum(::google::protobuf::uint32 value) {
  set_has_goodnum();
  goodnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.goodnum)
}

// optional string goodname = 9;
inline bool CreatePlatOrderRequestSdkPmd_C::has_goodname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_goodname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_goodname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_goodname() {
  if (goodname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodname_->clear();
  }
  clear_has_goodname();
}
inline const ::std::string& CreatePlatOrderRequestSdkPmd_C::goodname() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.goodname)
  return *goodname_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_goodname(const ::std::string& value) {
  set_has_goodname();
  if (goodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodname_ = new ::std::string;
  }
  goodname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.goodname)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_goodname(const char* value) {
  set_has_goodname();
  if (goodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodname_ = new ::std::string;
  }
  goodname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderRequestSdkPmd_C.goodname)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_goodname(const char* value, size_t size) {
  set_has_goodname();
  if (goodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodname_ = new ::std::string;
  }
  goodname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderRequestSdkPmd_C.goodname)
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::mutable_goodname() {
  set_has_goodname();
  if (goodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    goodname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderRequestSdkPmd_C.goodname)
  return goodname_;
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::release_goodname() {
  clear_has_goodname();
  if (goodname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = goodname_;
    goodname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderRequestSdkPmd_C::set_allocated_goodname(::std::string* goodname) {
  if (goodname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete goodname_;
  }
  if (goodname) {
    set_has_goodname();
    goodname_ = goodname;
  } else {
    clear_has_goodname();
    goodname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderRequestSdkPmd_C.goodname)
}

// optional string gooddesc = 10;
inline bool CreatePlatOrderRequestSdkPmd_C::has_gooddesc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_gooddesc() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_gooddesc() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_gooddesc() {
  if (gooddesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gooddesc_->clear();
  }
  clear_has_gooddesc();
}
inline const ::std::string& CreatePlatOrderRequestSdkPmd_C::gooddesc() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.gooddesc)
  return *gooddesc_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_gooddesc(const ::std::string& value) {
  set_has_gooddesc();
  if (gooddesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gooddesc_ = new ::std::string;
  }
  gooddesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.gooddesc)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_gooddesc(const char* value) {
  set_has_gooddesc();
  if (gooddesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gooddesc_ = new ::std::string;
  }
  gooddesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderRequestSdkPmd_C.gooddesc)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_gooddesc(const char* value, size_t size) {
  set_has_gooddesc();
  if (gooddesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gooddesc_ = new ::std::string;
  }
  gooddesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderRequestSdkPmd_C.gooddesc)
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::mutable_gooddesc() {
  set_has_gooddesc();
  if (gooddesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gooddesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderRequestSdkPmd_C.gooddesc)
  return gooddesc_;
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::release_gooddesc() {
  clear_has_gooddesc();
  if (gooddesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gooddesc_;
    gooddesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderRequestSdkPmd_C::set_allocated_gooddesc(::std::string* gooddesc) {
  if (gooddesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gooddesc_;
  }
  if (gooddesc) {
    set_has_gooddesc();
    gooddesc_ = gooddesc;
  } else {
    clear_has_gooddesc();
    gooddesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderRequestSdkPmd_C.gooddesc)
}

// optional string redirecturl = 11;
inline bool CreatePlatOrderRequestSdkPmd_C::has_redirecturl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_redirecturl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_redirecturl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_redirecturl() {
  if (redirecturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_->clear();
  }
  clear_has_redirecturl();
}
inline const ::std::string& CreatePlatOrderRequestSdkPmd_C::redirecturl() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.redirecturl)
  return *redirecturl_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_redirecturl(const ::std::string& value) {
  set_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_ = new ::std::string;
  }
  redirecturl_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.redirecturl)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_redirecturl(const char* value) {
  set_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_ = new ::std::string;
  }
  redirecturl_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderRequestSdkPmd_C.redirecturl)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_redirecturl(const char* value, size_t size) {
  set_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_ = new ::std::string;
  }
  redirecturl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderRequestSdkPmd_C.redirecturl)
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::mutable_redirecturl() {
  set_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderRequestSdkPmd_C.redirecturl)
  return redirecturl_;
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::release_redirecturl() {
  clear_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = redirecturl_;
    redirecturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderRequestSdkPmd_C::set_allocated_redirecturl(::std::string* redirecturl) {
  if (redirecturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete redirecturl_;
  }
  if (redirecturl) {
    set_has_redirecturl();
    redirecturl_ = redirecturl;
  } else {
    clear_has_redirecturl();
    redirecturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderRequestSdkPmd_C.redirecturl)
}

// optional uint32 payplatid = 12;
inline bool CreatePlatOrderRequestSdkPmd_C::has_payplatid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_payplatid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_payplatid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_payplatid() {
  payplatid_ = 0u;
  clear_has_payplatid();
}
inline ::google::protobuf::uint32 CreatePlatOrderRequestSdkPmd_C::payplatid() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.payplatid)
  return payplatid_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_payplatid(::google::protobuf::uint32 value) {
  set_has_payplatid();
  payplatid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.payplatid)
}

// optional string extdata = 13;
inline bool CreatePlatOrderRequestSdkPmd_C::has_extdata() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_has_extdata() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_has_extdata() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CreatePlatOrderRequestSdkPmd_C::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& CreatePlatOrderRequestSdkPmd_C::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderRequestSdkPmd_C.extdata)
  return *extdata_;
}
inline void CreatePlatOrderRequestSdkPmd_C::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderRequestSdkPmd_C.extdata)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderRequestSdkPmd_C.extdata)
}
inline void CreatePlatOrderRequestSdkPmd_C::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderRequestSdkPmd_C.extdata)
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderRequestSdkPmd_C.extdata)
  return extdata_;
}
inline ::std::string* CreatePlatOrderRequestSdkPmd_C::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderRequestSdkPmd_C::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderRequestSdkPmd_C.extdata)
}

// -------------------------------------------------------------------

// CreatePlatOrderReturnSdkPmd_S

// required .Pmd.PlatBaseData data = 1;
inline bool CreatePlatOrderReturnSdkPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& CreatePlatOrderReturnSdkPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* CreatePlatOrderReturnSdkPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderReturnSdkPmd_S.data)
  return data_;
}
inline ::Pmd::PlatBaseData* CreatePlatOrderReturnSdkPmd_S::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderReturnSdkPmd_S.data)
}

// required string gameorder = 2;
inline bool CreatePlatOrderReturnSdkPmd_S::has_gameorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_gameorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& CreatePlatOrderReturnSdkPmd_S::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.gameorder)
  return *gameorder_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.gameorder)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderReturnSdkPmd_S.gameorder)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderReturnSdkPmd_S.gameorder)
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderReturnSdkPmd_S.gameorder)
  return gameorder_;
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderReturnSdkPmd_S::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderReturnSdkPmd_S.gameorder)
}

// required uint64 roleid = 3;
inline bool CreatePlatOrderReturnSdkPmd_S::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 CreatePlatOrderReturnSdkPmd_S::roleid() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.roleid)
  return roleid_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.roleid)
}

// required float originalmoney = 4;
inline bool CreatePlatOrderReturnSdkPmd_S::has_originalmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_originalmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_originalmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_originalmoney() {
  originalmoney_ = 0;
  clear_has_originalmoney();
}
inline float CreatePlatOrderReturnSdkPmd_S::originalmoney() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.originalmoney)
  return originalmoney_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_originalmoney(float value) {
  set_has_originalmoney();
  originalmoney_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.originalmoney)
}

// required float ordermoney = 5;
inline bool CreatePlatOrderReturnSdkPmd_S::has_ordermoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_ordermoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_ordermoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_ordermoney() {
  ordermoney_ = 0;
  clear_has_ordermoney();
}
inline float CreatePlatOrderReturnSdkPmd_S::ordermoney() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.ordermoney)
  return ordermoney_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_ordermoney(float value) {
  set_has_ordermoney();
  ordermoney_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.ordermoney)
}

// required uint32 goodid = 6;
inline bool CreatePlatOrderReturnSdkPmd_S::has_goodid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_goodid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_goodid() {
  goodid_ = 0u;
  clear_has_goodid();
}
inline ::google::protobuf::uint32 CreatePlatOrderReturnSdkPmd_S::goodid() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.goodid)
  return goodid_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_goodid(::google::protobuf::uint32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.goodid)
}

// required uint32 goodnum = 7;
inline bool CreatePlatOrderReturnSdkPmd_S::has_goodnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_goodnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_goodnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_goodnum() {
  goodnum_ = 0u;
  clear_has_goodnum();
}
inline ::google::protobuf::uint32 CreatePlatOrderReturnSdkPmd_S::goodnum() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.goodnum)
  return goodnum_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_goodnum(::google::protobuf::uint32 value) {
  set_has_goodnum();
  goodnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.goodnum)
}

// required uint32 result = 8;
inline bool CreatePlatOrderReturnSdkPmd_S::has_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_result() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_result() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CreatePlatOrderReturnSdkPmd_S::result() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.result)
  return result_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.result)
}

// optional string noticeurl = 9;
inline bool CreatePlatOrderReturnSdkPmd_S::has_noticeurl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_noticeurl() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_noticeurl() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_noticeurl() {
  if (noticeurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noticeurl_->clear();
  }
  clear_has_noticeurl();
}
inline const ::std::string& CreatePlatOrderReturnSdkPmd_S::noticeurl() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.noticeurl)
  return *noticeurl_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_noticeurl(const ::std::string& value) {
  set_has_noticeurl();
  if (noticeurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noticeurl_ = new ::std::string;
  }
  noticeurl_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.noticeurl)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_noticeurl(const char* value) {
  set_has_noticeurl();
  if (noticeurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noticeurl_ = new ::std::string;
  }
  noticeurl_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderReturnSdkPmd_S.noticeurl)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_noticeurl(const char* value, size_t size) {
  set_has_noticeurl();
  if (noticeurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noticeurl_ = new ::std::string;
  }
  noticeurl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderReturnSdkPmd_S.noticeurl)
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::mutable_noticeurl() {
  set_has_noticeurl();
  if (noticeurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    noticeurl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderReturnSdkPmd_S.noticeurl)
  return noticeurl_;
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::release_noticeurl() {
  clear_has_noticeurl();
  if (noticeurl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = noticeurl_;
    noticeurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderReturnSdkPmd_S::set_allocated_noticeurl(::std::string* noticeurl) {
  if (noticeurl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete noticeurl_;
  }
  if (noticeurl) {
    set_has_noticeurl();
    noticeurl_ = noticeurl;
  } else {
    clear_has_noticeurl();
    noticeurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderReturnSdkPmd_S.noticeurl)
}

// optional string platorder = 10;
inline bool CreatePlatOrderReturnSdkPmd_S::has_platorder() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_platorder() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_platorder() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_platorder() {
  if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_->clear();
  }
  clear_has_platorder();
}
inline const ::std::string& CreatePlatOrderReturnSdkPmd_S::platorder() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.platorder)
  return *platorder_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_platorder(const ::std::string& value) {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  platorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.platorder)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_platorder(const char* value) {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  platorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderReturnSdkPmd_S.platorder)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_platorder(const char* value, size_t size) {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  platorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderReturnSdkPmd_S.platorder)
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::mutable_platorder() {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderReturnSdkPmd_S.platorder)
  return platorder_;
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::release_platorder() {
  clear_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platorder_;
    platorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderReturnSdkPmd_S::set_allocated_platorder(::std::string* platorder) {
  if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platorder_;
  }
  if (platorder) {
    set_has_platorder();
    platorder_ = platorder;
  } else {
    clear_has_platorder();
    platorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderReturnSdkPmd_S.platorder)
}

// optional string sign = 11;
inline bool CreatePlatOrderReturnSdkPmd_S::has_sign() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_sign() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_sign() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_sign() {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_->clear();
  }
  clear_has_sign();
}
inline const ::std::string& CreatePlatOrderReturnSdkPmd_S::sign() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.sign)
  return *sign_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_sign(const ::std::string& value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.sign)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_sign(const char* value) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderReturnSdkPmd_S.sign)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_sign(const char* value, size_t size) {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  sign_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderReturnSdkPmd_S.sign)
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::mutable_sign() {
  set_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sign_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderReturnSdkPmd_S.sign)
  return sign_;
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::release_sign() {
  clear_has_sign();
  if (sign_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sign_;
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderReturnSdkPmd_S::set_allocated_sign(::std::string* sign) {
  if (sign_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sign_;
  }
  if (sign) {
    set_has_sign();
    sign_ = sign;
  } else {
    clear_has_sign();
    sign_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderReturnSdkPmd_S.sign)
}

// optional string redirecturl = 12;
inline bool CreatePlatOrderReturnSdkPmd_S::has_redirecturl() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_redirecturl() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_redirecturl() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_redirecturl() {
  if (redirecturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_->clear();
  }
  clear_has_redirecturl();
}
inline const ::std::string& CreatePlatOrderReturnSdkPmd_S::redirecturl() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.redirecturl)
  return *redirecturl_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_redirecturl(const ::std::string& value) {
  set_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_ = new ::std::string;
  }
  redirecturl_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.redirecturl)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_redirecturl(const char* value) {
  set_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_ = new ::std::string;
  }
  redirecturl_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderReturnSdkPmd_S.redirecturl)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_redirecturl(const char* value, size_t size) {
  set_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_ = new ::std::string;
  }
  redirecturl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderReturnSdkPmd_S.redirecturl)
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::mutable_redirecturl() {
  set_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    redirecturl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderReturnSdkPmd_S.redirecturl)
  return redirecturl_;
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::release_redirecturl() {
  clear_has_redirecturl();
  if (redirecturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = redirecturl_;
    redirecturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderReturnSdkPmd_S::set_allocated_redirecturl(::std::string* redirecturl) {
  if (redirecturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete redirecturl_;
  }
  if (redirecturl) {
    set_has_redirecturl();
    redirecturl_ = redirecturl;
  } else {
    clear_has_redirecturl();
    redirecturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderReturnSdkPmd_S.redirecturl)
}

// optional uint32 payplatid = 13;
inline bool CreatePlatOrderReturnSdkPmd_S::has_payplatid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_payplatid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_payplatid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_payplatid() {
  payplatid_ = 0u;
  clear_has_payplatid();
}
inline ::google::protobuf::uint32 CreatePlatOrderReturnSdkPmd_S::payplatid() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.payplatid)
  return payplatid_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_payplatid(::google::protobuf::uint32 value) {
  set_has_payplatid();
  payplatid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.payplatid)
}

// optional string extdata = 14;
inline bool CreatePlatOrderReturnSdkPmd_S::has_extdata() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_has_extdata() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_has_extdata() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CreatePlatOrderReturnSdkPmd_S::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& CreatePlatOrderReturnSdkPmd_S::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.CreatePlatOrderReturnSdkPmd_S.extdata)
  return *extdata_;
}
inline void CreatePlatOrderReturnSdkPmd_S::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CreatePlatOrderReturnSdkPmd_S.extdata)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CreatePlatOrderReturnSdkPmd_S.extdata)
}
inline void CreatePlatOrderReturnSdkPmd_S::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CreatePlatOrderReturnSdkPmd_S.extdata)
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CreatePlatOrderReturnSdkPmd_S.extdata)
  return extdata_;
}
inline ::std::string* CreatePlatOrderReturnSdkPmd_S::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreatePlatOrderReturnSdkPmd_S::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CreatePlatOrderReturnSdkPmd_S.extdata)
}

// -------------------------------------------------------------------

// NotifyRechargeRequestSdkPmd_S

// required .Pmd.PlatBaseData data = 1;
inline bool NotifyRechargeRequestSdkPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& NotifyRechargeRequestSdkPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* NotifyRechargeRequestSdkPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyRechargeRequestSdkPmd_S.data)
  return data_;
}
inline ::Pmd::PlatBaseData* NotifyRechargeRequestSdkPmd_S::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void NotifyRechargeRequestSdkPmd_S::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyRechargeRequestSdkPmd_S.data)
}

// required string platorder = 2;
inline bool NotifyRechargeRequestSdkPmd_S::has_platorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_platorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_platorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_platorder() {
  if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_->clear();
  }
  clear_has_platorder();
}
inline const ::std::string& NotifyRechargeRequestSdkPmd_S::platorder() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.platorder)
  return *platorder_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_platorder(const ::std::string& value) {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  platorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.platorder)
}
inline void NotifyRechargeRequestSdkPmd_S::set_platorder(const char* value) {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  platorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.NotifyRechargeRequestSdkPmd_S.platorder)
}
inline void NotifyRechargeRequestSdkPmd_S::set_platorder(const char* value, size_t size) {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  platorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.NotifyRechargeRequestSdkPmd_S.platorder)
}
inline ::std::string* NotifyRechargeRequestSdkPmd_S::mutable_platorder() {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyRechargeRequestSdkPmd_S.platorder)
  return platorder_;
}
inline ::std::string* NotifyRechargeRequestSdkPmd_S::release_platorder() {
  clear_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platorder_;
    platorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyRechargeRequestSdkPmd_S::set_allocated_platorder(::std::string* platorder) {
  if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platorder_;
  }
  if (platorder) {
    set_has_platorder();
    platorder_ = platorder;
  } else {
    clear_has_platorder();
    platorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyRechargeRequestSdkPmd_S.platorder)
}

// required string gameorder = 3;
inline bool NotifyRechargeRequestSdkPmd_S::has_gameorder() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_gameorder() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& NotifyRechargeRequestSdkPmd_S::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.gameorder)
  return *gameorder_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.gameorder)
}
inline void NotifyRechargeRequestSdkPmd_S::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.NotifyRechargeRequestSdkPmd_S.gameorder)
}
inline void NotifyRechargeRequestSdkPmd_S::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.NotifyRechargeRequestSdkPmd_S.gameorder)
}
inline ::std::string* NotifyRechargeRequestSdkPmd_S::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyRechargeRequestSdkPmd_S.gameorder)
  return gameorder_;
}
inline ::std::string* NotifyRechargeRequestSdkPmd_S::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyRechargeRequestSdkPmd_S::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyRechargeRequestSdkPmd_S.gameorder)
}

// required uint64 roleid = 4;
inline bool NotifyRechargeRequestSdkPmd_S::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 NotifyRechargeRequestSdkPmd_S::roleid() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.roleid)
  return roleid_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.roleid)
}

// required float originalmoney = 5;
inline bool NotifyRechargeRequestSdkPmd_S::has_originalmoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_originalmoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_originalmoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_originalmoney() {
  originalmoney_ = 0;
  clear_has_originalmoney();
}
inline float NotifyRechargeRequestSdkPmd_S::originalmoney() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.originalmoney)
  return originalmoney_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_originalmoney(float value) {
  set_has_originalmoney();
  originalmoney_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.originalmoney)
}

// required float ordermoney = 6;
inline bool NotifyRechargeRequestSdkPmd_S::has_ordermoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_ordermoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_ordermoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_ordermoney() {
  ordermoney_ = 0;
  clear_has_ordermoney();
}
inline float NotifyRechargeRequestSdkPmd_S::ordermoney() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.ordermoney)
  return ordermoney_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_ordermoney(float value) {
  set_has_ordermoney();
  ordermoney_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.ordermoney)
}

// required uint32 goodid = 7;
inline bool NotifyRechargeRequestSdkPmd_S::has_goodid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_goodid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_goodid() {
  goodid_ = 0u;
  clear_has_goodid();
}
inline ::google::protobuf::uint32 NotifyRechargeRequestSdkPmd_S::goodid() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.goodid)
  return goodid_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_goodid(::google::protobuf::uint32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.goodid)
}

// required uint32 goodnum = 8;
inline bool NotifyRechargeRequestSdkPmd_S::has_goodnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_goodnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_goodnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_goodnum() {
  goodnum_ = 0u;
  clear_has_goodnum();
}
inline ::google::protobuf::uint32 NotifyRechargeRequestSdkPmd_S::goodnum() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.goodnum)
  return goodnum_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_goodnum(::google::protobuf::uint32 value) {
  set_has_goodnum();
  goodnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.goodnum)
}

// required uint32 result = 9;
inline bool NotifyRechargeRequestSdkPmd_S::has_result() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_result() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_result() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 NotifyRechargeRequestSdkPmd_S::result() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.result)
  return result_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.result)
}

// optional string extdata = 10;
inline bool NotifyRechargeRequestSdkPmd_S::has_extdata() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_extdata() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& NotifyRechargeRequestSdkPmd_S::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.extdata)
  return *extdata_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.extdata)
}
inline void NotifyRechargeRequestSdkPmd_S::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.NotifyRechargeRequestSdkPmd_S.extdata)
}
inline void NotifyRechargeRequestSdkPmd_S::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.NotifyRechargeRequestSdkPmd_S.extdata)
}
inline ::std::string* NotifyRechargeRequestSdkPmd_S::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyRechargeRequestSdkPmd_S.extdata)
  return extdata_;
}
inline ::std::string* NotifyRechargeRequestSdkPmd_S::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyRechargeRequestSdkPmd_S::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyRechargeRequestSdkPmd_S.extdata)
}

// optional uint32 type = 11;
inline bool NotifyRechargeRequestSdkPmd_S::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void NotifyRechargeRequestSdkPmd_S::set_has_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_has_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void NotifyRechargeRequestSdkPmd_S::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 NotifyRechargeRequestSdkPmd_S::type() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeRequestSdkPmd_S.type)
  return type_;
}
inline void NotifyRechargeRequestSdkPmd_S::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeRequestSdkPmd_S.type)
}

// -------------------------------------------------------------------

// NotifyRechargeReturnSdkPmd_C

// required .Pmd.PlatBaseData data = 1;
inline bool NotifyRechargeReturnSdkPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyRechargeReturnSdkPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& NotifyRechargeReturnSdkPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeReturnSdkPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* NotifyRechargeReturnSdkPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyRechargeReturnSdkPmd_C.data)
  return data_;
}
inline ::Pmd::PlatBaseData* NotifyRechargeReturnSdkPmd_C::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void NotifyRechargeReturnSdkPmd_C::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyRechargeReturnSdkPmd_C.data)
}

// required string platorder = 2;
inline bool NotifyRechargeReturnSdkPmd_C::has_platorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyRechargeReturnSdkPmd_C::set_has_platorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_has_platorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_platorder() {
  if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_->clear();
  }
  clear_has_platorder();
}
inline const ::std::string& NotifyRechargeReturnSdkPmd_C::platorder() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeReturnSdkPmd_C.platorder)
  return *platorder_;
}
inline void NotifyRechargeReturnSdkPmd_C::set_platorder(const ::std::string& value) {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  platorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeReturnSdkPmd_C.platorder)
}
inline void NotifyRechargeReturnSdkPmd_C::set_platorder(const char* value) {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  platorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.NotifyRechargeReturnSdkPmd_C.platorder)
}
inline void NotifyRechargeReturnSdkPmd_C::set_platorder(const char* value, size_t size) {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  platorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.NotifyRechargeReturnSdkPmd_C.platorder)
}
inline ::std::string* NotifyRechargeReturnSdkPmd_C::mutable_platorder() {
  set_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyRechargeReturnSdkPmd_C.platorder)
  return platorder_;
}
inline ::std::string* NotifyRechargeReturnSdkPmd_C::release_platorder() {
  clear_has_platorder();
  if (platorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platorder_;
    platorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyRechargeReturnSdkPmd_C::set_allocated_platorder(::std::string* platorder) {
  if (platorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platorder_;
  }
  if (platorder) {
    set_has_platorder();
    platorder_ = platorder;
  } else {
    clear_has_platorder();
    platorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyRechargeReturnSdkPmd_C.platorder)
}

// required string gameorder = 3;
inline bool NotifyRechargeReturnSdkPmd_C::has_gameorder() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyRechargeReturnSdkPmd_C::set_has_gameorder() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& NotifyRechargeReturnSdkPmd_C::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeReturnSdkPmd_C.gameorder)
  return *gameorder_;
}
inline void NotifyRechargeReturnSdkPmd_C::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeReturnSdkPmd_C.gameorder)
}
inline void NotifyRechargeReturnSdkPmd_C::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.NotifyRechargeReturnSdkPmd_C.gameorder)
}
inline void NotifyRechargeReturnSdkPmd_C::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.NotifyRechargeReturnSdkPmd_C.gameorder)
}
inline ::std::string* NotifyRechargeReturnSdkPmd_C::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyRechargeReturnSdkPmd_C.gameorder)
  return gameorder_;
}
inline ::std::string* NotifyRechargeReturnSdkPmd_C::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyRechargeReturnSdkPmd_C::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyRechargeReturnSdkPmd_C.gameorder)
}

// required uint64 roleid = 4;
inline bool NotifyRechargeReturnSdkPmd_C::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyRechargeReturnSdkPmd_C::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 NotifyRechargeReturnSdkPmd_C::roleid() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeReturnSdkPmd_C.roleid)
  return roleid_;
}
inline void NotifyRechargeReturnSdkPmd_C::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeReturnSdkPmd_C.roleid)
}

// required uint32 result = 5;
inline bool NotifyRechargeReturnSdkPmd_C::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyRechargeReturnSdkPmd_C::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 NotifyRechargeReturnSdkPmd_C::result() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeReturnSdkPmd_C.result)
  return result_;
}
inline void NotifyRechargeReturnSdkPmd_C::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeReturnSdkPmd_C.result)
}

// optional string extdata = 6;
inline bool NotifyRechargeReturnSdkPmd_C::has_extdata() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyRechargeReturnSdkPmd_C::set_has_extdata() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyRechargeReturnSdkPmd_C::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& NotifyRechargeReturnSdkPmd_C::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyRechargeReturnSdkPmd_C.extdata)
  return *extdata_;
}
inline void NotifyRechargeReturnSdkPmd_C::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.NotifyRechargeReturnSdkPmd_C.extdata)
}
inline void NotifyRechargeReturnSdkPmd_C::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.NotifyRechargeReturnSdkPmd_C.extdata)
}
inline void NotifyRechargeReturnSdkPmd_C::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.NotifyRechargeReturnSdkPmd_C.extdata)
}
inline ::std::string* NotifyRechargeReturnSdkPmd_C::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyRechargeReturnSdkPmd_C.extdata)
  return extdata_;
}
inline ::std::string* NotifyRechargeReturnSdkPmd_C::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyRechargeReturnSdkPmd_C::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyRechargeReturnSdkPmd_C.extdata)
}

// -------------------------------------------------------------------

// RechargeQueryRequestIOSSdkPmd_C

// required .Pmd.PlatBaseData data = 1;
inline bool RechargeQueryRequestIOSSdkPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& RechargeQueryRequestIOSSdkPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RechargeQueryRequestIOSSdkPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* RechargeQueryRequestIOSSdkPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.RechargeQueryRequestIOSSdkPmd_C.data)
  return data_;
}
inline ::Pmd::PlatBaseData* RechargeQueryRequestIOSSdkPmd_C::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RechargeQueryRequestIOSSdkPmd_C.data)
}

// required string gameorder = 2;
inline bool RechargeQueryRequestIOSSdkPmd_C::has_gameorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_has_gameorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& RechargeQueryRequestIOSSdkPmd_C::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.RechargeQueryRequestIOSSdkPmd_C.gameorder)
  return *gameorder_;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RechargeQueryRequestIOSSdkPmd_C.gameorder)
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RechargeQueryRequestIOSSdkPmd_C.gameorder)
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RechargeQueryRequestIOSSdkPmd_C.gameorder)
}
inline ::std::string* RechargeQueryRequestIOSSdkPmd_C::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RechargeQueryRequestIOSSdkPmd_C.gameorder)
  return gameorder_;
}
inline ::std::string* RechargeQueryRequestIOSSdkPmd_C::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RechargeQueryRequestIOSSdkPmd_C.gameorder)
}

// required uint64 roleid = 3;
inline bool RechargeQueryRequestIOSSdkPmd_C::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::uint64 RechargeQueryRequestIOSSdkPmd_C::roleid() const {
  // @@protoc_insertion_point(field_get:Pmd.RechargeQueryRequestIOSSdkPmd_C.roleid)
  return roleid_;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_roleid(::google::protobuf::uint64 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RechargeQueryRequestIOSSdkPmd_C.roleid)
}

// required float originalmoney = 4;
inline bool RechargeQueryRequestIOSSdkPmd_C::has_originalmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_has_originalmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_has_originalmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_originalmoney() {
  originalmoney_ = 0;
  clear_has_originalmoney();
}
inline float RechargeQueryRequestIOSSdkPmd_C::originalmoney() const {
  // @@protoc_insertion_point(field_get:Pmd.RechargeQueryRequestIOSSdkPmd_C.originalmoney)
  return originalmoney_;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_originalmoney(float value) {
  set_has_originalmoney();
  originalmoney_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RechargeQueryRequestIOSSdkPmd_C.originalmoney)
}

// required float ordermoney = 5;
inline bool RechargeQueryRequestIOSSdkPmd_C::has_ordermoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_has_ordermoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_has_ordermoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_ordermoney() {
  ordermoney_ = 0;
  clear_has_ordermoney();
}
inline float RechargeQueryRequestIOSSdkPmd_C::ordermoney() const {
  // @@protoc_insertion_point(field_get:Pmd.RechargeQueryRequestIOSSdkPmd_C.ordermoney)
  return ordermoney_;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_ordermoney(float value) {
  set_has_ordermoney();
  ordermoney_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RechargeQueryRequestIOSSdkPmd_C.ordermoney)
}

// optional string token = 6;
inline bool RechargeQueryRequestIOSSdkPmd_C::has_token() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_has_token() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_has_token() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_token() {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& RechargeQueryRequestIOSSdkPmd_C::token() const {
  // @@protoc_insertion_point(field_get:Pmd.RechargeQueryRequestIOSSdkPmd_C.token)
  return *token_;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RechargeQueryRequestIOSSdkPmd_C.token)
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RechargeQueryRequestIOSSdkPmd_C.token)
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RechargeQueryRequestIOSSdkPmd_C.token)
}
inline ::std::string* RechargeQueryRequestIOSSdkPmd_C::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RechargeQueryRequestIOSSdkPmd_C.token)
  return token_;
}
inline ::std::string* RechargeQueryRequestIOSSdkPmd_C::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RechargeQueryRequestIOSSdkPmd_C.token)
}

// optional string extdata = 7;
inline bool RechargeQueryRequestIOSSdkPmd_C::has_extdata() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_has_extdata() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& RechargeQueryRequestIOSSdkPmd_C::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.RechargeQueryRequestIOSSdkPmd_C.extdata)
  return *extdata_;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RechargeQueryRequestIOSSdkPmd_C.extdata)
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RechargeQueryRequestIOSSdkPmd_C.extdata)
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RechargeQueryRequestIOSSdkPmd_C.extdata)
}
inline ::std::string* RechargeQueryRequestIOSSdkPmd_C::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RechargeQueryRequestIOSSdkPmd_C.extdata)
  return extdata_;
}
inline ::std::string* RechargeQueryRequestIOSSdkPmd_C::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RechargeQueryRequestIOSSdkPmd_C.extdata)
}

// optional uint32 payplatid = 8;
inline bool RechargeQueryRequestIOSSdkPmd_C::has_payplatid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_has_payplatid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_has_payplatid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RechargeQueryRequestIOSSdkPmd_C::clear_payplatid() {
  payplatid_ = 0u;
  clear_has_payplatid();
}
inline ::google::protobuf::uint32 RechargeQueryRequestIOSSdkPmd_C::payplatid() const {
  // @@protoc_insertion_point(field_get:Pmd.RechargeQueryRequestIOSSdkPmd_C.payplatid)
  return payplatid_;
}
inline void RechargeQueryRequestIOSSdkPmd_C::set_payplatid(::google::protobuf::uint32 value) {
  set_has_payplatid();
  payplatid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RechargeQueryRequestIOSSdkPmd_C.payplatid)
}

// -------------------------------------------------------------------

// RequestQueryPlatPointSdkPmd_C

// required .Pmd.PlatBaseData data = 1;
inline bool RequestQueryPlatPointSdkPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestQueryPlatPointSdkPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestQueryPlatPointSdkPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestQueryPlatPointSdkPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& RequestQueryPlatPointSdkPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestQueryPlatPointSdkPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* RequestQueryPlatPointSdkPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.RequestQueryPlatPointSdkPmd_C.data)
  return data_;
}
inline ::Pmd::PlatBaseData* RequestQueryPlatPointSdkPmd_C::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RequestQueryPlatPointSdkPmd_C::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestQueryPlatPointSdkPmd_C.data)
}

// optional string gameorder = 2;
inline bool RequestQueryPlatPointSdkPmd_C::has_gameorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestQueryPlatPointSdkPmd_C::set_has_gameorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestQueryPlatPointSdkPmd_C::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestQueryPlatPointSdkPmd_C::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& RequestQueryPlatPointSdkPmd_C::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestQueryPlatPointSdkPmd_C.gameorder)
  return *gameorder_;
}
inline void RequestQueryPlatPointSdkPmd_C::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestQueryPlatPointSdkPmd_C.gameorder)
}
inline void RequestQueryPlatPointSdkPmd_C::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestQueryPlatPointSdkPmd_C.gameorder)
}
inline void RequestQueryPlatPointSdkPmd_C::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestQueryPlatPointSdkPmd_C.gameorder)
}
inline ::std::string* RequestQueryPlatPointSdkPmd_C::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestQueryPlatPointSdkPmd_C.gameorder)
  return gameorder_;
}
inline ::std::string* RequestQueryPlatPointSdkPmd_C::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestQueryPlatPointSdkPmd_C::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestQueryPlatPointSdkPmd_C.gameorder)
}

// -------------------------------------------------------------------

// ReturnQueryPlatPointSdkPmd_S

// required .Pmd.PlatBaseData data = 1;
inline bool ReturnQueryPlatPointSdkPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& ReturnQueryPlatPointSdkPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnQueryPlatPointSdkPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* ReturnQueryPlatPointSdkPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnQueryPlatPointSdkPmd_S.data)
  return data_;
}
inline ::Pmd::PlatBaseData* ReturnQueryPlatPointSdkPmd_S::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnQueryPlatPointSdkPmd_S.data)
}

// required string gameorder = 2;
inline bool ReturnQueryPlatPointSdkPmd_S::has_gameorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_has_gameorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& ReturnQueryPlatPointSdkPmd_S::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnQueryPlatPointSdkPmd_S.gameorder)
  return *gameorder_;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnQueryPlatPointSdkPmd_S.gameorder)
}
inline void ReturnQueryPlatPointSdkPmd_S::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnQueryPlatPointSdkPmd_S.gameorder)
}
inline void ReturnQueryPlatPointSdkPmd_S::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnQueryPlatPointSdkPmd_S.gameorder)
}
inline ::std::string* ReturnQueryPlatPointSdkPmd_S::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnQueryPlatPointSdkPmd_S.gameorder)
  return gameorder_;
}
inline ::std::string* ReturnQueryPlatPointSdkPmd_S::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnQueryPlatPointSdkPmd_S::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnQueryPlatPointSdkPmd_S.gameorder)
}

// required uint64 balance = 3;
inline bool ReturnQueryPlatPointSdkPmd_S::has_balance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_has_balance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_has_balance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_balance() {
  balance_ = GOOGLE_ULONGLONG(0);
  clear_has_balance();
}
inline ::google::protobuf::uint64 ReturnQueryPlatPointSdkPmd_S::balance() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnQueryPlatPointSdkPmd_S.balance)
  return balance_;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_balance(::google::protobuf::uint64 value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnQueryPlatPointSdkPmd_S.balance)
}

// required uint32 ret = 4;
inline bool ReturnQueryPlatPointSdkPmd_S::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReturnQueryPlatPointSdkPmd_S::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnQueryPlatPointSdkPmd_S.ret)
  return ret_;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnQueryPlatPointSdkPmd_S.ret)
}

// optional string retdesc = 5;
inline bool ReturnQueryPlatPointSdkPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnQueryPlatPointSdkPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnQueryPlatPointSdkPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnQueryPlatPointSdkPmd_S.retdesc)
}
inline void ReturnQueryPlatPointSdkPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnQueryPlatPointSdkPmd_S.retdesc)
}
inline void ReturnQueryPlatPointSdkPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnQueryPlatPointSdkPmd_S.retdesc)
}
inline ::std::string* ReturnQueryPlatPointSdkPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnQueryPlatPointSdkPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnQueryPlatPointSdkPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnQueryPlatPointSdkPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnQueryPlatPointSdkPmd_S.retdesc)
}

// optional float money = 6;
inline bool ReturnQueryPlatPointSdkPmd_S::has_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_has_money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_has_money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReturnQueryPlatPointSdkPmd_S::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline float ReturnQueryPlatPointSdkPmd_S::money() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnQueryPlatPointSdkPmd_S.money)
  return money_;
}
inline void ReturnQueryPlatPointSdkPmd_S::set_money(float value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnQueryPlatPointSdkPmd_S.money)
}

// -------------------------------------------------------------------

// RequestRedeemPlatPointSdkPmd_C

// required .Pmd.PlatBaseData data = 1;
inline bool RequestRedeemPlatPointSdkPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& RequestRedeemPlatPointSdkPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemPlatPointSdkPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* RequestRedeemPlatPointSdkPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRedeemPlatPointSdkPmd_C.data)
  return data_;
}
inline ::Pmd::PlatBaseData* RequestRedeemPlatPointSdkPmd_C::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRedeemPlatPointSdkPmd_C.data)
}

// optional string gameorder = 2;
inline bool RequestRedeemPlatPointSdkPmd_C::has_gameorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_has_gameorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& RequestRedeemPlatPointSdkPmd_C::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemPlatPointSdkPmd_C.gameorder)
  return *gameorder_;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestRedeemPlatPointSdkPmd_C.gameorder)
}
inline void RequestRedeemPlatPointSdkPmd_C::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestRedeemPlatPointSdkPmd_C.gameorder)
}
inline void RequestRedeemPlatPointSdkPmd_C::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestRedeemPlatPointSdkPmd_C.gameorder)
}
inline ::std::string* RequestRedeemPlatPointSdkPmd_C::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRedeemPlatPointSdkPmd_C.gameorder)
  return gameorder_;
}
inline ::std::string* RequestRedeemPlatPointSdkPmd_C::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestRedeemPlatPointSdkPmd_C::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRedeemPlatPointSdkPmd_C.gameorder)
}

// optional uint32 goodid = 3;
inline bool RequestRedeemPlatPointSdkPmd_C::has_goodid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_has_goodid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_goodid() {
  goodid_ = 0u;
  clear_has_goodid();
}
inline ::google::protobuf::uint32 RequestRedeemPlatPointSdkPmd_C::goodid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemPlatPointSdkPmd_C.goodid)
  return goodid_;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_goodid(::google::protobuf::uint32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedeemPlatPointSdkPmd_C.goodid)
}

// optional float money = 4;
inline bool RequestRedeemPlatPointSdkPmd_C::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline float RequestRedeemPlatPointSdkPmd_C::money() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemPlatPointSdkPmd_C.money)
  return money_;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_money(float value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedeemPlatPointSdkPmd_C.money)
}

// optional string extdata = 5;
inline bool RequestRedeemPlatPointSdkPmd_C::has_extdata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_has_extdata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestRedeemPlatPointSdkPmd_C::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& RequestRedeemPlatPointSdkPmd_C::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemPlatPointSdkPmd_C.extdata)
  return *extdata_;
}
inline void RequestRedeemPlatPointSdkPmd_C::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestRedeemPlatPointSdkPmd_C.extdata)
}
inline void RequestRedeemPlatPointSdkPmd_C::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestRedeemPlatPointSdkPmd_C.extdata)
}
inline void RequestRedeemPlatPointSdkPmd_C::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestRedeemPlatPointSdkPmd_C.extdata)
}
inline ::std::string* RequestRedeemPlatPointSdkPmd_C::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRedeemPlatPointSdkPmd_C.extdata)
  return extdata_;
}
inline ::std::string* RequestRedeemPlatPointSdkPmd_C::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestRedeemPlatPointSdkPmd_C::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRedeemPlatPointSdkPmd_C.extdata)
}

// -------------------------------------------------------------------

// ReturnRedeemPlatPointSdkPmd_S

// required .Pmd.PlatBaseData data = 1;
inline bool ReturnRedeemPlatPointSdkPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& ReturnRedeemPlatPointSdkPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemPlatPointSdkPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* ReturnRedeemPlatPointSdkPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnRedeemPlatPointSdkPmd_S.data)
  return data_;
}
inline ::Pmd::PlatBaseData* ReturnRedeemPlatPointSdkPmd_S::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnRedeemPlatPointSdkPmd_S.data)
}

// required string gameorder = 2;
inline bool ReturnRedeemPlatPointSdkPmd_S::has_gameorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_has_gameorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& ReturnRedeemPlatPointSdkPmd_S::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemPlatPointSdkPmd_S.gameorder)
  return *gameorder_;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemPlatPointSdkPmd_S.gameorder)
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnRedeemPlatPointSdkPmd_S.gameorder)
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnRedeemPlatPointSdkPmd_S.gameorder)
}
inline ::std::string* ReturnRedeemPlatPointSdkPmd_S::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnRedeemPlatPointSdkPmd_S.gameorder)
  return gameorder_;
}
inline ::std::string* ReturnRedeemPlatPointSdkPmd_S::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnRedeemPlatPointSdkPmd_S.gameorder)
}

// required uint32 goodid = 3;
inline bool ReturnRedeemPlatPointSdkPmd_S::has_goodid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_has_goodid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_has_goodid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_goodid() {
  goodid_ = 0u;
  clear_has_goodid();
}
inline ::google::protobuf::uint32 ReturnRedeemPlatPointSdkPmd_S::goodid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemPlatPointSdkPmd_S.goodid)
  return goodid_;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_goodid(::google::protobuf::uint32 value) {
  set_has_goodid();
  goodid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemPlatPointSdkPmd_S.goodid)
}

// required float money = 4;
inline bool ReturnRedeemPlatPointSdkPmd_S::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline float ReturnRedeemPlatPointSdkPmd_S::money() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemPlatPointSdkPmd_S.money)
  return money_;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_money(float value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemPlatPointSdkPmd_S.money)
}

// required uint64 balance = 5;
inline bool ReturnRedeemPlatPointSdkPmd_S::has_balance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_has_balance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_has_balance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_balance() {
  balance_ = GOOGLE_ULONGLONG(0);
  clear_has_balance();
}
inline ::google::protobuf::uint64 ReturnRedeemPlatPointSdkPmd_S::balance() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemPlatPointSdkPmd_S.balance)
  return balance_;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_balance(::google::protobuf::uint64 value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemPlatPointSdkPmd_S.balance)
}

// required uint32 ret = 6;
inline bool ReturnRedeemPlatPointSdkPmd_S::has_ret() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_has_ret() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_has_ret() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReturnRedeemPlatPointSdkPmd_S::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemPlatPointSdkPmd_S.ret)
  return ret_;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemPlatPointSdkPmd_S.ret)
}

// optional string retdesc = 7;
inline bool ReturnRedeemPlatPointSdkPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReturnRedeemPlatPointSdkPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnRedeemPlatPointSdkPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemPlatPointSdkPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemPlatPointSdkPmd_S.retdesc)
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnRedeemPlatPointSdkPmd_S.retdesc)
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnRedeemPlatPointSdkPmd_S.retdesc)
}
inline ::std::string* ReturnRedeemPlatPointSdkPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnRedeemPlatPointSdkPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnRedeemPlatPointSdkPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnRedeemPlatPointSdkPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnRedeemPlatPointSdkPmd_S.retdesc)
}

// -------------------------------------------------------------------

// RequestRedeemBackPlatPointSdkPmd_C

// required .Pmd.PlatBaseData data = 1;
inline bool RequestRedeemBackPlatPointSdkPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& RequestRedeemBackPlatPointSdkPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemBackPlatPointSdkPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* RequestRedeemBackPlatPointSdkPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRedeemBackPlatPointSdkPmd_C.data)
  return data_;
}
inline ::Pmd::PlatBaseData* RequestRedeemBackPlatPointSdkPmd_C::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRedeemBackPlatPointSdkPmd_C.data)
}

// optional string gameorder = 2;
inline bool RequestRedeemBackPlatPointSdkPmd_C::has_gameorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_has_gameorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& RequestRedeemBackPlatPointSdkPmd_C::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemBackPlatPointSdkPmd_C.gameorder)
  return *gameorder_;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestRedeemBackPlatPointSdkPmd_C.gameorder)
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestRedeemBackPlatPointSdkPmd_C.gameorder)
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestRedeemBackPlatPointSdkPmd_C.gameorder)
}
inline ::std::string* RequestRedeemBackPlatPointSdkPmd_C::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRedeemBackPlatPointSdkPmd_C.gameorder)
  return gameorder_;
}
inline ::std::string* RequestRedeemBackPlatPointSdkPmd_C::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRedeemBackPlatPointSdkPmd_C.gameorder)
}

// optional uint32 point = 3;
inline bool RequestRedeemBackPlatPointSdkPmd_C::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_point() {
  point_ = 0u;
  clear_has_point();
}
inline ::google::protobuf::uint32 RequestRedeemBackPlatPointSdkPmd_C::point() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemBackPlatPointSdkPmd_C.point)
  return point_;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_point(::google::protobuf::uint32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedeemBackPlatPointSdkPmd_C.point)
}

// optional float money = 4;
inline bool RequestRedeemBackPlatPointSdkPmd_C::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline float RequestRedeemBackPlatPointSdkPmd_C::money() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemBackPlatPointSdkPmd_C.money)
  return money_;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_money(float value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedeemBackPlatPointSdkPmd_C.money)
}

// optional string extdata = 5;
inline bool RequestRedeemBackPlatPointSdkPmd_C::has_extdata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_has_extdata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& RequestRedeemBackPlatPointSdkPmd_C::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedeemBackPlatPointSdkPmd_C.extdata)
  return *extdata_;
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestRedeemBackPlatPointSdkPmd_C.extdata)
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestRedeemBackPlatPointSdkPmd_C.extdata)
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestRedeemBackPlatPointSdkPmd_C.extdata)
}
inline ::std::string* RequestRedeemBackPlatPointSdkPmd_C::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRedeemBackPlatPointSdkPmd_C.extdata)
  return extdata_;
}
inline ::std::string* RequestRedeemBackPlatPointSdkPmd_C::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestRedeemBackPlatPointSdkPmd_C::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRedeemBackPlatPointSdkPmd_C.extdata)
}

// -------------------------------------------------------------------

// ReturnRedeemBackPlatPointSdkPmd_S

// required .Pmd.PlatBaseData data = 1;
inline bool ReturnRedeemBackPlatPointSdkPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& ReturnRedeemBackPlatPointSdkPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* ReturnRedeemBackPlatPointSdkPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.data)
  return data_;
}
inline ::Pmd::PlatBaseData* ReturnRedeemBackPlatPointSdkPmd_S::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.data)
}

// required string gameorder = 2;
inline bool ReturnRedeemBackPlatPointSdkPmd_S::has_gameorder() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_has_gameorder() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& ReturnRedeemBackPlatPointSdkPmd_S::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.gameorder)
  return *gameorder_;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.gameorder)
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.gameorder)
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.gameorder)
}
inline ::std::string* ReturnRedeemBackPlatPointSdkPmd_S::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.gameorder)
  return gameorder_;
}
inline ::std::string* ReturnRedeemBackPlatPointSdkPmd_S::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.gameorder)
}

// required uint64 balance = 3;
inline bool ReturnRedeemBackPlatPointSdkPmd_S::has_balance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_has_balance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_has_balance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_balance() {
  balance_ = GOOGLE_ULONGLONG(0);
  clear_has_balance();
}
inline ::google::protobuf::uint64 ReturnRedeemBackPlatPointSdkPmd_S::balance() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.balance)
  return balance_;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_balance(::google::protobuf::uint64 value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.balance)
}

// optional float money = 4;
inline bool ReturnRedeemBackPlatPointSdkPmd_S::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline float ReturnRedeemBackPlatPointSdkPmd_S::money() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.money)
  return money_;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_money(float value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.money)
}

// required uint32 ret = 5;
inline bool ReturnRedeemBackPlatPointSdkPmd_S::has_ret() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_has_ret() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_has_ret() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReturnRedeemBackPlatPointSdkPmd_S::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.ret)
  return ret_;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.ret)
}

// optional string retdesc = 6;
inline bool ReturnRedeemBackPlatPointSdkPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnRedeemBackPlatPointSdkPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.retdesc)
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.retdesc)
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.retdesc)
}
inline ::std::string* ReturnRedeemBackPlatPointSdkPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnRedeemBackPlatPointSdkPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnRedeemBackPlatPointSdkPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnRedeemBackPlatPointSdkPmd_S.retdesc)
}

// -------------------------------------------------------------------

// ReturnErrorCodeSdkPmd_S

// optional .Pmd.PlatBaseData data = 1;
inline bool ReturnErrorCodeSdkPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnErrorCodeSdkPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnErrorCodeSdkPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnErrorCodeSdkPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& ReturnErrorCodeSdkPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnErrorCodeSdkPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* ReturnErrorCodeSdkPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnErrorCodeSdkPmd_S.data)
  return data_;
}
inline ::Pmd::PlatBaseData* ReturnErrorCodeSdkPmd_S::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ReturnErrorCodeSdkPmd_S::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnErrorCodeSdkPmd_S.data)
}

// optional uint32 ret = 2;
inline bool ReturnErrorCodeSdkPmd_S::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnErrorCodeSdkPmd_S::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnErrorCodeSdkPmd_S::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnErrorCodeSdkPmd_S::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ReturnErrorCodeSdkPmd_S::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnErrorCodeSdkPmd_S.ret)
  return ret_;
}
inline void ReturnErrorCodeSdkPmd_S::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnErrorCodeSdkPmd_S.ret)
}

// optional string retdesc = 3;
inline bool ReturnErrorCodeSdkPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnErrorCodeSdkPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnErrorCodeSdkPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnErrorCodeSdkPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnErrorCodeSdkPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnErrorCodeSdkPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnErrorCodeSdkPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnErrorCodeSdkPmd_S.retdesc)
}
inline void ReturnErrorCodeSdkPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnErrorCodeSdkPmd_S.retdesc)
}
inline void ReturnErrorCodeSdkPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnErrorCodeSdkPmd_S.retdesc)
}
inline ::std::string* ReturnErrorCodeSdkPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnErrorCodeSdkPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnErrorCodeSdkPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnErrorCodeSdkPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnErrorCodeSdkPmd_S.retdesc)
}

// -------------------------------------------------------------------

// RequestBindAccountSdkPmd_CS

// optional .Pmd.PlatBaseData data = 1;
inline bool RequestBindAccountSdkPmd_CS::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestBindAccountSdkPmd_CS::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestBindAccountSdkPmd_CS::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestBindAccountSdkPmd_CS::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& RequestBindAccountSdkPmd_CS::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBindAccountSdkPmd_CS.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* RequestBindAccountSdkPmd_CS::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.RequestBindAccountSdkPmd_CS.data)
  return data_;
}
inline ::Pmd::PlatBaseData* RequestBindAccountSdkPmd_CS::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RequestBindAccountSdkPmd_CS::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestBindAccountSdkPmd_CS.data)
}

// optional uint32 ret = 2;
inline bool RequestBindAccountSdkPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestBindAccountSdkPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestBindAccountSdkPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestBindAccountSdkPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RequestBindAccountSdkPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBindAccountSdkPmd_CS.ret)
  return ret_;
}
inline void RequestBindAccountSdkPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBindAccountSdkPmd_CS.ret)
}

// -------------------------------------------------------------------

// PlatAccountInfo

// optional uint32 platid = 1;
inline bool PlatAccountInfo::has_platid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlatAccountInfo::set_has_platid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlatAccountInfo::clear_has_platid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlatAccountInfo::clear_platid() {
  platid_ = 0u;
  clear_has_platid();
}
inline ::google::protobuf::uint32 PlatAccountInfo::platid() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatAccountInfo.platid)
  return platid_;
}
inline void PlatAccountInfo::set_platid(::google::protobuf::uint32 value) {
  set_has_platid();
  platid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PlatAccountInfo.platid)
}

// optional string plataccount = 2;
inline bool PlatAccountInfo::has_plataccount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlatAccountInfo::set_has_plataccount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlatAccountInfo::clear_has_plataccount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlatAccountInfo::clear_plataccount() {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_->clear();
  }
  clear_has_plataccount();
}
inline const ::std::string& PlatAccountInfo::plataccount() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatAccountInfo.plataccount)
  return *plataccount_;
}
inline void PlatAccountInfo::set_plataccount(const ::std::string& value) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PlatAccountInfo.plataccount)
}
inline void PlatAccountInfo::set_plataccount(const char* value) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PlatAccountInfo.plataccount)
}
inline void PlatAccountInfo::set_plataccount(const char* value, size_t size) {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  plataccount_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PlatAccountInfo.plataccount)
}
inline ::std::string* PlatAccountInfo::mutable_plataccount() {
  set_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    plataccount_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PlatAccountInfo.plataccount)
  return plataccount_;
}
inline ::std::string* PlatAccountInfo::release_plataccount() {
  clear_has_plataccount();
  if (plataccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = plataccount_;
    plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlatAccountInfo::set_allocated_plataccount(::std::string* plataccount) {
  if (plataccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete plataccount_;
  }
  if (plataccount) {
    set_has_plataccount();
    plataccount_ = plataccount;
  } else {
    clear_has_plataccount();
    plataccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatAccountInfo.plataccount)
}

// optional string platname = 3;
inline bool PlatAccountInfo::has_platname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlatAccountInfo::set_has_platname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlatAccountInfo::clear_has_platname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlatAccountInfo::clear_platname() {
  if (platname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_->clear();
  }
  clear_has_platname();
}
inline const ::std::string& PlatAccountInfo::platname() const {
  // @@protoc_insertion_point(field_get:Pmd.PlatAccountInfo.platname)
  return *platname_;
}
inline void PlatAccountInfo::set_platname(const ::std::string& value) {
  set_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_ = new ::std::string;
  }
  platname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PlatAccountInfo.platname)
}
inline void PlatAccountInfo::set_platname(const char* value) {
  set_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_ = new ::std::string;
  }
  platname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PlatAccountInfo.platname)
}
inline void PlatAccountInfo::set_platname(const char* value, size_t size) {
  set_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_ = new ::std::string;
  }
  platname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PlatAccountInfo.platname)
}
inline ::std::string* PlatAccountInfo::mutable_platname() {
  set_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PlatAccountInfo.platname)
  return platname_;
}
inline ::std::string* PlatAccountInfo::release_platname() {
  clear_has_platname();
  if (platname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platname_;
    platname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PlatAccountInfo::set_allocated_platname(::std::string* platname) {
  if (platname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platname_;
  }
  if (platname) {
    set_has_platname();
    platname_ = platname;
  } else {
    clear_has_platname();
    platname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PlatAccountInfo.platname)
}

// -------------------------------------------------------------------

// RequestBindPlatInfoSdkPmd_CS

// optional .Pmd.PlatBaseData data = 1;
inline bool RequestBindPlatInfoSdkPmd_CS::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestBindPlatInfoSdkPmd_CS::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestBindPlatInfoSdkPmd_CS::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestBindPlatInfoSdkPmd_CS::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& RequestBindPlatInfoSdkPmd_CS::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBindPlatInfoSdkPmd_CS.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* RequestBindPlatInfoSdkPmd_CS::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.RequestBindPlatInfoSdkPmd_CS.data)
  return data_;
}
inline ::Pmd::PlatBaseData* RequestBindPlatInfoSdkPmd_CS::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RequestBindPlatInfoSdkPmd_CS::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestBindPlatInfoSdkPmd_CS.data)
}

// repeated .Pmd.PlatAccountInfo bindplat = 2;
inline int RequestBindPlatInfoSdkPmd_CS::bindplat_size() const {
  return bindplat_.size();
}
inline void RequestBindPlatInfoSdkPmd_CS::clear_bindplat() {
  bindplat_.Clear();
}
inline const ::Pmd::PlatAccountInfo& RequestBindPlatInfoSdkPmd_CS::bindplat(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBindPlatInfoSdkPmd_CS.bindplat)
  return bindplat_.Get(index);
}
inline ::Pmd::PlatAccountInfo* RequestBindPlatInfoSdkPmd_CS::mutable_bindplat(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestBindPlatInfoSdkPmd_CS.bindplat)
  return bindplat_.Mutable(index);
}
inline ::Pmd::PlatAccountInfo* RequestBindPlatInfoSdkPmd_CS::add_bindplat() {
  // @@protoc_insertion_point(field_add:Pmd.RequestBindPlatInfoSdkPmd_CS.bindplat)
  return bindplat_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PlatAccountInfo >&
RequestBindPlatInfoSdkPmd_CS::bindplat() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestBindPlatInfoSdkPmd_CS.bindplat)
  return bindplat_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::PlatAccountInfo >*
RequestBindPlatInfoSdkPmd_CS::mutable_bindplat() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestBindPlatInfoSdkPmd_CS.bindplat)
  return &bindplat_;
}

// optional uint32 ret = 3;
inline bool RequestBindPlatInfoSdkPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestBindPlatInfoSdkPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestBindPlatInfoSdkPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestBindPlatInfoSdkPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RequestBindPlatInfoSdkPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBindPlatInfoSdkPmd_CS.ret)
  return ret_;
}
inline void RequestBindPlatInfoSdkPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBindPlatInfoSdkPmd_CS.ret)
}

// -------------------------------------------------------------------

// RequestAccidByPlatinfoSdkPmd_CS

// optional .Pmd.PlatBaseData data = 1;
inline bool RequestAccidByPlatinfoSdkPmd_CS::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestAccidByPlatinfoSdkPmd_CS::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestAccidByPlatinfoSdkPmd_CS::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestAccidByPlatinfoSdkPmd_CS::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& RequestAccidByPlatinfoSdkPmd_CS::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestAccidByPlatinfoSdkPmd_CS.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* RequestAccidByPlatinfoSdkPmd_CS::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.RequestAccidByPlatinfoSdkPmd_CS.data)
  return data_;
}
inline ::Pmd::PlatBaseData* RequestAccidByPlatinfoSdkPmd_CS::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RequestAccidByPlatinfoSdkPmd_CS::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestAccidByPlatinfoSdkPmd_CS.data)
}

// repeated .Pmd.PlatBaseData reqdata = 2;
inline int RequestAccidByPlatinfoSdkPmd_CS::reqdata_size() const {
  return reqdata_.size();
}
inline void RequestAccidByPlatinfoSdkPmd_CS::clear_reqdata() {
  reqdata_.Clear();
}
inline const ::Pmd::PlatBaseData& RequestAccidByPlatinfoSdkPmd_CS::reqdata(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestAccidByPlatinfoSdkPmd_CS.reqdata)
  return reqdata_.Get(index);
}
inline ::Pmd::PlatBaseData* RequestAccidByPlatinfoSdkPmd_CS::mutable_reqdata(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestAccidByPlatinfoSdkPmd_CS.reqdata)
  return reqdata_.Mutable(index);
}
inline ::Pmd::PlatBaseData* RequestAccidByPlatinfoSdkPmd_CS::add_reqdata() {
  // @@protoc_insertion_point(field_add:Pmd.RequestAccidByPlatinfoSdkPmd_CS.reqdata)
  return reqdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PlatBaseData >&
RequestAccidByPlatinfoSdkPmd_CS::reqdata() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestAccidByPlatinfoSdkPmd_CS.reqdata)
  return reqdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::PlatBaseData >*
RequestAccidByPlatinfoSdkPmd_CS::mutable_reqdata() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestAccidByPlatinfoSdkPmd_CS.reqdata)
  return &reqdata_;
}

// optional uint32 ret = 3;
inline bool RequestAccidByPlatinfoSdkPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestAccidByPlatinfoSdkPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestAccidByPlatinfoSdkPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestAccidByPlatinfoSdkPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RequestAccidByPlatinfoSdkPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestAccidByPlatinfoSdkPmd_CS.ret)
  return ret_;
}
inline void RequestAccidByPlatinfoSdkPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestAccidByPlatinfoSdkPmd_CS.ret)
}

// -------------------------------------------------------------------

// RequestUnbindAccountSdkPmd_CS

// optional .Pmd.PlatBaseData data = 1;
inline bool RequestUnbindAccountSdkPmd_CS::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestUnbindAccountSdkPmd_CS::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestUnbindAccountSdkPmd_CS::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestUnbindAccountSdkPmd_CS::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& RequestUnbindAccountSdkPmd_CS::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUnbindAccountSdkPmd_CS.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* RequestUnbindAccountSdkPmd_CS::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.RequestUnbindAccountSdkPmd_CS.data)
  return data_;
}
inline ::Pmd::PlatBaseData* RequestUnbindAccountSdkPmd_CS::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RequestUnbindAccountSdkPmd_CS::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestUnbindAccountSdkPmd_CS.data)
}

// optional uint32 ret = 2;
inline bool RequestUnbindAccountSdkPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestUnbindAccountSdkPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestUnbindAccountSdkPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestUnbindAccountSdkPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RequestUnbindAccountSdkPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUnbindAccountSdkPmd_CS.ret)
  return ret_;
}
inline void RequestUnbindAccountSdkPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUnbindAccountSdkPmd_CS.ret)
}

// -------------------------------------------------------------------

// NotifyTapJoyRequestSdkPmd_S

// optional .Pmd.PlatBaseData data = 1;
inline bool NotifyTapJoyRequestSdkPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyTapJoyRequestSdkPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyTapJoyRequestSdkPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyTapJoyRequestSdkPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& NotifyTapJoyRequestSdkPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyTapJoyRequestSdkPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* NotifyTapJoyRequestSdkPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyTapJoyRequestSdkPmd_S.data)
  return data_;
}
inline ::Pmd::PlatBaseData* NotifyTapJoyRequestSdkPmd_S::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void NotifyTapJoyRequestSdkPmd_S::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyTapJoyRequestSdkPmd_S.data)
}

// optional int32 point = 2;
inline bool NotifyTapJoyRequestSdkPmd_S::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyTapJoyRequestSdkPmd_S::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyTapJoyRequestSdkPmd_S::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyTapJoyRequestSdkPmd_S::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 NotifyTapJoyRequestSdkPmd_S::point() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyTapJoyRequestSdkPmd_S.point)
  return point_;
}
inline void NotifyTapJoyRequestSdkPmd_S::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyTapJoyRequestSdkPmd_S.point)
}

// optional uint32 placement = 3;
inline bool NotifyTapJoyRequestSdkPmd_S::has_placement() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyTapJoyRequestSdkPmd_S::set_has_placement() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyTapJoyRequestSdkPmd_S::clear_has_placement() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyTapJoyRequestSdkPmd_S::clear_placement() {
  placement_ = 0u;
  clear_has_placement();
}
inline ::google::protobuf::uint32 NotifyTapJoyRequestSdkPmd_S::placement() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyTapJoyRequestSdkPmd_S.placement)
  return placement_;
}
inline void NotifyTapJoyRequestSdkPmd_S::set_placement(::google::protobuf::uint32 value) {
  set_has_placement();
  placement_ = value;
  // @@protoc_insertion_point(field_set:Pmd.NotifyTapJoyRequestSdkPmd_S.placement)
}

// optional string extdata = 4;
inline bool NotifyTapJoyRequestSdkPmd_S::has_extdata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyTapJoyRequestSdkPmd_S::set_has_extdata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyTapJoyRequestSdkPmd_S::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyTapJoyRequestSdkPmd_S::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& NotifyTapJoyRequestSdkPmd_S::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.NotifyTapJoyRequestSdkPmd_S.extdata)
  return *extdata_;
}
inline void NotifyTapJoyRequestSdkPmd_S::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.NotifyTapJoyRequestSdkPmd_S.extdata)
}
inline void NotifyTapJoyRequestSdkPmd_S::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.NotifyTapJoyRequestSdkPmd_S.extdata)
}
inline void NotifyTapJoyRequestSdkPmd_S::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.NotifyTapJoyRequestSdkPmd_S.extdata)
}
inline ::std::string* NotifyTapJoyRequestSdkPmd_S::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.NotifyTapJoyRequestSdkPmd_S.extdata)
  return extdata_;
}
inline ::std::string* NotifyTapJoyRequestSdkPmd_S::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NotifyTapJoyRequestSdkPmd_S::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.NotifyTapJoyRequestSdkPmd_S.extdata)
}

// -------------------------------------------------------------------

// PushMsgRequestSdkPmd_C

// optional .Pmd.PlatBaseData data = 1;
inline bool PushMsgRequestSdkPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushMsgRequestSdkPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushMsgRequestSdkPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushMsgRequestSdkPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& PushMsgRequestSdkPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgRequestSdkPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* PushMsgRequestSdkPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.PushMsgRequestSdkPmd_C.data)
  return data_;
}
inline ::Pmd::PlatBaseData* PushMsgRequestSdkPmd_C::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void PushMsgRequestSdkPmd_C::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PushMsgRequestSdkPmd_C.data)
}

// optional uint32 msgid = 2;
inline bool PushMsgRequestSdkPmd_C::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushMsgRequestSdkPmd_C::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushMsgRequestSdkPmd_C::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushMsgRequestSdkPmd_C::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 PushMsgRequestSdkPmd_C::msgid() const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgRequestSdkPmd_C.msgid)
  return msgid_;
}
inline void PushMsgRequestSdkPmd_C::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PushMsgRequestSdkPmd_C.msgid)
}

// repeated string tokens = 3;
inline int PushMsgRequestSdkPmd_C::tokens_size() const {
  return tokens_.size();
}
inline void PushMsgRequestSdkPmd_C::clear_tokens() {
  tokens_.Clear();
}
inline const ::std::string& PushMsgRequestSdkPmd_C::tokens(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgRequestSdkPmd_C.tokens)
  return tokens_.Get(index);
}
inline ::std::string* PushMsgRequestSdkPmd_C::mutable_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.PushMsgRequestSdkPmd_C.tokens)
  return tokens_.Mutable(index);
}
inline void PushMsgRequestSdkPmd_C::set_tokens(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Pmd.PushMsgRequestSdkPmd_C.tokens)
  tokens_.Mutable(index)->assign(value);
}
inline void PushMsgRequestSdkPmd_C::set_tokens(int index, const char* value) {
  tokens_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PushMsgRequestSdkPmd_C.tokens)
}
inline void PushMsgRequestSdkPmd_C::set_tokens(int index, const char* value, size_t size) {
  tokens_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PushMsgRequestSdkPmd_C.tokens)
}
inline ::std::string* PushMsgRequestSdkPmd_C::add_tokens() {
  return tokens_.Add();
}
inline void PushMsgRequestSdkPmd_C::add_tokens(const ::std::string& value) {
  tokens_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Pmd.PushMsgRequestSdkPmd_C.tokens)
}
inline void PushMsgRequestSdkPmd_C::add_tokens(const char* value) {
  tokens_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Pmd.PushMsgRequestSdkPmd_C.tokens)
}
inline void PushMsgRequestSdkPmd_C::add_tokens(const char* value, size_t size) {
  tokens_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Pmd.PushMsgRequestSdkPmd_C.tokens)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PushMsgRequestSdkPmd_C::tokens() const {
  // @@protoc_insertion_point(field_list:Pmd.PushMsgRequestSdkPmd_C.tokens)
  return tokens_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PushMsgRequestSdkPmd_C::mutable_tokens() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.PushMsgRequestSdkPmd_C.tokens)
  return &tokens_;
}

// optional string title = 4;
inline bool PushMsgRequestSdkPmd_C::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PushMsgRequestSdkPmd_C::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PushMsgRequestSdkPmd_C::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PushMsgRequestSdkPmd_C::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& PushMsgRequestSdkPmd_C::title() const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgRequestSdkPmd_C.title)
  return *title_;
}
inline void PushMsgRequestSdkPmd_C::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PushMsgRequestSdkPmd_C.title)
}
inline void PushMsgRequestSdkPmd_C::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PushMsgRequestSdkPmd_C.title)
}
inline void PushMsgRequestSdkPmd_C::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PushMsgRequestSdkPmd_C.title)
}
inline ::std::string* PushMsgRequestSdkPmd_C::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PushMsgRequestSdkPmd_C.title)
  return title_;
}
inline ::std::string* PushMsgRequestSdkPmd_C::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PushMsgRequestSdkPmd_C::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PushMsgRequestSdkPmd_C.title)
}

// optional string message = 5;
inline bool PushMsgRequestSdkPmd_C::has_message() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PushMsgRequestSdkPmd_C::set_has_message() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PushMsgRequestSdkPmd_C::clear_has_message() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PushMsgRequestSdkPmd_C::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& PushMsgRequestSdkPmd_C::message() const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgRequestSdkPmd_C.message)
  return *message_;
}
inline void PushMsgRequestSdkPmd_C::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PushMsgRequestSdkPmd_C.message)
}
inline void PushMsgRequestSdkPmd_C::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PushMsgRequestSdkPmd_C.message)
}
inline void PushMsgRequestSdkPmd_C::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PushMsgRequestSdkPmd_C.message)
}
inline ::std::string* PushMsgRequestSdkPmd_C::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PushMsgRequestSdkPmd_C.message)
  return message_;
}
inline ::std::string* PushMsgRequestSdkPmd_C::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PushMsgRequestSdkPmd_C::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PushMsgRequestSdkPmd_C.message)
}

// optional string extdata = 6;
inline bool PushMsgRequestSdkPmd_C::has_extdata() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PushMsgRequestSdkPmd_C::set_has_extdata() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PushMsgRequestSdkPmd_C::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PushMsgRequestSdkPmd_C::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& PushMsgRequestSdkPmd_C::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgRequestSdkPmd_C.extdata)
  return *extdata_;
}
inline void PushMsgRequestSdkPmd_C::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PushMsgRequestSdkPmd_C.extdata)
}
inline void PushMsgRequestSdkPmd_C::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PushMsgRequestSdkPmd_C.extdata)
}
inline void PushMsgRequestSdkPmd_C::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PushMsgRequestSdkPmd_C.extdata)
}
inline ::std::string* PushMsgRequestSdkPmd_C::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PushMsgRequestSdkPmd_C.extdata)
  return extdata_;
}
inline ::std::string* PushMsgRequestSdkPmd_C::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PushMsgRequestSdkPmd_C::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PushMsgRequestSdkPmd_C.extdata)
}

// -------------------------------------------------------------------

// PushMsgReturnSdkPmd_S

// optional .Pmd.PlatBaseData data = 1;
inline bool PushMsgReturnSdkPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PushMsgReturnSdkPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PushMsgReturnSdkPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PushMsgReturnSdkPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& PushMsgReturnSdkPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgReturnSdkPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* PushMsgReturnSdkPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.PushMsgReturnSdkPmd_S.data)
  return data_;
}
inline ::Pmd::PlatBaseData* PushMsgReturnSdkPmd_S::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void PushMsgReturnSdkPmd_S::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PushMsgReturnSdkPmd_S.data)
}

// optional uint32 msgid = 2;
inline bool PushMsgReturnSdkPmd_S::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PushMsgReturnSdkPmd_S::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PushMsgReturnSdkPmd_S::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PushMsgReturnSdkPmd_S::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 PushMsgReturnSdkPmd_S::msgid() const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgReturnSdkPmd_S.msgid)
  return msgid_;
}
inline void PushMsgReturnSdkPmd_S::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PushMsgReturnSdkPmd_S.msgid)
}

// optional uint32 ret = 3;
inline bool PushMsgReturnSdkPmd_S::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PushMsgReturnSdkPmd_S::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PushMsgReturnSdkPmd_S::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PushMsgReturnSdkPmd_S::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 PushMsgReturnSdkPmd_S::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgReturnSdkPmd_S.ret)
  return ret_;
}
inline void PushMsgReturnSdkPmd_S::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PushMsgReturnSdkPmd_S.ret)
}

// optional string retdesc = 4;
inline bool PushMsgReturnSdkPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PushMsgReturnSdkPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PushMsgReturnSdkPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PushMsgReturnSdkPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& PushMsgReturnSdkPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.PushMsgReturnSdkPmd_S.retdesc)
  return *retdesc_;
}
inline void PushMsgReturnSdkPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PushMsgReturnSdkPmd_S.retdesc)
}
inline void PushMsgReturnSdkPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PushMsgReturnSdkPmd_S.retdesc)
}
inline void PushMsgReturnSdkPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PushMsgReturnSdkPmd_S.retdesc)
}
inline ::std::string* PushMsgReturnSdkPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PushMsgReturnSdkPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* PushMsgReturnSdkPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PushMsgReturnSdkPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PushMsgReturnSdkPmd_S.retdesc)
}

// -------------------------------------------------------------------

// BindAccountPhoneSdkPmd_CS

// required .Pmd.PlatBaseData data = 1;
inline bool BindAccountPhoneSdkPmd_CS::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BindAccountPhoneSdkPmd_CS::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& BindAccountPhoneSdkPmd_CS::data() const {
  // @@protoc_insertion_point(field_get:Pmd.BindAccountPhoneSdkPmd_CS.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* BindAccountPhoneSdkPmd_CS::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.BindAccountPhoneSdkPmd_CS.data)
  return data_;
}
inline ::Pmd::PlatBaseData* BindAccountPhoneSdkPmd_CS::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void BindAccountPhoneSdkPmd_CS::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BindAccountPhoneSdkPmd_CS.data)
}

// required string phone = 2;
inline bool BindAccountPhoneSdkPmd_CS::has_phone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BindAccountPhoneSdkPmd_CS::set_has_phone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_has_phone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_phone() {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& BindAccountPhoneSdkPmd_CS::phone() const {
  // @@protoc_insertion_point(field_get:Pmd.BindAccountPhoneSdkPmd_CS.phone)
  return *phone_;
}
inline void BindAccountPhoneSdkPmd_CS::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BindAccountPhoneSdkPmd_CS.phone)
}
inline void BindAccountPhoneSdkPmd_CS::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BindAccountPhoneSdkPmd_CS.phone)
}
inline void BindAccountPhoneSdkPmd_CS::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BindAccountPhoneSdkPmd_CS.phone)
}
inline ::std::string* BindAccountPhoneSdkPmd_CS::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BindAccountPhoneSdkPmd_CS.phone)
  return phone_;
}
inline ::std::string* BindAccountPhoneSdkPmd_CS::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BindAccountPhoneSdkPmd_CS::set_allocated_phone(::std::string* phone) {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phone_;
  }
  if (phone) {
    set_has_phone();
    phone_ = phone;
  } else {
    clear_has_phone();
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BindAccountPhoneSdkPmd_CS.phone)
}

// optional string code = 3;
inline bool BindAccountPhoneSdkPmd_CS::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BindAccountPhoneSdkPmd_CS::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& BindAccountPhoneSdkPmd_CS::code() const {
  // @@protoc_insertion_point(field_get:Pmd.BindAccountPhoneSdkPmd_CS.code)
  return *code_;
}
inline void BindAccountPhoneSdkPmd_CS::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BindAccountPhoneSdkPmd_CS.code)
}
inline void BindAccountPhoneSdkPmd_CS::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BindAccountPhoneSdkPmd_CS.code)
}
inline void BindAccountPhoneSdkPmd_CS::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BindAccountPhoneSdkPmd_CS.code)
}
inline ::std::string* BindAccountPhoneSdkPmd_CS::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BindAccountPhoneSdkPmd_CS.code)
  return code_;
}
inline ::std::string* BindAccountPhoneSdkPmd_CS::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BindAccountPhoneSdkPmd_CS::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BindAccountPhoneSdkPmd_CS.code)
}

// optional uint32 ret = 4;
inline bool BindAccountPhoneSdkPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BindAccountPhoneSdkPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 BindAccountPhoneSdkPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.BindAccountPhoneSdkPmd_CS.ret)
  return ret_;
}
inline void BindAccountPhoneSdkPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BindAccountPhoneSdkPmd_CS.ret)
}

// optional string retdesc = 5;
inline bool BindAccountPhoneSdkPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BindAccountPhoneSdkPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BindAccountPhoneSdkPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& BindAccountPhoneSdkPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.BindAccountPhoneSdkPmd_CS.retdesc)
  return *retdesc_;
}
inline void BindAccountPhoneSdkPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BindAccountPhoneSdkPmd_CS.retdesc)
}
inline void BindAccountPhoneSdkPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BindAccountPhoneSdkPmd_CS.retdesc)
}
inline void BindAccountPhoneSdkPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BindAccountPhoneSdkPmd_CS.retdesc)
}
inline ::std::string* BindAccountPhoneSdkPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BindAccountPhoneSdkPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* BindAccountPhoneSdkPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BindAccountPhoneSdkPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BindAccountPhoneSdkPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// RequestMobileRegistRandCodeSdkPmd_CS

// required .Pmd.PlatBaseData data = 1;
inline bool RequestMobileRegistRandCodeSdkPmd_CS::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_data() {
  if (data_ != NULL) data_->::Pmd::PlatBaseData::Clear();
  clear_has_data();
}
inline const ::Pmd::PlatBaseData& RequestMobileRegistRandCodeSdkPmd_CS::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PlatBaseData* RequestMobileRegistRandCodeSdkPmd_CS::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PlatBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.data)
  return data_;
}
inline ::Pmd::PlatBaseData* RequestMobileRegistRandCodeSdkPmd_CS::release_data() {
  clear_has_data();
  ::Pmd::PlatBaseData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_allocated_data(::Pmd::PlatBaseData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.data)
}

// optional string mobilenum = 2;
inline bool RequestMobileRegistRandCodeSdkPmd_CS::has_mobilenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_has_mobilenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_has_mobilenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_mobilenum() {
  if (mobilenum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobilenum_->clear();
  }
  clear_has_mobilenum();
}
inline const ::std::string& RequestMobileRegistRandCodeSdkPmd_CS::mobilenum() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.mobilenum)
  return *mobilenum_;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_mobilenum(const ::std::string& value) {
  set_has_mobilenum();
  if (mobilenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobilenum_ = new ::std::string;
  }
  mobilenum_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.mobilenum)
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_mobilenum(const char* value) {
  set_has_mobilenum();
  if (mobilenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobilenum_ = new ::std::string;
  }
  mobilenum_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.mobilenum)
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_mobilenum(const char* value, size_t size) {
  set_has_mobilenum();
  if (mobilenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobilenum_ = new ::std::string;
  }
  mobilenum_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.mobilenum)
}
inline ::std::string* RequestMobileRegistRandCodeSdkPmd_CS::mutable_mobilenum() {
  set_has_mobilenum();
  if (mobilenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mobilenum_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.mobilenum)
  return mobilenum_;
}
inline ::std::string* RequestMobileRegistRandCodeSdkPmd_CS::release_mobilenum() {
  clear_has_mobilenum();
  if (mobilenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mobilenum_;
    mobilenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_allocated_mobilenum(::std::string* mobilenum) {
  if (mobilenum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mobilenum_;
  }
  if (mobilenum) {
    set_has_mobilenum();
    mobilenum_ = mobilenum;
  } else {
    clear_has_mobilenum();
    mobilenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.mobilenum)
}

// optional string randcode = 3;
inline bool RequestMobileRegistRandCodeSdkPmd_CS::has_randcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_has_randcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_has_randcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_randcode() {
  if (randcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    randcode_->clear();
  }
  clear_has_randcode();
}
inline const ::std::string& RequestMobileRegistRandCodeSdkPmd_CS::randcode() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.randcode)
  return *randcode_;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_randcode(const ::std::string& value) {
  set_has_randcode();
  if (randcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    randcode_ = new ::std::string;
  }
  randcode_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.randcode)
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_randcode(const char* value) {
  set_has_randcode();
  if (randcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    randcode_ = new ::std::string;
  }
  randcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.randcode)
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_randcode(const char* value, size_t size) {
  set_has_randcode();
  if (randcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    randcode_ = new ::std::string;
  }
  randcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.randcode)
}
inline ::std::string* RequestMobileRegistRandCodeSdkPmd_CS::mutable_randcode() {
  set_has_randcode();
  if (randcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    randcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.randcode)
  return randcode_;
}
inline ::std::string* RequestMobileRegistRandCodeSdkPmd_CS::release_randcode() {
  clear_has_randcode();
  if (randcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = randcode_;
    randcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_allocated_randcode(::std::string* randcode) {
  if (randcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete randcode_;
  }
  if (randcode) {
    set_has_randcode();
    randcode_ = randcode;
  } else {
    clear_has_randcode();
    randcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.randcode)
}

// optional uint64 logintempid = 4;
inline bool RequestMobileRegistRandCodeSdkPmd_CS::has_logintempid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_has_logintempid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_has_logintempid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_logintempid() {
  logintempid_ = GOOGLE_ULONGLONG(0);
  clear_has_logintempid();
}
inline ::google::protobuf::uint64 RequestMobileRegistRandCodeSdkPmd_CS::logintempid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.logintempid)
  return logintempid_;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_logintempid(::google::protobuf::uint64 value) {
  set_has_logintempid();
  logintempid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.logintempid)
}

// optional uint32 clienttype = 5;
inline bool RequestMobileRegistRandCodeSdkPmd_CS::has_clienttype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_has_clienttype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_has_clienttype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_clienttype() {
  clienttype_ = 0u;
  clear_has_clienttype();
}
inline ::google::protobuf::uint32 RequestMobileRegistRandCodeSdkPmd_CS::clienttype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.clienttype)
  return clienttype_;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_clienttype(::google::protobuf::uint32 value) {
  set_has_clienttype();
  clienttype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.clienttype)
}

// optional uint32 ret = 6;
inline bool RequestMobileRegistRandCodeSdkPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RequestMobileRegistRandCodeSdkPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.ret)
  return ret_;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.ret)
}

// optional string retdesc = 7;
inline bool RequestMobileRegistRandCodeSdkPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& RequestMobileRegistRandCodeSdkPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.retdesc)
  return *retdesc_;
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.retdesc)
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.retdesc)
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.retdesc)
}
inline ::std::string* RequestMobileRegistRandCodeSdkPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* RequestMobileRegistRandCodeSdkPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestMobileRegistRandCodeSdkPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestMobileRegistRandCodeSdkPmd_CS.retdesc)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Pmd::Sdk_Param> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::Sdk_Param>() {
  return ::Pmd::Sdk_Param_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sdkcommand_2eproto__INCLUDED
