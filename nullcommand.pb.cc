// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nullcommand.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nullcommand.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Pmd {

namespace {

const ::google::protobuf::Descriptor* Null_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Null_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Null_Param_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ForwardNullUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ForwardNullUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* TickRequestNullUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TickRequestNullUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetPingTimeNullUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetPingTimeNullUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetTickTimeoutNullUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetTickTimeoutNullUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* TickReturnNullUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TickReturnNullUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestCloseNullUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestCloseNullUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameHeaderNullUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameHeaderNullUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckVersionUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckVersionUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* ForwardBwNullUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ForwardBwNullUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInitData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInitData_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameSyncData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameSyncData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MaxDefualtNullUserPmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MaxDefualtNullUserPmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* StartFrameSyncNullUserPmd_CS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartFrameSyncNullUserPmd_CS_reflection_ = NULL;
const ::google::protobuf::Descriptor* BroadListFrameSyncNullUserPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BroadListFrameSyncNullUserPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestUpFrameSyncNullUserPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestUpFrameSyncNullUserPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* HistoryFrameSyncData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HistoryFrameSyncData_reflection_ = NULL;
const ::google::protobuf::Descriptor* HistoryListFrameSyncNullUserPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HistoryListFrameSyncNullUserPmd_S_reflection_ = NULL;
const ::google::protobuf::Descriptor* StopFrameSyncNullUserPmd_SC_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StopFrameSyncNullUserPmd_SC_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FrameHeader_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_nullcommand_2eproto() {
  protobuf_AddDesc_nullcommand_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "nullcommand.proto");
  GOOGLE_CHECK(file != NULL);
  Null_descriptor_ = file->message_type(0);
  static const int Null_offsets_[1] = {
  };
  Null_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Null_descriptor_,
      Null::default_instance_,
      Null_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Null, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Null, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Null));
  Null_Param_descriptor_ = Null_descriptor_->enum_type(0);
  ForwardNullUserPmd_CS_descriptor_ = file->message_type(1);
  static const int ForwardNullUserPmd_CS_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardNullUserPmd_CS, bycmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardNullUserPmd_CS, byparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardNullUserPmd_CS, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardNullUserPmd_CS, fid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardNullUserPmd_CS, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardNullUserPmd_CS, prototype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardNullUserPmd_CS, bitmask_),
  };
  ForwardNullUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ForwardNullUserPmd_CS_descriptor_,
      ForwardNullUserPmd_CS::default_instance_,
      ForwardNullUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardNullUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardNullUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ForwardNullUserPmd_CS));
  TickRequestNullUserPmd_CS_descriptor_ = file->message_type(2);
  static const int TickRequestNullUserPmd_CS_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TickRequestNullUserPmd_CS, requesttime_),
  };
  TickRequestNullUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TickRequestNullUserPmd_CS_descriptor_,
      TickRequestNullUserPmd_CS::default_instance_,
      TickRequestNullUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TickRequestNullUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TickRequestNullUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TickRequestNullUserPmd_CS));
  SetPingTimeNullUserPmd_CS_descriptor_ = file->message_type(3);
  static const int SetPingTimeNullUserPmd_CS_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPingTimeNullUserPmd_CS, pingmsec_),
  };
  SetPingTimeNullUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetPingTimeNullUserPmd_CS_descriptor_,
      SetPingTimeNullUserPmd_CS::default_instance_,
      SetPingTimeNullUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPingTimeNullUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPingTimeNullUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetPingTimeNullUserPmd_CS));
  SetTickTimeoutNullUserPmd_CS_descriptor_ = file->message_type(4);
  static const int SetTickTimeoutNullUserPmd_CS_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTickTimeoutNullUserPmd_CS, sec_),
  };
  SetTickTimeoutNullUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetTickTimeoutNullUserPmd_CS_descriptor_,
      SetTickTimeoutNullUserPmd_CS::default_instance_,
      SetTickTimeoutNullUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTickTimeoutNullUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTickTimeoutNullUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetTickTimeoutNullUserPmd_CS));
  TickReturnNullUserPmd_CS_descriptor_ = file->message_type(5);
  static const int TickReturnNullUserPmd_CS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TickReturnNullUserPmd_CS, requesttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TickReturnNullUserPmd_CS, mytime_),
  };
  TickReturnNullUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TickReturnNullUserPmd_CS_descriptor_,
      TickReturnNullUserPmd_CS::default_instance_,
      TickReturnNullUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TickReturnNullUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TickReturnNullUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TickReturnNullUserPmd_CS));
  RequestCloseNullUserPmd_CS_descriptor_ = file->message_type(6);
  static const int RequestCloseNullUserPmd_CS_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestCloseNullUserPmd_CS, reason_),
  };
  RequestCloseNullUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestCloseNullUserPmd_CS_descriptor_,
      RequestCloseNullUserPmd_CS::default_instance_,
      RequestCloseNullUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestCloseNullUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestCloseNullUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestCloseNullUserPmd_CS));
  FrameHeaderNullUserPmd_CS_descriptor_ = file->message_type(7);
  static const int FrameHeaderNullUserPmd_CS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameHeaderNullUserPmd_CS, bitmask_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameHeaderNullUserPmd_CS, data_),
  };
  FrameHeaderNullUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FrameHeaderNullUserPmd_CS_descriptor_,
      FrameHeaderNullUserPmd_CS::default_instance_,
      FrameHeaderNullUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameHeaderNullUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameHeaderNullUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FrameHeaderNullUserPmd_CS));
  CheckVersionUserPmd_CS_descriptor_ = file->message_type(8);
  static const int CheckVersionUserPmd_CS_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionUserPmd_CS, versionserver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionUserPmd_CS, versionclient_),
  };
  CheckVersionUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CheckVersionUserPmd_CS_descriptor_,
      CheckVersionUserPmd_CS::default_instance_,
      CheckVersionUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CheckVersionUserPmd_CS));
  ForwardBwNullUserPmd_CS_descriptor_ = file->message_type(9);
  static const int ForwardBwNullUserPmd_CS_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardBwNullUserPmd_CS, data_),
  };
  ForwardBwNullUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ForwardBwNullUserPmd_CS_descriptor_,
      ForwardBwNullUserPmd_CS::default_instance_,
      ForwardBwNullUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardBwNullUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardBwNullUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ForwardBwNullUserPmd_CS));
  UserInitData_descriptor_ = file->message_type(10);
  static const int UserInitData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInitData, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInitData, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInitData, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInitData, data_),
  };
  UserInitData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UserInitData_descriptor_,
      UserInitData::default_instance_,
      UserInitData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInitData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInitData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UserInitData));
  FrameSyncData_descriptor_ = file->message_type(11);
  static const int FrameSyncData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSyncData, tempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSyncData, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSyncData, init_),
  };
  FrameSyncData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FrameSyncData_descriptor_,
      FrameSyncData::default_instance_,
      FrameSyncData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSyncData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSyncData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FrameSyncData));
  MaxDefualtNullUserPmd_descriptor_ = file->message_type(12);
  static const int MaxDefualtNullUserPmd_offsets_[1] = {
  };
  MaxDefualtNullUserPmd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MaxDefualtNullUserPmd_descriptor_,
      MaxDefualtNullUserPmd::default_instance_,
      MaxDefualtNullUserPmd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaxDefualtNullUserPmd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaxDefualtNullUserPmd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MaxDefualtNullUserPmd));
  StartFrameSyncNullUserPmd_CS_descriptor_ = file->message_type(13);
  static const int StartFrameSyncNullUserPmd_CS_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFrameSyncNullUserPmd_CS, msec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFrameSyncNullUserPmd_CS, randseed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFrameSyncNullUserPmd_CS, initdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFrameSyncNullUserPmd_CS, roomid_),
  };
  StartFrameSyncNullUserPmd_CS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StartFrameSyncNullUserPmd_CS_descriptor_,
      StartFrameSyncNullUserPmd_CS::default_instance_,
      StartFrameSyncNullUserPmd_CS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFrameSyncNullUserPmd_CS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartFrameSyncNullUserPmd_CS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StartFrameSyncNullUserPmd_CS));
  BroadListFrameSyncNullUserPmd_S_descriptor_ = file->message_type(14);
  static const int BroadListFrameSyncNullUserPmd_S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadListFrameSyncNullUserPmd_S, framenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadListFrameSyncNullUserPmd_S, datalist_),
  };
  BroadListFrameSyncNullUserPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BroadListFrameSyncNullUserPmd_S_descriptor_,
      BroadListFrameSyncNullUserPmd_S::default_instance_,
      BroadListFrameSyncNullUserPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadListFrameSyncNullUserPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadListFrameSyncNullUserPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BroadListFrameSyncNullUserPmd_S));
  RequestUpFrameSyncNullUserPmd_C_descriptor_ = file->message_type(15);
  static const int RequestUpFrameSyncNullUserPmd_C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestUpFrameSyncNullUserPmd_C, data_),
  };
  RequestUpFrameSyncNullUserPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestUpFrameSyncNullUserPmd_C_descriptor_,
      RequestUpFrameSyncNullUserPmd_C::default_instance_,
      RequestUpFrameSyncNullUserPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestUpFrameSyncNullUserPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestUpFrameSyncNullUserPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestUpFrameSyncNullUserPmd_C));
  HistoryFrameSyncData_descriptor_ = file->message_type(16);
  static const int HistoryFrameSyncData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryFrameSyncData, framenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryFrameSyncData, datalist_),
  };
  HistoryFrameSyncData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HistoryFrameSyncData_descriptor_,
      HistoryFrameSyncData::default_instance_,
      HistoryFrameSyncData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryFrameSyncData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryFrameSyncData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HistoryFrameSyncData));
  HistoryListFrameSyncNullUserPmd_S_descriptor_ = file->message_type(17);
  static const int HistoryListFrameSyncNullUserPmd_S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryListFrameSyncNullUserPmd_S, datalist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryListFrameSyncNullUserPmd_S, finished_),
  };
  HistoryListFrameSyncNullUserPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HistoryListFrameSyncNullUserPmd_S_descriptor_,
      HistoryListFrameSyncNullUserPmd_S::default_instance_,
      HistoryListFrameSyncNullUserPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryListFrameSyncNullUserPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryListFrameSyncNullUserPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HistoryListFrameSyncNullUserPmd_S));
  StopFrameSyncNullUserPmd_SC_descriptor_ = file->message_type(18);
  static const int StopFrameSyncNullUserPmd_SC_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopFrameSyncNullUserPmd_SC, resultdata_),
  };
  StopFrameSyncNullUserPmd_SC_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StopFrameSyncNullUserPmd_SC_descriptor_,
      StopFrameSyncNullUserPmd_SC::default_instance_,
      StopFrameSyncNullUserPmd_SC_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopFrameSyncNullUserPmd_SC, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopFrameSyncNullUserPmd_SC, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StopFrameSyncNullUserPmd_SC));
  FrameHeader_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_nullcommand_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Null_descriptor_, &Null::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ForwardNullUserPmd_CS_descriptor_, &ForwardNullUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TickRequestNullUserPmd_CS_descriptor_, &TickRequestNullUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetPingTimeNullUserPmd_CS_descriptor_, &SetPingTimeNullUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetTickTimeoutNullUserPmd_CS_descriptor_, &SetTickTimeoutNullUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TickReturnNullUserPmd_CS_descriptor_, &TickReturnNullUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestCloseNullUserPmd_CS_descriptor_, &RequestCloseNullUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FrameHeaderNullUserPmd_CS_descriptor_, &FrameHeaderNullUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CheckVersionUserPmd_CS_descriptor_, &CheckVersionUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ForwardBwNullUserPmd_CS_descriptor_, &ForwardBwNullUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UserInitData_descriptor_, &UserInitData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FrameSyncData_descriptor_, &FrameSyncData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MaxDefualtNullUserPmd_descriptor_, &MaxDefualtNullUserPmd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StartFrameSyncNullUserPmd_CS_descriptor_, &StartFrameSyncNullUserPmd_CS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BroadListFrameSyncNullUserPmd_S_descriptor_, &BroadListFrameSyncNullUserPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestUpFrameSyncNullUserPmd_C_descriptor_, &RequestUpFrameSyncNullUserPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HistoryFrameSyncData_descriptor_, &HistoryFrameSyncData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HistoryListFrameSyncNullUserPmd_S_descriptor_, &HistoryListFrameSyncNullUserPmd_S::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StopFrameSyncNullUserPmd_SC_descriptor_, &StopFrameSyncNullUserPmd_SC::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_nullcommand_2eproto() {
  delete Null::default_instance_;
  delete Null_reflection_;
  delete ForwardNullUserPmd_CS::default_instance_;
  delete ForwardNullUserPmd_CS_reflection_;
  delete TickRequestNullUserPmd_CS::default_instance_;
  delete TickRequestNullUserPmd_CS_reflection_;
  delete SetPingTimeNullUserPmd_CS::default_instance_;
  delete SetPingTimeNullUserPmd_CS_reflection_;
  delete SetTickTimeoutNullUserPmd_CS::default_instance_;
  delete SetTickTimeoutNullUserPmd_CS_reflection_;
  delete TickReturnNullUserPmd_CS::default_instance_;
  delete TickReturnNullUserPmd_CS_reflection_;
  delete RequestCloseNullUserPmd_CS::default_instance_;
  delete RequestCloseNullUserPmd_CS_reflection_;
  delete FrameHeaderNullUserPmd_CS::default_instance_;
  delete FrameHeaderNullUserPmd_CS_reflection_;
  delete CheckVersionUserPmd_CS::default_instance_;
  delete CheckVersionUserPmd_CS_reflection_;
  delete ForwardBwNullUserPmd_CS::default_instance_;
  delete ForwardBwNullUserPmd_CS_reflection_;
  delete UserInitData::default_instance_;
  delete UserInitData_reflection_;
  delete FrameSyncData::default_instance_;
  delete FrameSyncData_reflection_;
  delete MaxDefualtNullUserPmd::default_instance_;
  delete MaxDefualtNullUserPmd_reflection_;
  delete StartFrameSyncNullUserPmd_CS::default_instance_;
  delete StartFrameSyncNullUserPmd_CS_reflection_;
  delete BroadListFrameSyncNullUserPmd_S::default_instance_;
  delete BroadListFrameSyncNullUserPmd_S_reflection_;
  delete RequestUpFrameSyncNullUserPmd_C::default_instance_;
  delete RequestUpFrameSyncNullUserPmd_C_reflection_;
  delete HistoryFrameSyncData::default_instance_;
  delete HistoryFrameSyncData_reflection_;
  delete HistoryListFrameSyncNullUserPmd_S::default_instance_;
  delete HistoryListFrameSyncNullUserPmd_S_reflection_;
  delete StopFrameSyncNullUserPmd_SC::default_instance_;
  delete StopFrameSyncNullUserPmd_SC_reflection_;
}

void protobuf_AddDesc_nullcommand_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021nullcommand.proto\022\003Pmd\"\360\003\n\004Null\"\347\003\n\005Pa"
    "ram\022\031\n\025ForwardNullUserPmd_CS\020\000\022\035\n\031TickRe"
    "questNullUserPmd_CS\020\001\022\034\n\030TickReturnNullU"
    "serPmd_CS\020\002\022\036\n\032RequestCloseNullUserPmd_C"
    "S\020\003\022\035\n\031FrameHeaderNullUserPmd_CS\020\004\022\032\n\026Ch"
    "eckVersionUserPmd_CS\020\005\022\033\n\027ForwardBwNullU"
    "serPmd_CS\020\006\022 \n\034SetTickTimeoutNullUserPmd"
    "_CS\020\007\022\035\n\031SetPingTimeNullUserPmd_CS\020\010\022\031\n\025"
    "MaxDefualtNullUserPmd\020\017\022 \n\034StartFrameSyn"
    "cNullUserPmd_CS\020\020\022#\n\037BroadListFrameSyncN"
    "ullUserPmd_S\020\021\022#\n\037RequestUpFrameSyncNull"
    "UserPmd_C\020\022\022%\n!HistoryListFrameSyncNullU"
    "serPmd_S\020\023\022\037\n\033StopFrameSyncNullUserPmd_S"
    "C\020\024\"\204\001\n\025ForwardNullUserPmd_CS\022\r\n\005byCmd\030\001"
    " \001(\r\022\017\n\007byParam\030\002 \001(\r\022\014\n\004time\030\003 \001(\r\022\013\n\003f"
    "id\030\004 \001(\004\022\014\n\004data\030\005 \001(\014\022\021\n\tprototype\030\006 \001("
    "\004\022\017\n\007bitmask\030\007 \001(\r\"0\n\031TickRequestNullUse"
    "rPmd_CS\022\023\n\013requesttime\030\001 \002(\r\"-\n\031SetPingT"
    "imeNullUserPmd_CS\022\020\n\010pingmsec\030\001 \001(\r\"+\n\034S"
    "etTickTimeoutNullUserPmd_CS\022\013\n\003sec\030\001 \002(\r"
    "\"\?\n\030TickReturnNullUserPmd_CS\022\023\n\013requestt"
    "ime\030\001 \001(\r\022\016\n\006mytime\030\002 \001(\r\",\n\032RequestClos"
    "eNullUserPmd_CS\022\016\n\006reason\030\001 \002(\t\":\n\031Frame"
    "HeaderNullUserPmd_CS\022\017\n\007bitmask\030\001 \002(\r\022\014\n"
    "\004data\030\002 \002(\014\"F\n\026CheckVersionUserPmd_CS\022\025\n"
    "\rversionserver\030\001 \001(\r\022\025\n\rversionclient\030\002 "
    "\001(\r\"\'\n\027ForwardBwNullUserPmd_CS\022\014\n\004data\030\003"
    " \001(\014\"=\n\014UserInitData\022\t\n\001x\030\001 \001(\003\022\t\n\001y\030\002 \001"
    "(\003\022\t\n\001z\030\003 \001(\003\022\014\n\004data\030\004 \001(\t\"N\n\rFrameSync"
    "Data\022\016\n\006tempid\030\001 \001(\004\022\014\n\004data\030\002 \001(\t\022\037\n\004in"
    "it\030\003 \001(\0132\021.Pmd.UserInitData\"\027\n\025MaxDefual"
    "tNullUserPmd\"`\n\034StartFrameSyncNullUserPm"
    "d_CS\022\014\n\004msec\030\001 \001(\r\022\020\n\010randseed\030\002 \001(\r\022\020\n\010"
    "initdata\030\003 \001(\t\022\016\n\006roomid\030\004 \001(\004\"Y\n\037BroadL"
    "istFrameSyncNullUserPmd_S\022\020\n\010framenum\030\001 "
    "\001(\r\022$\n\010datalist\030\002 \003(\0132\022.Pmd.FrameSyncDat"
    "a\"/\n\037RequestUpFrameSyncNullUserPmd_C\022\014\n\004"
    "data\030\001 \001(\t\"N\n\024HistoryFrameSyncData\022\020\n\010fr"
    "amenum\030\001 \001(\r\022$\n\010datalist\030\002 \003(\0132\022.Pmd.Fra"
    "meSyncData\"b\n!HistoryListFrameSyncNullUs"
    "erPmd_S\022+\n\010datalist\030\001 \003(\0132\031.Pmd.HistoryF"
    "rameSyncData\022\020\n\010finished\030\002 \001(\010\"1\n\033StopFr"
    "ameSyncNullUserPmd_SC\022\022\n\nresultdata\030\001 \001("
    "\t*^\n\013FrameHeader\022\020\n\014Bitmask_None\020\000\022\024\n\020Bi"
    "tmask_Compress\020\001\022\023\n\017Bitmask_Encrypt\020\002\022\022\n"
    "\016Bitmask_Header\020\004", 1817);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nullcommand.proto", &protobuf_RegisterTypes);
  Null::default_instance_ = new Null();
  ForwardNullUserPmd_CS::default_instance_ = new ForwardNullUserPmd_CS();
  TickRequestNullUserPmd_CS::default_instance_ = new TickRequestNullUserPmd_CS();
  SetPingTimeNullUserPmd_CS::default_instance_ = new SetPingTimeNullUserPmd_CS();
  SetTickTimeoutNullUserPmd_CS::default_instance_ = new SetTickTimeoutNullUserPmd_CS();
  TickReturnNullUserPmd_CS::default_instance_ = new TickReturnNullUserPmd_CS();
  RequestCloseNullUserPmd_CS::default_instance_ = new RequestCloseNullUserPmd_CS();
  FrameHeaderNullUserPmd_CS::default_instance_ = new FrameHeaderNullUserPmd_CS();
  CheckVersionUserPmd_CS::default_instance_ = new CheckVersionUserPmd_CS();
  ForwardBwNullUserPmd_CS::default_instance_ = new ForwardBwNullUserPmd_CS();
  UserInitData::default_instance_ = new UserInitData();
  FrameSyncData::default_instance_ = new FrameSyncData();
  MaxDefualtNullUserPmd::default_instance_ = new MaxDefualtNullUserPmd();
  StartFrameSyncNullUserPmd_CS::default_instance_ = new StartFrameSyncNullUserPmd_CS();
  BroadListFrameSyncNullUserPmd_S::default_instance_ = new BroadListFrameSyncNullUserPmd_S();
  RequestUpFrameSyncNullUserPmd_C::default_instance_ = new RequestUpFrameSyncNullUserPmd_C();
  HistoryFrameSyncData::default_instance_ = new HistoryFrameSyncData();
  HistoryListFrameSyncNullUserPmd_S::default_instance_ = new HistoryListFrameSyncNullUserPmd_S();
  StopFrameSyncNullUserPmd_SC::default_instance_ = new StopFrameSyncNullUserPmd_SC();
  Null::default_instance_->InitAsDefaultInstance();
  ForwardNullUserPmd_CS::default_instance_->InitAsDefaultInstance();
  TickRequestNullUserPmd_CS::default_instance_->InitAsDefaultInstance();
  SetPingTimeNullUserPmd_CS::default_instance_->InitAsDefaultInstance();
  SetTickTimeoutNullUserPmd_CS::default_instance_->InitAsDefaultInstance();
  TickReturnNullUserPmd_CS::default_instance_->InitAsDefaultInstance();
  RequestCloseNullUserPmd_CS::default_instance_->InitAsDefaultInstance();
  FrameHeaderNullUserPmd_CS::default_instance_->InitAsDefaultInstance();
  CheckVersionUserPmd_CS::default_instance_->InitAsDefaultInstance();
  ForwardBwNullUserPmd_CS::default_instance_->InitAsDefaultInstance();
  UserInitData::default_instance_->InitAsDefaultInstance();
  FrameSyncData::default_instance_->InitAsDefaultInstance();
  MaxDefualtNullUserPmd::default_instance_->InitAsDefaultInstance();
  StartFrameSyncNullUserPmd_CS::default_instance_->InitAsDefaultInstance();
  BroadListFrameSyncNullUserPmd_S::default_instance_->InitAsDefaultInstance();
  RequestUpFrameSyncNullUserPmd_C::default_instance_->InitAsDefaultInstance();
  HistoryFrameSyncData::default_instance_->InitAsDefaultInstance();
  HistoryListFrameSyncNullUserPmd_S::default_instance_->InitAsDefaultInstance();
  StopFrameSyncNullUserPmd_SC::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_nullcommand_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_nullcommand_2eproto {
  StaticDescriptorInitializer_nullcommand_2eproto() {
    protobuf_AddDesc_nullcommand_2eproto();
  }
} static_descriptor_initializer_nullcommand_2eproto_;
const ::google::protobuf::EnumDescriptor* FrameHeader_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameHeader_descriptor_;
}
bool FrameHeader_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Null_Param_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Null_Param_descriptor_;
}
bool Null_Param_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Null_Param Null::ForwardNullUserPmd_CS;
const Null_Param Null::TickRequestNullUserPmd_CS;
const Null_Param Null::TickReturnNullUserPmd_CS;
const Null_Param Null::RequestCloseNullUserPmd_CS;
const Null_Param Null::FrameHeaderNullUserPmd_CS;
const Null_Param Null::CheckVersionUserPmd_CS;
const Null_Param Null::ForwardBwNullUserPmd_CS;
const Null_Param Null::SetTickTimeoutNullUserPmd_CS;
const Null_Param Null::SetPingTimeNullUserPmd_CS;
const Null_Param Null::MaxDefualtNullUserPmd;
const Null_Param Null::StartFrameSyncNullUserPmd_CS;
const Null_Param Null::BroadListFrameSyncNullUserPmd_S;
const Null_Param Null::RequestUpFrameSyncNullUserPmd_C;
const Null_Param Null::HistoryListFrameSyncNullUserPmd_S;
const Null_Param Null::StopFrameSyncNullUserPmd_SC;
const Null_Param Null::Param_MIN;
const Null_Param Null::Param_MAX;
const int Null::Param_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

Null::Null()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.Null)
}

void Null::InitAsDefaultInstance() {
}

Null::Null(const Null& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.Null)
}

void Null::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Null::~Null() {
  // @@protoc_insertion_point(destructor:Pmd.Null)
  SharedDtor();
}

void Null::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Null::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Null::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Null_descriptor_;
}

const Null& Null::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

Null* Null::default_instance_ = NULL;

Null* Null::New() const {
  return new Null;
}

void Null::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Null::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.Null)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.Null)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.Null)
  return false;
#undef DO_
}

void Null::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.Null)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.Null)
}

::google::protobuf::uint8* Null::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.Null)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.Null)
  return target;
}

int Null::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Null::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Null* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Null*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Null::MergeFrom(const Null& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Null::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Null::CopyFrom(const Null& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Null::IsInitialized() const {

  return true;
}

void Null::Swap(Null* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Null::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Null_descriptor_;
  metadata.reflection = Null_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ForwardNullUserPmd_CS::kByCmdFieldNumber;
const int ForwardNullUserPmd_CS::kByParamFieldNumber;
const int ForwardNullUserPmd_CS::kTimeFieldNumber;
const int ForwardNullUserPmd_CS::kFidFieldNumber;
const int ForwardNullUserPmd_CS::kDataFieldNumber;
const int ForwardNullUserPmd_CS::kPrototypeFieldNumber;
const int ForwardNullUserPmd_CS::kBitmaskFieldNumber;
#endif  // !_MSC_VER

ForwardNullUserPmd_CS::ForwardNullUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ForwardNullUserPmd_CS)
}

void ForwardNullUserPmd_CS::InitAsDefaultInstance() {
}

ForwardNullUserPmd_CS::ForwardNullUserPmd_CS(const ForwardNullUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ForwardNullUserPmd_CS)
}

void ForwardNullUserPmd_CS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bycmd_ = 0u;
  byparam_ = 0u;
  time_ = 0u;
  fid_ = GOOGLE_ULONGLONG(0);
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prototype_ = GOOGLE_ULONGLONG(0);
  bitmask_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ForwardNullUserPmd_CS::~ForwardNullUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.ForwardNullUserPmd_CS)
  SharedDtor();
}

void ForwardNullUserPmd_CS::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void ForwardNullUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForwardNullUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ForwardNullUserPmd_CS_descriptor_;
}

const ForwardNullUserPmd_CS& ForwardNullUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

ForwardNullUserPmd_CS* ForwardNullUserPmd_CS::default_instance_ = NULL;

ForwardNullUserPmd_CS* ForwardNullUserPmd_CS::New() const {
  return new ForwardNullUserPmd_CS;
}

void ForwardNullUserPmd_CS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ForwardNullUserPmd_CS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(bycmd_, fid_);
    ZR_(time_, prototype_);
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ForwardNullUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ForwardNullUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 byCmd = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bycmd_)));
          set_has_bycmd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_byParam;
        break;
      }

      // optional uint32 byParam = 2;
      case 2: {
        if (tag == 16) {
         parse_byParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &byparam_)));
          set_has_byparam();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }

      // optional uint32 time = 3;
      case 3: {
        if (tag == 24) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_fid;
        break;
      }

      // optional uint64 fid = 4;
      case 4: {
        if (tag == 32) {
         parse_fid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fid_)));
          set_has_fid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // optional bytes data = 5;
      case 5: {
        if (tag == 42) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_prototype;
        break;
      }

      // optional uint64 prototype = 6;
      case 6: {
        if (tag == 48) {
         parse_prototype:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &prototype_)));
          set_has_prototype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_bitmask;
        break;
      }

      // optional uint32 bitmask = 7;
      case 7: {
        if (tag == 56) {
         parse_bitmask:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bitmask_)));
          set_has_bitmask();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ForwardNullUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ForwardNullUserPmd_CS)
  return false;
#undef DO_
}

void ForwardNullUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ForwardNullUserPmd_CS)
  // optional uint32 byCmd = 1;
  if (has_bycmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bycmd(), output);
  }

  // optional uint32 byParam = 2;
  if (has_byparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->byparam(), output);
  }

  // optional uint32 time = 3;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time(), output);
  }

  // optional uint64 fid = 4;
  if (has_fid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->fid(), output);
  }

  // optional bytes data = 5;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  // optional uint64 prototype = 6;
  if (has_prototype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->prototype(), output);
  }

  // optional uint32 bitmask = 7;
  if (has_bitmask()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->bitmask(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ForwardNullUserPmd_CS)
}

::google::protobuf::uint8* ForwardNullUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ForwardNullUserPmd_CS)
  // optional uint32 byCmd = 1;
  if (has_bycmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bycmd(), target);
  }

  // optional uint32 byParam = 2;
  if (has_byparam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->byparam(), target);
  }

  // optional uint32 time = 3;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time(), target);
  }

  // optional uint64 fid = 4;
  if (has_fid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->fid(), target);
  }

  // optional bytes data = 5;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  // optional uint64 prototype = 6;
  if (has_prototype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->prototype(), target);
  }

  // optional uint32 bitmask = 7;
  if (has_bitmask()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->bitmask(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ForwardNullUserPmd_CS)
  return target;
}

int ForwardNullUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 byCmd = 1;
    if (has_bycmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bycmd());
    }

    // optional uint32 byParam = 2;
    if (has_byparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->byparam());
    }

    // optional uint32 time = 3;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint64 fid = 4;
    if (has_fid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fid());
    }

    // optional bytes data = 5;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional uint64 prototype = 6;
    if (has_prototype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->prototype());
    }

    // optional uint32 bitmask = 7;
    if (has_bitmask()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bitmask());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForwardNullUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ForwardNullUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ForwardNullUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ForwardNullUserPmd_CS::MergeFrom(const ForwardNullUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bycmd()) {
      set_bycmd(from.bycmd());
    }
    if (from.has_byparam()) {
      set_byparam(from.byparam());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_fid()) {
      set_fid(from.fid());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_prototype()) {
      set_prototype(from.prototype());
    }
    if (from.has_bitmask()) {
      set_bitmask(from.bitmask());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ForwardNullUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardNullUserPmd_CS::CopyFrom(const ForwardNullUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardNullUserPmd_CS::IsInitialized() const {

  return true;
}

void ForwardNullUserPmd_CS::Swap(ForwardNullUserPmd_CS* other) {
  if (other != this) {
    std::swap(bycmd_, other->bycmd_);
    std::swap(byparam_, other->byparam_);
    std::swap(time_, other->time_);
    std::swap(fid_, other->fid_);
    std::swap(data_, other->data_);
    std::swap(prototype_, other->prototype_);
    std::swap(bitmask_, other->bitmask_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ForwardNullUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ForwardNullUserPmd_CS_descriptor_;
  metadata.reflection = ForwardNullUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TickRequestNullUserPmd_CS::kRequesttimeFieldNumber;
#endif  // !_MSC_VER

TickRequestNullUserPmd_CS::TickRequestNullUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.TickRequestNullUserPmd_CS)
}

void TickRequestNullUserPmd_CS::InitAsDefaultInstance() {
}

TickRequestNullUserPmd_CS::TickRequestNullUserPmd_CS(const TickRequestNullUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.TickRequestNullUserPmd_CS)
}

void TickRequestNullUserPmd_CS::SharedCtor() {
  _cached_size_ = 0;
  requesttime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TickRequestNullUserPmd_CS::~TickRequestNullUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.TickRequestNullUserPmd_CS)
  SharedDtor();
}

void TickRequestNullUserPmd_CS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TickRequestNullUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TickRequestNullUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TickRequestNullUserPmd_CS_descriptor_;
}

const TickRequestNullUserPmd_CS& TickRequestNullUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

TickRequestNullUserPmd_CS* TickRequestNullUserPmd_CS::default_instance_ = NULL;

TickRequestNullUserPmd_CS* TickRequestNullUserPmd_CS::New() const {
  return new TickRequestNullUserPmd_CS;
}

void TickRequestNullUserPmd_CS::Clear() {
  requesttime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TickRequestNullUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.TickRequestNullUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 requesttime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requesttime_)));
          set_has_requesttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.TickRequestNullUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.TickRequestNullUserPmd_CS)
  return false;
#undef DO_
}

void TickRequestNullUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.TickRequestNullUserPmd_CS)
  // required uint32 requesttime = 1;
  if (has_requesttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->requesttime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.TickRequestNullUserPmd_CS)
}

::google::protobuf::uint8* TickRequestNullUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.TickRequestNullUserPmd_CS)
  // required uint32 requesttime = 1;
  if (has_requesttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->requesttime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.TickRequestNullUserPmd_CS)
  return target;
}

int TickRequestNullUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 requesttime = 1;
    if (has_requesttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->requesttime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TickRequestNullUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TickRequestNullUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TickRequestNullUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TickRequestNullUserPmd_CS::MergeFrom(const TickRequestNullUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requesttime()) {
      set_requesttime(from.requesttime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TickRequestNullUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TickRequestNullUserPmd_CS::CopyFrom(const TickRequestNullUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TickRequestNullUserPmd_CS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TickRequestNullUserPmd_CS::Swap(TickRequestNullUserPmd_CS* other) {
  if (other != this) {
    std::swap(requesttime_, other->requesttime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TickRequestNullUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TickRequestNullUserPmd_CS_descriptor_;
  metadata.reflection = TickRequestNullUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetPingTimeNullUserPmd_CS::kPingmsecFieldNumber;
#endif  // !_MSC_VER

SetPingTimeNullUserPmd_CS::SetPingTimeNullUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.SetPingTimeNullUserPmd_CS)
}

void SetPingTimeNullUserPmd_CS::InitAsDefaultInstance() {
}

SetPingTimeNullUserPmd_CS::SetPingTimeNullUserPmd_CS(const SetPingTimeNullUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.SetPingTimeNullUserPmd_CS)
}

void SetPingTimeNullUserPmd_CS::SharedCtor() {
  _cached_size_ = 0;
  pingmsec_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetPingTimeNullUserPmd_CS::~SetPingTimeNullUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.SetPingTimeNullUserPmd_CS)
  SharedDtor();
}

void SetPingTimeNullUserPmd_CS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetPingTimeNullUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPingTimeNullUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetPingTimeNullUserPmd_CS_descriptor_;
}

const SetPingTimeNullUserPmd_CS& SetPingTimeNullUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

SetPingTimeNullUserPmd_CS* SetPingTimeNullUserPmd_CS::default_instance_ = NULL;

SetPingTimeNullUserPmd_CS* SetPingTimeNullUserPmd_CS::New() const {
  return new SetPingTimeNullUserPmd_CS;
}

void SetPingTimeNullUserPmd_CS::Clear() {
  pingmsec_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetPingTimeNullUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.SetPingTimeNullUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pingmsec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pingmsec_)));
          set_has_pingmsec();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.SetPingTimeNullUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.SetPingTimeNullUserPmd_CS)
  return false;
#undef DO_
}

void SetPingTimeNullUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.SetPingTimeNullUserPmd_CS)
  // optional uint32 pingmsec = 1;
  if (has_pingmsec()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pingmsec(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.SetPingTimeNullUserPmd_CS)
}

::google::protobuf::uint8* SetPingTimeNullUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.SetPingTimeNullUserPmd_CS)
  // optional uint32 pingmsec = 1;
  if (has_pingmsec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pingmsec(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.SetPingTimeNullUserPmd_CS)
  return target;
}

int SetPingTimeNullUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 pingmsec = 1;
    if (has_pingmsec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pingmsec());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPingTimeNullUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetPingTimeNullUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetPingTimeNullUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetPingTimeNullUserPmd_CS::MergeFrom(const SetPingTimeNullUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pingmsec()) {
      set_pingmsec(from.pingmsec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetPingTimeNullUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPingTimeNullUserPmd_CS::CopyFrom(const SetPingTimeNullUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPingTimeNullUserPmd_CS::IsInitialized() const {

  return true;
}

void SetPingTimeNullUserPmd_CS::Swap(SetPingTimeNullUserPmd_CS* other) {
  if (other != this) {
    std::swap(pingmsec_, other->pingmsec_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetPingTimeNullUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetPingTimeNullUserPmd_CS_descriptor_;
  metadata.reflection = SetPingTimeNullUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetTickTimeoutNullUserPmd_CS::kSecFieldNumber;
#endif  // !_MSC_VER

SetTickTimeoutNullUserPmd_CS::SetTickTimeoutNullUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.SetTickTimeoutNullUserPmd_CS)
}

void SetTickTimeoutNullUserPmd_CS::InitAsDefaultInstance() {
}

SetTickTimeoutNullUserPmd_CS::SetTickTimeoutNullUserPmd_CS(const SetTickTimeoutNullUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.SetTickTimeoutNullUserPmd_CS)
}

void SetTickTimeoutNullUserPmd_CS::SharedCtor() {
  _cached_size_ = 0;
  sec_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetTickTimeoutNullUserPmd_CS::~SetTickTimeoutNullUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.SetTickTimeoutNullUserPmd_CS)
  SharedDtor();
}

void SetTickTimeoutNullUserPmd_CS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetTickTimeoutNullUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetTickTimeoutNullUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetTickTimeoutNullUserPmd_CS_descriptor_;
}

const SetTickTimeoutNullUserPmd_CS& SetTickTimeoutNullUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

SetTickTimeoutNullUserPmd_CS* SetTickTimeoutNullUserPmd_CS::default_instance_ = NULL;

SetTickTimeoutNullUserPmd_CS* SetTickTimeoutNullUserPmd_CS::New() const {
  return new SetTickTimeoutNullUserPmd_CS;
}

void SetTickTimeoutNullUserPmd_CS::Clear() {
  sec_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetTickTimeoutNullUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.SetTickTimeoutNullUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 sec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sec_)));
          set_has_sec();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.SetTickTimeoutNullUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.SetTickTimeoutNullUserPmd_CS)
  return false;
#undef DO_
}

void SetTickTimeoutNullUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.SetTickTimeoutNullUserPmd_CS)
  // required uint32 sec = 1;
  if (has_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sec(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.SetTickTimeoutNullUserPmd_CS)
}

::google::protobuf::uint8* SetTickTimeoutNullUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.SetTickTimeoutNullUserPmd_CS)
  // required uint32 sec = 1;
  if (has_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sec(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.SetTickTimeoutNullUserPmd_CS)
  return target;
}

int SetTickTimeoutNullUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 sec = 1;
    if (has_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sec());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetTickTimeoutNullUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetTickTimeoutNullUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetTickTimeoutNullUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetTickTimeoutNullUserPmd_CS::MergeFrom(const SetTickTimeoutNullUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sec()) {
      set_sec(from.sec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetTickTimeoutNullUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTickTimeoutNullUserPmd_CS::CopyFrom(const SetTickTimeoutNullUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTickTimeoutNullUserPmd_CS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetTickTimeoutNullUserPmd_CS::Swap(SetTickTimeoutNullUserPmd_CS* other) {
  if (other != this) {
    std::swap(sec_, other->sec_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetTickTimeoutNullUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetTickTimeoutNullUserPmd_CS_descriptor_;
  metadata.reflection = SetTickTimeoutNullUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TickReturnNullUserPmd_CS::kRequesttimeFieldNumber;
const int TickReturnNullUserPmd_CS::kMytimeFieldNumber;
#endif  // !_MSC_VER

TickReturnNullUserPmd_CS::TickReturnNullUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.TickReturnNullUserPmd_CS)
}

void TickReturnNullUserPmd_CS::InitAsDefaultInstance() {
}

TickReturnNullUserPmd_CS::TickReturnNullUserPmd_CS(const TickReturnNullUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.TickReturnNullUserPmd_CS)
}

void TickReturnNullUserPmd_CS::SharedCtor() {
  _cached_size_ = 0;
  requesttime_ = 0u;
  mytime_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TickReturnNullUserPmd_CS::~TickReturnNullUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.TickReturnNullUserPmd_CS)
  SharedDtor();
}

void TickReturnNullUserPmd_CS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TickReturnNullUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TickReturnNullUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TickReturnNullUserPmd_CS_descriptor_;
}

const TickReturnNullUserPmd_CS& TickReturnNullUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

TickReturnNullUserPmd_CS* TickReturnNullUserPmd_CS::default_instance_ = NULL;

TickReturnNullUserPmd_CS* TickReturnNullUserPmd_CS::New() const {
  return new TickReturnNullUserPmd_CS;
}

void TickReturnNullUserPmd_CS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<TickReturnNullUserPmd_CS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(requesttime_, mytime_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TickReturnNullUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.TickReturnNullUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 requesttime = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requesttime_)));
          set_has_requesttime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mytime;
        break;
      }

      // optional uint32 mytime = 2;
      case 2: {
        if (tag == 16) {
         parse_mytime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mytime_)));
          set_has_mytime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.TickReturnNullUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.TickReturnNullUserPmd_CS)
  return false;
#undef DO_
}

void TickReturnNullUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.TickReturnNullUserPmd_CS)
  // optional uint32 requesttime = 1;
  if (has_requesttime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->requesttime(), output);
  }

  // optional uint32 mytime = 2;
  if (has_mytime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mytime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.TickReturnNullUserPmd_CS)
}

::google::protobuf::uint8* TickReturnNullUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.TickReturnNullUserPmd_CS)
  // optional uint32 requesttime = 1;
  if (has_requesttime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->requesttime(), target);
  }

  // optional uint32 mytime = 2;
  if (has_mytime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mytime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.TickReturnNullUserPmd_CS)
  return target;
}

int TickReturnNullUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 requesttime = 1;
    if (has_requesttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->requesttime());
    }

    // optional uint32 mytime = 2;
    if (has_mytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mytime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TickReturnNullUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TickReturnNullUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TickReturnNullUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TickReturnNullUserPmd_CS::MergeFrom(const TickReturnNullUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requesttime()) {
      set_requesttime(from.requesttime());
    }
    if (from.has_mytime()) {
      set_mytime(from.mytime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TickReturnNullUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TickReturnNullUserPmd_CS::CopyFrom(const TickReturnNullUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TickReturnNullUserPmd_CS::IsInitialized() const {

  return true;
}

void TickReturnNullUserPmd_CS::Swap(TickReturnNullUserPmd_CS* other) {
  if (other != this) {
    std::swap(requesttime_, other->requesttime_);
    std::swap(mytime_, other->mytime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TickReturnNullUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TickReturnNullUserPmd_CS_descriptor_;
  metadata.reflection = TickReturnNullUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestCloseNullUserPmd_CS::kReasonFieldNumber;
#endif  // !_MSC_VER

RequestCloseNullUserPmd_CS::RequestCloseNullUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestCloseNullUserPmd_CS)
}

void RequestCloseNullUserPmd_CS::InitAsDefaultInstance() {
}

RequestCloseNullUserPmd_CS::RequestCloseNullUserPmd_CS(const RequestCloseNullUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestCloseNullUserPmd_CS)
}

void RequestCloseNullUserPmd_CS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestCloseNullUserPmd_CS::~RequestCloseNullUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.RequestCloseNullUserPmd_CS)
  SharedDtor();
}

void RequestCloseNullUserPmd_CS::SharedDtor() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (this != default_instance_) {
  }
}

void RequestCloseNullUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestCloseNullUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestCloseNullUserPmd_CS_descriptor_;
}

const RequestCloseNullUserPmd_CS& RequestCloseNullUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

RequestCloseNullUserPmd_CS* RequestCloseNullUserPmd_CS::default_instance_ = NULL;

RequestCloseNullUserPmd_CS* RequestCloseNullUserPmd_CS::New() const {
  return new RequestCloseNullUserPmd_CS;
}

void RequestCloseNullUserPmd_CS::Clear() {
  if (has_reason()) {
    if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      reason_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestCloseNullUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestCloseNullUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string reason = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reason");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestCloseNullUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestCloseNullUserPmd_CS)
  return false;
#undef DO_
}

void RequestCloseNullUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestCloseNullUserPmd_CS)
  // required string reason = 1;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reason(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestCloseNullUserPmd_CS)
}

::google::protobuf::uint8* RequestCloseNullUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestCloseNullUserPmd_CS)
  // required string reason = 1;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reason(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestCloseNullUserPmd_CS)
  return target;
}

int RequestCloseNullUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string reason = 1;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestCloseNullUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestCloseNullUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestCloseNullUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestCloseNullUserPmd_CS::MergeFrom(const RequestCloseNullUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reason()) {
      set_reason(from.reason());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestCloseNullUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestCloseNullUserPmd_CS::CopyFrom(const RequestCloseNullUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestCloseNullUserPmd_CS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestCloseNullUserPmd_CS::Swap(RequestCloseNullUserPmd_CS* other) {
  if (other != this) {
    std::swap(reason_, other->reason_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestCloseNullUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestCloseNullUserPmd_CS_descriptor_;
  metadata.reflection = RequestCloseNullUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FrameHeaderNullUserPmd_CS::kBitmaskFieldNumber;
const int FrameHeaderNullUserPmd_CS::kDataFieldNumber;
#endif  // !_MSC_VER

FrameHeaderNullUserPmd_CS::FrameHeaderNullUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.FrameHeaderNullUserPmd_CS)
}

void FrameHeaderNullUserPmd_CS::InitAsDefaultInstance() {
}

FrameHeaderNullUserPmd_CS::FrameHeaderNullUserPmd_CS(const FrameHeaderNullUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.FrameHeaderNullUserPmd_CS)
}

void FrameHeaderNullUserPmd_CS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bitmask_ = 0u;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FrameHeaderNullUserPmd_CS::~FrameHeaderNullUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.FrameHeaderNullUserPmd_CS)
  SharedDtor();
}

void FrameHeaderNullUserPmd_CS::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void FrameHeaderNullUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameHeaderNullUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameHeaderNullUserPmd_CS_descriptor_;
}

const FrameHeaderNullUserPmd_CS& FrameHeaderNullUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

FrameHeaderNullUserPmd_CS* FrameHeaderNullUserPmd_CS::default_instance_ = NULL;

FrameHeaderNullUserPmd_CS* FrameHeaderNullUserPmd_CS::New() const {
  return new FrameHeaderNullUserPmd_CS;
}

void FrameHeaderNullUserPmd_CS::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    bitmask_ = 0u;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FrameHeaderNullUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.FrameHeaderNullUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 bitmask = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bitmask_)));
          set_has_bitmask();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // required bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.FrameHeaderNullUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.FrameHeaderNullUserPmd_CS)
  return false;
#undef DO_
}

void FrameHeaderNullUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.FrameHeaderNullUserPmd_CS)
  // required uint32 bitmask = 1;
  if (has_bitmask()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bitmask(), output);
  }

  // required bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.FrameHeaderNullUserPmd_CS)
}

::google::protobuf::uint8* FrameHeaderNullUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.FrameHeaderNullUserPmd_CS)
  // required uint32 bitmask = 1;
  if (has_bitmask()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bitmask(), target);
  }

  // required bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.FrameHeaderNullUserPmd_CS)
  return target;
}

int FrameHeaderNullUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 bitmask = 1;
    if (has_bitmask()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bitmask());
    }

    // required bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameHeaderNullUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FrameHeaderNullUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FrameHeaderNullUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FrameHeaderNullUserPmd_CS::MergeFrom(const FrameHeaderNullUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bitmask()) {
      set_bitmask(from.bitmask());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FrameHeaderNullUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameHeaderNullUserPmd_CS::CopyFrom(const FrameHeaderNullUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameHeaderNullUserPmd_CS::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void FrameHeaderNullUserPmd_CS::Swap(FrameHeaderNullUserPmd_CS* other) {
  if (other != this) {
    std::swap(bitmask_, other->bitmask_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FrameHeaderNullUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameHeaderNullUserPmd_CS_descriptor_;
  metadata.reflection = FrameHeaderNullUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CheckVersionUserPmd_CS::kVersionserverFieldNumber;
const int CheckVersionUserPmd_CS::kVersionclientFieldNumber;
#endif  // !_MSC_VER

CheckVersionUserPmd_CS::CheckVersionUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.CheckVersionUserPmd_CS)
}

void CheckVersionUserPmd_CS::InitAsDefaultInstance() {
}

CheckVersionUserPmd_CS::CheckVersionUserPmd_CS(const CheckVersionUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.CheckVersionUserPmd_CS)
}

void CheckVersionUserPmd_CS::SharedCtor() {
  _cached_size_ = 0;
  versionserver_ = 0u;
  versionclient_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CheckVersionUserPmd_CS::~CheckVersionUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.CheckVersionUserPmd_CS)
  SharedDtor();
}

void CheckVersionUserPmd_CS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CheckVersionUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckVersionUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckVersionUserPmd_CS_descriptor_;
}

const CheckVersionUserPmd_CS& CheckVersionUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

CheckVersionUserPmd_CS* CheckVersionUserPmd_CS::default_instance_ = NULL;

CheckVersionUserPmd_CS* CheckVersionUserPmd_CS::New() const {
  return new CheckVersionUserPmd_CS;
}

void CheckVersionUserPmd_CS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CheckVersionUserPmd_CS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(versionserver_, versionclient_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CheckVersionUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.CheckVersionUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 versionserver = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &versionserver_)));
          set_has_versionserver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_versionclient;
        break;
      }

      // optional uint32 versionclient = 2;
      case 2: {
        if (tag == 16) {
         parse_versionclient:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &versionclient_)));
          set_has_versionclient();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.CheckVersionUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.CheckVersionUserPmd_CS)
  return false;
#undef DO_
}

void CheckVersionUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.CheckVersionUserPmd_CS)
  // optional uint32 versionserver = 1;
  if (has_versionserver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->versionserver(), output);
  }

  // optional uint32 versionclient = 2;
  if (has_versionclient()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->versionclient(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.CheckVersionUserPmd_CS)
}

::google::protobuf::uint8* CheckVersionUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.CheckVersionUserPmd_CS)
  // optional uint32 versionserver = 1;
  if (has_versionserver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->versionserver(), target);
  }

  // optional uint32 versionclient = 2;
  if (has_versionclient()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->versionclient(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.CheckVersionUserPmd_CS)
  return target;
}

int CheckVersionUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 versionserver = 1;
    if (has_versionserver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->versionserver());
    }

    // optional uint32 versionclient = 2;
    if (has_versionclient()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->versionclient());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckVersionUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CheckVersionUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CheckVersionUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CheckVersionUserPmd_CS::MergeFrom(const CheckVersionUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_versionserver()) {
      set_versionserver(from.versionserver());
    }
    if (from.has_versionclient()) {
      set_versionclient(from.versionclient());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CheckVersionUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVersionUserPmd_CS::CopyFrom(const CheckVersionUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVersionUserPmd_CS::IsInitialized() const {

  return true;
}

void CheckVersionUserPmd_CS::Swap(CheckVersionUserPmd_CS* other) {
  if (other != this) {
    std::swap(versionserver_, other->versionserver_);
    std::swap(versionclient_, other->versionclient_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CheckVersionUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckVersionUserPmd_CS_descriptor_;
  metadata.reflection = CheckVersionUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ForwardBwNullUserPmd_CS::kDataFieldNumber;
#endif  // !_MSC_VER

ForwardBwNullUserPmd_CS::ForwardBwNullUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ForwardBwNullUserPmd_CS)
}

void ForwardBwNullUserPmd_CS::InitAsDefaultInstance() {
}

ForwardBwNullUserPmd_CS::ForwardBwNullUserPmd_CS(const ForwardBwNullUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ForwardBwNullUserPmd_CS)
}

void ForwardBwNullUserPmd_CS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ForwardBwNullUserPmd_CS::~ForwardBwNullUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.ForwardBwNullUserPmd_CS)
  SharedDtor();
}

void ForwardBwNullUserPmd_CS::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void ForwardBwNullUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForwardBwNullUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ForwardBwNullUserPmd_CS_descriptor_;
}

const ForwardBwNullUserPmd_CS& ForwardBwNullUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

ForwardBwNullUserPmd_CS* ForwardBwNullUserPmd_CS::default_instance_ = NULL;

ForwardBwNullUserPmd_CS* ForwardBwNullUserPmd_CS::New() const {
  return new ForwardBwNullUserPmd_CS;
}

void ForwardBwNullUserPmd_CS::Clear() {
  if (has_data()) {
    if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      data_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ForwardBwNullUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ForwardBwNullUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ForwardBwNullUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ForwardBwNullUserPmd_CS)
  return false;
#undef DO_
}

void ForwardBwNullUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ForwardBwNullUserPmd_CS)
  // optional bytes data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ForwardBwNullUserPmd_CS)
}

::google::protobuf::uint8* ForwardBwNullUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ForwardBwNullUserPmd_CS)
  // optional bytes data = 3;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ForwardBwNullUserPmd_CS)
  return target;
}

int ForwardBwNullUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForwardBwNullUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ForwardBwNullUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ForwardBwNullUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ForwardBwNullUserPmd_CS::MergeFrom(const ForwardBwNullUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ForwardBwNullUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardBwNullUserPmd_CS::CopyFrom(const ForwardBwNullUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardBwNullUserPmd_CS::IsInitialized() const {

  return true;
}

void ForwardBwNullUserPmd_CS::Swap(ForwardBwNullUserPmd_CS* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ForwardBwNullUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ForwardBwNullUserPmd_CS_descriptor_;
  metadata.reflection = ForwardBwNullUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UserInitData::kXFieldNumber;
const int UserInitData::kYFieldNumber;
const int UserInitData::kZFieldNumber;
const int UserInitData::kDataFieldNumber;
#endif  // !_MSC_VER

UserInitData::UserInitData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.UserInitData)
}

void UserInitData::InitAsDefaultInstance() {
}

UserInitData::UserInitData(const UserInitData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.UserInitData)
}

void UserInitData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  x_ = GOOGLE_LONGLONG(0);
  y_ = GOOGLE_LONGLONG(0);
  z_ = GOOGLE_LONGLONG(0);
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UserInitData::~UserInitData() {
  // @@protoc_insertion_point(destructor:Pmd.UserInitData)
  SharedDtor();
}

void UserInitData::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void UserInitData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInitData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInitData_descriptor_;
}

const UserInitData& UserInitData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

UserInitData* UserInitData::default_instance_ = NULL;

UserInitData* UserInitData::New() const {
  return new UserInitData;
}

void UserInitData::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UserInitData*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(x_, z_);
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UserInitData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.UserInitData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 x = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_y;
        break;
      }

      // optional int64 y = 2;
      case 2: {
        if (tag == 16) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_z;
        break;
      }

      // optional int64 z = 3;
      case 3: {
        if (tag == 24) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // optional string data = 4;
      case 4: {
        if (tag == 34) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.UserInitData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.UserInitData)
  return false;
#undef DO_
}

void UserInitData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.UserInitData)
  // optional int64 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->x(), output);
  }

  // optional int64 y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->y(), output);
  }

  // optional int64 z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->z(), output);
  }

  // optional string data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.UserInitData)
}

::google::protobuf::uint8* UserInitData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.UserInitData)
  // optional int64 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->x(), target);
  }

  // optional int64 y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->y(), target);
  }

  // optional int64 z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->z(), target);
  }

  // optional string data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.UserInitData)
  return target;
}

int UserInitData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 x = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->x());
    }

    // optional int64 y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->y());
    }

    // optional int64 z = 3;
    if (has_z()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->z());
    }

    // optional string data = 4;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInitData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UserInitData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UserInitData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UserInitData::MergeFrom(const UserInitData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UserInitData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInitData::CopyFrom(const UserInitData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInitData::IsInitialized() const {

  return true;
}

void UserInitData::Swap(UserInitData* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UserInitData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInitData_descriptor_;
  metadata.reflection = UserInitData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FrameSyncData::kTempidFieldNumber;
const int FrameSyncData::kDataFieldNumber;
const int FrameSyncData::kInitFieldNumber;
#endif  // !_MSC_VER

FrameSyncData::FrameSyncData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.FrameSyncData)
}

void FrameSyncData::InitAsDefaultInstance() {
  init_ = const_cast< ::Pmd::UserInitData*>(&::Pmd::UserInitData::default_instance());
}

FrameSyncData::FrameSyncData(const FrameSyncData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.FrameSyncData)
}

void FrameSyncData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  tempid_ = GOOGLE_ULONGLONG(0);
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FrameSyncData::~FrameSyncData() {
  // @@protoc_insertion_point(destructor:Pmd.FrameSyncData)
  SharedDtor();
}

void FrameSyncData::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
    delete init_;
  }
}

void FrameSyncData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameSyncData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameSyncData_descriptor_;
}

const FrameSyncData& FrameSyncData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

FrameSyncData* FrameSyncData::default_instance_ = NULL;

FrameSyncData* FrameSyncData::New() const {
  return new FrameSyncData;
}

void FrameSyncData::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    tempid_ = GOOGLE_ULONGLONG(0);
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
    if (has_init()) {
      if (init_ != NULL) init_->::Pmd::UserInitData::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FrameSyncData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.FrameSyncData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 tempid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tempid_)));
          set_has_tempid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional string data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_init;
        break;
      }

      // optional .Pmd.UserInitData init = 3;
      case 3: {
        if (tag == 26) {
         parse_init:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.FrameSyncData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.FrameSyncData)
  return false;
#undef DO_
}

void FrameSyncData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.FrameSyncData)
  // optional uint64 tempid = 1;
  if (has_tempid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->tempid(), output);
  }

  // optional string data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  // optional .Pmd.UserInitData init = 3;
  if (has_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->init(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.FrameSyncData)
}

::google::protobuf::uint8* FrameSyncData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.FrameSyncData)
  // optional uint64 tempid = 1;
  if (has_tempid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->tempid(), target);
  }

  // optional string data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  // optional .Pmd.UserInitData init = 3;
  if (has_init()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->init(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.FrameSyncData)
  return target;
}

int FrameSyncData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint64 tempid = 1;
    if (has_tempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tempid());
    }

    // optional string data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

    // optional .Pmd.UserInitData init = 3;
    if (has_init()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->init());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameSyncData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FrameSyncData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FrameSyncData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FrameSyncData::MergeFrom(const FrameSyncData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tempid()) {
      set_tempid(from.tempid());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_init()) {
      mutable_init()->::Pmd::UserInitData::MergeFrom(from.init());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FrameSyncData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameSyncData::CopyFrom(const FrameSyncData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameSyncData::IsInitialized() const {

  return true;
}

void FrameSyncData::Swap(FrameSyncData* other) {
  if (other != this) {
    std::swap(tempid_, other->tempid_);
    std::swap(data_, other->data_);
    std::swap(init_, other->init_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FrameSyncData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameSyncData_descriptor_;
  metadata.reflection = FrameSyncData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MaxDefualtNullUserPmd::MaxDefualtNullUserPmd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.MaxDefualtNullUserPmd)
}

void MaxDefualtNullUserPmd::InitAsDefaultInstance() {
}

MaxDefualtNullUserPmd::MaxDefualtNullUserPmd(const MaxDefualtNullUserPmd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.MaxDefualtNullUserPmd)
}

void MaxDefualtNullUserPmd::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MaxDefualtNullUserPmd::~MaxDefualtNullUserPmd() {
  // @@protoc_insertion_point(destructor:Pmd.MaxDefualtNullUserPmd)
  SharedDtor();
}

void MaxDefualtNullUserPmd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MaxDefualtNullUserPmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaxDefualtNullUserPmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MaxDefualtNullUserPmd_descriptor_;
}

const MaxDefualtNullUserPmd& MaxDefualtNullUserPmd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

MaxDefualtNullUserPmd* MaxDefualtNullUserPmd::default_instance_ = NULL;

MaxDefualtNullUserPmd* MaxDefualtNullUserPmd::New() const {
  return new MaxDefualtNullUserPmd;
}

void MaxDefualtNullUserPmd::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MaxDefualtNullUserPmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.MaxDefualtNullUserPmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.MaxDefualtNullUserPmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.MaxDefualtNullUserPmd)
  return false;
#undef DO_
}

void MaxDefualtNullUserPmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.MaxDefualtNullUserPmd)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.MaxDefualtNullUserPmd)
}

::google::protobuf::uint8* MaxDefualtNullUserPmd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.MaxDefualtNullUserPmd)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.MaxDefualtNullUserPmd)
  return target;
}

int MaxDefualtNullUserPmd::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaxDefualtNullUserPmd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MaxDefualtNullUserPmd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MaxDefualtNullUserPmd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MaxDefualtNullUserPmd::MergeFrom(const MaxDefualtNullUserPmd& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MaxDefualtNullUserPmd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaxDefualtNullUserPmd::CopyFrom(const MaxDefualtNullUserPmd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaxDefualtNullUserPmd::IsInitialized() const {

  return true;
}

void MaxDefualtNullUserPmd::Swap(MaxDefualtNullUserPmd* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MaxDefualtNullUserPmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MaxDefualtNullUserPmd_descriptor_;
  metadata.reflection = MaxDefualtNullUserPmd_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StartFrameSyncNullUserPmd_CS::kMsecFieldNumber;
const int StartFrameSyncNullUserPmd_CS::kRandseedFieldNumber;
const int StartFrameSyncNullUserPmd_CS::kInitdataFieldNumber;
const int StartFrameSyncNullUserPmd_CS::kRoomidFieldNumber;
#endif  // !_MSC_VER

StartFrameSyncNullUserPmd_CS::StartFrameSyncNullUserPmd_CS()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.StartFrameSyncNullUserPmd_CS)
}

void StartFrameSyncNullUserPmd_CS::InitAsDefaultInstance() {
}

StartFrameSyncNullUserPmd_CS::StartFrameSyncNullUserPmd_CS(const StartFrameSyncNullUserPmd_CS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.StartFrameSyncNullUserPmd_CS)
}

void StartFrameSyncNullUserPmd_CS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msec_ = 0u;
  randseed_ = 0u;
  initdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StartFrameSyncNullUserPmd_CS::~StartFrameSyncNullUserPmd_CS() {
  // @@protoc_insertion_point(destructor:Pmd.StartFrameSyncNullUserPmd_CS)
  SharedDtor();
}

void StartFrameSyncNullUserPmd_CS::SharedDtor() {
  if (initdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete initdata_;
  }
  if (this != default_instance_) {
  }
}

void StartFrameSyncNullUserPmd_CS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartFrameSyncNullUserPmd_CS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartFrameSyncNullUserPmd_CS_descriptor_;
}

const StartFrameSyncNullUserPmd_CS& StartFrameSyncNullUserPmd_CS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

StartFrameSyncNullUserPmd_CS* StartFrameSyncNullUserPmd_CS::default_instance_ = NULL;

StartFrameSyncNullUserPmd_CS* StartFrameSyncNullUserPmd_CS::New() const {
  return new StartFrameSyncNullUserPmd_CS;
}

void StartFrameSyncNullUserPmd_CS::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<StartFrameSyncNullUserPmd_CS*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(msec_, randseed_);
    if (has_initdata()) {
      if (initdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        initdata_->clear();
      }
    }
    roomid_ = GOOGLE_ULONGLONG(0);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StartFrameSyncNullUserPmd_CS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.StartFrameSyncNullUserPmd_CS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msec = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msec_)));
          set_has_msec();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_randseed;
        break;
      }

      // optional uint32 randseed = 2;
      case 2: {
        if (tag == 16) {
         parse_randseed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &randseed_)));
          set_has_randseed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_initdata;
        break;
      }

      // optional string initdata = 3;
      case 3: {
        if (tag == 26) {
         parse_initdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->initdata().data(), this->initdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "initdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_roomid;
        break;
      }

      // optional uint64 roomid = 4;
      case 4: {
        if (tag == 32) {
         parse_roomid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
          set_has_roomid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.StartFrameSyncNullUserPmd_CS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.StartFrameSyncNullUserPmd_CS)
  return false;
#undef DO_
}

void StartFrameSyncNullUserPmd_CS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.StartFrameSyncNullUserPmd_CS)
  // optional uint32 msec = 1;
  if (has_msec()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msec(), output);
  }

  // optional uint32 randseed = 2;
  if (has_randseed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->randseed(), output);
  }

  // optional string initdata = 3;
  if (has_initdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initdata().data(), this->initdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "initdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->initdata(), output);
  }

  // optional uint64 roomid = 4;
  if (has_roomid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roomid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.StartFrameSyncNullUserPmd_CS)
}

::google::protobuf::uint8* StartFrameSyncNullUserPmd_CS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.StartFrameSyncNullUserPmd_CS)
  // optional uint32 msec = 1;
  if (has_msec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msec(), target);
  }

  // optional uint32 randseed = 2;
  if (has_randseed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->randseed(), target);
  }

  // optional string initdata = 3;
  if (has_initdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initdata().data(), this->initdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "initdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->initdata(), target);
  }

  // optional uint64 roomid = 4;
  if (has_roomid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roomid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.StartFrameSyncNullUserPmd_CS)
  return target;
}

int StartFrameSyncNullUserPmd_CS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 msec = 1;
    if (has_msec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msec());
    }

    // optional uint32 randseed = 2;
    if (has_randseed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->randseed());
    }

    // optional string initdata = 3;
    if (has_initdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->initdata());
    }

    // optional uint64 roomid = 4;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->roomid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartFrameSyncNullUserPmd_CS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StartFrameSyncNullUserPmd_CS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StartFrameSyncNullUserPmd_CS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StartFrameSyncNullUserPmd_CS::MergeFrom(const StartFrameSyncNullUserPmd_CS& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msec()) {
      set_msec(from.msec());
    }
    if (from.has_randseed()) {
      set_randseed(from.randseed());
    }
    if (from.has_initdata()) {
      set_initdata(from.initdata());
    }
    if (from.has_roomid()) {
      set_roomid(from.roomid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StartFrameSyncNullUserPmd_CS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartFrameSyncNullUserPmd_CS::CopyFrom(const StartFrameSyncNullUserPmd_CS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartFrameSyncNullUserPmd_CS::IsInitialized() const {

  return true;
}

void StartFrameSyncNullUserPmd_CS::Swap(StartFrameSyncNullUserPmd_CS* other) {
  if (other != this) {
    std::swap(msec_, other->msec_);
    std::swap(randseed_, other->randseed_);
    std::swap(initdata_, other->initdata_);
    std::swap(roomid_, other->roomid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StartFrameSyncNullUserPmd_CS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartFrameSyncNullUserPmd_CS_descriptor_;
  metadata.reflection = StartFrameSyncNullUserPmd_CS_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BroadListFrameSyncNullUserPmd_S::kFramenumFieldNumber;
const int BroadListFrameSyncNullUserPmd_S::kDatalistFieldNumber;
#endif  // !_MSC_VER

BroadListFrameSyncNullUserPmd_S::BroadListFrameSyncNullUserPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.BroadListFrameSyncNullUserPmd_S)
}

void BroadListFrameSyncNullUserPmd_S::InitAsDefaultInstance() {
}

BroadListFrameSyncNullUserPmd_S::BroadListFrameSyncNullUserPmd_S(const BroadListFrameSyncNullUserPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.BroadListFrameSyncNullUserPmd_S)
}

void BroadListFrameSyncNullUserPmd_S::SharedCtor() {
  _cached_size_ = 0;
  framenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BroadListFrameSyncNullUserPmd_S::~BroadListFrameSyncNullUserPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.BroadListFrameSyncNullUserPmd_S)
  SharedDtor();
}

void BroadListFrameSyncNullUserPmd_S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BroadListFrameSyncNullUserPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BroadListFrameSyncNullUserPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BroadListFrameSyncNullUserPmd_S_descriptor_;
}

const BroadListFrameSyncNullUserPmd_S& BroadListFrameSyncNullUserPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

BroadListFrameSyncNullUserPmd_S* BroadListFrameSyncNullUserPmd_S::default_instance_ = NULL;

BroadListFrameSyncNullUserPmd_S* BroadListFrameSyncNullUserPmd_S::New() const {
  return new BroadListFrameSyncNullUserPmd_S;
}

void BroadListFrameSyncNullUserPmd_S::Clear() {
  framenum_ = 0u;
  datalist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BroadListFrameSyncNullUserPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.BroadListFrameSyncNullUserPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 framenum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &framenum_)));
          set_has_framenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_datalist;
        break;
      }

      // repeated .Pmd.FrameSyncData datalist = 2;
      case 2: {
        if (tag == 18) {
         parse_datalist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datalist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_datalist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.BroadListFrameSyncNullUserPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.BroadListFrameSyncNullUserPmd_S)
  return false;
#undef DO_
}

void BroadListFrameSyncNullUserPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.BroadListFrameSyncNullUserPmd_S)
  // optional uint32 framenum = 1;
  if (has_framenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->framenum(), output);
  }

  // repeated .Pmd.FrameSyncData datalist = 2;
  for (int i = 0; i < this->datalist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->datalist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.BroadListFrameSyncNullUserPmd_S)
}

::google::protobuf::uint8* BroadListFrameSyncNullUserPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.BroadListFrameSyncNullUserPmd_S)
  // optional uint32 framenum = 1;
  if (has_framenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->framenum(), target);
  }

  // repeated .Pmd.FrameSyncData datalist = 2;
  for (int i = 0; i < this->datalist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->datalist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.BroadListFrameSyncNullUserPmd_S)
  return target;
}

int BroadListFrameSyncNullUserPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 framenum = 1;
    if (has_framenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->framenum());
    }

  }
  // repeated .Pmd.FrameSyncData datalist = 2;
  total_size += 1 * this->datalist_size();
  for (int i = 0; i < this->datalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datalist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BroadListFrameSyncNullUserPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BroadListFrameSyncNullUserPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BroadListFrameSyncNullUserPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BroadListFrameSyncNullUserPmd_S::MergeFrom(const BroadListFrameSyncNullUserPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  datalist_.MergeFrom(from.datalist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_framenum()) {
      set_framenum(from.framenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BroadListFrameSyncNullUserPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadListFrameSyncNullUserPmd_S::CopyFrom(const BroadListFrameSyncNullUserPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadListFrameSyncNullUserPmd_S::IsInitialized() const {

  return true;
}

void BroadListFrameSyncNullUserPmd_S::Swap(BroadListFrameSyncNullUserPmd_S* other) {
  if (other != this) {
    std::swap(framenum_, other->framenum_);
    datalist_.Swap(&other->datalist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BroadListFrameSyncNullUserPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BroadListFrameSyncNullUserPmd_S_descriptor_;
  metadata.reflection = BroadListFrameSyncNullUserPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RequestUpFrameSyncNullUserPmd_C::kDataFieldNumber;
#endif  // !_MSC_VER

RequestUpFrameSyncNullUserPmd_C::RequestUpFrameSyncNullUserPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.RequestUpFrameSyncNullUserPmd_C)
}

void RequestUpFrameSyncNullUserPmd_C::InitAsDefaultInstance() {
}

RequestUpFrameSyncNullUserPmd_C::RequestUpFrameSyncNullUserPmd_C(const RequestUpFrameSyncNullUserPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.RequestUpFrameSyncNullUserPmd_C)
}

void RequestUpFrameSyncNullUserPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestUpFrameSyncNullUserPmd_C::~RequestUpFrameSyncNullUserPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.RequestUpFrameSyncNullUserPmd_C)
  SharedDtor();
}

void RequestUpFrameSyncNullUserPmd_C::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void RequestUpFrameSyncNullUserPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestUpFrameSyncNullUserPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestUpFrameSyncNullUserPmd_C_descriptor_;
}

const RequestUpFrameSyncNullUserPmd_C& RequestUpFrameSyncNullUserPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

RequestUpFrameSyncNullUserPmd_C* RequestUpFrameSyncNullUserPmd_C::default_instance_ = NULL;

RequestUpFrameSyncNullUserPmd_C* RequestUpFrameSyncNullUserPmd_C::New() const {
  return new RequestUpFrameSyncNullUserPmd_C;
}

void RequestUpFrameSyncNullUserPmd_C::Clear() {
  if (has_data()) {
    if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      data_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestUpFrameSyncNullUserPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.RequestUpFrameSyncNullUserPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.RequestUpFrameSyncNullUserPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.RequestUpFrameSyncNullUserPmd_C)
  return false;
#undef DO_
}

void RequestUpFrameSyncNullUserPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.RequestUpFrameSyncNullUserPmd_C)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.RequestUpFrameSyncNullUserPmd_C)
}

::google::protobuf::uint8* RequestUpFrameSyncNullUserPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.RequestUpFrameSyncNullUserPmd_C)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.RequestUpFrameSyncNullUserPmd_C)
  return target;
}

int RequestUpFrameSyncNullUserPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestUpFrameSyncNullUserPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestUpFrameSyncNullUserPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestUpFrameSyncNullUserPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestUpFrameSyncNullUserPmd_C::MergeFrom(const RequestUpFrameSyncNullUserPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestUpFrameSyncNullUserPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestUpFrameSyncNullUserPmd_C::CopyFrom(const RequestUpFrameSyncNullUserPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestUpFrameSyncNullUserPmd_C::IsInitialized() const {

  return true;
}

void RequestUpFrameSyncNullUserPmd_C::Swap(RequestUpFrameSyncNullUserPmd_C* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestUpFrameSyncNullUserPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestUpFrameSyncNullUserPmd_C_descriptor_;
  metadata.reflection = RequestUpFrameSyncNullUserPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HistoryFrameSyncData::kFramenumFieldNumber;
const int HistoryFrameSyncData::kDatalistFieldNumber;
#endif  // !_MSC_VER

HistoryFrameSyncData::HistoryFrameSyncData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.HistoryFrameSyncData)
}

void HistoryFrameSyncData::InitAsDefaultInstance() {
}

HistoryFrameSyncData::HistoryFrameSyncData(const HistoryFrameSyncData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.HistoryFrameSyncData)
}

void HistoryFrameSyncData::SharedCtor() {
  _cached_size_ = 0;
  framenum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HistoryFrameSyncData::~HistoryFrameSyncData() {
  // @@protoc_insertion_point(destructor:Pmd.HistoryFrameSyncData)
  SharedDtor();
}

void HistoryFrameSyncData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HistoryFrameSyncData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HistoryFrameSyncData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HistoryFrameSyncData_descriptor_;
}

const HistoryFrameSyncData& HistoryFrameSyncData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

HistoryFrameSyncData* HistoryFrameSyncData::default_instance_ = NULL;

HistoryFrameSyncData* HistoryFrameSyncData::New() const {
  return new HistoryFrameSyncData;
}

void HistoryFrameSyncData::Clear() {
  framenum_ = 0u;
  datalist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HistoryFrameSyncData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.HistoryFrameSyncData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 framenum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &framenum_)));
          set_has_framenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_datalist;
        break;
      }

      // repeated .Pmd.FrameSyncData datalist = 2;
      case 2: {
        if (tag == 18) {
         parse_datalist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datalist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_datalist;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.HistoryFrameSyncData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.HistoryFrameSyncData)
  return false;
#undef DO_
}

void HistoryFrameSyncData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.HistoryFrameSyncData)
  // optional uint32 framenum = 1;
  if (has_framenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->framenum(), output);
  }

  // repeated .Pmd.FrameSyncData datalist = 2;
  for (int i = 0; i < this->datalist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->datalist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.HistoryFrameSyncData)
}

::google::protobuf::uint8* HistoryFrameSyncData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.HistoryFrameSyncData)
  // optional uint32 framenum = 1;
  if (has_framenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->framenum(), target);
  }

  // repeated .Pmd.FrameSyncData datalist = 2;
  for (int i = 0; i < this->datalist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->datalist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.HistoryFrameSyncData)
  return target;
}

int HistoryFrameSyncData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 framenum = 1;
    if (has_framenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->framenum());
    }

  }
  // repeated .Pmd.FrameSyncData datalist = 2;
  total_size += 1 * this->datalist_size();
  for (int i = 0; i < this->datalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datalist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HistoryFrameSyncData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HistoryFrameSyncData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HistoryFrameSyncData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HistoryFrameSyncData::MergeFrom(const HistoryFrameSyncData& from) {
  GOOGLE_CHECK_NE(&from, this);
  datalist_.MergeFrom(from.datalist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_framenum()) {
      set_framenum(from.framenum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HistoryFrameSyncData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HistoryFrameSyncData::CopyFrom(const HistoryFrameSyncData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoryFrameSyncData::IsInitialized() const {

  return true;
}

void HistoryFrameSyncData::Swap(HistoryFrameSyncData* other) {
  if (other != this) {
    std::swap(framenum_, other->framenum_);
    datalist_.Swap(&other->datalist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HistoryFrameSyncData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HistoryFrameSyncData_descriptor_;
  metadata.reflection = HistoryFrameSyncData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int HistoryListFrameSyncNullUserPmd_S::kDatalistFieldNumber;
const int HistoryListFrameSyncNullUserPmd_S::kFinishedFieldNumber;
#endif  // !_MSC_VER

HistoryListFrameSyncNullUserPmd_S::HistoryListFrameSyncNullUserPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.HistoryListFrameSyncNullUserPmd_S)
}

void HistoryListFrameSyncNullUserPmd_S::InitAsDefaultInstance() {
}

HistoryListFrameSyncNullUserPmd_S::HistoryListFrameSyncNullUserPmd_S(const HistoryListFrameSyncNullUserPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.HistoryListFrameSyncNullUserPmd_S)
}

void HistoryListFrameSyncNullUserPmd_S::SharedCtor() {
  _cached_size_ = 0;
  finished_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HistoryListFrameSyncNullUserPmd_S::~HistoryListFrameSyncNullUserPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.HistoryListFrameSyncNullUserPmd_S)
  SharedDtor();
}

void HistoryListFrameSyncNullUserPmd_S::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HistoryListFrameSyncNullUserPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HistoryListFrameSyncNullUserPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HistoryListFrameSyncNullUserPmd_S_descriptor_;
}

const HistoryListFrameSyncNullUserPmd_S& HistoryListFrameSyncNullUserPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

HistoryListFrameSyncNullUserPmd_S* HistoryListFrameSyncNullUserPmd_S::default_instance_ = NULL;

HistoryListFrameSyncNullUserPmd_S* HistoryListFrameSyncNullUserPmd_S::New() const {
  return new HistoryListFrameSyncNullUserPmd_S;
}

void HistoryListFrameSyncNullUserPmd_S::Clear() {
  finished_ = false;
  datalist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HistoryListFrameSyncNullUserPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.HistoryListFrameSyncNullUserPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pmd.HistoryFrameSyncData datalist = 1;
      case 1: {
        if (tag == 10) {
         parse_datalist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datalist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_datalist;
        if (input->ExpectTag(16)) goto parse_finished;
        break;
      }

      // optional bool finished = 2;
      case 2: {
        if (tag == 16) {
         parse_finished:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
          set_has_finished();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.HistoryListFrameSyncNullUserPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.HistoryListFrameSyncNullUserPmd_S)
  return false;
#undef DO_
}

void HistoryListFrameSyncNullUserPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.HistoryListFrameSyncNullUserPmd_S)
  // repeated .Pmd.HistoryFrameSyncData datalist = 1;
  for (int i = 0; i < this->datalist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datalist(i), output);
  }

  // optional bool finished = 2;
  if (has_finished()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->finished(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.HistoryListFrameSyncNullUserPmd_S)
}

::google::protobuf::uint8* HistoryListFrameSyncNullUserPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.HistoryListFrameSyncNullUserPmd_S)
  // repeated .Pmd.HistoryFrameSyncData datalist = 1;
  for (int i = 0; i < this->datalist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datalist(i), target);
  }

  // optional bool finished = 2;
  if (has_finished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->finished(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.HistoryListFrameSyncNullUserPmd_S)
  return target;
}

int HistoryListFrameSyncNullUserPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional bool finished = 2;
    if (has_finished()) {
      total_size += 1 + 1;
    }

  }
  // repeated .Pmd.HistoryFrameSyncData datalist = 1;
  total_size += 1 * this->datalist_size();
  for (int i = 0; i < this->datalist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datalist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HistoryListFrameSyncNullUserPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HistoryListFrameSyncNullUserPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HistoryListFrameSyncNullUserPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HistoryListFrameSyncNullUserPmd_S::MergeFrom(const HistoryListFrameSyncNullUserPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  datalist_.MergeFrom(from.datalist_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_finished()) {
      set_finished(from.finished());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HistoryListFrameSyncNullUserPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HistoryListFrameSyncNullUserPmd_S::CopyFrom(const HistoryListFrameSyncNullUserPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoryListFrameSyncNullUserPmd_S::IsInitialized() const {

  return true;
}

void HistoryListFrameSyncNullUserPmd_S::Swap(HistoryListFrameSyncNullUserPmd_S* other) {
  if (other != this) {
    datalist_.Swap(&other->datalist_);
    std::swap(finished_, other->finished_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HistoryListFrameSyncNullUserPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HistoryListFrameSyncNullUserPmd_S_descriptor_;
  metadata.reflection = HistoryListFrameSyncNullUserPmd_S_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StopFrameSyncNullUserPmd_SC::kResultdataFieldNumber;
#endif  // !_MSC_VER

StopFrameSyncNullUserPmd_SC::StopFrameSyncNullUserPmd_SC()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.StopFrameSyncNullUserPmd_SC)
}

void StopFrameSyncNullUserPmd_SC::InitAsDefaultInstance() {
}

StopFrameSyncNullUserPmd_SC::StopFrameSyncNullUserPmd_SC(const StopFrameSyncNullUserPmd_SC& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.StopFrameSyncNullUserPmd_SC)
}

void StopFrameSyncNullUserPmd_SC::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  resultdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StopFrameSyncNullUserPmd_SC::~StopFrameSyncNullUserPmd_SC() {
  // @@protoc_insertion_point(destructor:Pmd.StopFrameSyncNullUserPmd_SC)
  SharedDtor();
}

void StopFrameSyncNullUserPmd_SC::SharedDtor() {
  if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resultdata_;
  }
  if (this != default_instance_) {
  }
}

void StopFrameSyncNullUserPmd_SC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopFrameSyncNullUserPmd_SC::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StopFrameSyncNullUserPmd_SC_descriptor_;
}

const StopFrameSyncNullUserPmd_SC& StopFrameSyncNullUserPmd_SC::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nullcommand_2eproto();
  return *default_instance_;
}

StopFrameSyncNullUserPmd_SC* StopFrameSyncNullUserPmd_SC::default_instance_ = NULL;

StopFrameSyncNullUserPmd_SC* StopFrameSyncNullUserPmd_SC::New() const {
  return new StopFrameSyncNullUserPmd_SC;
}

void StopFrameSyncNullUserPmd_SC::Clear() {
  if (has_resultdata()) {
    if (resultdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      resultdata_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StopFrameSyncNullUserPmd_SC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.StopFrameSyncNullUserPmd_SC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string resultdata = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resultdata().data(), this->resultdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "resultdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.StopFrameSyncNullUserPmd_SC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.StopFrameSyncNullUserPmd_SC)
  return false;
#undef DO_
}

void StopFrameSyncNullUserPmd_SC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.StopFrameSyncNullUserPmd_SC)
  // optional string resultdata = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resultdata(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.StopFrameSyncNullUserPmd_SC)
}

::google::protobuf::uint8* StopFrameSyncNullUserPmd_SC::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.StopFrameSyncNullUserPmd_SC)
  // optional string resultdata = 1;
  if (has_resultdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resultdata().data(), this->resultdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "resultdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resultdata(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.StopFrameSyncNullUserPmd_SC)
  return target;
}

int StopFrameSyncNullUserPmd_SC::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string resultdata = 1;
    if (has_resultdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultdata());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopFrameSyncNullUserPmd_SC::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StopFrameSyncNullUserPmd_SC* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StopFrameSyncNullUserPmd_SC*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StopFrameSyncNullUserPmd_SC::MergeFrom(const StopFrameSyncNullUserPmd_SC& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultdata()) {
      set_resultdata(from.resultdata());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StopFrameSyncNullUserPmd_SC::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopFrameSyncNullUserPmd_SC::CopyFrom(const StopFrameSyncNullUserPmd_SC& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopFrameSyncNullUserPmd_SC::IsInitialized() const {

  return true;
}

void StopFrameSyncNullUserPmd_SC::Swap(StopFrameSyncNullUserPmd_SC* other) {
  if (other != this) {
    std::swap(resultdata_, other->resultdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StopFrameSyncNullUserPmd_SC::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StopFrameSyncNullUserPmd_SC_descriptor_;
  metadata.reflection = StopFrameSyncNullUserPmd_SC_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pmd

// @@protoc_insertion_point(global_scope)
