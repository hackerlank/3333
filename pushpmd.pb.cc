// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pushpmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pushpmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Pmd {

namespace {

const ::google::protobuf::Descriptor* Push_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Push_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Push_Param_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ClientInstallFinishPushPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientInstallFinishPushPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientUninstallPushPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientUninstallPushPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientStartPushPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientStartPushPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientExitPushPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientExitPushPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceStartPushPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceStartPushPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceExitPushPmd_C_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceExitPushPmd_C_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyMessagePushPmd_S_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyMessagePushPmd_S_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_pushpmd_2eproto() {
  protobuf_AddDesc_pushpmd_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pushpmd.proto");
  GOOGLE_CHECK(file != NULL);
  Push_descriptor_ = file->message_type(0);
  static const int Push_offsets_[1] = {
  };
  Push_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Push_descriptor_,
      Push::default_instance_,
      Push_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Push, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Push, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Push));
  Push_Param_descriptor_ = Push_descriptor_->enum_type(0);
  ClientInstallFinishPushPmd_C_descriptor_ = file->message_type(1);
  static const int ClientInstallFinishPushPmd_C_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInstallFinishPushPmd_C, mid_),
  };
  ClientInstallFinishPushPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientInstallFinishPushPmd_C_descriptor_,
      ClientInstallFinishPushPmd_C::default_instance_,
      ClientInstallFinishPushPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInstallFinishPushPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientInstallFinishPushPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientInstallFinishPushPmd_C));
  ClientUninstallPushPmd_C_descriptor_ = file->message_type(2);
  static const int ClientUninstallPushPmd_C_offsets_[1] = {
  };
  ClientUninstallPushPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientUninstallPushPmd_C_descriptor_,
      ClientUninstallPushPmd_C::default_instance_,
      ClientUninstallPushPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientUninstallPushPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientUninstallPushPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientUninstallPushPmd_C));
  ClientStartPushPmd_C_descriptor_ = file->message_type(3);
  static const int ClientStartPushPmd_C_offsets_[1] = {
  };
  ClientStartPushPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientStartPushPmd_C_descriptor_,
      ClientStartPushPmd_C::default_instance_,
      ClientStartPushPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientStartPushPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientStartPushPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientStartPushPmd_C));
  ClientExitPushPmd_C_descriptor_ = file->message_type(4);
  static const int ClientExitPushPmd_C_offsets_[1] = {
  };
  ClientExitPushPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClientExitPushPmd_C_descriptor_,
      ClientExitPushPmd_C::default_instance_,
      ClientExitPushPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientExitPushPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientExitPushPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClientExitPushPmd_C));
  ServiceStartPushPmd_C_descriptor_ = file->message_type(5);
  static const int ServiceStartPushPmd_C_offsets_[1] = {
  };
  ServiceStartPushPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceStartPushPmd_C_descriptor_,
      ServiceStartPushPmd_C::default_instance_,
      ServiceStartPushPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceStartPushPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceStartPushPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceStartPushPmd_C));
  ServiceExitPushPmd_C_descriptor_ = file->message_type(6);
  static const int ServiceExitPushPmd_C_offsets_[1] = {
  };
  ServiceExitPushPmd_C_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ServiceExitPushPmd_C_descriptor_,
      ServiceExitPushPmd_C::default_instance_,
      ServiceExitPushPmd_C_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceExitPushPmd_C, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceExitPushPmd_C, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ServiceExitPushPmd_C));
  NotifyMessagePushPmd_S_descriptor_ = file->message_type(7);
  static const int NotifyMessagePushPmd_S_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMessagePushPmd_S, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMessagePushPmd_S, info_),
  };
  NotifyMessagePushPmd_S_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NotifyMessagePushPmd_S_descriptor_,
      NotifyMessagePushPmd_S::default_instance_,
      NotifyMessagePushPmd_S_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMessagePushPmd_S, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMessagePushPmd_S, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NotifyMessagePushPmd_S));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pushpmd_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Push_descriptor_, &Push::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientInstallFinishPushPmd_C_descriptor_, &ClientInstallFinishPushPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientUninstallPushPmd_C_descriptor_, &ClientUninstallPushPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientStartPushPmd_C_descriptor_, &ClientStartPushPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClientExitPushPmd_C_descriptor_, &ClientExitPushPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceStartPushPmd_C_descriptor_, &ServiceStartPushPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ServiceExitPushPmd_C_descriptor_, &ServiceExitPushPmd_C::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NotifyMessagePushPmd_S_descriptor_, &NotifyMessagePushPmd_S::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pushpmd_2eproto() {
  delete Push::default_instance_;
  delete Push_reflection_;
  delete ClientInstallFinishPushPmd_C::default_instance_;
  delete ClientInstallFinishPushPmd_C_reflection_;
  delete ClientUninstallPushPmd_C::default_instance_;
  delete ClientUninstallPushPmd_C_reflection_;
  delete ClientStartPushPmd_C::default_instance_;
  delete ClientStartPushPmd_C_reflection_;
  delete ClientExitPushPmd_C::default_instance_;
  delete ClientExitPushPmd_C_reflection_;
  delete ServiceStartPushPmd_C::default_instance_;
  delete ServiceStartPushPmd_C_reflection_;
  delete ServiceExitPushPmd_C::default_instance_;
  delete ServiceExitPushPmd_C_reflection_;
  delete NotifyMessagePushPmd_S::default_instance_;
  delete NotifyMessagePushPmd_S_reflection_;
}

void protobuf_AddDesc_pushpmd_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Pmd::protobuf_AddDesc_pmd_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rpushpmd.proto\022\003Pmd\032\tpmd.proto\"\324\001\n\004Push"
    "\"\313\001\n\005Param\022 \n\034ClientInstallFinishPushPmd"
    "_C\020\001\022\034\n\030ClientUninstallPushPmd_C\020\002\022\030\n\024Cl"
    "ientStartPushPmd_C\020\003\022\027\n\023ClientExitPushPm"
    "d_C\020\004\022\031\n\025ServiceStartPushPmd_C\020\005\022\030\n\024Serv"
    "iceExitPushPmd_C\020\006\022\032\n\026NotifyMessagePushP"
    "md_S\020\007\"+\n\034ClientInstallFinishPushPmd_C\022\013"
    "\n\003mid\030\001 \001(\t\"\032\n\030ClientUninstallPushPmd_C\""
    "\026\n\024ClientStartPushPmd_C\"\025\n\023ClientExitPus"
    "hPmd_C\"\027\n\025ServiceStartPushPmd_C\"\026\n\024Servi"
    "ceExitPushPmd_C\"4\n\026NotifyMessagePushPmd_"
    "S\022\014\n\004type\030\001 \001(\r\022\014\n\004info\030\002 \001(\t", 469);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pushpmd.proto", &protobuf_RegisterTypes);
  Push::default_instance_ = new Push();
  ClientInstallFinishPushPmd_C::default_instance_ = new ClientInstallFinishPushPmd_C();
  ClientUninstallPushPmd_C::default_instance_ = new ClientUninstallPushPmd_C();
  ClientStartPushPmd_C::default_instance_ = new ClientStartPushPmd_C();
  ClientExitPushPmd_C::default_instance_ = new ClientExitPushPmd_C();
  ServiceStartPushPmd_C::default_instance_ = new ServiceStartPushPmd_C();
  ServiceExitPushPmd_C::default_instance_ = new ServiceExitPushPmd_C();
  NotifyMessagePushPmd_S::default_instance_ = new NotifyMessagePushPmd_S();
  Push::default_instance_->InitAsDefaultInstance();
  ClientInstallFinishPushPmd_C::default_instance_->InitAsDefaultInstance();
  ClientUninstallPushPmd_C::default_instance_->InitAsDefaultInstance();
  ClientStartPushPmd_C::default_instance_->InitAsDefaultInstance();
  ClientExitPushPmd_C::default_instance_->InitAsDefaultInstance();
  ServiceStartPushPmd_C::default_instance_->InitAsDefaultInstance();
  ServiceExitPushPmd_C::default_instance_->InitAsDefaultInstance();
  NotifyMessagePushPmd_S::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pushpmd_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pushpmd_2eproto {
  StaticDescriptorInitializer_pushpmd_2eproto() {
    protobuf_AddDesc_pushpmd_2eproto();
  }
} static_descriptor_initializer_pushpmd_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Push_Param_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Push_Param_descriptor_;
}
bool Push_Param_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Push_Param Push::ClientInstallFinishPushPmd_C;
const Push_Param Push::ClientUninstallPushPmd_C;
const Push_Param Push::ClientStartPushPmd_C;
const Push_Param Push::ClientExitPushPmd_C;
const Push_Param Push::ServiceStartPushPmd_C;
const Push_Param Push::ServiceExitPushPmd_C;
const Push_Param Push::NotifyMessagePushPmd_S;
const Push_Param Push::Param_MIN;
const Push_Param Push::Param_MAX;
const int Push::Param_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
#endif  // !_MSC_VER

Push::Push()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.Push)
}

void Push::InitAsDefaultInstance() {
}

Push::Push(const Push& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.Push)
}

void Push::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Push::~Push() {
  // @@protoc_insertion_point(destructor:Pmd.Push)
  SharedDtor();
}

void Push::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Push::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Push::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Push_descriptor_;
}

const Push& Push::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pushpmd_2eproto();
  return *default_instance_;
}

Push* Push::default_instance_ = NULL;

Push* Push::New() const {
  return new Push;
}

void Push::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Push::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.Push)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.Push)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.Push)
  return false;
#undef DO_
}

void Push::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.Push)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.Push)
}

::google::protobuf::uint8* Push::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.Push)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.Push)
  return target;
}

int Push::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Push::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Push* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Push*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Push::MergeFrom(const Push& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Push::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Push::CopyFrom(const Push& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Push::IsInitialized() const {

  return true;
}

void Push::Swap(Push* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Push::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Push_descriptor_;
  metadata.reflection = Push_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClientInstallFinishPushPmd_C::kMidFieldNumber;
#endif  // !_MSC_VER

ClientInstallFinishPushPmd_C::ClientInstallFinishPushPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ClientInstallFinishPushPmd_C)
}

void ClientInstallFinishPushPmd_C::InitAsDefaultInstance() {
}

ClientInstallFinishPushPmd_C::ClientInstallFinishPushPmd_C(const ClientInstallFinishPushPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ClientInstallFinishPushPmd_C)
}

void ClientInstallFinishPushPmd_C::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  mid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientInstallFinishPushPmd_C::~ClientInstallFinishPushPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.ClientInstallFinishPushPmd_C)
  SharedDtor();
}

void ClientInstallFinishPushPmd_C::SharedDtor() {
  if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mid_;
  }
  if (this != default_instance_) {
  }
}

void ClientInstallFinishPushPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientInstallFinishPushPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientInstallFinishPushPmd_C_descriptor_;
}

const ClientInstallFinishPushPmd_C& ClientInstallFinishPushPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pushpmd_2eproto();
  return *default_instance_;
}

ClientInstallFinishPushPmd_C* ClientInstallFinishPushPmd_C::default_instance_ = NULL;

ClientInstallFinishPushPmd_C* ClientInstallFinishPushPmd_C::New() const {
  return new ClientInstallFinishPushPmd_C;
}

void ClientInstallFinishPushPmd_C::Clear() {
  if (has_mid()) {
    if (mid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      mid_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientInstallFinishPushPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ClientInstallFinishPushPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string mid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mid().data(), this->mid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ClientInstallFinishPushPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ClientInstallFinishPushPmd_C)
  return false;
#undef DO_
}

void ClientInstallFinishPushPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ClientInstallFinishPushPmd_C)
  // optional string mid = 1;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ClientInstallFinishPushPmd_C)
}

::google::protobuf::uint8* ClientInstallFinishPushPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ClientInstallFinishPushPmd_C)
  // optional string mid = 1;
  if (has_mid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ClientInstallFinishPushPmd_C)
  return target;
}

int ClientInstallFinishPushPmd_C::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string mid = 1;
    if (has_mid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientInstallFinishPushPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientInstallFinishPushPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientInstallFinishPushPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientInstallFinishPushPmd_C::MergeFrom(const ClientInstallFinishPushPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mid()) {
      set_mid(from.mid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientInstallFinishPushPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientInstallFinishPushPmd_C::CopyFrom(const ClientInstallFinishPushPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientInstallFinishPushPmd_C::IsInitialized() const {

  return true;
}

void ClientInstallFinishPushPmd_C::Swap(ClientInstallFinishPushPmd_C* other) {
  if (other != this) {
    std::swap(mid_, other->mid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientInstallFinishPushPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientInstallFinishPushPmd_C_descriptor_;
  metadata.reflection = ClientInstallFinishPushPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ClientUninstallPushPmd_C::ClientUninstallPushPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ClientUninstallPushPmd_C)
}

void ClientUninstallPushPmd_C::InitAsDefaultInstance() {
}

ClientUninstallPushPmd_C::ClientUninstallPushPmd_C(const ClientUninstallPushPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ClientUninstallPushPmd_C)
}

void ClientUninstallPushPmd_C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientUninstallPushPmd_C::~ClientUninstallPushPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.ClientUninstallPushPmd_C)
  SharedDtor();
}

void ClientUninstallPushPmd_C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientUninstallPushPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientUninstallPushPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientUninstallPushPmd_C_descriptor_;
}

const ClientUninstallPushPmd_C& ClientUninstallPushPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pushpmd_2eproto();
  return *default_instance_;
}

ClientUninstallPushPmd_C* ClientUninstallPushPmd_C::default_instance_ = NULL;

ClientUninstallPushPmd_C* ClientUninstallPushPmd_C::New() const {
  return new ClientUninstallPushPmd_C;
}

void ClientUninstallPushPmd_C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientUninstallPushPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ClientUninstallPushPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ClientUninstallPushPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ClientUninstallPushPmd_C)
  return false;
#undef DO_
}

void ClientUninstallPushPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ClientUninstallPushPmd_C)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ClientUninstallPushPmd_C)
}

::google::protobuf::uint8* ClientUninstallPushPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ClientUninstallPushPmd_C)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ClientUninstallPushPmd_C)
  return target;
}

int ClientUninstallPushPmd_C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientUninstallPushPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientUninstallPushPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientUninstallPushPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientUninstallPushPmd_C::MergeFrom(const ClientUninstallPushPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientUninstallPushPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientUninstallPushPmd_C::CopyFrom(const ClientUninstallPushPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientUninstallPushPmd_C::IsInitialized() const {

  return true;
}

void ClientUninstallPushPmd_C::Swap(ClientUninstallPushPmd_C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientUninstallPushPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientUninstallPushPmd_C_descriptor_;
  metadata.reflection = ClientUninstallPushPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ClientStartPushPmd_C::ClientStartPushPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ClientStartPushPmd_C)
}

void ClientStartPushPmd_C::InitAsDefaultInstance() {
}

ClientStartPushPmd_C::ClientStartPushPmd_C(const ClientStartPushPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ClientStartPushPmd_C)
}

void ClientStartPushPmd_C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientStartPushPmd_C::~ClientStartPushPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.ClientStartPushPmd_C)
  SharedDtor();
}

void ClientStartPushPmd_C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientStartPushPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientStartPushPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientStartPushPmd_C_descriptor_;
}

const ClientStartPushPmd_C& ClientStartPushPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pushpmd_2eproto();
  return *default_instance_;
}

ClientStartPushPmd_C* ClientStartPushPmd_C::default_instance_ = NULL;

ClientStartPushPmd_C* ClientStartPushPmd_C::New() const {
  return new ClientStartPushPmd_C;
}

void ClientStartPushPmd_C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientStartPushPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ClientStartPushPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ClientStartPushPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ClientStartPushPmd_C)
  return false;
#undef DO_
}

void ClientStartPushPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ClientStartPushPmd_C)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ClientStartPushPmd_C)
}

::google::protobuf::uint8* ClientStartPushPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ClientStartPushPmd_C)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ClientStartPushPmd_C)
  return target;
}

int ClientStartPushPmd_C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientStartPushPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientStartPushPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientStartPushPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientStartPushPmd_C::MergeFrom(const ClientStartPushPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientStartPushPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientStartPushPmd_C::CopyFrom(const ClientStartPushPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientStartPushPmd_C::IsInitialized() const {

  return true;
}

void ClientStartPushPmd_C::Swap(ClientStartPushPmd_C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientStartPushPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientStartPushPmd_C_descriptor_;
  metadata.reflection = ClientStartPushPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ClientExitPushPmd_C::ClientExitPushPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ClientExitPushPmd_C)
}

void ClientExitPushPmd_C::InitAsDefaultInstance() {
}

ClientExitPushPmd_C::ClientExitPushPmd_C(const ClientExitPushPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ClientExitPushPmd_C)
}

void ClientExitPushPmd_C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClientExitPushPmd_C::~ClientExitPushPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.ClientExitPushPmd_C)
  SharedDtor();
}

void ClientExitPushPmd_C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientExitPushPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientExitPushPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientExitPushPmd_C_descriptor_;
}

const ClientExitPushPmd_C& ClientExitPushPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pushpmd_2eproto();
  return *default_instance_;
}

ClientExitPushPmd_C* ClientExitPushPmd_C::default_instance_ = NULL;

ClientExitPushPmd_C* ClientExitPushPmd_C::New() const {
  return new ClientExitPushPmd_C;
}

void ClientExitPushPmd_C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClientExitPushPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ClientExitPushPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ClientExitPushPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ClientExitPushPmd_C)
  return false;
#undef DO_
}

void ClientExitPushPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ClientExitPushPmd_C)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ClientExitPushPmd_C)
}

::google::protobuf::uint8* ClientExitPushPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ClientExitPushPmd_C)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ClientExitPushPmd_C)
  return target;
}

int ClientExitPushPmd_C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientExitPushPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClientExitPushPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClientExitPushPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClientExitPushPmd_C::MergeFrom(const ClientExitPushPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClientExitPushPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientExitPushPmd_C::CopyFrom(const ClientExitPushPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientExitPushPmd_C::IsInitialized() const {

  return true;
}

void ClientExitPushPmd_C::Swap(ClientExitPushPmd_C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClientExitPushPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientExitPushPmd_C_descriptor_;
  metadata.reflection = ClientExitPushPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ServiceStartPushPmd_C::ServiceStartPushPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ServiceStartPushPmd_C)
}

void ServiceStartPushPmd_C::InitAsDefaultInstance() {
}

ServiceStartPushPmd_C::ServiceStartPushPmd_C(const ServiceStartPushPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ServiceStartPushPmd_C)
}

void ServiceStartPushPmd_C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceStartPushPmd_C::~ServiceStartPushPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.ServiceStartPushPmd_C)
  SharedDtor();
}

void ServiceStartPushPmd_C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServiceStartPushPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceStartPushPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceStartPushPmd_C_descriptor_;
}

const ServiceStartPushPmd_C& ServiceStartPushPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pushpmd_2eproto();
  return *default_instance_;
}

ServiceStartPushPmd_C* ServiceStartPushPmd_C::default_instance_ = NULL;

ServiceStartPushPmd_C* ServiceStartPushPmd_C::New() const {
  return new ServiceStartPushPmd_C;
}

void ServiceStartPushPmd_C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceStartPushPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ServiceStartPushPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ServiceStartPushPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ServiceStartPushPmd_C)
  return false;
#undef DO_
}

void ServiceStartPushPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ServiceStartPushPmd_C)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ServiceStartPushPmd_C)
}

::google::protobuf::uint8* ServiceStartPushPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ServiceStartPushPmd_C)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ServiceStartPushPmd_C)
  return target;
}

int ServiceStartPushPmd_C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceStartPushPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceStartPushPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceStartPushPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceStartPushPmd_C::MergeFrom(const ServiceStartPushPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceStartPushPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceStartPushPmd_C::CopyFrom(const ServiceStartPushPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceStartPushPmd_C::IsInitialized() const {

  return true;
}

void ServiceStartPushPmd_C::Swap(ServiceStartPushPmd_C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServiceStartPushPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceStartPushPmd_C_descriptor_;
  metadata.reflection = ServiceStartPushPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ServiceExitPushPmd_C::ServiceExitPushPmd_C()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.ServiceExitPushPmd_C)
}

void ServiceExitPushPmd_C::InitAsDefaultInstance() {
}

ServiceExitPushPmd_C::ServiceExitPushPmd_C(const ServiceExitPushPmd_C& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.ServiceExitPushPmd_C)
}

void ServiceExitPushPmd_C::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ServiceExitPushPmd_C::~ServiceExitPushPmd_C() {
  // @@protoc_insertion_point(destructor:Pmd.ServiceExitPushPmd_C)
  SharedDtor();
}

void ServiceExitPushPmd_C::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServiceExitPushPmd_C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceExitPushPmd_C::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceExitPushPmd_C_descriptor_;
}

const ServiceExitPushPmd_C& ServiceExitPushPmd_C::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pushpmd_2eproto();
  return *default_instance_;
}

ServiceExitPushPmd_C* ServiceExitPushPmd_C::default_instance_ = NULL;

ServiceExitPushPmd_C* ServiceExitPushPmd_C::New() const {
  return new ServiceExitPushPmd_C;
}

void ServiceExitPushPmd_C::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ServiceExitPushPmd_C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.ServiceExitPushPmd_C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.ServiceExitPushPmd_C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.ServiceExitPushPmd_C)
  return false;
#undef DO_
}

void ServiceExitPushPmd_C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.ServiceExitPushPmd_C)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.ServiceExitPushPmd_C)
}

::google::protobuf::uint8* ServiceExitPushPmd_C::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.ServiceExitPushPmd_C)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.ServiceExitPushPmd_C)
  return target;
}

int ServiceExitPushPmd_C::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceExitPushPmd_C::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ServiceExitPushPmd_C* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ServiceExitPushPmd_C*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ServiceExitPushPmd_C::MergeFrom(const ServiceExitPushPmd_C& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ServiceExitPushPmd_C::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceExitPushPmd_C::CopyFrom(const ServiceExitPushPmd_C& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceExitPushPmd_C::IsInitialized() const {

  return true;
}

void ServiceExitPushPmd_C::Swap(ServiceExitPushPmd_C* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ServiceExitPushPmd_C::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceExitPushPmd_C_descriptor_;
  metadata.reflection = ServiceExitPushPmd_C_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NotifyMessagePushPmd_S::kTypeFieldNumber;
const int NotifyMessagePushPmd_S::kInfoFieldNumber;
#endif  // !_MSC_VER

NotifyMessagePushPmd_S::NotifyMessagePushPmd_S()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pmd.NotifyMessagePushPmd_S)
}

void NotifyMessagePushPmd_S::InitAsDefaultInstance() {
}

NotifyMessagePushPmd_S::NotifyMessagePushPmd_S(const NotifyMessagePushPmd_S& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pmd.NotifyMessagePushPmd_S)
}

void NotifyMessagePushPmd_S::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0u;
  info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NotifyMessagePushPmd_S::~NotifyMessagePushPmd_S() {
  // @@protoc_insertion_point(destructor:Pmd.NotifyMessagePushPmd_S)
  SharedDtor();
}

void NotifyMessagePushPmd_S::SharedDtor() {
  if (info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete info_;
  }
  if (this != default_instance_) {
  }
}

void NotifyMessagePushPmd_S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyMessagePushPmd_S::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyMessagePushPmd_S_descriptor_;
}

const NotifyMessagePushPmd_S& NotifyMessagePushPmd_S::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_pushpmd_2eproto();
  return *default_instance_;
}

NotifyMessagePushPmd_S* NotifyMessagePushPmd_S::default_instance_ = NULL;

NotifyMessagePushPmd_S* NotifyMessagePushPmd_S::New() const {
  return new NotifyMessagePushPmd_S;
}

void NotifyMessagePushPmd_S::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0u;
    if (has_info()) {
      if (info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        info_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NotifyMessagePushPmd_S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pmd.NotifyMessagePushPmd_S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_info;
        break;
      }

      // optional string info = 2;
      case 2: {
        if (tag == 18) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->info().data(), this->info().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "info");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pmd.NotifyMessagePushPmd_S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pmd.NotifyMessagePushPmd_S)
  return false;
#undef DO_
}

void NotifyMessagePushPmd_S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pmd.NotifyMessagePushPmd_S)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional string info = 2;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->info(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Pmd.NotifyMessagePushPmd_S)
}

::google::protobuf::uint8* NotifyMessagePushPmd_S::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pmd.NotifyMessagePushPmd_S)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional string info = 2;
  if (has_info()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->info().data(), this->info().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->info(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pmd.NotifyMessagePushPmd_S)
  return target;
}

int NotifyMessagePushPmd_S::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional string info = 2;
    if (has_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->info());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyMessagePushPmd_S::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NotifyMessagePushPmd_S* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NotifyMessagePushPmd_S*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NotifyMessagePushPmd_S::MergeFrom(const NotifyMessagePushPmd_S& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_info()) {
      set_info(from.info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NotifyMessagePushPmd_S::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyMessagePushPmd_S::CopyFrom(const NotifyMessagePushPmd_S& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyMessagePushPmd_S::IsInitialized() const {

  return true;
}

void NotifyMessagePushPmd_S::Swap(NotifyMessagePushPmd_S* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(info_, other->info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NotifyMessagePushPmd_S::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyMessagePushPmd_S_descriptor_;
  metadata.reflection = NotifyMessagePushPmd_S_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pmd

// @@protoc_insertion_point(global_scope)
