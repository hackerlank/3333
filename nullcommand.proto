package Pmd;

message Null
{
	enum Param
	{
		ForwardNullUserPmd_CS 		= 0;
		TickRequestNullUserPmd_CS	= 1;
		TickReturnNullUserPmd_CS	= 2;
		RequestCloseNullUserPmd_CS	= 3;
		FrameHeaderNullUserPmd_CS	= 4;
		CheckVersionUserPmd_CS		= 5;
		ForwardBwNullUserPmd_CS		= 6;
		SetTickTimeoutNullUserPmd_CS	= 7;
		MaxDefualtNullUserPmd		= 15;//这里为了节省流量,特殊处理系,15以下为系统用,以上也可以被应用层使用
		StartFrameSyncNullUserPmd_CS	= 16;
		BroadListFrameSyncNullUserPmd_S	= 17;
		RequestUpFrameSyncNullUserPmd_C	= 18;
		HistoryListFrameSyncNullUserPmd_S= 19;
		StopFrameSyncNullUserPmd_SC	= 20;
	}
}

enum FrameHeader
{
	Bitmask_None 				= 0x00;
	Bitmask_Compress			= 0x01;	// 压缩
	Bitmask_Encrypt				= 0x02;	// 加密
	Bitmask_Header				= 0x04;	// 嵌套消息头
}
message ForwardNullUserPmd_CS
{
	optional uint32 byCmd		= 1;
	optional uint32 byParam		= 2;
	optional uint32 time		= 3;	// client use
	optional uint64 fid			= 4;	// server used for forward
	optional bytes data			= 5;	// data
	optional uint64 prototype	= 6;	// 0:proto,1:json,2:http
	optional uint32 bitmask		= 7;	// FrameHeader位枚举
}

message TickRequestNullUserPmd_CS
{
	required uint32 requesttime	= 1;
}

message SetTickTimeoutNullUserPmd_CS
{
	required uint32 sec	= 1;
}
message TickReturnNullUserPmd_CS
{
	optional uint32 requesttime	= 1;
	optional uint32 mytime		= 2;
}

message RequestCloseNullUserPmd_CS
{
	required string reason	= 1;
}

// websocket帧头
message FrameHeaderNullUserPmd_CS
{
	required uint32 bitmask		= 1;	// FrameHeader位枚举
	required bytes data			= 2;
}

// websocket帧头
message CheckVersionUserPmd_CS
{
	optional uint32 versionserver		= 1;
	optional uint32 versionclient		= 2;
}

message ForwardBwNullUserPmd_CS
{
	optional bytes data		= 3;
}
message FrameSyncData{
	optional uint64 tempid		= 1;//房间内临时用户编号,也可以是accountid,但是为了后期后话流量,可以选择用更小的id
	optional string data		= 2;
}

 
message MaxDefualtNullUserPmd
{
}
//帧同步启动
message StartFrameSyncNullUserPmd_CS
{
	optional uint32 msec			= 1;//频率,毫毛,1000/msec=帧率
	optional uint32 randseed		= 2;//随机种子
	optional string initdata			= 3;//起始数据
	optional uint64 roomid			= 4;//如果填了这个,表示帧同步数据可以通过网关转发,而不用经过unilight,提高ping值
}
//帧同步下发
message BroadListFrameSyncNullUserPmd_S
{
	optional uint32 framenum		= 1;//当前帧计数
	repeated FrameSyncData datalist		= 2;
}
//帧同步上行
message RequestUpFrameSyncNullUserPmd_C
{
	optional string data			= 1;
}
message HistoryFrameSyncData{
	optional uint32 framenum		= 1;//当前帧计数
	repeated FrameSyncData datalist		= 2;
}
//帧同步历史列表
message HistoryListFrameSyncNullUserPmd_S
{
	repeated HistoryFrameSyncData datalist	= 1;
}
//帧同步结束,上发结算消息
message StopFrameSyncNullUserPmd_SC
{
	optional string resultdata		= 1;//结算数据
}
