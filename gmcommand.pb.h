// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gmcommand.proto

#ifndef PROTOBUF_gmcommand_2eproto__INCLUDED
#define PROTOBUF_gmcommand_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "pmd.pb.h"
// @@protoc_insertion_point(includes)

namespace Pmd {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gmcommand_2eproto();
void protobuf_AssignDesc_gmcommand_2eproto();
void protobuf_ShutdownFile_gmcommand_2eproto();

class Gm;
class RequestExecGmCommandGmPmd_SC;
class RequestGameZoneErrorGmPmd_S;
class RequestHotRestartGmUserPmd_CS;
class RequesetScriptUpdateGmUserPmd_CS;
class RequesetRefreshGatewaylistGmUserPmd_CS;
class RequestGenerateCodeGmUserPmd_C;
class ReturnGenerateCodeGmUserPmd_S;
class RequestOpeartorCodeGmUserPmd_C;
class CodeInfo;
class ReturnOpreatorCodeGmUserPmd_S;
class OrderInfo;
class GameOrderListGmUserPmd_CS;
class QueryPackageCodeGmUserPmd_CS;
class RequestUsePackageCodeGmUserPmd_CS;
class FeedbackData;
class FeedbackGmUserPmd_CS;
class RequestFeedbackListGmUserPmd_C;
class RequestDealFeedbackGmUserPmd_CS;
class PointReportData;
class RequestPointReportGmUserPmd_CS;
class PointDetailData;
class RequestPointDetailGmUserPmd_CS;
class BettingDetailData;
class RequestBettingDetailGmUserPmd_CS;
class StockData;
class RequestStockInfoGmUserPmd_CS;
class RequestOnlineUserInfoGmUserPmd_CS;
class RedPacketsInfo;
class RequestRedPacketsGmUserPmd_CS;
class SubgameList;
class RequestedSubgameListGmUserPmd_CS;
class WinLoseInfo;
class RequestWinningListGmUserPmd_CS;
class BlackWhitelistInfo;
class AddBlackWhitelistGmUserPmd_CS;
class ModBlackWhitelistGmUserPmd_CS;
class DelBlackWhitelistGmUserPmd_CS;
class RequestBlackWhitelistGmUserPmd_CS;
class GmMailInfo;
class RequestSendMailGmUserPmd_CS;
class LoginRecordData;
class RequestLoginRecordGmUserPmd_CS;
class ConsumeRecordData;
class RequestConsumeRecordGmUserPmd_CS;
class ActionRecordData;
class RequestActionRecordGmUserPmd_CS;
class StrengthenRecordData;
class RequestStrengthenRecordGmUserPmd_CS;
class MailRecordData;
class RequestMailRecordGmUserPmd_CS;
class RankRecordData;
class RequestRankRecordGmUserPmd_CS;
class BossRecordData;
class RequestBossRecordGmUserPmd_CS;
class RenameRecordData;
class RequestRenameRecordGmUserPmd_CS;
class StartUpGameRequestGmPmd_C;
class StartUpGameReturnGmPmd_S;
class SurportGameZoneRequestGmPmd_C;
class SurportGameZoneReturnGmPmd_S;
class ReconnectKickoutGmSmd_S;
class GmUserInfo;
class RequestLoginGmUserPmd_C;
class ReturnLoginGmUserPmd_S;
class SetPasswordGmUserPmd_CS;
class AddNewGmUserPmd_CS;
class GmAccountListGmUserPmd_CS;
class RequestDelGmUserPmd_CS;
class RequestModifyPriGmUserPmd_CS;
class SelectGamezoneGmUserPmd_SC;
class BroadcastInfo;
class BroadcastNewGmUserPmd_C;
class ReturnBroadcastNewGmUserPmd_S;
class BroadcastDeleteGmUserPmd_C;
class ReturnBroadcastDeleteGmUserPmd_S;
class RequestBroadcastListGmUserPmd_C;
class ReturnBroadcastListGmUserPmd_S;
class PunishUserInfo;
class PunishUserGmUserPmd_C;
class ReturnPunishUserGmUserPmd_S;
class DeletePunishUserGmUserPmd_C;
class ReturnDeletePunishUserGmUserPmd_S;
class RequestPunishListGmUserPmd_C;
class ReturnPunishListGmUserPmd_S;
class ItemInfo;
class ItemTypeInfo;
class RequestItemTypeInfoGmUserPmd_CS;
class UserInfo;
class RequestUserInfoGmUserPmd_C;
class ReturnUserInfoGmUserPmd_S;
class RequestUserPackageGmUserPmd_C;
class ReturnUserPackageGmUserPmd_S;
class RequestModifyUserInfoGmUserPmd_C;
class ReturnModifyUserInfoGmUserPmd_S;
class RequestUserRecordGmUserPmd_C;
class RecordInfo;
class ReturnUserRecordGmUserPmd_S;
class QuestionBaseData;
class ForbidAccountData;
class stRequestLoginGmUserCmd;
class stReturnLoginGmUserCmd;
class stConfigGmUserCmd;
class stSetPasswordGmUserCmd;
class stReturnPasswordGmUserCmd;
class stAddNewGmUserCmd;
class stReturnAddNewGmUserCmd;
class stQueryListGmUserCmd;
class stReturnListGmUserCmd;
class stReturnListGmUserCmd_Data;
class stRequestZoneConfigGmUserCmd;
class stReturnZoneDicCountryGmUserCmd;
class stReturnZoneDicCountryGmUserCmd_Data;
class stReturnZoneDicMapGmUserCmd;
class stReturnZoneDicMapGmUserCmd_Data;
class stForwardToAllGmUserCmd;
class stForwardToOnlyGmUserCmd;
class stBroadcastNewGmUserCmd;
class stBroadcastDeleteGmUserCmd;
class stBroadcastRequestGmUserCmd;
class stRequestTimeGmUserCmd;
class stReturnTimeGmUserCmd;
class stServerShutdownGmUserCmd;
class stRequestZoneDicGmUserCmd;
class stReturnZoneDicGmUserCmd;
class stReturnZoneDicGmUserCmd_Data;
class stAddChatConfigGmUserCmd;
class stCancelChatConfigGmUserCmd;
class stRequestChatTypesGmUserCmd;
class stReturnChatTypesGmUserCmd;
class stReturnChatTypesGmUserCmd_Data;
class stServerStartupGmUserCmd;
class stNotifyShutdownGmUserCmd;
class stCancelShutdownGmUserCmd;
class stGmServerMessageGmUserCmd;
class stRequestDelGmUserGmUserCmd;
class stRequestResetGmUserPasswordGmUserCmd;
class stQequestShutDownGmUserCmd;
class stRequestForbidAccountGmUserCmd;
class stQueryForbidAccountGmUserCmd;
class stReturnForbidAccountListGmUserCmd;
class stRequestUnForbidAccountGmUserCmd;
class stBroadcastDeleteZoneGmUserCmd;
class stRequestNameAccountGmUserCmd;
class stReturnNameAccountGmUserCmd;
class stRequestDBConnectionConfigGmUserCmd;
class stReturnDBConnectionConfigGmUserCmd;
class stQueryNameExistGmUserCmd;
class stForceInsertNameGmUserCmd;
class stForceModifyNameGmUserCmd;
class stCheckOnlineGmUserCmd;
class stReturnCheckOnlineGmUserCmd;
class stPunishUserGmUserCmd;
class stRequestUserPosUserGmUserCmd;
class stReturnUserPosUserGmUserCmd;
class stReturnUserPosUserGmUserCmd_Data;
class stEndUserPosUserGmUserCmd;
class stBroadcastReallySendGmUserCmd;
class stDBQueryGmUserCmd;
class stDBReturnDataGmUserCmd;
class stDBReturnEndGmUserCmd;
class stFullForbidAccountLogDataGmUserCmd;
class stFullGameGmCmdLogDataGmUserCmd;
class stRequestAddQuestionGmUserCmd;
class stReturnQuestionGmUserCmd;
class stSequenceQuestionGmUserCmd;
class stDeleteQuestionGmUserCmd;
class stRequestQuestionGmUserCmd;
class stRequestSeqQuestionGmUserCmd;
class stReturnNoneQuestionGmUserCmd;
class stUserCmdForwardGmUserCmd;
class stProcessQuestionGmUserCmd;
class stGMToolBeginQuestionGmUserCmd;
class stGMToolEndQuestionGmUserCmd;
class stDisableGMChatInputGmUserCmd;
class stDeleteQuestionByGmUserCmd;
class stQuestionOverGmUserCmd;
class stQueryQuestionLimitGmUserCmd;
class stReturnQuestionLimitGmUserCmd;
class stResetQuestionLimitGmUserCmd;
class stBroadcastToWorldGmUserCmd;
class stSetActivityNoteGmUserCmd;
class stRequestRefreshUserQuestionGmUserCmd;
class stRequestSetUserGoldInGmUserCmd;
class stSetPrivilegesGmUserCmd;
class stRequestSaveChatGmUserCmd;
class stGameClientMessageBoxGmUserCmd;
class stGameClientChatMessageGMUserCmd;
class stRequestGameClientMessageConfigGmUserCmd;
class stReturnGameClientMessageConfigGmUserCmd;
class stPlayerSatisfactionGmUserCmd;
class stRequestMyQuestionGmUserCmd;
class stRequestQuestionSubmitableGmUserCmd;
class stVerifyOnlineQaGmUserCmd;
class stNewGameClientMessageBoxGmUserCmd;
class stRequestPreProcessQuestionGmUserCmd;
class stReturnPreProcessQuestionGmUserCmd;
class stReturnNowPreProcessQusetGmUserCmd;
class stDeleteProcessedQuestionGmUserCmd;
class stRequestOneQuestionGmUserCmd;
class stReturnOneQuestionGmUserCmd;
class stRequestResetGmWorkStateGmUserCmd;
class stReturnResetGmWorkStateGmUserCmd;
class stGmCommandUserCmd;
class stGmCommandToSceneUserCmd;
class stForceChangeSexGmUserCmd;
class stRequestMobileInfoGmUserCmd;

enum Gm_Param {
  Gm_Param_StartUpGameRequestGmPmd_C = 1,
  Gm_Param_StartUpGameReturnGmPmd_S = 2,
  Gm_Param_SurportGameZoneRequestGmPmd_C = 3,
  Gm_Param_SurportGameZoneReturnGmPmd_S = 4,
  Gm_Param_ReconnectKickoutGmSmd_S = 5,
  Gm_Param_RequestLoginGmUserPmd_C = 6,
  Gm_Param_ReturnLoginGmUserPmd_S = 7,
  Gm_Param_SetPasswordGmUserPmd_CS = 8,
  Gm_Param_AddNewGmUserPmd_CS = 9,
  Gm_Param_RequestDelGmUserPmd_CS = 10,
  Gm_Param_RequestModifyPriGmUserPmd_CS = 11,
  Gm_Param_BroadcastNewGmUserPmd_C = 18,
  Gm_Param_ReturnBroadcastNewGmUserPmd_S = 19,
  Gm_Param_BroadcastDeleteGmUserPmd_C = 20,
  Gm_Param_ReturnBroadcastDeleteGmUserPmd_S = 21,
  Gm_Param_RequestBroadcastListGmUserPmd_C = 22,
  Gm_Param_ReturnBroadcastListGmUserPmd_S = 23,
  Gm_Param_PunishUserGmUserPmd_C = 24,
  Gm_Param_ReturnPunishUserGmUserPmd_S = 25,
  Gm_Param_DeletePunishUserGmUserPmd_C = 26,
  Gm_Param_ReturnDeletePunishUserGmUserPmd_S = 27,
  Gm_Param_RequestPunishListGmUserPmd_C = 28,
  Gm_Param_ReturnPunishListGmUserPmd_S = 29,
  Gm_Param_RequestItemTypeInfoGmUserPmd_CS = 30,
  Gm_Param_RequestUserInfoGmUserPmd_C = 35,
  Gm_Param_ReturnUserInfoGmUserPmd_S = 36,
  Gm_Param_RequestModifyUserInfoGmUserPmd_C = 37,
  Gm_Param_ReturnModifyUserInfoGmUserPmd_S = 38,
  Gm_Param_RequestUserPackageGmUserPmd_C = 39,
  Gm_Param_ReturnUserPackageGmUserPmd_S = 40,
  Gm_Param_RequestUserRecordGmUserPmd_C = 41,
  Gm_Param_ReturnUserRecordGmUserPmd_S = 42,
  Gm_Param_RequestExecGmCommandGmPmd_SC = 43,
  Gm_Param_RequestGameZoneErrorGmPmd_S = 44,
  Gm_Param_RequestHotRestartGmUserPmd_CS = 50,
  Gm_Param_RequesetScriptUpdateGmUserPmd_CS = 51,
  Gm_Param_RequesetRefreshGatewaylistGmUserPmd_CS = 52,
  Gm_Param_RequestGenerateCodeGmUserPmd_C = 55,
  Gm_Param_ReturnGenerateCodeGmUserPmd_S = 56,
  Gm_Param_RequestOpeartorCodeGmUserPmd_C = 57,
  Gm_Param_ReturnOpreatorCodeGmUserPmd_S = 58,
  Gm_Param_GameOrderListGmUserPmd_CS = 59,
  Gm_Param_QueryPackageCodeGmUserPmd_CS = 60,
  Gm_Param_RequestUsePackageCodeGmUserPmd_CS = 61,
  Gm_Param_FeedbackGmUserPmd_CS = 62,
  Gm_Param_RequestFeedbackListGmUserPmd_C = 63,
  Gm_Param_RequestPointReportGmUserPmd_CS = 64,
  Gm_Param_RequestPointDetailGmUserPmd_CS = 65,
  Gm_Param_RequestBettingDetailGmUserPmd_CS = 66,
  Gm_Param_RequestStockInfoGmUserPmd_CS = 67,
  Gm_Param_RequestRedPacketsGmUserPmd_CS = 69,
  Gm_Param_RequestedSubgameListGmUserPmd_CS = 70,
  Gm_Param_RequestOnlineUserInfoGmUserPmd_CS = 71,
  Gm_Param_RequestWinningListGmUserPmd_CS = 72,
  Gm_Param_RequestDealFeedbackGmUserPmd_CS = 73,
  Gm_Param_AddBlackWhitelistGmUserPmd_CS = 74,
  Gm_Param_ModBlackWhitelistGmUserPmd_CS = 75,
  Gm_Param_DelBlackWhitelistGmUserPmd_CS = 76,
  Gm_Param_RequestBlackWhitelistGmUserPmd_CS = 77,
  Gm_Param_RequestSendMailGmUserPmd_CS = 78,
  Gm_Param_RequestLoginRecordGmUserPmd_CS = 79,
  Gm_Param_RequestConsumeRecordGmUserPmd_CS = 80,
  Gm_Param_RequestActionRecordGmUserPmd_CS = 81,
  Gm_Param_RequestStrengthenRecordGmUserPmd_CS = 82,
  Gm_Param_RequestMailRecordGmUserPmd_CS = 83,
  Gm_Param_RequestRankRecordGmUserPmd_CS = 84,
  Gm_Param_RequestBossRecordGmUserPmd_CS = 85,
  Gm_Param_RequestRenameRecordGmUserPmd_CS = 86,
  Gm_Param_stRequestLoginGmUserCmd = 105,
  Gm_Param_stReturnLoginGmUserCmd = 106,
  Gm_Param_stConfigGmUserCmd = 107,
  Gm_Param_stSetPasswordGmUserCmd = 108,
  Gm_Param_stReturnPasswordGmUserCmd = 109,
  Gm_Param_stAddNewGmUserCmd = 110,
  Gm_Param_stReturnAddNewGmUserCmd = 111,
  Gm_Param_stQueryListGmUserCmd = 112,
  Gm_Param_stReturnListGmUserCmd = 113,
  Gm_Param_stRequestZoneConfigGmUserCmd = 114,
  Gm_Param_stReturnZoneDicCountryGmUserCmd = 115,
  Gm_Param_stReturnZoneDicMapGmUserCmd = 116,
  Gm_Param_stForwardToAllGmUserCmd = 117,
  Gm_Param_stForwardToOnlyGmUserCmd = 118,
  Gm_Param_stBroadcastNewGmUserCmd = 119,
  Gm_Param_stBroadcastDeleteGmUserCmd = 120,
  Gm_Param_stBroadcastRequestGmUserCmd = 121,
  Gm_Param_stRequestTimeGmUserCmd = 122,
  Gm_Param_stReturnTimeGmUserCmd = 123,
  Gm_Param_stServerShutdownGmUserCmd = 124,
  Gm_Param_stRequestZoneDicGmUserCmd = 125,
  Gm_Param_stReturnZoneDicGmUserCmd = 126,
  Gm_Param_stAddChatConfigGmUserCmd = 127,
  Gm_Param_stCancelChatConfigGmUserCmd = 128,
  Gm_Param_stRequestChatTypesGmUserCmd = 129,
  Gm_Param_stReturnChatTypesGmUserCmd = 130,
  Gm_Param_stServerStartupGmUserCmd = 131,
  Gm_Param_stNotifyShutdownGmUserCmd = 132,
  Gm_Param_stCancelShutdownGmUserCmd = 133,
  Gm_Param_stGmServerMessageGmUserCmd = 134,
  Gm_Param_stRequestDelGmUserGmUserCmd = 135,
  Gm_Param_stRequestResetGmUserPasswordGmUserCmd = 136,
  Gm_Param_stQequestShutDownGmUserCmd = 137,
  Gm_Param_stRequestForbidAccountGmUserCmd = 138,
  Gm_Param_stQueryForbidAccountGmUserCmd = 139,
  Gm_Param_stReturnForbidAccountListGmUserCmd = 140,
  Gm_Param_stRequestUnForbidAccountGmUserCmd = 141,
  Gm_Param_stBroadcastDeleteZoneGmUserCmd = 142,
  Gm_Param_stRequestNameAccountGmUserCmd = 143,
  Gm_Param_stReturnNameAccountGmUserCmd = 144,
  Gm_Param_stRequestDBConnectionConfigGmUserCmd = 145,
  Gm_Param_stReturnDBConnectionConfigGmUserCmd = 146,
  Gm_Param_stQueryNameExistGmUserCmd = 147,
  Gm_Param_stForceInsertNameGmUserCmd = 148,
  Gm_Param_stForceModifyNameGmUserCmd = 149,
  Gm_Param_stCheckOnlineGmUserCmd = 150,
  Gm_Param_stReturnCheckOnlineGmUserCmd = 151,
  Gm_Param_stPunishUserGmUserCmd = 152,
  Gm_Param_stRequestUserPosUserGmUserCmd = 153,
  Gm_Param_stReturnUserPosUserGmUserCmd = 154,
  Gm_Param_stEndUserPosUserGmUserCmd = 155,
  Gm_Param_stBroadcastReallySendGmUserCmd = 156,
  Gm_Param_stDBQueryGmUserCmd = 157,
  Gm_Param_stDBReturnDataGmUserCmd = 158,
  Gm_Param_stDBReturnEndGmUserCmd = 159,
  Gm_Param_stFullForbidAccountLogDataGmUserCmd = 160,
  Gm_Param_stFullGameGmCmdLogDataGmUserCmd = 161,
  Gm_Param_stRequestAddQuestionGmUserCmd = 162,
  Gm_Param_stReturnQuestionGmUserCmd = 163,
  Gm_Param_stSequenceQuestionGmUserCmd = 164,
  Gm_Param_stDeleteQuestionGmUserCmd = 165,
  Gm_Param_stRequestQuestionGmUserCmd = 166,
  Gm_Param_stRequestSeqQuestionGmUserCmd = 167,
  Gm_Param_stReturnNoneQuestionGmUserCmd = 168,
  Gm_Param_stUserCmdForwardGmUserCmd = 169,
  Gm_Param_stProcessQuestionGmUserCmd = 170,
  Gm_Param_stGMToolBeginQuestionGmUserCmd = 171,
  Gm_Param_stGMToolEndQuestionGmUserCmd = 172,
  Gm_Param_stDisableGMChatInputGmUserCmd = 173,
  Gm_Param_stQuestionOverGmUserCmd = 174,
  Gm_Param_stQueryQuestionLimitGmUserCmd = 175,
  Gm_Param_stReturnQuestionLimitGmUserCmd = 176,
  Gm_Param_stResetQuestionLimitGmUserCmd = 177,
  Gm_Param_stBroadcastToWorldGmUserCmd = 178,
  Gm_Param_stSetActivityNoteGmUserCmd = 179,
  Gm_Param_stRequestRefreshUserQuestionGmUserCmd = 180,
  Gm_Param_stRequestSetUserGoldInGmUserCmd = 181,
  Gm_Param_stSetPrivilegesGmUserCmd = 182,
  Gm_Param_stRequestSaveChatGmUserCmd = 183,
  Gm_Param_stGameClientMessageBoxGmUserCmd = 184,
  Gm_Param_stGameClientChatMessageGMUserCmd = 185,
  Gm_Param_stRequestGameClientMessageConfigGmUserCmd = 186,
  Gm_Param_stReturnGameClientMessageConfigGmUserCmd = 187,
  Gm_Param_stPlayerSatisfactionGmUserCmd = 188,
  Gm_Param_stRequestMyQuestionGmUserCmd = 189,
  Gm_Param_stRequestQuestionSubmitableGmUserCmd = 190,
  Gm_Param_stVerifyOnlineQaGmUserCmd = 191,
  Gm_Param_stRequestPreProcessQuestionGmUserCmd = 192,
  Gm_Param_stReturnPreProcessQuestionGmUserCmd = 193,
  Gm_Param_stReturnNowPreProcessQusetGmUserCmd = 194,
  Gm_Param_stDeleteProcessedQuestionGmUserCmd = 195,
  Gm_Param_stRequestOneQuestionGmUserCmd = 196,
  Gm_Param_stReturnOneQuestionGmUserCmd = 197,
  Gm_Param_stRequestResetGmWorkStateGmUserCmd = 198,
  Gm_Param_stReturnResetGmWorkStateGmUserCmd = 199,
  Gm_Param_stGmCommandUserCmd = 200,
  Gm_Param_stGmCommandToSceneUserCmd = 201,
  Gm_Param_stForceChangeSexGmUserCmd = 202,
  Gm_Param_stRequestMobileInfoGmUserCmd = 203,
  Gm_Param_stDeleteQuestionByGmUserCmd = 204,
  Gm_Param_stNewGameClientMessageBoxGmUserCmd = 205
};
bool Gm_Param_IsValid(int value);
const Gm_Param Gm_Param_Param_MIN = Gm_Param_StartUpGameRequestGmPmd_C;
const Gm_Param Gm_Param_Param_MAX = Gm_Param_stNewGameClientMessageBoxGmUserCmd;
const int Gm_Param_Param_ARRAYSIZE = Gm_Param_Param_MAX + 1;

const ::google::protobuf::EnumDescriptor* Gm_Param_descriptor();
inline const ::std::string& Gm_Param_Name(Gm_Param value) {
  return ::google::protobuf::internal::NameOfEnum(
    Gm_Param_descriptor(), value);
}
inline bool Gm_Param_Parse(
    const ::std::string& name, Gm_Param* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Gm_Param>(
    Gm_Param_descriptor(), name, value);
}
enum ForbidAccountData_ForbidType {
  ForbidAccountData_ForbidType_ForbidType_AllZone = 0,
  ForbidAccountData_ForbidType_ForbidType_CurrentZone = 1
};
bool ForbidAccountData_ForbidType_IsValid(int value);
const ForbidAccountData_ForbidType ForbidAccountData_ForbidType_ForbidType_MIN = ForbidAccountData_ForbidType_ForbidType_AllZone;
const ForbidAccountData_ForbidType ForbidAccountData_ForbidType_ForbidType_MAX = ForbidAccountData_ForbidType_ForbidType_CurrentZone;
const int ForbidAccountData_ForbidType_ForbidType_ARRAYSIZE = ForbidAccountData_ForbidType_ForbidType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ForbidAccountData_ForbidType_descriptor();
inline const ::std::string& ForbidAccountData_ForbidType_Name(ForbidAccountData_ForbidType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ForbidAccountData_ForbidType_descriptor(), value);
}
inline bool ForbidAccountData_ForbidType_Parse(
    const ::std::string& name, ForbidAccountData_ForbidType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ForbidAccountData_ForbidType>(
    ForbidAccountData_ForbidType_descriptor(), name, value);
}
enum GMToolRightKey {
  RightKey_Login = 1,
  RightKey_AccountManage = 2,
  RightKey_Broadcast = 4,
  RightKey_ChatMonitor = 8,
  RightKey_ShutDownNotify = 16,
  RightKey_Punish = 32,
  RightKey_PlayerInfo = 64,
  RightKey_LogQuery = 128,
  RightKey_OnlineQA = 256,
  RightKey_ProductionCenter = 512,
  RightKey_Namecontrol = 1024,
  RightKey_SetRecvQuestion = 2048,
  RightKey_NewVersion = 4096,
  RightKey_GMCommand = 8192
};
bool GMToolRightKey_IsValid(int value);
const GMToolRightKey GMToolRightKey_MIN = RightKey_Login;
const GMToolRightKey GMToolRightKey_MAX = RightKey_GMCommand;
const int GMToolRightKey_ARRAYSIZE = GMToolRightKey_MAX + 1;

const ::google::protobuf::EnumDescriptor* GMToolRightKey_descriptor();
inline const ::std::string& GMToolRightKey_Name(GMToolRightKey value) {
  return ::google::protobuf::internal::NameOfEnum(
    GMToolRightKey_descriptor(), value);
}
inline bool GMToolRightKey_Parse(
    const ::std::string& name, GMToolRightKey* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GMToolRightKey>(
    GMToolRightKey_descriptor(), name, value);
}
enum GMOptKey {
  AccountNone = 0,
  AccountCreate = 1,
  AccountDelete = 2,
  AccountPasswordModify = 3,
  AccountPriModify = 4
};
bool GMOptKey_IsValid(int value);
const GMOptKey GMOptKey_MIN = AccountNone;
const GMOptKey GMOptKey_MAX = AccountPriModify;
const int GMOptKey_ARRAYSIZE = GMOptKey_MAX + 1;

const ::google::protobuf::EnumDescriptor* GMOptKey_descriptor();
inline const ::std::string& GMOptKey_Name(GMOptKey value) {
  return ::google::protobuf::internal::NameOfEnum(
    GMOptKey_descriptor(), value);
}
inline bool GMOptKey_Parse(
    const ::std::string& name, GMOptKey* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GMOptKey>(
    GMOptKey_descriptor(), name, value);
}
enum UserType {
  UserType_None = 0,
  UserType_VIP1 = 1,
  UserType_VIP2 = 2,
  UserType_VIP3 = 3
};
bool UserType_IsValid(int value);
const UserType UserType_MIN = UserType_None;
const UserType UserType_MAX = UserType_VIP3;
const int UserType_ARRAYSIZE = UserType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserType_descriptor();
inline const ::std::string& UserType_Name(UserType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserType_descriptor(), value);
}
inline bool UserType_Parse(
    const ::std::string& name, UserType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserType>(
    UserType_descriptor(), name, value);
}
enum ReturnLoginGmType {
  ReturnLoginGmType_OK = 0,
  ReturnLoginGmType_Error_Passwd = 1,
  ReturnLoginGmType_Error_NoUser = 2,
  ReturnLoginGmType_Error_None = 3,
  ReturnLoginGmType_Error_Using = 4,
  ReturnLoginGmType_Error_Version = 5,
  ReturnLoginGmType_End = 6
};
bool ReturnLoginGmType_IsValid(int value);
const ReturnLoginGmType ReturnLoginGmType_MIN = ReturnLoginGmType_OK;
const ReturnLoginGmType ReturnLoginGmType_MAX = ReturnLoginGmType_End;
const int ReturnLoginGmType_ARRAYSIZE = ReturnLoginGmType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReturnLoginGmType_descriptor();
inline const ::std::string& ReturnLoginGmType_Name(ReturnLoginGmType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReturnLoginGmType_descriptor(), value);
}
inline bool ReturnLoginGmType_Parse(
    const ::std::string& name, ReturnLoginGmType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReturnLoginGmType>(
    ReturnLoginGmType_descriptor(), name, value);
}
enum GmServerMessageType {
  GmServerMessageType_Info = 0,
  GmServerMessageType_Warning = 1,
  GmServerMessageType_Error = 2
};
bool GmServerMessageType_IsValid(int value);
const GmServerMessageType GmServerMessageType_MIN = GmServerMessageType_Info;
const GmServerMessageType GmServerMessageType_MAX = GmServerMessageType_Error;
const int GmServerMessageType_ARRAYSIZE = GmServerMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GmServerMessageType_descriptor();
inline const ::std::string& GmServerMessageType_Name(GmServerMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GmServerMessageType_descriptor(), value);
}
inline bool GmServerMessageType_Parse(
    const ::std::string& name, GmServerMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GmServerMessageType>(
    GmServerMessageType_descriptor(), name, value);
}
enum NameOperateType {
  NameOperateType_Rolename = 0,
  NameOperateType_Army = 1,
  NameOperateType_Corps = 2
};
bool NameOperateType_IsValid(int value);
const NameOperateType NameOperateType_MIN = NameOperateType_Rolename;
const NameOperateType NameOperateType_MAX = NameOperateType_Corps;
const int NameOperateType_ARRAYSIZE = NameOperateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NameOperateType_descriptor();
inline const ::std::string& NameOperateType_Name(NameOperateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NameOperateType_descriptor(), value);
}
inline bool NameOperateType_Parse(
    const ::std::string& name, NameOperateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NameOperateType>(
    NameOperateType_descriptor(), name, value);
}
enum dbtype {
  dbbyte = 1,
  dbushort = 2,
  dbuint = 3,
  dbvarstr4 = 8,
  dbfixstr_MAX_NAMESIZE = 9
};
bool dbtype_IsValid(int value);
const dbtype dbtype_MIN = dbbyte;
const dbtype dbtype_MAX = dbfixstr_MAX_NAMESIZE;
const int dbtype_ARRAYSIZE = dbtype_MAX + 1;

const ::google::protobuf::EnumDescriptor* dbtype_descriptor();
inline const ::std::string& dbtype_Name(dbtype value) {
  return ::google::protobuf::internal::NameOfEnum(
    dbtype_descriptor(), value);
}
inline bool dbtype_Parse(
    const ::std::string& name, dbtype* value) {
  return ::google::protobuf::internal::ParseNamedEnum<dbtype>(
    dbtype_descriptor(), name, value);
}
enum enumQuestionOver {
  enumQuestionOver_unknown = 0,
  enumQuestionOver_userDel = 1,
  enumQuestionOver_gmDel = 2,
  enumQuestionOver_gmProcess = 3,
  enumQuestionOver_gmPreProcess = 4
};
bool enumQuestionOver_IsValid(int value);
const enumQuestionOver enumQuestionOver_MIN = enumQuestionOver_unknown;
const enumQuestionOver enumQuestionOver_MAX = enumQuestionOver_gmPreProcess;
const int enumQuestionOver_ARRAYSIZE = enumQuestionOver_MAX + 1;

const ::google::protobuf::EnumDescriptor* enumQuestionOver_descriptor();
inline const ::std::string& enumQuestionOver_Name(enumQuestionOver value) {
  return ::google::protobuf::internal::NameOfEnum(
    enumQuestionOver_descriptor(), value);
}
inline bool enumQuestionOver_Parse(
    const ::std::string& name, enumQuestionOver* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enumQuestionOver>(
    enumQuestionOver_descriptor(), name, value);
}
enum GameClientMessageType {
  MessageType_Box = 0,
  MessageType_MiniSize = 1
};
bool GameClientMessageType_IsValid(int value);
const GameClientMessageType GameClientMessageType_MIN = MessageType_Box;
const GameClientMessageType GameClientMessageType_MAX = MessageType_MiniSize;
const int GameClientMessageType_ARRAYSIZE = GameClientMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GameClientMessageType_descriptor();
inline const ::std::string& GameClientMessageType_Name(GameClientMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GameClientMessageType_descriptor(), value);
}
inline bool GameClientMessageType_Parse(
    const ::std::string& name, GameClientMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GameClientMessageType>(
    GameClientMessageType_descriptor(), name, value);
}
// ===================================================================

class Gm : public ::google::protobuf::Message {
 public:
  Gm();
  virtual ~Gm();

  Gm(const Gm& from);

  inline Gm& operator=(const Gm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gm& default_instance();

  void Swap(Gm* other);

  // implements Message ----------------------------------------------

  Gm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gm& from);
  void MergeFrom(const Gm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Gm_Param Param;
  static const Param StartUpGameRequestGmPmd_C = Gm_Param_StartUpGameRequestGmPmd_C;
  static const Param StartUpGameReturnGmPmd_S = Gm_Param_StartUpGameReturnGmPmd_S;
  static const Param SurportGameZoneRequestGmPmd_C = Gm_Param_SurportGameZoneRequestGmPmd_C;
  static const Param SurportGameZoneReturnGmPmd_S = Gm_Param_SurportGameZoneReturnGmPmd_S;
  static const Param ReconnectKickoutGmSmd_S = Gm_Param_ReconnectKickoutGmSmd_S;
  static const Param RequestLoginGmUserPmd_C = Gm_Param_RequestLoginGmUserPmd_C;
  static const Param ReturnLoginGmUserPmd_S = Gm_Param_ReturnLoginGmUserPmd_S;
  static const Param SetPasswordGmUserPmd_CS = Gm_Param_SetPasswordGmUserPmd_CS;
  static const Param AddNewGmUserPmd_CS = Gm_Param_AddNewGmUserPmd_CS;
  static const Param RequestDelGmUserPmd_CS = Gm_Param_RequestDelGmUserPmd_CS;
  static const Param RequestModifyPriGmUserPmd_CS = Gm_Param_RequestModifyPriGmUserPmd_CS;
  static const Param BroadcastNewGmUserPmd_C = Gm_Param_BroadcastNewGmUserPmd_C;
  static const Param ReturnBroadcastNewGmUserPmd_S = Gm_Param_ReturnBroadcastNewGmUserPmd_S;
  static const Param BroadcastDeleteGmUserPmd_C = Gm_Param_BroadcastDeleteGmUserPmd_C;
  static const Param ReturnBroadcastDeleteGmUserPmd_S = Gm_Param_ReturnBroadcastDeleteGmUserPmd_S;
  static const Param RequestBroadcastListGmUserPmd_C = Gm_Param_RequestBroadcastListGmUserPmd_C;
  static const Param ReturnBroadcastListGmUserPmd_S = Gm_Param_ReturnBroadcastListGmUserPmd_S;
  static const Param PunishUserGmUserPmd_C = Gm_Param_PunishUserGmUserPmd_C;
  static const Param ReturnPunishUserGmUserPmd_S = Gm_Param_ReturnPunishUserGmUserPmd_S;
  static const Param DeletePunishUserGmUserPmd_C = Gm_Param_DeletePunishUserGmUserPmd_C;
  static const Param ReturnDeletePunishUserGmUserPmd_S = Gm_Param_ReturnDeletePunishUserGmUserPmd_S;
  static const Param RequestPunishListGmUserPmd_C = Gm_Param_RequestPunishListGmUserPmd_C;
  static const Param ReturnPunishListGmUserPmd_S = Gm_Param_ReturnPunishListGmUserPmd_S;
  static const Param RequestItemTypeInfoGmUserPmd_CS = Gm_Param_RequestItemTypeInfoGmUserPmd_CS;
  static const Param RequestUserInfoGmUserPmd_C = Gm_Param_RequestUserInfoGmUserPmd_C;
  static const Param ReturnUserInfoGmUserPmd_S = Gm_Param_ReturnUserInfoGmUserPmd_S;
  static const Param RequestModifyUserInfoGmUserPmd_C = Gm_Param_RequestModifyUserInfoGmUserPmd_C;
  static const Param ReturnModifyUserInfoGmUserPmd_S = Gm_Param_ReturnModifyUserInfoGmUserPmd_S;
  static const Param RequestUserPackageGmUserPmd_C = Gm_Param_RequestUserPackageGmUserPmd_C;
  static const Param ReturnUserPackageGmUserPmd_S = Gm_Param_ReturnUserPackageGmUserPmd_S;
  static const Param RequestUserRecordGmUserPmd_C = Gm_Param_RequestUserRecordGmUserPmd_C;
  static const Param ReturnUserRecordGmUserPmd_S = Gm_Param_ReturnUserRecordGmUserPmd_S;
  static const Param RequestExecGmCommandGmPmd_SC = Gm_Param_RequestExecGmCommandGmPmd_SC;
  static const Param RequestGameZoneErrorGmPmd_S = Gm_Param_RequestGameZoneErrorGmPmd_S;
  static const Param RequestHotRestartGmUserPmd_CS = Gm_Param_RequestHotRestartGmUserPmd_CS;
  static const Param RequesetScriptUpdateGmUserPmd_CS = Gm_Param_RequesetScriptUpdateGmUserPmd_CS;
  static const Param RequesetRefreshGatewaylistGmUserPmd_CS = Gm_Param_RequesetRefreshGatewaylistGmUserPmd_CS;
  static const Param RequestGenerateCodeGmUserPmd_C = Gm_Param_RequestGenerateCodeGmUserPmd_C;
  static const Param ReturnGenerateCodeGmUserPmd_S = Gm_Param_ReturnGenerateCodeGmUserPmd_S;
  static const Param RequestOpeartorCodeGmUserPmd_C = Gm_Param_RequestOpeartorCodeGmUserPmd_C;
  static const Param ReturnOpreatorCodeGmUserPmd_S = Gm_Param_ReturnOpreatorCodeGmUserPmd_S;
  static const Param GameOrderListGmUserPmd_CS = Gm_Param_GameOrderListGmUserPmd_CS;
  static const Param QueryPackageCodeGmUserPmd_CS = Gm_Param_QueryPackageCodeGmUserPmd_CS;
  static const Param RequestUsePackageCodeGmUserPmd_CS = Gm_Param_RequestUsePackageCodeGmUserPmd_CS;
  static const Param FeedbackGmUserPmd_CS = Gm_Param_FeedbackGmUserPmd_CS;
  static const Param RequestFeedbackListGmUserPmd_C = Gm_Param_RequestFeedbackListGmUserPmd_C;
  static const Param RequestPointReportGmUserPmd_CS = Gm_Param_RequestPointReportGmUserPmd_CS;
  static const Param RequestPointDetailGmUserPmd_CS = Gm_Param_RequestPointDetailGmUserPmd_CS;
  static const Param RequestBettingDetailGmUserPmd_CS = Gm_Param_RequestBettingDetailGmUserPmd_CS;
  static const Param RequestStockInfoGmUserPmd_CS = Gm_Param_RequestStockInfoGmUserPmd_CS;
  static const Param RequestRedPacketsGmUserPmd_CS = Gm_Param_RequestRedPacketsGmUserPmd_CS;
  static const Param RequestedSubgameListGmUserPmd_CS = Gm_Param_RequestedSubgameListGmUserPmd_CS;
  static const Param RequestOnlineUserInfoGmUserPmd_CS = Gm_Param_RequestOnlineUserInfoGmUserPmd_CS;
  static const Param RequestWinningListGmUserPmd_CS = Gm_Param_RequestWinningListGmUserPmd_CS;
  static const Param RequestDealFeedbackGmUserPmd_CS = Gm_Param_RequestDealFeedbackGmUserPmd_CS;
  static const Param AddBlackWhitelistGmUserPmd_CS = Gm_Param_AddBlackWhitelistGmUserPmd_CS;
  static const Param ModBlackWhitelistGmUserPmd_CS = Gm_Param_ModBlackWhitelistGmUserPmd_CS;
  static const Param DelBlackWhitelistGmUserPmd_CS = Gm_Param_DelBlackWhitelistGmUserPmd_CS;
  static const Param RequestBlackWhitelistGmUserPmd_CS = Gm_Param_RequestBlackWhitelistGmUserPmd_CS;
  static const Param RequestSendMailGmUserPmd_CS = Gm_Param_RequestSendMailGmUserPmd_CS;
  static const Param RequestLoginRecordGmUserPmd_CS = Gm_Param_RequestLoginRecordGmUserPmd_CS;
  static const Param RequestConsumeRecordGmUserPmd_CS = Gm_Param_RequestConsumeRecordGmUserPmd_CS;
  static const Param RequestActionRecordGmUserPmd_CS = Gm_Param_RequestActionRecordGmUserPmd_CS;
  static const Param RequestStrengthenRecordGmUserPmd_CS = Gm_Param_RequestStrengthenRecordGmUserPmd_CS;
  static const Param RequestMailRecordGmUserPmd_CS = Gm_Param_RequestMailRecordGmUserPmd_CS;
  static const Param RequestRankRecordGmUserPmd_CS = Gm_Param_RequestRankRecordGmUserPmd_CS;
  static const Param RequestBossRecordGmUserPmd_CS = Gm_Param_RequestBossRecordGmUserPmd_CS;
  static const Param RequestRenameRecordGmUserPmd_CS = Gm_Param_RequestRenameRecordGmUserPmd_CS;
  static const Param stRequestLoginGmUserCmd = Gm_Param_stRequestLoginGmUserCmd;
  static const Param stReturnLoginGmUserCmd = Gm_Param_stReturnLoginGmUserCmd;
  static const Param stConfigGmUserCmd = Gm_Param_stConfigGmUserCmd;
  static const Param stSetPasswordGmUserCmd = Gm_Param_stSetPasswordGmUserCmd;
  static const Param stReturnPasswordGmUserCmd = Gm_Param_stReturnPasswordGmUserCmd;
  static const Param stAddNewGmUserCmd = Gm_Param_stAddNewGmUserCmd;
  static const Param stReturnAddNewGmUserCmd = Gm_Param_stReturnAddNewGmUserCmd;
  static const Param stQueryListGmUserCmd = Gm_Param_stQueryListGmUserCmd;
  static const Param stReturnListGmUserCmd = Gm_Param_stReturnListGmUserCmd;
  static const Param stRequestZoneConfigGmUserCmd = Gm_Param_stRequestZoneConfigGmUserCmd;
  static const Param stReturnZoneDicCountryGmUserCmd = Gm_Param_stReturnZoneDicCountryGmUserCmd;
  static const Param stReturnZoneDicMapGmUserCmd = Gm_Param_stReturnZoneDicMapGmUserCmd;
  static const Param stForwardToAllGmUserCmd = Gm_Param_stForwardToAllGmUserCmd;
  static const Param stForwardToOnlyGmUserCmd = Gm_Param_stForwardToOnlyGmUserCmd;
  static const Param stBroadcastNewGmUserCmd = Gm_Param_stBroadcastNewGmUserCmd;
  static const Param stBroadcastDeleteGmUserCmd = Gm_Param_stBroadcastDeleteGmUserCmd;
  static const Param stBroadcastRequestGmUserCmd = Gm_Param_stBroadcastRequestGmUserCmd;
  static const Param stRequestTimeGmUserCmd = Gm_Param_stRequestTimeGmUserCmd;
  static const Param stReturnTimeGmUserCmd = Gm_Param_stReturnTimeGmUserCmd;
  static const Param stServerShutdownGmUserCmd = Gm_Param_stServerShutdownGmUserCmd;
  static const Param stRequestZoneDicGmUserCmd = Gm_Param_stRequestZoneDicGmUserCmd;
  static const Param stReturnZoneDicGmUserCmd = Gm_Param_stReturnZoneDicGmUserCmd;
  static const Param stAddChatConfigGmUserCmd = Gm_Param_stAddChatConfigGmUserCmd;
  static const Param stCancelChatConfigGmUserCmd = Gm_Param_stCancelChatConfigGmUserCmd;
  static const Param stRequestChatTypesGmUserCmd = Gm_Param_stRequestChatTypesGmUserCmd;
  static const Param stReturnChatTypesGmUserCmd = Gm_Param_stReturnChatTypesGmUserCmd;
  static const Param stServerStartupGmUserCmd = Gm_Param_stServerStartupGmUserCmd;
  static const Param stNotifyShutdownGmUserCmd = Gm_Param_stNotifyShutdownGmUserCmd;
  static const Param stCancelShutdownGmUserCmd = Gm_Param_stCancelShutdownGmUserCmd;
  static const Param stGmServerMessageGmUserCmd = Gm_Param_stGmServerMessageGmUserCmd;
  static const Param stRequestDelGmUserGmUserCmd = Gm_Param_stRequestDelGmUserGmUserCmd;
  static const Param stRequestResetGmUserPasswordGmUserCmd = Gm_Param_stRequestResetGmUserPasswordGmUserCmd;
  static const Param stQequestShutDownGmUserCmd = Gm_Param_stQequestShutDownGmUserCmd;
  static const Param stRequestForbidAccountGmUserCmd = Gm_Param_stRequestForbidAccountGmUserCmd;
  static const Param stQueryForbidAccountGmUserCmd = Gm_Param_stQueryForbidAccountGmUserCmd;
  static const Param stReturnForbidAccountListGmUserCmd = Gm_Param_stReturnForbidAccountListGmUserCmd;
  static const Param stRequestUnForbidAccountGmUserCmd = Gm_Param_stRequestUnForbidAccountGmUserCmd;
  static const Param stBroadcastDeleteZoneGmUserCmd = Gm_Param_stBroadcastDeleteZoneGmUserCmd;
  static const Param stRequestNameAccountGmUserCmd = Gm_Param_stRequestNameAccountGmUserCmd;
  static const Param stReturnNameAccountGmUserCmd = Gm_Param_stReturnNameAccountGmUserCmd;
  static const Param stRequestDBConnectionConfigGmUserCmd = Gm_Param_stRequestDBConnectionConfigGmUserCmd;
  static const Param stReturnDBConnectionConfigGmUserCmd = Gm_Param_stReturnDBConnectionConfigGmUserCmd;
  static const Param stQueryNameExistGmUserCmd = Gm_Param_stQueryNameExistGmUserCmd;
  static const Param stForceInsertNameGmUserCmd = Gm_Param_stForceInsertNameGmUserCmd;
  static const Param stForceModifyNameGmUserCmd = Gm_Param_stForceModifyNameGmUserCmd;
  static const Param stCheckOnlineGmUserCmd = Gm_Param_stCheckOnlineGmUserCmd;
  static const Param stReturnCheckOnlineGmUserCmd = Gm_Param_stReturnCheckOnlineGmUserCmd;
  static const Param stPunishUserGmUserCmd = Gm_Param_stPunishUserGmUserCmd;
  static const Param stRequestUserPosUserGmUserCmd = Gm_Param_stRequestUserPosUserGmUserCmd;
  static const Param stReturnUserPosUserGmUserCmd = Gm_Param_stReturnUserPosUserGmUserCmd;
  static const Param stEndUserPosUserGmUserCmd = Gm_Param_stEndUserPosUserGmUserCmd;
  static const Param stBroadcastReallySendGmUserCmd = Gm_Param_stBroadcastReallySendGmUserCmd;
  static const Param stDBQueryGmUserCmd = Gm_Param_stDBQueryGmUserCmd;
  static const Param stDBReturnDataGmUserCmd = Gm_Param_stDBReturnDataGmUserCmd;
  static const Param stDBReturnEndGmUserCmd = Gm_Param_stDBReturnEndGmUserCmd;
  static const Param stFullForbidAccountLogDataGmUserCmd = Gm_Param_stFullForbidAccountLogDataGmUserCmd;
  static const Param stFullGameGmCmdLogDataGmUserCmd = Gm_Param_stFullGameGmCmdLogDataGmUserCmd;
  static const Param stRequestAddQuestionGmUserCmd = Gm_Param_stRequestAddQuestionGmUserCmd;
  static const Param stReturnQuestionGmUserCmd = Gm_Param_stReturnQuestionGmUserCmd;
  static const Param stSequenceQuestionGmUserCmd = Gm_Param_stSequenceQuestionGmUserCmd;
  static const Param stDeleteQuestionGmUserCmd = Gm_Param_stDeleteQuestionGmUserCmd;
  static const Param stRequestQuestionGmUserCmd = Gm_Param_stRequestQuestionGmUserCmd;
  static const Param stRequestSeqQuestionGmUserCmd = Gm_Param_stRequestSeqQuestionGmUserCmd;
  static const Param stReturnNoneQuestionGmUserCmd = Gm_Param_stReturnNoneQuestionGmUserCmd;
  static const Param stUserCmdForwardGmUserCmd = Gm_Param_stUserCmdForwardGmUserCmd;
  static const Param stProcessQuestionGmUserCmd = Gm_Param_stProcessQuestionGmUserCmd;
  static const Param stGMToolBeginQuestionGmUserCmd = Gm_Param_stGMToolBeginQuestionGmUserCmd;
  static const Param stGMToolEndQuestionGmUserCmd = Gm_Param_stGMToolEndQuestionGmUserCmd;
  static const Param stDisableGMChatInputGmUserCmd = Gm_Param_stDisableGMChatInputGmUserCmd;
  static const Param stQuestionOverGmUserCmd = Gm_Param_stQuestionOverGmUserCmd;
  static const Param stQueryQuestionLimitGmUserCmd = Gm_Param_stQueryQuestionLimitGmUserCmd;
  static const Param stReturnQuestionLimitGmUserCmd = Gm_Param_stReturnQuestionLimitGmUserCmd;
  static const Param stResetQuestionLimitGmUserCmd = Gm_Param_stResetQuestionLimitGmUserCmd;
  static const Param stBroadcastToWorldGmUserCmd = Gm_Param_stBroadcastToWorldGmUserCmd;
  static const Param stSetActivityNoteGmUserCmd = Gm_Param_stSetActivityNoteGmUserCmd;
  static const Param stRequestRefreshUserQuestionGmUserCmd = Gm_Param_stRequestRefreshUserQuestionGmUserCmd;
  static const Param stRequestSetUserGoldInGmUserCmd = Gm_Param_stRequestSetUserGoldInGmUserCmd;
  static const Param stSetPrivilegesGmUserCmd = Gm_Param_stSetPrivilegesGmUserCmd;
  static const Param stRequestSaveChatGmUserCmd = Gm_Param_stRequestSaveChatGmUserCmd;
  static const Param stGameClientMessageBoxGmUserCmd = Gm_Param_stGameClientMessageBoxGmUserCmd;
  static const Param stGameClientChatMessageGMUserCmd = Gm_Param_stGameClientChatMessageGMUserCmd;
  static const Param stRequestGameClientMessageConfigGmUserCmd = Gm_Param_stRequestGameClientMessageConfigGmUserCmd;
  static const Param stReturnGameClientMessageConfigGmUserCmd = Gm_Param_stReturnGameClientMessageConfigGmUserCmd;
  static const Param stPlayerSatisfactionGmUserCmd = Gm_Param_stPlayerSatisfactionGmUserCmd;
  static const Param stRequestMyQuestionGmUserCmd = Gm_Param_stRequestMyQuestionGmUserCmd;
  static const Param stRequestQuestionSubmitableGmUserCmd = Gm_Param_stRequestQuestionSubmitableGmUserCmd;
  static const Param stVerifyOnlineQaGmUserCmd = Gm_Param_stVerifyOnlineQaGmUserCmd;
  static const Param stRequestPreProcessQuestionGmUserCmd = Gm_Param_stRequestPreProcessQuestionGmUserCmd;
  static const Param stReturnPreProcessQuestionGmUserCmd = Gm_Param_stReturnPreProcessQuestionGmUserCmd;
  static const Param stReturnNowPreProcessQusetGmUserCmd = Gm_Param_stReturnNowPreProcessQusetGmUserCmd;
  static const Param stDeleteProcessedQuestionGmUserCmd = Gm_Param_stDeleteProcessedQuestionGmUserCmd;
  static const Param stRequestOneQuestionGmUserCmd = Gm_Param_stRequestOneQuestionGmUserCmd;
  static const Param stReturnOneQuestionGmUserCmd = Gm_Param_stReturnOneQuestionGmUserCmd;
  static const Param stRequestResetGmWorkStateGmUserCmd = Gm_Param_stRequestResetGmWorkStateGmUserCmd;
  static const Param stReturnResetGmWorkStateGmUserCmd = Gm_Param_stReturnResetGmWorkStateGmUserCmd;
  static const Param stGmCommandUserCmd = Gm_Param_stGmCommandUserCmd;
  static const Param stGmCommandToSceneUserCmd = Gm_Param_stGmCommandToSceneUserCmd;
  static const Param stForceChangeSexGmUserCmd = Gm_Param_stForceChangeSexGmUserCmd;
  static const Param stRequestMobileInfoGmUserCmd = Gm_Param_stRequestMobileInfoGmUserCmd;
  static const Param stDeleteQuestionByGmUserCmd = Gm_Param_stDeleteQuestionByGmUserCmd;
  static const Param stNewGameClientMessageBoxGmUserCmd = Gm_Param_stNewGameClientMessageBoxGmUserCmd;
  static inline bool Param_IsValid(int value) {
    return Gm_Param_IsValid(value);
  }
  static const Param Param_MIN =
    Gm_Param_Param_MIN;
  static const Param Param_MAX =
    Gm_Param_Param_MAX;
  static const int Param_ARRAYSIZE =
    Gm_Param_Param_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Param_descriptor() {
    return Gm_Param_descriptor();
  }
  static inline const ::std::string& Param_Name(Param value) {
    return Gm_Param_Name(value);
  }
  static inline bool Param_Parse(const ::std::string& name,
      Param* value) {
    return Gm_Param_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.Gm)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static Gm* default_instance_;
};
// -------------------------------------------------------------------

class RequestExecGmCommandGmPmd_SC : public ::google::protobuf::Message {
 public:
  RequestExecGmCommandGmPmd_SC();
  virtual ~RequestExecGmCommandGmPmd_SC();

  RequestExecGmCommandGmPmd_SC(const RequestExecGmCommandGmPmd_SC& from);

  inline RequestExecGmCommandGmPmd_SC& operator=(const RequestExecGmCommandGmPmd_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestExecGmCommandGmPmd_SC& default_instance();

  void Swap(RequestExecGmCommandGmPmd_SC* other);

  // implements Message ----------------------------------------------

  RequestExecGmCommandGmPmd_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestExecGmCommandGmPmd_SC& from);
  void MergeFrom(const RequestExecGmCommandGmPmd_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // required string msg = 4;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 4;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:Pmd.RequestExecGmCommandGmPmd_SC)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::std::string* msg_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestExecGmCommandGmPmd_SC* default_instance_;
};
// -------------------------------------------------------------------

class RequestGameZoneErrorGmPmd_S : public ::google::protobuf::Message {
 public:
  RequestGameZoneErrorGmPmd_S();
  virtual ~RequestGameZoneErrorGmPmd_S();

  RequestGameZoneErrorGmPmd_S(const RequestGameZoneErrorGmPmd_S& from);

  inline RequestGameZoneErrorGmPmd_S& operator=(const RequestGameZoneErrorGmPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestGameZoneErrorGmPmd_S& default_instance();

  void Swap(RequestGameZoneErrorGmPmd_S* other);

  // implements Message ----------------------------------------------

  RequestGameZoneErrorGmPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestGameZoneErrorGmPmd_S& from);
  void MergeFrom(const RequestGameZoneErrorGmPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // required uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestGameZoneErrorGmPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestGameZoneErrorGmPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestHotRestartGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestHotRestartGmUserPmd_CS();
  virtual ~RequestHotRestartGmUserPmd_CS();

  RequestHotRestartGmUserPmd_CS(const RequestHotRestartGmUserPmd_CS& from);

  inline RequestHotRestartGmUserPmd_CS& operator=(const RequestHotRestartGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestHotRestartGmUserPmd_CS& default_instance();

  void Swap(RequestHotRestartGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestHotRestartGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestHotRestartGmUserPmd_CS& from);
  void MergeFrom(const RequestHotRestartGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestHotRestartGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestHotRestartGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequesetScriptUpdateGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequesetScriptUpdateGmUserPmd_CS();
  virtual ~RequesetScriptUpdateGmUserPmd_CS();

  RequesetScriptUpdateGmUserPmd_CS(const RequesetScriptUpdateGmUserPmd_CS& from);

  inline RequesetScriptUpdateGmUserPmd_CS& operator=(const RequesetScriptUpdateGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequesetScriptUpdateGmUserPmd_CS& default_instance();

  void Swap(RequesetScriptUpdateGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequesetScriptUpdateGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequesetScriptUpdateGmUserPmd_CS& from);
  void MergeFrom(const RequesetScriptUpdateGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequesetScriptUpdateGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequesetScriptUpdateGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequesetRefreshGatewaylistGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequesetRefreshGatewaylistGmUserPmd_CS();
  virtual ~RequesetRefreshGatewaylistGmUserPmd_CS();

  RequesetRefreshGatewaylistGmUserPmd_CS(const RequesetRefreshGatewaylistGmUserPmd_CS& from);

  inline RequesetRefreshGatewaylistGmUserPmd_CS& operator=(const RequesetRefreshGatewaylistGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequesetRefreshGatewaylistGmUserPmd_CS& default_instance();

  void Swap(RequesetRefreshGatewaylistGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequesetRefreshGatewaylistGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequesetRefreshGatewaylistGmUserPmd_CS& from);
  void MergeFrom(const RequesetRefreshGatewaylistGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequesetRefreshGatewaylistGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 ret_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequesetRefreshGatewaylistGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestGenerateCodeGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestGenerateCodeGmUserPmd_C();
  virtual ~RequestGenerateCodeGmUserPmd_C();

  RequestGenerateCodeGmUserPmd_C(const RequestGenerateCodeGmUserPmd_C& from);

  inline RequestGenerateCodeGmUserPmd_C& operator=(const RequestGenerateCodeGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestGenerateCodeGmUserPmd_C& default_instance();

  void Swap(RequestGenerateCodeGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestGenerateCodeGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestGenerateCodeGmUserPmd_C& from);
  void MergeFrom(const RequestGenerateCodeGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional string code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // optional uint32 codenum = 4;
  inline bool has_codenum() const;
  inline void clear_codenum();
  static const int kCodenumFieldNumber = 4;
  inline ::google::protobuf::uint32 codenum() const;
  inline void set_codenum(::google::protobuf::uint32 value);

  // required uint32 codetype = 5;
  inline bool has_codetype() const;
  inline void clear_codetype();
  static const int kCodetypeFieldNumber = 5;
  inline ::google::protobuf::uint32 codetype() const;
  inline void set_codetype(::google::protobuf::uint32 value);

  // optional uint64 charid = 6;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 6;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 gmid = 7;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 7;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestGenerateCodeGmUserPmd_C)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_codenum();
  inline void clear_has_codenum();
  inline void set_has_codetype();
  inline void clear_has_codetype();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::std::string* code_;
  ::google::protobuf::uint32 codenum_;
  ::google::protobuf::uint32 codetype_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestGenerateCodeGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnGenerateCodeGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnGenerateCodeGmUserPmd_S();
  virtual ~ReturnGenerateCodeGmUserPmd_S();

  ReturnGenerateCodeGmUserPmd_S(const ReturnGenerateCodeGmUserPmd_S& from);

  inline ReturnGenerateCodeGmUserPmd_S& operator=(const ReturnGenerateCodeGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnGenerateCodeGmUserPmd_S& default_instance();

  void Swap(ReturnGenerateCodeGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnGenerateCodeGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnGenerateCodeGmUserPmd_S& from);
  void MergeFrom(const ReturnGenerateCodeGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // optional uint32 codenum = 3;
  inline bool has_codenum() const;
  inline void clear_codenum();
  static const int kCodenumFieldNumber = 3;
  inline ::google::protobuf::uint32 codenum() const;
  inline void set_codenum(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnGenerateCodeGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_codenum();
  inline void clear_has_codenum();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 codenum_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnGenerateCodeGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestOpeartorCodeGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestOpeartorCodeGmUserPmd_C();
  virtual ~RequestOpeartorCodeGmUserPmd_C();

  RequestOpeartorCodeGmUserPmd_C(const RequestOpeartorCodeGmUserPmd_C& from);

  inline RequestOpeartorCodeGmUserPmd_C& operator=(const RequestOpeartorCodeGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOpeartorCodeGmUserPmd_C& default_instance();

  void Swap(RequestOpeartorCodeGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestOpeartorCodeGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestOpeartorCodeGmUserPmd_C& from);
  void MergeFrom(const RequestOpeartorCodeGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required string code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // required uint32 optype = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestOpeartorCodeGmUserPmd_C)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* code_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestOpeartorCodeGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class CodeInfo : public ::google::protobuf::Message {
 public:
  CodeInfo();
  virtual ~CodeInfo();

  CodeInfo(const CodeInfo& from);

  inline CodeInfo& operator=(const CodeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CodeInfo& default_instance();

  void Swap(CodeInfo* other);

  // implements Message ----------------------------------------------

  CodeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CodeInfo& from);
  void MergeFrom(const CodeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 codetype = 5;
  inline bool has_codetype() const;
  inline void clear_codetype();
  static const int kCodetypeFieldNumber = 5;
  inline ::google::protobuf::uint32 codetype() const;
  inline void set_codetype(::google::protobuf::uint32 value);

  // optional string code = 6;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 6;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  inline void set_allocated_code(::std::string* code);

  // optional uint32 createtime = 7;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 7;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 8;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 8;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 flag = 9;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 9;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.CodeInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_codetype();
  inline void clear_has_codetype();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* code_;
  ::google::protobuf::uint32 codetype_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 flag_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static CodeInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReturnOpreatorCodeGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnOpreatorCodeGmUserPmd_S();
  virtual ~ReturnOpreatorCodeGmUserPmd_S();

  ReturnOpreatorCodeGmUserPmd_S(const ReturnOpreatorCodeGmUserPmd_S& from);

  inline ReturnOpreatorCodeGmUserPmd_S& operator=(const ReturnOpreatorCodeGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnOpreatorCodeGmUserPmd_S& default_instance();

  void Swap(ReturnOpreatorCodeGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnOpreatorCodeGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnOpreatorCodeGmUserPmd_S& from);
  void MergeFrom(const ReturnOpreatorCodeGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // optional .Pmd.CodeInfo data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Pmd::CodeInfo& data() const;
  inline ::Pmd::CodeInfo* mutable_data();
  inline ::Pmd::CodeInfo* release_data();
  inline void set_allocated_data(::Pmd::CodeInfo* data);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnOpreatorCodeGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  ::Pmd::CodeInfo* data_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnOpreatorCodeGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class OrderInfo : public ::google::protobuf::Message {
 public:
  OrderInfo();
  virtual ~OrderInfo();

  OrderInfo(const OrderInfo& from);

  inline OrderInfo& operator=(const OrderInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderInfo& default_instance();

  void Swap(OrderInfo* other);

  // implements Message ----------------------------------------------

  OrderInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderInfo& from);
  void MergeFrom(const OrderInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string gameorder = 4;
  inline bool has_gameorder() const;
  inline void clear_gameorder();
  static const int kGameorderFieldNumber = 4;
  inline const ::std::string& gameorder() const;
  inline void set_gameorder(const ::std::string& value);
  inline void set_gameorder(const char* value);
  inline void set_gameorder(const char* value, size_t size);
  inline ::std::string* mutable_gameorder();
  inline ::std::string* release_gameorder();
  inline void set_allocated_gameorder(::std::string* gameorder);

  // optional float money = 5;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 5;
  inline float money() const;
  inline void set_money(float value);

  // optional uint64 createtime = 6;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 6;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pmd.OrderInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_gameorder();
  inline void clear_has_gameorder();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_createtime();
  inline void clear_has_createtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 zoneid_;
  float money_;
  ::std::string* gameorder_;
  ::google::protobuf::uint64 createtime_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static OrderInfo* default_instance_;
};
// -------------------------------------------------------------------

class GameOrderListGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  GameOrderListGmUserPmd_CS();
  virtual ~GameOrderListGmUserPmd_CS();

  GameOrderListGmUserPmd_CS(const GameOrderListGmUserPmd_CS& from);

  inline GameOrderListGmUserPmd_CS& operator=(const GameOrderListGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameOrderListGmUserPmd_CS& default_instance();

  void Swap(GameOrderListGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  GameOrderListGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameOrderListGmUserPmd_CS& from);
  void MergeFrom(const GameOrderListGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint64 timestamp = 5;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // repeated .Pmd.OrderInfo data = 6;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::Pmd::OrderInfo& data(int index) const;
  inline ::Pmd::OrderInfo* mutable_data(int index);
  inline ::Pmd::OrderInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::OrderInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::OrderInfo >*
      mutable_data();

  // optional uint32 curpage = 7;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 7;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 8;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 8;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 9;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 9;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.GameOrderListGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::OrderInfo > data_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static GameOrderListGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class QueryPackageCodeGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  QueryPackageCodeGmUserPmd_CS();
  virtual ~QueryPackageCodeGmUserPmd_CS();

  QueryPackageCodeGmUserPmd_CS(const QueryPackageCodeGmUserPmd_CS& from);

  inline QueryPackageCodeGmUserPmd_CS& operator=(const QueryPackageCodeGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPackageCodeGmUserPmd_CS& default_instance();

  void Swap(QueryPackageCodeGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  QueryPackageCodeGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryPackageCodeGmUserPmd_CS& from);
  void MergeFrom(const QueryPackageCodeGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string codeid = 1;
  inline bool has_codeid() const;
  inline void clear_codeid();
  static const int kCodeidFieldNumber = 1;
  inline const ::std::string& codeid() const;
  inline void set_codeid(const ::std::string& value);
  inline void set_codeid(const char* value);
  inline void set_codeid(const char* value, size_t size);
  inline ::std::string* mutable_codeid();
  inline ::std::string* release_codeid();
  inline void set_allocated_codeid(::std::string* codeid);

  // required uint64 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint32 ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint32 flag = 4;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional uint64 createtime = 5;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 5;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional uint64 usedtime = 6;
  inline bool has_usedtime() const;
  inline void clear_usedtime();
  static const int kUsedtimeFieldNumber = 6;
  inline ::google::protobuf::uint64 usedtime() const;
  inline void set_usedtime(::google::protobuf::uint64 value);

  // optional uint32 usedgameid = 7;
  inline bool has_usedgameid() const;
  inline void clear_usedgameid();
  static const int kUsedgameidFieldNumber = 7;
  inline ::google::protobuf::uint32 usedgameid() const;
  inline void set_usedgameid(::google::protobuf::uint32 value);

  // optional uint32 usedzoneid = 8;
  inline bool has_usedzoneid() const;
  inline void clear_usedzoneid();
  static const int kUsedzoneidFieldNumber = 8;
  inline ::google::protobuf::uint32 usedzoneid() const;
  inline void set_usedzoneid(::google::protobuf::uint32 value);

  // optional uint64 useduid = 9;
  inline bool has_useduid() const;
  inline void clear_useduid();
  static const int kUseduidFieldNumber = 9;
  inline ::google::protobuf::uint64 useduid() const;
  inline void set_useduid(::google::protobuf::uint64 value);

  // optional string extdata = 10;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 10;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // optional uint32 codetype = 11;
  inline bool has_codetype() const;
  inline void clear_codetype();
  static const int kCodetypeFieldNumber = 11;
  inline ::google::protobuf::uint32 codetype() const;
  inline void set_codetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.QueryPackageCodeGmUserPmd_CS)
 private:
  inline void set_has_codeid();
  inline void clear_has_codeid();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_usedtime();
  inline void clear_has_usedtime();
  inline void set_has_usedgameid();
  inline void clear_has_usedgameid();
  inline void set_has_usedzoneid();
  inline void clear_has_usedzoneid();
  inline void set_has_useduid();
  inline void clear_has_useduid();
  inline void set_has_extdata();
  inline void clear_has_extdata();
  inline void set_has_codetype();
  inline void clear_has_codetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* codeid_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::uint64 usedtime_;
  ::google::protobuf::uint32 usedgameid_;
  ::google::protobuf::uint32 usedzoneid_;
  ::google::protobuf::uint64 useduid_;
  ::std::string* extdata_;
  ::google::protobuf::uint32 codetype_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static QueryPackageCodeGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestUsePackageCodeGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestUsePackageCodeGmUserPmd_CS();
  virtual ~RequestUsePackageCodeGmUserPmd_CS();

  RequestUsePackageCodeGmUserPmd_CS(const RequestUsePackageCodeGmUserPmd_CS& from);

  inline RequestUsePackageCodeGmUserPmd_CS& operator=(const RequestUsePackageCodeGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestUsePackageCodeGmUserPmd_CS& default_instance();

  void Swap(RequestUsePackageCodeGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestUsePackageCodeGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestUsePackageCodeGmUserPmd_CS& from);
  void MergeFrom(const RequestUsePackageCodeGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string codeid = 1;
  inline bool has_codeid() const;
  inline void clear_codeid();
  static const int kCodeidFieldNumber = 1;
  inline const ::std::string& codeid() const;
  inline void set_codeid(const ::std::string& value);
  inline void set_codeid(const char* value);
  inline void set_codeid(const char* value, size_t size);
  inline ::std::string* mutable_codeid();
  inline ::std::string* release_codeid();
  inline void set_allocated_codeid(::std::string* codeid);

  // required uint64 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint32 typemutex = 3;
  inline bool has_typemutex() const;
  inline void clear_typemutex();
  static const int kTypemutexFieldNumber = 3;
  inline ::google::protobuf::uint32 typemutex() const;
  inline void set_typemutex(::google::protobuf::uint32 value);

  // optional uint32 ret = 4;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 4;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);

  // optional uint64 createtime = 5;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 5;
  inline ::google::protobuf::uint64 createtime() const;
  inline void set_createtime(::google::protobuf::uint64 value);

  // optional uint64 usedtime = 6;
  inline bool has_usedtime() const;
  inline void clear_usedtime();
  static const int kUsedtimeFieldNumber = 6;
  inline ::google::protobuf::uint64 usedtime() const;
  inline void set_usedtime(::google::protobuf::uint64 value);

  // optional uint32 usedgameid = 7;
  inline bool has_usedgameid() const;
  inline void clear_usedgameid();
  static const int kUsedgameidFieldNumber = 7;
  inline ::google::protobuf::uint32 usedgameid() const;
  inline void set_usedgameid(::google::protobuf::uint32 value);

  // optional uint32 usedzoneid = 8;
  inline bool has_usedzoneid() const;
  inline void clear_usedzoneid();
  static const int kUsedzoneidFieldNumber = 8;
  inline ::google::protobuf::uint32 usedzoneid() const;
  inline void set_usedzoneid(::google::protobuf::uint32 value);

  // optional uint64 useduid = 9;
  inline bool has_useduid() const;
  inline void clear_useduid();
  static const int kUseduidFieldNumber = 9;
  inline ::google::protobuf::uint64 useduid() const;
  inline void set_useduid(::google::protobuf::uint64 value);

  // optional string extdata = 10;
  inline bool has_extdata() const;
  inline void clear_extdata();
  static const int kExtdataFieldNumber = 10;
  inline const ::std::string& extdata() const;
  inline void set_extdata(const ::std::string& value);
  inline void set_extdata(const char* value);
  inline void set_extdata(const char* value, size_t size);
  inline ::std::string* mutable_extdata();
  inline ::std::string* release_extdata();
  inline void set_allocated_extdata(::std::string* extdata);

  // optional uint32 codetype = 11;
  inline bool has_codetype() const;
  inline void clear_codetype();
  static const int kCodetypeFieldNumber = 11;
  inline ::google::protobuf::uint32 codetype() const;
  inline void set_codetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestUsePackageCodeGmUserPmd_CS)
 private:
  inline void set_has_codeid();
  inline void clear_has_codeid();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_typemutex();
  inline void clear_has_typemutex();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_usedtime();
  inline void clear_has_usedtime();
  inline void set_has_usedgameid();
  inline void clear_has_usedgameid();
  inline void set_has_usedzoneid();
  inline void clear_has_usedzoneid();
  inline void set_has_useduid();
  inline void clear_has_useduid();
  inline void set_has_extdata();
  inline void clear_has_extdata();
  inline void set_has_codetype();
  inline void clear_has_codetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* codeid_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint32 typemutex_;
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint64 createtime_;
  ::google::protobuf::uint64 usedtime_;
  ::google::protobuf::uint32 usedgameid_;
  ::google::protobuf::uint32 usedzoneid_;
  ::google::protobuf::uint64 useduid_;
  ::std::string* extdata_;
  ::google::protobuf::uint32 codetype_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestUsePackageCodeGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class FeedbackData : public ::google::protobuf::Message {
 public:
  FeedbackData();
  virtual ~FeedbackData();

  FeedbackData(const FeedbackData& from);

  inline FeedbackData& operator=(const FeedbackData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FeedbackData& default_instance();

  void Swap(FeedbackData* other);

  // implements Message ----------------------------------------------

  FeedbackData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FeedbackData& from);
  void MergeFrom(const FeedbackData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 userlevel = 5;
  inline bool has_userlevel() const;
  inline void clear_userlevel();
  static const int kUserlevelFieldNumber = 5;
  inline ::google::protobuf::uint32 userlevel() const;
  inline void set_userlevel(::google::protobuf::uint32 value);

  // required uint32 viplevel = 6;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 6;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // optional uint32 feedbackid = 7;
  inline bool has_feedbackid() const;
  inline void clear_feedbackid();
  static const int kFeedbackidFieldNumber = 7;
  inline ::google::protobuf::uint32 feedbackid() const;
  inline void set_feedbackid(::google::protobuf::uint32 value);

  // optional string subject = 8;
  inline bool has_subject() const;
  inline void clear_subject();
  static const int kSubjectFieldNumber = 8;
  inline const ::std::string& subject() const;
  inline void set_subject(const ::std::string& value);
  inline void set_subject(const char* value);
  inline void set_subject(const char* value, size_t size);
  inline ::std::string* mutable_subject();
  inline ::std::string* release_subject();
  inline void set_allocated_subject(::std::string* subject);

  // optional string content = 9;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 9;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // required uint32 star = 10;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 10;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);

  // required uint64 recordtime = 11;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordtimeFieldNumber = 11;
  inline ::google::protobuf::uint64 recordtime() const;
  inline void set_recordtime(::google::protobuf::uint64 value);

  // optional uint64 recordid = 12;
  inline bool has_recordid() const;
  inline void clear_recordid();
  static const int kRecordidFieldNumber = 12;
  inline ::google::protobuf::uint64 recordid() const;
  inline void set_recordid(::google::protobuf::uint64 value);

  // optional uint32 state = 13;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 13;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional string reply = 14;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 14;
  inline const ::std::string& reply() const;
  inline void set_reply(const ::std::string& value);
  inline void set_reply(const char* value);
  inline void set_reply(const char* value, size_t size);
  inline ::std::string* mutable_reply();
  inline ::std::string* release_reply();
  inline void set_allocated_reply(::std::string* reply);

  // optional string phonenum = 15;
  inline bool has_phonenum() const;
  inline void clear_phonenum();
  static const int kPhonenumFieldNumber = 15;
  inline const ::std::string& phonenum() const;
  inline void set_phonenum(const ::std::string& value);
  inline void set_phonenum(const char* value);
  inline void set_phonenum(const char* value, size_t size);
  inline ::std::string* mutable_phonenum();
  inline ::std::string* release_phonenum();
  inline void set_allocated_phonenum(::std::string* phonenum);

  // @@protoc_insertion_point(class_scope:Pmd.FeedbackData)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_userlevel();
  inline void clear_has_userlevel();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_feedbackid();
  inline void clear_has_feedbackid();
  inline void set_has_subject();
  inline void clear_has_subject();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();
  inline void set_has_recordid();
  inline void clear_has_recordid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_reply();
  inline void clear_has_reply();
  inline void set_has_phonenum();
  inline void clear_has_phonenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 userlevel_;
  ::google::protobuf::uint32 viplevel_;
  ::std::string* subject_;
  ::google::protobuf::uint32 feedbackid_;
  ::google::protobuf::uint32 star_;
  ::std::string* content_;
  ::google::protobuf::uint64 recordtime_;
  ::google::protobuf::uint64 recordid_;
  ::std::string* reply_;
  ::std::string* phonenum_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static FeedbackData* default_instance_;
};
// -------------------------------------------------------------------

class FeedbackGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  FeedbackGmUserPmd_CS();
  virtual ~FeedbackGmUserPmd_CS();

  FeedbackGmUserPmd_CS(const FeedbackGmUserPmd_CS& from);

  inline FeedbackGmUserPmd_CS& operator=(const FeedbackGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FeedbackGmUserPmd_CS& default_instance();

  void Swap(FeedbackGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  FeedbackGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FeedbackGmUserPmd_CS& from);
  void MergeFrom(const FeedbackGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pmd.FeedbackData data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::FeedbackData& data(int index) const;
  inline ::Pmd::FeedbackData* mutable_data(int index);
  inline ::Pmd::FeedbackData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::FeedbackData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::FeedbackData >*
      mutable_data();

  // optional uint32 feedbacktype = 2;
  inline bool has_feedbacktype() const;
  inline void clear_feedbacktype();
  static const int kFeedbacktypeFieldNumber = 2;
  inline ::google::protobuf::uint32 feedbacktype() const;
  inline void set_feedbacktype(::google::protobuf::uint32 value);

  // optional uint32 curpage = 3;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 3;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 4;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 4;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 5;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 5;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.FeedbackGmUserPmd_CS)
 private:
  inline void set_has_feedbacktype();
  inline void clear_has_feedbacktype();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::FeedbackData > data_;
  ::google::protobuf::uint32 feedbacktype_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static FeedbackGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestFeedbackListGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestFeedbackListGmUserPmd_C();
  virtual ~RequestFeedbackListGmUserPmd_C();

  RequestFeedbackListGmUserPmd_C(const RequestFeedbackListGmUserPmd_C& from);

  inline RequestFeedbackListGmUserPmd_C& operator=(const RequestFeedbackListGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestFeedbackListGmUserPmd_C& default_instance();

  void Swap(RequestFeedbackListGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestFeedbackListGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestFeedbackListGmUserPmd_C& from);
  void MergeFrom(const RequestFeedbackListGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 feedbacktype = 5;
  inline bool has_feedbacktype() const;
  inline void clear_feedbacktype();
  static const int kFeedbacktypeFieldNumber = 5;
  inline ::google::protobuf::uint32 feedbacktype() const;
  inline void set_feedbacktype(::google::protobuf::uint32 value);

  // optional uint32 state = 6;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint64 starttime = 7;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 7;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 8;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 8;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // optional uint32 curpage = 9;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 9;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 10;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 10;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 11;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 11;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestFeedbackListGmUserPmd_C)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_feedbacktype();
  inline void clear_has_feedbacktype();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 feedbacktype_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestFeedbackListGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class RequestDealFeedbackGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestDealFeedbackGmUserPmd_CS();
  virtual ~RequestDealFeedbackGmUserPmd_CS();

  RequestDealFeedbackGmUserPmd_CS(const RequestDealFeedbackGmUserPmd_CS& from);

  inline RequestDealFeedbackGmUserPmd_CS& operator=(const RequestDealFeedbackGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestDealFeedbackGmUserPmd_CS& default_instance();

  void Swap(RequestDealFeedbackGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestDealFeedbackGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestDealFeedbackGmUserPmd_CS& from);
  void MergeFrom(const RequestDealFeedbackGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint32 recordid = 3;
  inline bool has_recordid() const;
  inline void clear_recordid();
  static const int kRecordidFieldNumber = 3;
  inline ::google::protobuf::uint32 recordid() const;
  inline void set_recordid(::google::protobuf::uint32 value);

  // optional uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional string subject = 6;
  inline bool has_subject() const;
  inline void clear_subject();
  static const int kSubjectFieldNumber = 6;
  inline const ::std::string& subject() const;
  inline void set_subject(const ::std::string& value);
  inline void set_subject(const char* value);
  inline void set_subject(const char* value, size_t size);
  inline ::std::string* mutable_subject();
  inline ::std::string* release_subject();
  inline void set_allocated_subject(::std::string* subject);

  // optional string reply = 7;
  inline bool has_reply() const;
  inline void clear_reply();
  static const int kReplyFieldNumber = 7;
  inline const ::std::string& reply() const;
  inline void set_reply(const ::std::string& value);
  inline void set_reply(const char* value);
  inline void set_reply(const char* value, size_t size);
  inline ::std::string* mutable_reply();
  inline ::std::string* release_reply();
  inline void set_allocated_reply(::std::string* reply);

  // optional uint32 feedbacktype = 8;
  inline bool has_feedbacktype() const;
  inline void clear_feedbacktype();
  static const int kFeedbacktypeFieldNumber = 8;
  inline ::google::protobuf::uint32 feedbacktype() const;
  inline void set_feedbacktype(::google::protobuf::uint32 value);

  // optional uint32 retcode = 9;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 9;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 10;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 10;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // optional uint32 gmid = 11;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 11;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestDealFeedbackGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_recordid();
  inline void clear_has_recordid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_subject();
  inline void clear_has_subject();
  inline void set_has_reply();
  inline void clear_has_reply();
  inline void set_has_feedbacktype();
  inline void clear_has_feedbacktype();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 recordid_;
  ::google::protobuf::uint32 state_;
  ::std::string* subject_;
  ::std::string* reply_;
  ::google::protobuf::uint32 feedbacktype_;
  ::google::protobuf::uint32 retcode_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestDealFeedbackGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class PointReportData : public ::google::protobuf::Message {
 public:
  PointReportData();
  virtual ~PointReportData();

  PointReportData(const PointReportData& from);

  inline PointReportData& operator=(const PointReportData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointReportData& default_instance();

  void Swap(PointReportData* other);

  // implements Message ----------------------------------------------

  PointReportData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointReportData& from);
  void MergeFrom(const PointReportData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 recorddate = 1;
  inline bool has_recorddate() const;
  inline void clear_recorddate();
  static const int kRecorddateFieldNumber = 1;
  inline ::google::protobuf::uint32 recorddate() const;
  inline void set_recorddate(::google::protobuf::uint32 value);

  // required uint64 redeemin = 2;
  inline bool has_redeemin() const;
  inline void clear_redeemin();
  static const int kRedeeminFieldNumber = 2;
  inline ::google::protobuf::uint64 redeemin() const;
  inline void set_redeemin(::google::protobuf::uint64 value);

  // required uint64 redeemout = 3;
  inline bool has_redeemout() const;
  inline void clear_redeemout();
  static const int kRedeemoutFieldNumber = 3;
  inline ::google::protobuf::uint64 redeemout() const;
  inline void set_redeemout(::google::protobuf::uint64 value);

  // optional int64 redeemtotal = 4;
  inline bool has_redeemtotal() const;
  inline void clear_redeemtotal();
  static const int kRedeemtotalFieldNumber = 4;
  inline ::google::protobuf::int64 redeemtotal() const;
  inline void set_redeemtotal(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Pmd.PointReportData)
 private:
  inline void set_has_recorddate();
  inline void clear_has_recorddate();
  inline void set_has_redeemin();
  inline void clear_has_redeemin();
  inline void set_has_redeemout();
  inline void clear_has_redeemout();
  inline void set_has_redeemtotal();
  inline void clear_has_redeemtotal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 redeemin_;
  ::google::protobuf::uint64 redeemout_;
  ::google::protobuf::int64 redeemtotal_;
  ::google::protobuf::uint32 recorddate_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static PointReportData* default_instance_;
};
// -------------------------------------------------------------------

class RequestPointReportGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestPointReportGmUserPmd_CS();
  virtual ~RequestPointReportGmUserPmd_CS();

  RequestPointReportGmUserPmd_CS(const RequestPointReportGmUserPmd_CS& from);

  inline RequestPointReportGmUserPmd_CS& operator=(const RequestPointReportGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestPointReportGmUserPmd_CS& default_instance();

  void Swap(RequestPointReportGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestPointReportGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestPointReportGmUserPmd_CS& from);
  void MergeFrom(const RequestPointReportGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 starttime = 4;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 4;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 5;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 5;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 gmid = 6;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 6;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 7;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 7;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 8;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 8;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 9;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 9;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // repeated .Pmd.PointReportData data = 10;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 10;
  inline const ::Pmd::PointReportData& data(int index) const;
  inline ::Pmd::PointReportData* mutable_data(int index);
  inline ::Pmd::PointReportData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PointReportData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::PointReportData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.RequestPointReportGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::PointReportData > data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestPointReportGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class PointDetailData : public ::google::protobuf::Message {
 public:
  PointDetailData();
  virtual ~PointDetailData();

  PointDetailData(const PointDetailData& from);

  inline PointDetailData& operator=(const PointDetailData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointDetailData& default_instance();

  void Swap(PointDetailData* other);

  // implements Message ----------------------------------------------

  PointDetailData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointDetailData& from);
  void MergeFrom(const PointDetailData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // required uint64 recordtime = 2;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordtimeFieldNumber = 2;
  inline ::google::protobuf::uint64 recordtime() const;
  inline void set_recordtime(::google::protobuf::uint64 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 ptype = 5;
  inline bool has_ptype() const;
  inline void clear_ptype();
  static const int kPtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 ptype() const;
  inline void set_ptype(::google::protobuf::uint32 value);

  // required uint64 redeemnum = 6;
  inline bool has_redeemnum() const;
  inline void clear_redeemnum();
  static const int kRedeemnumFieldNumber = 6;
  inline ::google::protobuf::uint64 redeemnum() const;
  inline void set_redeemnum(::google::protobuf::uint64 value);

  // optional uint64 originnum = 7;
  inline bool has_originnum() const;
  inline void clear_originnum();
  static const int kOriginnumFieldNumber = 7;
  inline ::google::protobuf::uint64 originnum() const;
  inline void set_originnum(::google::protobuf::uint64 value);

  // optional uint64 currentnum = 8;
  inline bool has_currentnum() const;
  inline void clear_currentnum();
  static const int kCurrentnumFieldNumber = 8;
  inline ::google::protobuf::uint64 currentnum() const;
  inline void set_currentnum(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pmd.PointDetailData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_ptype();
  inline void clear_has_ptype();
  inline void set_has_redeemnum();
  inline void clear_has_redeemnum();
  inline void set_has_originnum();
  inline void clear_has_originnum();
  inline void set_has_currentnum();
  inline void clear_has_currentnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 recordtime_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint64 redeemnum_;
  ::google::protobuf::uint64 originnum_;
  ::google::protobuf::uint64 currentnum_;
  ::google::protobuf::uint32 ptype_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static PointDetailData* default_instance_;
};
// -------------------------------------------------------------------

class RequestPointDetailGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestPointDetailGmUserPmd_CS();
  virtual ~RequestPointDetailGmUserPmd_CS();

  RequestPointDetailGmUserPmd_CS(const RequestPointDetailGmUserPmd_CS& from);

  inline RequestPointDetailGmUserPmd_CS& operator=(const RequestPointDetailGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestPointDetailGmUserPmd_CS& default_instance();

  void Swap(RequestPointDetailGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestPointDetailGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestPointDetailGmUserPmd_CS& from);
  void MergeFrom(const RequestPointDetailGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 ptype = 4;
  inline bool has_ptype() const;
  inline void clear_ptype();
  static const int kPtypeFieldNumber = 4;
  inline ::google::protobuf::uint32 ptype() const;
  inline void set_ptype(::google::protobuf::uint32 value);

  // optional uint64 starttime = 5;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 5;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 6;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 6;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // optional uint32 gmid = 7;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 7;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 8;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 8;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 9;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 9;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 10;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 10;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // repeated .Pmd.PointDetailData data = 11;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 11;
  inline const ::Pmd::PointDetailData& data(int index) const;
  inline ::Pmd::PointDetailData* mutable_data(int index);
  inline ::Pmd::PointDetailData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PointDetailData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::PointDetailData >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.RequestPointDetailGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_ptype();
  inline void clear_has_ptype();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint32 ptype_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::PointDetailData > data_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestPointDetailGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class BettingDetailData : public ::google::protobuf::Message {
 public:
  BettingDetailData();
  virtual ~BettingDetailData();

  BettingDetailData(const BettingDetailData& from);

  inline BettingDetailData& operator=(const BettingDetailData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BettingDetailData& default_instance();

  void Swap(BettingDetailData* other);

  // implements Message ----------------------------------------------

  BettingDetailData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BettingDetailData& from);
  void MergeFrom(const BettingDetailData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 roundid = 2;
  inline bool has_roundid() const;
  inline void clear_roundid();
  static const int kRoundidFieldNumber = 2;
  inline ::google::protobuf::uint64 roundid() const;
  inline void set_roundid(::google::protobuf::uint64 value);

  // required uint64 recordtime = 3;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordtimeFieldNumber = 3;
  inline ::google::protobuf::uint64 recordtime() const;
  inline void set_recordtime(::google::protobuf::uint64 value);

  // required uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 5;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 5;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required int64 winlosenum = 6;
  inline bool has_winlosenum() const;
  inline void clear_winlosenum();
  static const int kWinlosenumFieldNumber = 6;
  inline ::google::protobuf::int64 winlosenum() const;
  inline void set_winlosenum(::google::protobuf::int64 value);

  // optional uint64 totalnum = 7;
  inline bool has_totalnum() const;
  inline void clear_totalnum();
  static const int kTotalnumFieldNumber = 7;
  inline ::google::protobuf::uint64 totalnum() const;
  inline void set_totalnum(::google::protobuf::uint64 value);

  // optional uint64 dealerid = 8;
  inline bool has_dealerid() const;
  inline void clear_dealerid();
  static const int kDealeridFieldNumber = 8;
  inline ::google::protobuf::uint64 dealerid() const;
  inline void set_dealerid(::google::protobuf::uint64 value);

  // optional uint64 dealernum = 9;
  inline bool has_dealernum() const;
  inline void clear_dealernum();
  static const int kDealernumFieldNumber = 9;
  inline ::google::protobuf::uint64 dealernum() const;
  inline void set_dealernum(::google::protobuf::uint64 value);

  // optional string betdetail = 10;
  inline bool has_betdetail() const;
  inline void clear_betdetail();
  static const int kBetdetailFieldNumber = 10;
  inline const ::std::string& betdetail() const;
  inline void set_betdetail(const ::std::string& value);
  inline void set_betdetail(const char* value);
  inline void set_betdetail(const char* value, size_t size);
  inline ::std::string* mutable_betdetail();
  inline ::std::string* release_betdetail();
  inline void set_allocated_betdetail(::std::string* betdetail);

  // optional string lotterydetail = 11;
  inline bool has_lotterydetail() const;
  inline void clear_lotterydetail();
  static const int kLotterydetailFieldNumber = 11;
  inline const ::std::string& lotterydetail() const;
  inline void set_lotterydetail(const ::std::string& value);
  inline void set_lotterydetail(const char* value);
  inline void set_lotterydetail(const char* value, size_t size);
  inline ::std::string* mutable_lotterydetail();
  inline ::std::string* release_lotterydetail();
  inline void set_allocated_lotterydetail(::std::string* lotterydetail);

  // optional uint32 opensource = 12;
  inline bool has_opensource() const;
  inline void clear_opensource();
  static const int kOpensourceFieldNumber = 12;
  inline ::google::protobuf::uint32 opensource() const;
  inline void set_opensource(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.BettingDetailData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_roundid();
  inline void clear_has_roundid();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_winlosenum();
  inline void clear_has_winlosenum();
  inline void set_has_totalnum();
  inline void clear_has_totalnum();
  inline void set_has_dealerid();
  inline void clear_has_dealerid();
  inline void set_has_dealernum();
  inline void clear_has_dealernum();
  inline void set_has_betdetail();
  inline void clear_has_betdetail();
  inline void set_has_lotterydetail();
  inline void clear_has_lotterydetail();
  inline void set_has_opensource();
  inline void clear_has_opensource();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 roundid_;
  ::google::protobuf::uint64 recordtime_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::int64 winlosenum_;
  ::google::protobuf::uint64 totalnum_;
  ::google::protobuf::uint64 dealerid_;
  ::google::protobuf::uint64 dealernum_;
  ::std::string* betdetail_;
  ::std::string* lotterydetail_;
  ::google::protobuf::uint32 opensource_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static BettingDetailData* default_instance_;
};
// -------------------------------------------------------------------

class RequestBettingDetailGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestBettingDetailGmUserPmd_CS();
  virtual ~RequestBettingDetailGmUserPmd_CS();

  RequestBettingDetailGmUserPmd_CS(const RequestBettingDetailGmUserPmd_CS& from);

  inline RequestBettingDetailGmUserPmd_CS& operator=(const RequestBettingDetailGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestBettingDetailGmUserPmd_CS& default_instance();

  void Swap(RequestBettingDetailGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestBettingDetailGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestBettingDetailGmUserPmd_CS& from);
  void MergeFrom(const RequestBettingDetailGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 dealerid = 4;
  inline bool has_dealerid() const;
  inline void clear_dealerid();
  static const int kDealeridFieldNumber = 4;
  inline ::google::protobuf::uint64 dealerid() const;
  inline void set_dealerid(::google::protobuf::uint64 value);

  // optional uint64 roundid = 5;
  inline bool has_roundid() const;
  inline void clear_roundid();
  static const int kRoundidFieldNumber = 5;
  inline ::google::protobuf::uint64 roundid() const;
  inline void set_roundid(::google::protobuf::uint64 value);

  // optional uint64 starttime = 6;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 6;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 7;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 7;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // optional uint32 gmid = 8;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 8;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 subgameid = 9;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubgameidFieldNumber = 9;
  inline ::google::protobuf::uint32 subgameid() const;
  inline void set_subgameid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 10;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 10;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 11;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 11;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 12;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 12;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // repeated .Pmd.BettingDetailData data = 13;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 13;
  inline const ::Pmd::BettingDetailData& data(int index) const;
  inline ::Pmd::BettingDetailData* mutable_data(int index);
  inline ::Pmd::BettingDetailData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BettingDetailData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::BettingDetailData >*
      mutable_data();

  // optional uint32 opensource = 14;
  inline bool has_opensource() const;
  inline void clear_opensource();
  static const int kOpensourceFieldNumber = 14;
  inline ::google::protobuf::uint32 opensource() const;
  inline void set_opensource(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestBettingDetailGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_dealerid();
  inline void clear_has_dealerid();
  inline void set_has_roundid();
  inline void clear_has_roundid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();
  inline void set_has_opensource();
  inline void clear_has_opensource();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 dealerid_;
  ::google::protobuf::uint64 roundid_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 subgameid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::BettingDetailData > data_;
  ::google::protobuf::uint32 perpage_;
  ::google::protobuf::uint32 opensource_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestBettingDetailGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class StockData : public ::google::protobuf::Message {
 public:
  StockData();
  virtual ~StockData();

  StockData(const StockData& from);

  inline StockData& operator=(const StockData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StockData& default_instance();

  void Swap(StockData* other);

  // implements Message ----------------------------------------------

  StockData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StockData& from);
  void MergeFrom(const StockData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 stock = 2;
  inline bool has_stock() const;
  inline void clear_stock();
  static const int kStockFieldNumber = 2;
  inline ::google::protobuf::uint64 stock() const;
  inline void set_stock(::google::protobuf::uint64 value);

  // optional uint64 threshold = 3;
  inline bool has_threshold() const;
  inline void clear_threshold();
  static const int kThresholdFieldNumber = 3;
  inline ::google::protobuf::uint64 threshold() const;
  inline void set_threshold(::google::protobuf::uint64 value);

  // optional uint64 lottery = 4;
  inline bool has_lottery() const;
  inline void clear_lottery();
  static const int kLotteryFieldNumber = 4;
  inline ::google::protobuf::uint64 lottery() const;
  inline void set_lottery(::google::protobuf::uint64 value);

  // optional uint64 profit = 5;
  inline bool has_profit() const;
  inline void clear_profit();
  static const int kProfitFieldNumber = 5;
  inline ::google::protobuf::uint64 profit() const;
  inline void set_profit(::google::protobuf::uint64 value);

  // optional uint32 subgameid = 6;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubgameidFieldNumber = 6;
  inline ::google::protobuf::uint32 subgameid() const;
  inline void set_subgameid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.StockData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_stock();
  inline void clear_has_stock();
  inline void set_has_threshold();
  inline void clear_has_threshold();
  inline void set_has_lottery();
  inline void clear_has_lottery();
  inline void set_has_profit();
  inline void clear_has_profit();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 stock_;
  ::google::protobuf::uint64 threshold_;
  ::google::protobuf::uint64 lottery_;
  ::google::protobuf::uint64 profit_;
  ::google::protobuf::uint32 subgameid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static StockData* default_instance_;
};
// -------------------------------------------------------------------

class RequestStockInfoGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestStockInfoGmUserPmd_CS();
  virtual ~RequestStockInfoGmUserPmd_CS();

  RequestStockInfoGmUserPmd_CS(const RequestStockInfoGmUserPmd_CS& from);

  inline RequestStockInfoGmUserPmd_CS& operator=(const RequestStockInfoGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestStockInfoGmUserPmd_CS& default_instance();

  void Swap(RequestStockInfoGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestStockInfoGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestStockInfoGmUserPmd_CS& from);
  void MergeFrom(const RequestStockInfoGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // repeated .Pmd.StockData data = 4;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::Pmd::StockData& data(int index) const;
  inline ::Pmd::StockData* mutable_data(int index);
  inline ::Pmd::StockData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::StockData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::StockData >*
      mutable_data();

  // optional uint32 subgameid = 5;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubgameidFieldNumber = 5;
  inline ::google::protobuf::uint32 subgameid() const;
  inline void set_subgameid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestStockInfoGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::StockData > data_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 subgameid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestStockInfoGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestOnlineUserInfoGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestOnlineUserInfoGmUserPmd_CS();
  virtual ~RequestOnlineUserInfoGmUserPmd_CS();

  RequestOnlineUserInfoGmUserPmd_CS(const RequestOnlineUserInfoGmUserPmd_CS& from);

  inline RequestOnlineUserInfoGmUserPmd_CS& operator=(const RequestOnlineUserInfoGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOnlineUserInfoGmUserPmd_CS& default_instance();

  void Swap(RequestOnlineUserInfoGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestOnlineUserInfoGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestOnlineUserInfoGmUserPmd_CS& from);
  void MergeFrom(const RequestOnlineUserInfoGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 isonline = 5;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsonlineFieldNumber = 5;
  inline ::google::protobuf::uint32 isonline() const;
  inline void set_isonline(::google::protobuf::uint32 value);

  // optional uint32 gmid = 6;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 6;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 7;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 7;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 8;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 8;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 9;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 9;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // repeated .Pmd.UserInfo data = 10;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 10;
  inline const ::Pmd::UserInfo& data(int index) const;
  inline ::Pmd::UserInfo* mutable_data(int index);
  inline ::Pmd::UserInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::UserInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::UserInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.RequestOnlineUserInfoGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_isonline();
  inline void clear_has_isonline();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 isonline_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::UserInfo > data_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestOnlineUserInfoGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RedPacketsInfo : public ::google::protobuf::Message {
 public:
  RedPacketsInfo();
  virtual ~RedPacketsInfo();

  RedPacketsInfo(const RedPacketsInfo& from);

  inline RedPacketsInfo& operator=(const RedPacketsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RedPacketsInfo& default_instance();

  void Swap(RedPacketsInfo* other);

  // implements Message ----------------------------------------------

  RedPacketsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RedPacketsInfo& from);
  void MergeFrom(const RedPacketsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required uint64 srcuid = 2;
  inline bool has_srcuid() const;
  inline void clear_srcuid();
  static const int kSrcuidFieldNumber = 2;
  inline ::google::protobuf::uint64 srcuid() const;
  inline void set_srcuid(::google::protobuf::uint64 value);

  // required string srcnickname = 3;
  inline bool has_srcnickname() const;
  inline void clear_srcnickname();
  static const int kSrcnicknameFieldNumber = 3;
  inline const ::std::string& srcnickname() const;
  inline void set_srcnickname(const ::std::string& value);
  inline void set_srcnickname(const char* value);
  inline void set_srcnickname(const char* value, size_t size);
  inline ::std::string* mutable_srcnickname();
  inline ::std::string* release_srcnickname();
  inline void set_allocated_srcnickname(::std::string* srcnickname);

  // required uint64 desuid = 4;
  inline bool has_desuid() const;
  inline void clear_desuid();
  static const int kDesuidFieldNumber = 4;
  inline ::google::protobuf::uint64 desuid() const;
  inline void set_desuid(::google::protobuf::uint64 value);

  // required string desnickname = 5;
  inline bool has_desnickname() const;
  inline void clear_desnickname();
  static const int kDesnicknameFieldNumber = 5;
  inline const ::std::string& desnickname() const;
  inline void set_desnickname(const ::std::string& value);
  inline void set_desnickname(const char* value);
  inline void set_desnickname(const char* value, size_t size);
  inline ::std::string* mutable_desnickname();
  inline ::std::string* release_desnickname();
  inline void set_allocated_desnickname(::std::string* desnickname);

  // required uint64 money = 6;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 6;
  inline ::google::protobuf::uint64 money() const;
  inline void set_money(::google::protobuf::uint64 value);

  // required uint64 recordtime = 7;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordtimeFieldNumber = 7;
  inline ::google::protobuf::uint64 recordtime() const;
  inline void set_recordtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pmd.RedPacketsInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_srcuid();
  inline void clear_has_srcuid();
  inline void set_has_srcnickname();
  inline void clear_has_srcnickname();
  inline void set_has_desuid();
  inline void clear_has_desuid();
  inline void set_has_desnickname();
  inline void clear_has_desnickname();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::google::protobuf::uint64 srcuid_;
  ::std::string* srcnickname_;
  ::google::protobuf::uint64 desuid_;
  ::std::string* desnickname_;
  ::google::protobuf::uint64 money_;
  ::google::protobuf::uint64 recordtime_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RedPacketsInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestRedPacketsGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestRedPacketsGmUserPmd_CS();
  virtual ~RequestRedPacketsGmUserPmd_CS();

  RequestRedPacketsGmUserPmd_CS(const RequestRedPacketsGmUserPmd_CS& from);

  inline RequestRedPacketsGmUserPmd_CS& operator=(const RequestRedPacketsGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRedPacketsGmUserPmd_CS& default_instance();

  void Swap(RequestRedPacketsGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestRedPacketsGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestRedPacketsGmUserPmd_CS& from);
  void MergeFrom(const RequestRedPacketsGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint64 starttime = 4;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 4;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 5;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 5;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // optional uint64 srcuid = 6;
  inline bool has_srcuid() const;
  inline void clear_srcuid();
  static const int kSrcuidFieldNumber = 6;
  inline ::google::protobuf::uint64 srcuid() const;
  inline void set_srcuid(::google::protobuf::uint64 value);

  // optional uint64 desuid = 7;
  inline bool has_desuid() const;
  inline void clear_desuid();
  static const int kDesuidFieldNumber = 7;
  inline ::google::protobuf::uint64 desuid() const;
  inline void set_desuid(::google::protobuf::uint64 value);

  // optional string packetcode = 8;
  inline bool has_packetcode() const;
  inline void clear_packetcode();
  static const int kPacketcodeFieldNumber = 8;
  inline const ::std::string& packetcode() const;
  inline void set_packetcode(const ::std::string& value);
  inline void set_packetcode(const char* value);
  inline void set_packetcode(const char* value, size_t size);
  inline ::std::string* mutable_packetcode();
  inline ::std::string* release_packetcode();
  inline void set_allocated_packetcode(::std::string* packetcode);

  // optional uint32 curpage = 9;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 9;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 10;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 10;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 11;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 11;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // repeated .Pmd.RedPacketsInfo data = 12;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 12;
  inline const ::Pmd::RedPacketsInfo& data(int index) const;
  inline ::Pmd::RedPacketsInfo* mutable_data(int index);
  inline ::Pmd::RedPacketsInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::RedPacketsInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::RedPacketsInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.RequestRedPacketsGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_srcuid();
  inline void clear_has_srcuid();
  inline void set_has_desuid();
  inline void clear_has_desuid();
  inline void set_has_packetcode();
  inline void clear_has_packetcode();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint64 srcuid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint64 desuid_;
  ::std::string* packetcode_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::RedPacketsInfo > data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestRedPacketsGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class SubgameList : public ::google::protobuf::Message {
 public:
  SubgameList();
  virtual ~SubgameList();

  SubgameList(const SubgameList& from);

  inline SubgameList& operator=(const SubgameList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubgameList& default_instance();

  void Swap(SubgameList* other);

  // implements Message ----------------------------------------------

  SubgameList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubgameList& from);
  void MergeFrom(const SubgameList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint64 gameid() const;
  inline void set_gameid(::google::protobuf::uint64 value);

  // optional uint64 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint64 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint64 value);

  // required string gamename = 3;
  inline bool has_gamename() const;
  inline void clear_gamename();
  static const int kGamenameFieldNumber = 3;
  inline const ::std::string& gamename() const;
  inline void set_gamename(const ::std::string& value);
  inline void set_gamename(const char* value);
  inline void set_gamename(const char* value, size_t size);
  inline ::std::string* mutable_gamename();
  inline ::std::string* release_gamename();
  inline void set_allocated_gamename(::std::string* gamename);

  // optional string zonename = 4;
  inline bool has_zonename() const;
  inline void clear_zonename();
  static const int kZonenameFieldNumber = 4;
  inline const ::std::string& zonename() const;
  inline void set_zonename(const ::std::string& value);
  inline void set_zonename(const char* value);
  inline void set_zonename(const char* value, size_t size);
  inline ::std::string* mutable_zonename();
  inline ::std::string* release_zonename();
  inline void set_allocated_zonename(::std::string* zonename);

  // @@protoc_insertion_point(class_scope:Pmd.SubgameList)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gamename();
  inline void clear_has_gamename();
  inline void set_has_zonename();
  inline void clear_has_zonename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint64 zoneid_;
  ::std::string* gamename_;
  ::std::string* zonename_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static SubgameList* default_instance_;
};
// -------------------------------------------------------------------

class RequestedSubgameListGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestedSubgameListGmUserPmd_CS();
  virtual ~RequestedSubgameListGmUserPmd_CS();

  RequestedSubgameListGmUserPmd_CS(const RequestedSubgameListGmUserPmd_CS& from);

  inline RequestedSubgameListGmUserPmd_CS& operator=(const RequestedSubgameListGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestedSubgameListGmUserPmd_CS& default_instance();

  void Swap(RequestedSubgameListGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestedSubgameListGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestedSubgameListGmUserPmd_CS& from);
  void MergeFrom(const RequestedSubgameListGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // repeated .Pmd.SubgameList data = 4;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::Pmd::SubgameList& data(int index) const;
  inline ::Pmd::SubgameList* mutable_data(int index);
  inline ::Pmd::SubgameList* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::SubgameList >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::SubgameList >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.RequestedSubgameListGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::SubgameList > data_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestedSubgameListGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class WinLoseInfo : public ::google::protobuf::Message {
 public:
  WinLoseInfo();
  virtual ~WinLoseInfo();

  WinLoseInfo(const WinLoseInfo& from);

  inline WinLoseInfo& operator=(const WinLoseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WinLoseInfo& default_instance();

  void Swap(WinLoseInfo* other);

  // implements Message ----------------------------------------------

  WinLoseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WinLoseInfo& from);
  void MergeFrom(const WinLoseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string charname = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // required uint32 viplevel = 4;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 4;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // required uint32 isonline = 5;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsonlineFieldNumber = 5;
  inline ::google::protobuf::uint32 isonline() const;
  inline void set_isonline(::google::protobuf::uint32 value);

  // required int64 totalnum = 6;
  inline bool has_totalnum() const;
  inline void clear_totalnum();
  static const int kTotalnumFieldNumber = 6;
  inline ::google::protobuf::int64 totalnum() const;
  inline void set_totalnum(::google::protobuf::int64 value);

  // required uint64 curnum = 7;
  inline bool has_curnum() const;
  inline void clear_curnum();
  static const int kCurnumFieldNumber = 7;
  inline ::google::protobuf::uint64 curnum() const;
  inline void set_curnum(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pmd.WinLoseInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_isonline();
  inline void clear_has_isonline();
  inline void set_has_totalnum();
  inline void clear_has_totalnum();
  inline void set_has_curnum();
  inline void clear_has_curnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 viplevel_;
  ::std::string* charname_;
  ::google::protobuf::int64 totalnum_;
  ::google::protobuf::uint64 curnum_;
  ::google::protobuf::uint32 isonline_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static WinLoseInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestWinningListGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestWinningListGmUserPmd_CS();
  virtual ~RequestWinningListGmUserPmd_CS();

  RequestWinningListGmUserPmd_CS(const RequestWinningListGmUserPmd_CS& from);

  inline RequestWinningListGmUserPmd_CS& operator=(const RequestWinningListGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestWinningListGmUserPmd_CS& default_instance();

  void Swap(RequestWinningListGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestWinningListGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestWinningListGmUserPmd_CS& from);
  void MergeFrom(const RequestWinningListGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 subgameid = 4;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubgameidFieldNumber = 4;
  inline ::google::protobuf::uint32 subgameid() const;
  inline void set_subgameid(::google::protobuf::uint32 value);

  // optional uint64 timestamp = 5;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // optional uint32 curpage = 6;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 6;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 7;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 7;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 8;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 8;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // repeated .Pmd.WinLoseInfo data = 9;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 9;
  inline const ::Pmd::WinLoseInfo& data(int index) const;
  inline ::Pmd::WinLoseInfo* mutable_data(int index);
  inline ::Pmd::WinLoseInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::WinLoseInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::WinLoseInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.RequestWinningListGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 subgameid_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::WinLoseInfo > data_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestWinningListGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class BlackWhitelistInfo : public ::google::protobuf::Message {
 public:
  BlackWhitelistInfo();
  virtual ~BlackWhitelistInfo();

  BlackWhitelistInfo(const BlackWhitelistInfo& from);

  inline BlackWhitelistInfo& operator=(const BlackWhitelistInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlackWhitelistInfo& default_instance();

  void Swap(BlackWhitelistInfo* other);

  // implements Message ----------------------------------------------

  BlackWhitelistInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlackWhitelistInfo& from);
  void MergeFrom(const BlackWhitelistInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 subgameid = 4;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubgameidFieldNumber = 4;
  inline ::google::protobuf::uint32 subgameid() const;
  inline void set_subgameid(::google::protobuf::uint32 value);

  // optional uint32 setchips = 5;
  inline bool has_setchips() const;
  inline void clear_setchips();
  static const int kSetchipsFieldNumber = 5;
  inline ::google::protobuf::uint32 setchips() const;
  inline void set_setchips(::google::protobuf::uint32 value);

  // optional uint32 curchips = 6;
  inline bool has_curchips() const;
  inline void clear_curchips();
  static const int kCurchipsFieldNumber = 6;
  inline ::google::protobuf::uint32 curchips() const;
  inline void set_curchips(::google::protobuf::uint32 value);

  // optional uint32 winrate = 7;
  inline bool has_winrate() const;
  inline void clear_winrate();
  static const int kWinrateFieldNumber = 7;
  inline ::google::protobuf::uint32 winrate() const;
  inline void set_winrate(::google::protobuf::uint32 value);

  // optional uint32 state = 8;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 8;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 type = 9;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 9;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 settimes = 10;
  inline bool has_settimes() const;
  inline void clear_settimes();
  static const int kSettimesFieldNumber = 10;
  inline ::google::protobuf::uint32 settimes() const;
  inline void set_settimes(::google::protobuf::uint32 value);

  // optional uint32 curtimes = 11;
  inline bool has_curtimes() const;
  inline void clear_curtimes();
  static const int kCurtimesFieldNumber = 11;
  inline ::google::protobuf::uint32 curtimes() const;
  inline void set_curtimes(::google::protobuf::uint32 value);

  // optional uint32 intervaltimes = 12;
  inline bool has_intervaltimes() const;
  inline void clear_intervaltimes();
  static const int kIntervaltimesFieldNumber = 12;
  inline ::google::protobuf::uint32 intervaltimes() const;
  inline void set_intervaltimes(::google::protobuf::uint32 value);

  // optional uint64 recordtime = 13;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordtimeFieldNumber = 13;
  inline ::google::protobuf::uint64 recordtime() const;
  inline void set_recordtime(::google::protobuf::uint64 value);

  // optional uint32 gameid = 14;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 14;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 15;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 15;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.BlackWhitelistInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();
  inline void set_has_setchips();
  inline void clear_has_setchips();
  inline void set_has_curchips();
  inline void clear_has_curchips();
  inline void set_has_winrate();
  inline void clear_has_winrate();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_settimes();
  inline void clear_has_settimes();
  inline void set_has_curtimes();
  inline void clear_has_curtimes();
  inline void set_has_intervaltimes();
  inline void clear_has_intervaltimes();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 subgameid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 setchips_;
  ::google::protobuf::uint32 curchips_;
  ::google::protobuf::uint32 winrate_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 settimes_;
  ::google::protobuf::uint32 curtimes_;
  ::google::protobuf::uint32 intervaltimes_;
  ::google::protobuf::uint64 recordtime_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static BlackWhitelistInfo* default_instance_;
};
// -------------------------------------------------------------------

class AddBlackWhitelistGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  AddBlackWhitelistGmUserPmd_CS();
  virtual ~AddBlackWhitelistGmUserPmd_CS();

  AddBlackWhitelistGmUserPmd_CS(const AddBlackWhitelistGmUserPmd_CS& from);

  inline AddBlackWhitelistGmUserPmd_CS& operator=(const AddBlackWhitelistGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddBlackWhitelistGmUserPmd_CS& default_instance();

  void Swap(AddBlackWhitelistGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  AddBlackWhitelistGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddBlackWhitelistGmUserPmd_CS& from);
  void MergeFrom(const AddBlackWhitelistGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 subgameid = 3;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubgameidFieldNumber = 3;
  inline ::google::protobuf::uint32 subgameid() const;
  inline void set_subgameid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // repeated .Pmd.BlackWhitelistInfo data = 5;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::Pmd::BlackWhitelistInfo& data(int index) const;
  inline ::Pmd::BlackWhitelistInfo* mutable_data(int index);
  inline ::Pmd::BlackWhitelistInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo >*
      mutable_data();

  // optional uint32 retcode = 6;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 6;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 7;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 7;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.AddBlackWhitelistGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 subgameid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo > data_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static AddBlackWhitelistGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class ModBlackWhitelistGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  ModBlackWhitelistGmUserPmd_CS();
  virtual ~ModBlackWhitelistGmUserPmd_CS();

  ModBlackWhitelistGmUserPmd_CS(const ModBlackWhitelistGmUserPmd_CS& from);

  inline ModBlackWhitelistGmUserPmd_CS& operator=(const ModBlackWhitelistGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModBlackWhitelistGmUserPmd_CS& default_instance();

  void Swap(ModBlackWhitelistGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  ModBlackWhitelistGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModBlackWhitelistGmUserPmd_CS& from);
  void MergeFrom(const ModBlackWhitelistGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 subgameid = 3;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubgameidFieldNumber = 3;
  inline ::google::protobuf::uint32 subgameid() const;
  inline void set_subgameid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // required .Pmd.BlackWhitelistInfo data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::Pmd::BlackWhitelistInfo& data() const;
  inline ::Pmd::BlackWhitelistInfo* mutable_data();
  inline ::Pmd::BlackWhitelistInfo* release_data();
  inline void set_allocated_data(::Pmd::BlackWhitelistInfo* data);

  // optional uint32 retcode = 6;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 6;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 7;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 7;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.ModBlackWhitelistGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 subgameid_;
  ::google::protobuf::uint32 gmid_;
  ::Pmd::BlackWhitelistInfo* data_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ModBlackWhitelistGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class DelBlackWhitelistGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  DelBlackWhitelistGmUserPmd_CS();
  virtual ~DelBlackWhitelistGmUserPmd_CS();

  DelBlackWhitelistGmUserPmd_CS(const DelBlackWhitelistGmUserPmd_CS& from);

  inline DelBlackWhitelistGmUserPmd_CS& operator=(const DelBlackWhitelistGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelBlackWhitelistGmUserPmd_CS& default_instance();

  void Swap(DelBlackWhitelistGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  DelBlackWhitelistGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelBlackWhitelistGmUserPmd_CS& from);
  void MergeFrom(const DelBlackWhitelistGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 subgameid = 3;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubgameidFieldNumber = 3;
  inline ::google::protobuf::uint32 subgameid() const;
  inline void set_subgameid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // repeated uint32 ids = 5;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 5;
  inline ::google::protobuf::uint32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint32 value);
  inline void add_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ids();

  // optional uint32 retcode = 6;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 6;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 7;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 7;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.DelBlackWhitelistGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 subgameid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static DelBlackWhitelistGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestBlackWhitelistGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestBlackWhitelistGmUserPmd_CS();
  virtual ~RequestBlackWhitelistGmUserPmd_CS();

  RequestBlackWhitelistGmUserPmd_CS(const RequestBlackWhitelistGmUserPmd_CS& from);

  inline RequestBlackWhitelistGmUserPmd_CS& operator=(const RequestBlackWhitelistGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestBlackWhitelistGmUserPmd_CS& default_instance();

  void Swap(RequestBlackWhitelistGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestBlackWhitelistGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestBlackWhitelistGmUserPmd_CS& from);
  void MergeFrom(const RequestBlackWhitelistGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 subgameid = 3;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubgameidFieldNumber = 3;
  inline ::google::protobuf::uint32 subgameid() const;
  inline void set_subgameid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint64 charid = 6;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 6;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 7;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 7;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint64 starttime = 8;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 8;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 9;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 9;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // optional uint32 curpage = 10;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 10;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 11;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 11;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 12;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 12;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // repeated .Pmd.BlackWhitelistInfo data = 13;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 13;
  inline const ::Pmd::BlackWhitelistInfo& data(int index) const;
  inline ::Pmd::BlackWhitelistInfo* mutable_data(int index);
  inline ::Pmd::BlackWhitelistInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.RequestBlackWhitelistGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 subgameid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo > data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestBlackWhitelistGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class GmMailInfo : public ::google::protobuf::Message {
 public:
  GmMailInfo();
  virtual ~GmMailInfo();

  GmMailInfo(const GmMailInfo& from);

  inline GmMailInfo& operator=(const GmMailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GmMailInfo& default_instance();

  void Swap(GmMailInfo* other);

  // implements Message ----------------------------------------------

  GmMailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GmMailInfo& from);
  void MergeFrom(const GmMailInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 gmid = 5;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 5;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint64 charid = 6;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 6;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 7;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 7;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional string subject = 8;
  inline bool has_subject() const;
  inline void clear_subject();
  static const int kSubjectFieldNumber = 8;
  inline const ::std::string& subject() const;
  inline void set_subject(const ::std::string& value);
  inline void set_subject(const char* value);
  inline void set_subject(const char* value, size_t size);
  inline ::std::string* mutable_subject();
  inline ::std::string* release_subject();
  inline void set_allocated_subject(::std::string* subject);

  // optional string content = 9;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 9;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // repeated .Pmd.ItemInfo attachment = 10;
  inline int attachment_size() const;
  inline void clear_attachment();
  static const int kAttachmentFieldNumber = 10;
  inline const ::Pmd::ItemInfo& attachment(int index) const;
  inline ::Pmd::ItemInfo* mutable_attachment(int index);
  inline ::Pmd::ItemInfo* add_attachment();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo >&
      attachment() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo >*
      mutable_attachment();

  // optional uint32 state = 11;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 11;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 recordtime = 12;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordtimeFieldNumber = 12;
  inline ::google::protobuf::uint32 recordtime() const;
  inline void set_recordtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.GmMailInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_subject();
  inline void clear_has_subject();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::std::string* subject_;
  ::std::string* content_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo > attachment_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 recordtime_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static GmMailInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestSendMailGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestSendMailGmUserPmd_CS();
  virtual ~RequestSendMailGmUserPmd_CS();

  RequestSendMailGmUserPmd_CS(const RequestSendMailGmUserPmd_CS& from);

  inline RequestSendMailGmUserPmd_CS& operator=(const RequestSendMailGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestSendMailGmUserPmd_CS& default_instance();

  void Swap(RequestSendMailGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestSendMailGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestSendMailGmUserPmd_CS& from);
  void MergeFrom(const RequestSendMailGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional .Pmd.GmMailInfo data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Pmd::GmMailInfo& data() const;
  inline ::Pmd::GmMailInfo* mutable_data();
  inline ::Pmd::GmMailInfo* release_data();
  inline void set_allocated_data(::Pmd::GmMailInfo* data);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 retcode = 5;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 6;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 6;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.RequestSendMailGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::Pmd::GmMailInfo* data_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 retcode_;
  ::std::string* retdesc_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestSendMailGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class LoginRecordData : public ::google::protobuf::Message {
 public:
  LoginRecordData();
  virtual ~LoginRecordData();

  LoginRecordData(const LoginRecordData& from);

  inline LoginRecordData& operator=(const LoginRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRecordData& default_instance();

  void Swap(LoginRecordData* other);

  // implements Message ----------------------------------------------

  LoginRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRecordData& from);
  void MergeFrom(const LoginRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint64 accid = 3;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 3;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 5;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 5;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 userlevel = 6;
  inline bool has_userlevel() const;
  inline void clear_userlevel();
  static const int kUserlevelFieldNumber = 6;
  inline ::google::protobuf::uint32 userlevel() const;
  inline void set_userlevel(::google::protobuf::uint32 value);

  // optional uint32 viplevel = 7;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 7;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // optional uint32 gold = 8;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 8;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 money = 9;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 9;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // optional uint32 power = 10;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 10;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);

  // optional uint32 guid = 11;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 11;
  inline ::google::protobuf::uint32 guid() const;
  inline void set_guid(::google::protobuf::uint32 value);

  // optional string imei = 12;
  inline bool has_imei() const;
  inline void clear_imei();
  static const int kImeiFieldNumber = 12;
  inline const ::std::string& imei() const;
  inline void set_imei(const ::std::string& value);
  inline void set_imei(const char* value);
  inline void set_imei(const char* value, size_t size);
  inline ::std::string* mutable_imei();
  inline ::std::string* release_imei();
  inline void set_allocated_imei(::std::string* imei);

  // optional string ip = 13;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 13;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional string mac = 14;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 14;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  inline ::std::string* release_mac();
  inline void set_allocated_mac(::std::string* mac);

  // optional uint64 ts = 15;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 15;
  inline ::google::protobuf::uint64 ts() const;
  inline void set_ts(::google::protobuf::uint64 value);

  // optional uint32 onlinemin = 16;
  inline bool has_onlinemin() const;
  inline void clear_onlinemin();
  static const int kOnlineminFieldNumber = 16;
  inline ::google::protobuf::uint32 onlinemin() const;
  inline void set_onlinemin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.LoginRecordData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_userlevel();
  inline void clear_has_userlevel();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_imei();
  inline void clear_has_imei();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_mac();
  inline void clear_has_mac();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_onlinemin();
  inline void clear_has_onlinemin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 userlevel_;
  ::std::string* charname_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 power_;
  ::std::string* imei_;
  ::std::string* ip_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 onlinemin_;
  ::std::string* mac_;
  ::google::protobuf::uint64 ts_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static LoginRecordData* default_instance_;
};
// -------------------------------------------------------------------

class RequestLoginRecordGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestLoginRecordGmUserPmd_CS();
  virtual ~RequestLoginRecordGmUserPmd_CS();

  RequestLoginRecordGmUserPmd_CS(const RequestLoginRecordGmUserPmd_CS& from);

  inline RequestLoginRecordGmUserPmd_CS& operator=(const RequestLoginRecordGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestLoginRecordGmUserPmd_CS& default_instance();

  void Swap(RequestLoginRecordGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestLoginRecordGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestLoginRecordGmUserPmd_CS& from);
  void MergeFrom(const RequestLoginRecordGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 accid = 3;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 3;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 starttime = 5;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 5;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 6;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 6;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // repeated .Pmd.LoginRecordData data = 7;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 7;
  inline const ::Pmd::LoginRecordData& data(int index) const;
  inline ::Pmd::LoginRecordData* mutable_data(int index);
  inline ::Pmd::LoginRecordData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::LoginRecordData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::LoginRecordData >*
      mutable_data();

  // optional uint32 gmid = 8;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 8;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 9;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 9;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 10;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 10;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 11;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 11;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestLoginRecordGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::LoginRecordData > data_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestLoginRecordGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class ConsumeRecordData : public ::google::protobuf::Message {
 public:
  ConsumeRecordData();
  virtual ~ConsumeRecordData();

  ConsumeRecordData(const ConsumeRecordData& from);

  inline ConsumeRecordData& operator=(const ConsumeRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsumeRecordData& default_instance();

  void Swap(ConsumeRecordData* other);

  // implements Message ----------------------------------------------

  ConsumeRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConsumeRecordData& from);
  void MergeFrom(const ConsumeRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 itemtype = 5;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);

  // optional uint32 itemid = 6;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 6;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional string itemname = 7;
  inline bool has_itemname() const;
  inline void clear_itemname();
  static const int kItemnameFieldNumber = 7;
  inline const ::std::string& itemname() const;
  inline void set_itemname(const ::std::string& value);
  inline void set_itemname(const char* value);
  inline void set_itemname(const char* value, size_t size);
  inline ::std::string* mutable_itemname();
  inline ::std::string* release_itemname();
  inline void set_allocated_itemname(::std::string* itemname);

  // optional uint32 optype = 8;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 8;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // optional uint32 actionid = 9;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionidFieldNumber = 9;
  inline ::google::protobuf::uint32 actionid() const;
  inline void set_actionid(::google::protobuf::uint32 value);

  // optional string actionname = 10;
  inline bool has_actionname() const;
  inline void clear_actionname();
  static const int kActionnameFieldNumber = 10;
  inline const ::std::string& actionname() const;
  inline void set_actionname(const ::std::string& value);
  inline void set_actionname(const char* value);
  inline void set_actionname(const char* value, size_t size);
  inline ::std::string* mutable_actionname();
  inline ::std::string* release_actionname();
  inline void set_allocated_actionname(::std::string* actionname);

  // optional uint32 beforenum = 11;
  inline bool has_beforenum() const;
  inline void clear_beforenum();
  static const int kBeforenumFieldNumber = 11;
  inline ::google::protobuf::uint32 beforenum() const;
  inline void set_beforenum(::google::protobuf::uint32 value);

  // optional uint32 afternum = 12;
  inline bool has_afternum() const;
  inline void clear_afternum();
  static const int kAfternumFieldNumber = 12;
  inline ::google::protobuf::uint32 afternum() const;
  inline void set_afternum(::google::protobuf::uint32 value);

  // optional uint32 usednum = 13;
  inline bool has_usednum() const;
  inline void clear_usednum();
  static const int kUsednumFieldNumber = 13;
  inline ::google::protobuf::uint32 usednum() const;
  inline void set_usednum(::google::protobuf::uint32 value);

  // optional uint64 ts = 14;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 14;
  inline ::google::protobuf::uint64 ts() const;
  inline void set_ts(::google::protobuf::uint64 value);

  // optional string ext = 15;
  inline bool has_ext() const;
  inline void clear_ext();
  static const int kExtFieldNumber = 15;
  inline const ::std::string& ext() const;
  inline void set_ext(const ::std::string& value);
  inline void set_ext(const char* value);
  inline void set_ext(const char* value, size_t size);
  inline ::std::string* mutable_ext();
  inline ::std::string* release_ext();
  inline void set_allocated_ext(::std::string* ext);

  // @@protoc_insertion_point(class_scope:Pmd.ConsumeRecordData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemname();
  inline void clear_has_itemname();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_actionid();
  inline void clear_has_actionid();
  inline void set_has_actionname();
  inline void clear_has_actionname();
  inline void set_has_beforenum();
  inline void clear_has_beforenum();
  inline void set_has_afternum();
  inline void clear_has_afternum();
  inline void set_has_usednum();
  inline void clear_has_usednum();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_ext();
  inline void clear_has_ext();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 itemtype_;
  ::google::protobuf::uint32 itemid_;
  ::std::string* itemname_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 actionid_;
  ::std::string* actionname_;
  ::google::protobuf::uint32 beforenum_;
  ::google::protobuf::uint32 afternum_;
  ::google::protobuf::uint64 ts_;
  ::std::string* ext_;
  ::google::protobuf::uint32 usednum_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ConsumeRecordData* default_instance_;
};
// -------------------------------------------------------------------

class RequestConsumeRecordGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestConsumeRecordGmUserPmd_CS();
  virtual ~RequestConsumeRecordGmUserPmd_CS();

  RequestConsumeRecordGmUserPmd_CS(const RequestConsumeRecordGmUserPmd_CS& from);

  inline RequestConsumeRecordGmUserPmd_CS& operator=(const RequestConsumeRecordGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestConsumeRecordGmUserPmd_CS& default_instance();

  void Swap(RequestConsumeRecordGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestConsumeRecordGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestConsumeRecordGmUserPmd_CS& from);
  void MergeFrom(const RequestConsumeRecordGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 itemid = 5;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 5;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 optype = 6;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 6;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // optional uint32 actionid = 7;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionidFieldNumber = 7;
  inline ::google::protobuf::uint32 actionid() const;
  inline void set_actionid(::google::protobuf::uint32 value);

  // optional uint64 starttime = 8;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 8;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 9;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 9;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // repeated .Pmd.ConsumeRecordData data = 10;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 10;
  inline const ::Pmd::ConsumeRecordData& data(int index) const;
  inline ::Pmd::ConsumeRecordData* mutable_data(int index);
  inline ::Pmd::ConsumeRecordData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ConsumeRecordData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::ConsumeRecordData >*
      mutable_data();

  // optional uint32 gmid = 11;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 11;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 12;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 12;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 13;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 13;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 14;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 14;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestConsumeRecordGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_actionid();
  inline void clear_has_actionid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 actionid_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::ConsumeRecordData > data_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestConsumeRecordGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class ActionRecordData : public ::google::protobuf::Message {
 public:
  ActionRecordData();
  virtual ~ActionRecordData();

  ActionRecordData(const ActionRecordData& from);

  inline ActionRecordData& operator=(const ActionRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionRecordData& default_instance();

  void Swap(ActionRecordData* other);

  // implements Message ----------------------------------------------

  ActionRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionRecordData& from);
  void MergeFrom(const ActionRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 acttype = 5;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 acttype() const;
  inline void set_acttype(::google::protobuf::uint32 value);

  // optional string typename = 6;
  inline bool has_typename_() const;
  inline void clear_typename_();
  static const int kTypenameFieldNumber = 6;
  inline const ::std::string& typename_() const;
  inline void set_typename_(const ::std::string& value);
  inline void set_typename_(const char* value);
  inline void set_typename_(const char* value, size_t size);
  inline ::std::string* mutable_typename_();
  inline ::std::string* release_typename_();
  inline void set_allocated_typename_(::std::string* typename_);

  // optional uint32 actionid = 7;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionidFieldNumber = 7;
  inline ::google::protobuf::uint32 actionid() const;
  inline void set_actionid(::google::protobuf::uint32 value);

  // optional string actionname = 8;
  inline bool has_actionname() const;
  inline void clear_actionname();
  static const int kActionnameFieldNumber = 8;
  inline const ::std::string& actionname() const;
  inline void set_actionname(const ::std::string& value);
  inline void set_actionname(const char* value);
  inline void set_actionname(const char* value, size_t size);
  inline ::std::string* mutable_actionname();
  inline ::std::string* release_actionname();
  inline void set_allocated_actionname(::std::string* actionname);

  // optional uint32 state = 9;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 9;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 power = 10;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 10;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);

  // optional uint32 lastmin = 11;
  inline bool has_lastmin() const;
  inline void clear_lastmin();
  static const int kLastminFieldNumber = 11;
  inline ::google::protobuf::uint32 lastmin() const;
  inline void set_lastmin(::google::protobuf::uint32 value);

  // optional uint64 starttime = 12;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 12;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 13;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 13;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // optional string ext1 = 14;
  inline bool has_ext1() const;
  inline void clear_ext1();
  static const int kExt1FieldNumber = 14;
  inline const ::std::string& ext1() const;
  inline void set_ext1(const ::std::string& value);
  inline void set_ext1(const char* value);
  inline void set_ext1(const char* value, size_t size);
  inline ::std::string* mutable_ext1();
  inline ::std::string* release_ext1();
  inline void set_allocated_ext1(::std::string* ext1);

  // optional string ext2 = 15;
  inline bool has_ext2() const;
  inline void clear_ext2();
  static const int kExt2FieldNumber = 15;
  inline const ::std::string& ext2() const;
  inline void set_ext2(const ::std::string& value);
  inline void set_ext2(const char* value);
  inline void set_ext2(const char* value, size_t size);
  inline ::std::string* mutable_ext2();
  inline ::std::string* release_ext2();
  inline void set_allocated_ext2(::std::string* ext2);

  // @@protoc_insertion_point(class_scope:Pmd.ActionRecordData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_acttype();
  inline void clear_has_acttype();
  inline void set_has_typename_();
  inline void clear_has_typename_();
  inline void set_has_actionid();
  inline void clear_has_actionid();
  inline void set_has_actionname();
  inline void clear_has_actionname();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_lastmin();
  inline void clear_has_lastmin();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_ext1();
  inline void clear_has_ext1();
  inline void set_has_ext2();
  inline void clear_has_ext2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::std::string* typename__;
  ::google::protobuf::uint32 acttype_;
  ::google::protobuf::uint32 actionid_;
  ::std::string* actionname_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 power_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::std::string* ext1_;
  ::std::string* ext2_;
  ::google::protobuf::uint32 lastmin_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ActionRecordData* default_instance_;
};
// -------------------------------------------------------------------

class RequestActionRecordGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestActionRecordGmUserPmd_CS();
  virtual ~RequestActionRecordGmUserPmd_CS();

  RequestActionRecordGmUserPmd_CS(const RequestActionRecordGmUserPmd_CS& from);

  inline RequestActionRecordGmUserPmd_CS& operator=(const RequestActionRecordGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestActionRecordGmUserPmd_CS& default_instance();

  void Swap(RequestActionRecordGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestActionRecordGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestActionRecordGmUserPmd_CS& from);
  void MergeFrom(const RequestActionRecordGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 acttype = 5;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 acttype() const;
  inline void set_acttype(::google::protobuf::uint32 value);

  // optional uint32 actionid = 6;
  inline bool has_actionid() const;
  inline void clear_actionid();
  static const int kActionidFieldNumber = 6;
  inline ::google::protobuf::uint32 actionid() const;
  inline void set_actionid(::google::protobuf::uint32 value);

  // optional uint64 starttime = 7;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 7;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 8;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 8;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // repeated .Pmd.ActionRecordData data = 9;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 9;
  inline const ::Pmd::ActionRecordData& data(int index) const;
  inline ::Pmd::ActionRecordData* mutable_data(int index);
  inline ::Pmd::ActionRecordData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ActionRecordData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::ActionRecordData >*
      mutable_data();

  // optional uint32 gmid = 10;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 10;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 11;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 11;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 12;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 12;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 13;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 13;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestActionRecordGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_acttype();
  inline void clear_has_acttype();
  inline void set_has_actionid();
  inline void clear_has_actionid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 acttype_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 actionid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::ActionRecordData > data_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestActionRecordGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class StrengthenRecordData : public ::google::protobuf::Message {
 public:
  StrengthenRecordData();
  virtual ~StrengthenRecordData();

  StrengthenRecordData(const StrengthenRecordData& from);

  inline StrengthenRecordData& operator=(const StrengthenRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StrengthenRecordData& default_instance();

  void Swap(StrengthenRecordData* other);

  // implements Message ----------------------------------------------

  StrengthenRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StrengthenRecordData& from);
  void MergeFrom(const StrengthenRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 optarget = 5;
  inline bool has_optarget() const;
  inline void clear_optarget();
  static const int kOptargetFieldNumber = 5;
  inline ::google::protobuf::uint32 optarget() const;
  inline void set_optarget(::google::protobuf::uint32 value);

  // optional string targetname = 6;
  inline bool has_targetname() const;
  inline void clear_targetname();
  static const int kTargetnameFieldNumber = 6;
  inline const ::std::string& targetname() const;
  inline void set_targetname(const ::std::string& value);
  inline void set_targetname(const char* value);
  inline void set_targetname(const char* value, size_t size);
  inline ::std::string* mutable_targetname();
  inline ::std::string* release_targetname();
  inline void set_allocated_targetname(::std::string* targetname);

  // optional uint32 optype = 7;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 7;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // optional string typename = 8;
  inline bool has_typename_() const;
  inline void clear_typename_();
  static const int kTypenameFieldNumber = 8;
  inline const ::std::string& typename_() const;
  inline void set_typename_(const ::std::string& value);
  inline void set_typename_(const char* value);
  inline void set_typename_(const char* value, size_t size);
  inline ::std::string* mutable_typename_();
  inline ::std::string* release_typename_();
  inline void set_allocated_typename_(::std::string* typename_);

  // optional uint32 opresult = 9;
  inline bool has_opresult() const;
  inline void clear_opresult();
  static const int kOpresultFieldNumber = 9;
  inline ::google::protobuf::uint32 opresult() const;
  inline void set_opresult(::google::protobuf::uint32 value);

  // optional uint32 beforenum = 10;
  inline bool has_beforenum() const;
  inline void clear_beforenum();
  static const int kBeforenumFieldNumber = 10;
  inline ::google::protobuf::uint32 beforenum() const;
  inline void set_beforenum(::google::protobuf::uint32 value);

  // optional uint32 afternum = 11;
  inline bool has_afternum() const;
  inline void clear_afternum();
  static const int kAfternumFieldNumber = 11;
  inline ::google::protobuf::uint32 afternum() const;
  inline void set_afternum(::google::protobuf::uint32 value);

  // optional uint64 ts = 12;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 12;
  inline ::google::protobuf::uint64 ts() const;
  inline void set_ts(::google::protobuf::uint64 value);

  // optional string ext = 13;
  inline bool has_ext() const;
  inline void clear_ext();
  static const int kExtFieldNumber = 13;
  inline const ::std::string& ext() const;
  inline void set_ext(const ::std::string& value);
  inline void set_ext(const char* value);
  inline void set_ext(const char* value, size_t size);
  inline ::std::string* mutable_ext();
  inline ::std::string* release_ext();
  inline void set_allocated_ext(::std::string* ext);

  // @@protoc_insertion_point(class_scope:Pmd.StrengthenRecordData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_optarget();
  inline void clear_has_optarget();
  inline void set_has_targetname();
  inline void clear_has_targetname();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_typename_();
  inline void clear_has_typename_();
  inline void set_has_opresult();
  inline void clear_has_opresult();
  inline void set_has_beforenum();
  inline void clear_has_beforenum();
  inline void set_has_afternum();
  inline void clear_has_afternum();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_ext();
  inline void clear_has_ext();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::std::string* targetname_;
  ::google::protobuf::uint32 optarget_;
  ::google::protobuf::uint32 optype_;
  ::std::string* typename__;
  ::google::protobuf::uint32 opresult_;
  ::google::protobuf::uint32 beforenum_;
  ::google::protobuf::uint64 ts_;
  ::std::string* ext_;
  ::google::protobuf::uint32 afternum_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static StrengthenRecordData* default_instance_;
};
// -------------------------------------------------------------------

class RequestStrengthenRecordGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestStrengthenRecordGmUserPmd_CS();
  virtual ~RequestStrengthenRecordGmUserPmd_CS();

  RequestStrengthenRecordGmUserPmd_CS(const RequestStrengthenRecordGmUserPmd_CS& from);

  inline RequestStrengthenRecordGmUserPmd_CS& operator=(const RequestStrengthenRecordGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestStrengthenRecordGmUserPmd_CS& default_instance();

  void Swap(RequestStrengthenRecordGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestStrengthenRecordGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestStrengthenRecordGmUserPmd_CS& from);
  void MergeFrom(const RequestStrengthenRecordGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 optarget = 4;
  inline bool has_optarget() const;
  inline void clear_optarget();
  static const int kOptargetFieldNumber = 4;
  inline ::google::protobuf::uint32 optarget() const;
  inline void set_optarget(::google::protobuf::uint32 value);

  // optional uint32 optype = 5;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 5;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // optional uint32 state = 6;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint64 starttime = 7;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 7;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 8;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 8;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // repeated .Pmd.StrengthenRecordData data = 9;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 9;
  inline const ::Pmd::StrengthenRecordData& data(int index) const;
  inline ::Pmd::StrengthenRecordData* mutable_data(int index);
  inline ::Pmd::StrengthenRecordData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::StrengthenRecordData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::StrengthenRecordData >*
      mutable_data();

  // optional uint32 gmid = 10;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 10;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 11;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 11;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 12;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 12;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 13;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 13;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestStrengthenRecordGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_optarget();
  inline void clear_has_optarget();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 optarget_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::StrengthenRecordData > data_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestStrengthenRecordGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class MailRecordData : public ::google::protobuf::Message {
 public:
  MailRecordData();
  virtual ~MailRecordData();

  MailRecordData(const MailRecordData& from);

  inline MailRecordData& operator=(const MailRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailRecordData& default_instance();

  void Swap(MailRecordData* other);

  // implements Message ----------------------------------------------

  MailRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailRecordData& from);
  void MergeFrom(const MailRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 3;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 3;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint64 recvid = 4;
  inline bool has_recvid() const;
  inline void clear_recvid();
  static const int kRecvidFieldNumber = 4;
  inline ::google::protobuf::uint64 recvid() const;
  inline void set_recvid(::google::protobuf::uint64 value);

  // optional string recvname = 5;
  inline bool has_recvname() const;
  inline void clear_recvname();
  static const int kRecvnameFieldNumber = 5;
  inline const ::std::string& recvname() const;
  inline void set_recvname(const ::std::string& value);
  inline void set_recvname(const char* value);
  inline void set_recvname(const char* value, size_t size);
  inline ::std::string* mutable_recvname();
  inline ::std::string* release_recvname();
  inline void set_allocated_recvname(::std::string* recvname);

  // optional string subject = 6;
  inline bool has_subject() const;
  inline void clear_subject();
  static const int kSubjectFieldNumber = 6;
  inline const ::std::string& subject() const;
  inline void set_subject(const ::std::string& value);
  inline void set_subject(const char* value);
  inline void set_subject(const char* value, size_t size);
  inline ::std::string* mutable_subject();
  inline ::std::string* release_subject();
  inline void set_allocated_subject(::std::string* subject);

  // optional string content = 7;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 7;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional string attachment = 8;
  inline bool has_attachment() const;
  inline void clear_attachment();
  static const int kAttachmentFieldNumber = 8;
  inline const ::std::string& attachment() const;
  inline void set_attachment(const ::std::string& value);
  inline void set_attachment(const char* value);
  inline void set_attachment(const char* value, size_t size);
  inline ::std::string* mutable_attachment();
  inline ::std::string* release_attachment();
  inline void set_allocated_attachment(::std::string* attachment);

  // optional uint32 state = 9;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 9;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint64 ts = 10;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 10;
  inline ::google::protobuf::uint64 ts() const;
  inline void set_ts(::google::protobuf::uint64 value);

  // optional uint32 optype = 11;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 11;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.MailRecordData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_recvid();
  inline void clear_has_recvid();
  inline void set_has_recvname();
  inline void clear_has_recvname();
  inline void set_has_subject();
  inline void clear_has_subject();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_attachment();
  inline void clear_has_attachment();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint64 recvid_;
  ::std::string* recvname_;
  ::std::string* subject_;
  ::std::string* content_;
  ::std::string* attachment_;
  ::google::protobuf::uint64 ts_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static MailRecordData* default_instance_;
};
// -------------------------------------------------------------------

class RequestMailRecordGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestMailRecordGmUserPmd_CS();
  virtual ~RequestMailRecordGmUserPmd_CS();

  RequestMailRecordGmUserPmd_CS(const RequestMailRecordGmUserPmd_CS& from);

  inline RequestMailRecordGmUserPmd_CS& operator=(const RequestMailRecordGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMailRecordGmUserPmd_CS& default_instance();

  void Swap(RequestMailRecordGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestMailRecordGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestMailRecordGmUserPmd_CS& from);
  void MergeFrom(const RequestMailRecordGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint64 recvid = 4;
  inline bool has_recvid() const;
  inline void clear_recvid();
  static const int kRecvidFieldNumber = 4;
  inline ::google::protobuf::uint64 recvid() const;
  inline void set_recvid(::google::protobuf::uint64 value);

  // optional uint32 optype = 5;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 5;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // optional uint64 starttime = 6;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 6;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 7;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 7;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // repeated .Pmd.MailRecordData data = 8;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 8;
  inline const ::Pmd::MailRecordData& data(int index) const;
  inline ::Pmd::MailRecordData* mutable_data(int index);
  inline ::Pmd::MailRecordData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::MailRecordData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::MailRecordData >*
      mutable_data();

  // optional uint32 gmid = 9;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 9;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 10;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 10;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 11;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 11;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 12;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 12;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestMailRecordGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_recvid();
  inline void clear_has_recvid();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 recvid_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::MailRecordData > data_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestMailRecordGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RankRecordData : public ::google::protobuf::Message {
 public:
  RankRecordData();
  virtual ~RankRecordData();

  RankRecordData(const RankRecordData& from);

  inline RankRecordData& operator=(const RankRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankRecordData& default_instance();

  void Swap(RankRecordData* other);

  // implements Message ----------------------------------------------

  RankRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankRecordData& from);
  void MergeFrom(const RankRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 rankid = 2;
  inline bool has_rankid() const;
  inline void clear_rankid();
  static const int kRankidFieldNumber = 2;
  inline ::google::protobuf::uint64 rankid() const;
  inline void set_rankid(::google::protobuf::uint64 value);

  // optional string rankname = 3;
  inline bool has_rankname() const;
  inline void clear_rankname();
  static const int kRanknameFieldNumber = 3;
  inline const ::std::string& rankname() const;
  inline void set_rankname(const ::std::string& value);
  inline void set_rankname(const char* value);
  inline void set_rankname(const char* value, size_t size);
  inline ::std::string* mutable_rankname();
  inline ::std::string* release_rankname();
  inline void set_allocated_rankname(::std::string* rankname);

  // optional uint64 accid = 4;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 4;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint64 charid = 5;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 5;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 6;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 6;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional string profession = 7;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 7;
  inline const ::std::string& profession() const;
  inline void set_profession(const ::std::string& value);
  inline void set_profession(const char* value);
  inline void set_profession(const char* value, size_t size);
  inline ::std::string* mutable_profession();
  inline ::std::string* release_profession();
  inline void set_allocated_profession(::std::string* profession);

  // optional uint32 power = 8;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 8;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);

  // optional uint64 ts = 9;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 9;
  inline ::google::protobuf::uint64 ts() const;
  inline void set_ts(::google::protobuf::uint64 value);

  // optional string ext = 10;
  inline bool has_ext() const;
  inline void clear_ext();
  static const int kExtFieldNumber = 10;
  inline const ::std::string& ext() const;
  inline void set_ext(const ::std::string& value);
  inline void set_ext(const char* value);
  inline void set_ext(const char* value, size_t size);
  inline ::std::string* mutable_ext();
  inline ::std::string* release_ext();
  inline void set_allocated_ext(::std::string* ext);

  // @@protoc_insertion_point(class_scope:Pmd.RankRecordData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rankid();
  inline void clear_has_rankid();
  inline void set_has_rankname();
  inline void clear_has_rankname();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_ts();
  inline void clear_has_ts();
  inline void set_has_ext();
  inline void clear_has_ext();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 rankid_;
  ::std::string* rankname_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::std::string* profession_;
  ::google::protobuf::uint64 ts_;
  ::std::string* ext_;
  ::google::protobuf::uint32 power_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RankRecordData* default_instance_;
};
// -------------------------------------------------------------------

class RequestRankRecordGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestRankRecordGmUserPmd_CS();
  virtual ~RequestRankRecordGmUserPmd_CS();

  RequestRankRecordGmUserPmd_CS(const RequestRankRecordGmUserPmd_CS& from);

  inline RequestRankRecordGmUserPmd_CS& operator=(const RequestRankRecordGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRankRecordGmUserPmd_CS& default_instance();

  void Swap(RequestRankRecordGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestRankRecordGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestRankRecordGmUserPmd_CS& from);
  void MergeFrom(const RequestRankRecordGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 ranktype = 3;
  inline bool has_ranktype() const;
  inline void clear_ranktype();
  static const int kRanktypeFieldNumber = 3;
  inline ::google::protobuf::uint32 ranktype() const;
  inline void set_ranktype(::google::protobuf::uint32 value);

  // optional string rankname = 4;
  inline bool has_rankname() const;
  inline void clear_rankname();
  static const int kRanknameFieldNumber = 4;
  inline const ::std::string& rankname() const;
  inline void set_rankname(const ::std::string& value);
  inline void set_rankname(const char* value);
  inline void set_rankname(const char* value, size_t size);
  inline ::std::string* mutable_rankname();
  inline ::std::string* release_rankname();
  inline void set_allocated_rankname(::std::string* rankname);

  // optional uint64 starttime = 5;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 5;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 6;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 6;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // repeated .Pmd.RankRecordData data = 7;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 7;
  inline const ::Pmd::RankRecordData& data(int index) const;
  inline ::Pmd::RankRecordData* mutable_data(int index);
  inline ::Pmd::RankRecordData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::RankRecordData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::RankRecordData >*
      mutable_data();

  // optional uint32 gmid = 8;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 8;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 9;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 9;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 10;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 10;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 11;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 11;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestRankRecordGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_ranktype();
  inline void clear_has_ranktype();
  inline void set_has_rankname();
  inline void clear_has_rankname();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::std::string* rankname_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint32 ranktype_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::RankRecordData > data_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestRankRecordGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class BossRecordData : public ::google::protobuf::Message {
 public:
  BossRecordData();
  virtual ~BossRecordData();

  BossRecordData(const BossRecordData& from);

  inline BossRecordData& operator=(const BossRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BossRecordData& default_instance();

  void Swap(BossRecordData* other);

  // implements Message ----------------------------------------------

  BossRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BossRecordData& from);
  void MergeFrom(const BossRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint32 bosstype = 2;
  inline bool has_bosstype() const;
  inline void clear_bosstype();
  static const int kBosstypeFieldNumber = 2;
  inline ::google::protobuf::uint32 bosstype() const;
  inline void set_bosstype(::google::protobuf::uint32 value);

  // optional string bossname = 3;
  inline bool has_bossname() const;
  inline void clear_bossname();
  static const int kBossnameFieldNumber = 3;
  inline const ::std::string& bossname() const;
  inline void set_bossname(const ::std::string& value);
  inline void set_bossname(const char* value);
  inline void set_bossname(const char* value, size_t size);
  inline ::std::string* mutable_bossname();
  inline ::std::string* release_bossname();
  inline void set_allocated_bossname(::std::string* bossname);

  // optional uint32 acttype = 4;
  inline bool has_acttype() const;
  inline void clear_acttype();
  static const int kActtypeFieldNumber = 4;
  inline ::google::protobuf::uint32 acttype() const;
  inline void set_acttype(::google::protobuf::uint32 value);

  // optional string actcontent = 5;
  inline bool has_actcontent() const;
  inline void clear_actcontent();
  static const int kActcontentFieldNumber = 5;
  inline const ::std::string& actcontent() const;
  inline void set_actcontent(const ::std::string& value);
  inline void set_actcontent(const char* value);
  inline void set_actcontent(const char* value, size_t size);
  inline ::std::string* mutable_actcontent();
  inline ::std::string* release_actcontent();
  inline void set_allocated_actcontent(::std::string* actcontent);

  // optional uint64 charid = 6;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 6;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 7;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 7;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint64 ts = 8;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 8;
  inline ::google::protobuf::uint64 ts() const;
  inline void set_ts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pmd.BossRecordData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_bosstype();
  inline void clear_has_bosstype();
  inline void set_has_bossname();
  inline void clear_has_bossname();
  inline void set_has_acttype();
  inline void clear_has_acttype();
  inline void set_has_actcontent();
  inline void clear_has_actcontent();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::std::string* bossname_;
  ::google::protobuf::uint32 bosstype_;
  ::google::protobuf::uint32 acttype_;
  ::std::string* actcontent_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint64 ts_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static BossRecordData* default_instance_;
};
// -------------------------------------------------------------------

class RequestBossRecordGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestBossRecordGmUserPmd_CS();
  virtual ~RequestBossRecordGmUserPmd_CS();

  RequestBossRecordGmUserPmd_CS(const RequestBossRecordGmUserPmd_CS& from);

  inline RequestBossRecordGmUserPmd_CS& operator=(const RequestBossRecordGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestBossRecordGmUserPmd_CS& default_instance();

  void Swap(RequestBossRecordGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestBossRecordGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestBossRecordGmUserPmd_CS& from);
  void MergeFrom(const RequestBossRecordGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 bosstype = 3;
  inline bool has_bosstype() const;
  inline void clear_bosstype();
  static const int kBosstypeFieldNumber = 3;
  inline ::google::protobuf::uint32 bosstype() const;
  inline void set_bosstype(::google::protobuf::uint32 value);

  // optional string bossname = 4;
  inline bool has_bossname() const;
  inline void clear_bossname();
  static const int kBossnameFieldNumber = 4;
  inline const ::std::string& bossname() const;
  inline void set_bossname(const ::std::string& value);
  inline void set_bossname(const char* value);
  inline void set_bossname(const char* value, size_t size);
  inline ::std::string* mutable_bossname();
  inline ::std::string* release_bossname();
  inline void set_allocated_bossname(::std::string* bossname);

  // optional uint64 starttime = 5;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 5;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 6;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 6;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // repeated .Pmd.BossRecordData data = 7;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 7;
  inline const ::Pmd::BossRecordData& data(int index) const;
  inline ::Pmd::BossRecordData* mutable_data(int index);
  inline ::Pmd::BossRecordData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BossRecordData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::BossRecordData >*
      mutable_data();

  // optional uint32 gmid = 8;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 8;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 9;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 9;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 10;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 10;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 11;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 11;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestBossRecordGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_bosstype();
  inline void clear_has_bosstype();
  inline void set_has_bossname();
  inline void clear_has_bossname();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::std::string* bossname_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint32 bosstype_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::BossRecordData > data_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestBossRecordGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RenameRecordData : public ::google::protobuf::Message {
 public:
  RenameRecordData();
  virtual ~RenameRecordData();

  RenameRecordData(const RenameRecordData& from);

  inline RenameRecordData& operator=(const RenameRecordData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RenameRecordData& default_instance();

  void Swap(RenameRecordData* other);

  // implements Message ----------------------------------------------

  RenameRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RenameRecordData& from);
  void MergeFrom(const RenameRecordData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional uint64 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::uint64 accid() const;
  inline void set_accid(::google::protobuf::uint64 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string oldname = 4;
  inline bool has_oldname() const;
  inline void clear_oldname();
  static const int kOldnameFieldNumber = 4;
  inline const ::std::string& oldname() const;
  inline void set_oldname(const ::std::string& value);
  inline void set_oldname(const char* value);
  inline void set_oldname(const char* value, size_t size);
  inline ::std::string* mutable_oldname();
  inline ::std::string* release_oldname();
  inline void set_allocated_oldname(::std::string* oldname);

  // optional string newname = 5;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewnameFieldNumber = 5;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const char* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // optional uint64 ts = 6;
  inline bool has_ts() const;
  inline void clear_ts();
  static const int kTsFieldNumber = 6;
  inline ::google::protobuf::uint64 ts() const;
  inline void set_ts(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Pmd.RenameRecordData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_oldname();
  inline void clear_has_oldname();
  inline void set_has_newname();
  inline void clear_has_newname();
  inline void set_has_ts();
  inline void clear_has_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 accid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* oldname_;
  ::std::string* newname_;
  ::google::protobuf::uint64 ts_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RenameRecordData* default_instance_;
};
// -------------------------------------------------------------------

class RequestRenameRecordGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestRenameRecordGmUserPmd_CS();
  virtual ~RequestRenameRecordGmUserPmd_CS();

  RequestRenameRecordGmUserPmd_CS(const RequestRenameRecordGmUserPmd_CS& from);

  inline RequestRenameRecordGmUserPmd_CS& operator=(const RequestRenameRecordGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRenameRecordGmUserPmd_CS& default_instance();

  void Swap(RequestRenameRecordGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestRenameRecordGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestRenameRecordGmUserPmd_CS& from);
  void MergeFrom(const RequestRenameRecordGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string oldname = 4;
  inline bool has_oldname() const;
  inline void clear_oldname();
  static const int kOldnameFieldNumber = 4;
  inline const ::std::string& oldname() const;
  inline void set_oldname(const ::std::string& value);
  inline void set_oldname(const char* value);
  inline void set_oldname(const char* value, size_t size);
  inline ::std::string* mutable_oldname();
  inline ::std::string* release_oldname();
  inline void set_allocated_oldname(::std::string* oldname);

  // optional string newname = 5;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewnameFieldNumber = 5;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const char* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // optional uint64 starttime = 6;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 6;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 7;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 7;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // repeated .Pmd.RenameRecordData data = 8;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 8;
  inline const ::Pmd::RenameRecordData& data(int index) const;
  inline ::Pmd::RenameRecordData* mutable_data(int index);
  inline ::Pmd::RenameRecordData* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::RenameRecordData >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::RenameRecordData >*
      mutable_data();

  // optional uint32 gmid = 9;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 9;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 10;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 10;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 11;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 11;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 12;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 12;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestRenameRecordGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_oldname();
  inline void clear_has_oldname();
  inline void set_has_newname();
  inline void clear_has_newname();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* oldname_;
  ::std::string* newname_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::RenameRecordData > data_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestRenameRecordGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class StartUpGameRequestGmPmd_C : public ::google::protobuf::Message {
 public:
  StartUpGameRequestGmPmd_C();
  virtual ~StartUpGameRequestGmPmd_C();

  StartUpGameRequestGmPmd_C(const StartUpGameRequestGmPmd_C& from);

  inline StartUpGameRequestGmPmd_C& operator=(const StartUpGameRequestGmPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartUpGameRequestGmPmd_C& default_instance();

  void Swap(StartUpGameRequestGmPmd_C* other);

  // implements Message ----------------------------------------------

  StartUpGameRequestGmPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartUpGameRequestGmPmd_C& from);
  void MergeFrom(const StartUpGameRequestGmPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required uint32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional string compress = 3;
  inline bool has_compress() const;
  inline void clear_compress();
  static const int kCompressFieldNumber = 3;
  inline const ::std::string& compress() const;
  inline void set_compress(const ::std::string& value);
  inline void set_compress(const char* value);
  inline void set_compress(const char* value, size_t size);
  inline ::std::string* mutable_compress();
  inline ::std::string* release_compress();
  inline void set_allocated_compress(::std::string* compress);

  // optional string encrypt = 4;
  inline bool has_encrypt() const;
  inline void clear_encrypt();
  static const int kEncryptFieldNumber = 4;
  inline const ::std::string& encrypt() const;
  inline void set_encrypt(const ::std::string& value);
  inline void set_encrypt(const char* value);
  inline void set_encrypt(const char* value, size_t size);
  inline ::std::string* mutable_encrypt();
  inline ::std::string* release_encrypt();
  inline void set_allocated_encrypt(::std::string* encrypt);

  // optional string encryptkey = 5;
  inline bool has_encryptkey() const;
  inline void clear_encryptkey();
  static const int kEncryptkeyFieldNumber = 5;
  inline const ::std::string& encryptkey() const;
  inline void set_encryptkey(const ::std::string& value);
  inline void set_encryptkey(const char* value);
  inline void set_encryptkey(const char* value, size_t size);
  inline ::std::string* mutable_encryptkey();
  inline ::std::string* release_encryptkey();
  inline void set_allocated_encryptkey(::std::string* encryptkey);

  // @@protoc_insertion_point(class_scope:Pmd.StartUpGameRequestGmPmd_C)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_compress();
  inline void clear_has_compress();
  inline void set_has_encrypt();
  inline void clear_has_encrypt();
  inline void set_has_encryptkey();
  inline void clear_has_encryptkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::std::string* compress_;
  ::std::string* encrypt_;
  ::std::string* encryptkey_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static StartUpGameRequestGmPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class StartUpGameReturnGmPmd_S : public ::google::protobuf::Message {
 public:
  StartUpGameReturnGmPmd_S();
  virtual ~StartUpGameReturnGmPmd_S();

  StartUpGameReturnGmPmd_S(const StartUpGameReturnGmPmd_S& from);

  inline StartUpGameReturnGmPmd_S& operator=(const StartUpGameReturnGmPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StartUpGameReturnGmPmd_S& default_instance();

  void Swap(StartUpGameReturnGmPmd_S* other);

  // implements Message ----------------------------------------------

  StartUpGameReturnGmPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StartUpGameReturnGmPmd_S& from);
  void MergeFrom(const StartUpGameReturnGmPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline bool ret() const;
  inline void set_ret(bool value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.StartUpGameReturnGmPmd_S)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  bool ret_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static StartUpGameReturnGmPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class SurportGameZoneRequestGmPmd_C : public ::google::protobuf::Message {
 public:
  SurportGameZoneRequestGmPmd_C();
  virtual ~SurportGameZoneRequestGmPmd_C();

  SurportGameZoneRequestGmPmd_C(const SurportGameZoneRequestGmPmd_C& from);

  inline SurportGameZoneRequestGmPmd_C& operator=(const SurportGameZoneRequestGmPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SurportGameZoneRequestGmPmd_C& default_instance();

  void Swap(SurportGameZoneRequestGmPmd_C* other);

  // implements Message ----------------------------------------------

  SurportGameZoneRequestGmPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SurportGameZoneRequestGmPmd_C& from);
  void MergeFrom(const SurportGameZoneRequestGmPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.SurportGameZoneRequestGmPmd_C)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static SurportGameZoneRequestGmPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class SurportGameZoneReturnGmPmd_S : public ::google::protobuf::Message {
 public:
  SurportGameZoneReturnGmPmd_S();
  virtual ~SurportGameZoneReturnGmPmd_S();

  SurportGameZoneReturnGmPmd_S(const SurportGameZoneReturnGmPmd_S& from);

  inline SurportGameZoneReturnGmPmd_S& operator=(const SurportGameZoneReturnGmPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SurportGameZoneReturnGmPmd_S& default_instance();

  void Swap(SurportGameZoneReturnGmPmd_S* other);

  // implements Message ----------------------------------------------

  SurportGameZoneReturnGmPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SurportGameZoneReturnGmPmd_S& from);
  void MergeFrom(const SurportGameZoneReturnGmPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.SurportGameZoneReturnGmPmd_S)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static SurportGameZoneReturnGmPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class ReconnectKickoutGmSmd_S : public ::google::protobuf::Message {
 public:
  ReconnectKickoutGmSmd_S();
  virtual ~ReconnectKickoutGmSmd_S();

  ReconnectKickoutGmSmd_S(const ReconnectKickoutGmSmd_S& from);

  inline ReconnectKickoutGmSmd_S& operator=(const ReconnectKickoutGmSmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconnectKickoutGmSmd_S& default_instance();

  void Swap(ReconnectKickoutGmSmd_S* other);

  // implements Message ----------------------------------------------

  ReconnectKickoutGmSmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReconnectKickoutGmSmd_S& from);
  void MergeFrom(const ReconnectKickoutGmSmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string desc = 1;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 1;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:Pmd.ReconnectKickoutGmSmd_S)
 private:
  inline void set_has_desc();
  inline void clear_has_desc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* desc_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReconnectKickoutGmSmd_S* default_instance_;
};
// -------------------------------------------------------------------

class GmUserInfo : public ::google::protobuf::Message {
 public:
  GmUserInfo();
  virtual ~GmUserInfo();

  GmUserInfo(const GmUserInfo& from);

  inline GmUserInfo& operator=(const GmUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GmUserInfo& default_instance();

  void Swap(GmUserInfo* other);

  // implements Message ----------------------------------------------

  GmUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GmUserInfo& from);
  void MergeFrom(const GmUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional uint64 pri = 4;
  inline bool has_pri() const;
  inline void clear_pri();
  static const int kPriFieldNumber = 4;
  inline ::google::protobuf::uint64 pri() const;
  inline void set_pri(::google::protobuf::uint64 value);

  // optional uint32 qmaxnum = 5;
  inline bool has_qmaxnum() const;
  inline void clear_qmaxnum();
  static const int kQmaxnumFieldNumber = 5;
  inline ::google::protobuf::uint32 qmaxnum() const;
  inline void set_qmaxnum(::google::protobuf::uint32 value);

  // optional uint32 autorecv = 6;
  inline bool has_autorecv() const;
  inline void clear_autorecv();
  static const int kAutorecvFieldNumber = 6;
  inline ::google::protobuf::uint32 autorecv() const;
  inline void set_autorecv(::google::protobuf::uint32 value);

  // optional uint32 workstate = 7;
  inline bool has_workstate() const;
  inline void clear_workstate();
  static const int kWorkstateFieldNumber = 7;
  inline ::google::protobuf::uint32 workstate() const;
  inline void set_workstate(::google::protobuf::uint32 value);

  // optional uint32 winnum = 8;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinnumFieldNumber = 8;
  inline ::google::protobuf::uint32 winnum() const;
  inline void set_winnum(::google::protobuf::uint32 value);

  // optional uint32 gameid = 9;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 9;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 10;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 10;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 bindip = 11;
  inline bool has_bindip() const;
  inline void clear_bindip();
  static const int kBindipFieldNumber = 11;
  inline ::google::protobuf::uint32 bindip() const;
  inline void set_bindip(::google::protobuf::uint32 value);

  // optional string config = 12;
  inline bool has_config() const;
  inline void clear_config();
  static const int kConfigFieldNumber = 12;
  inline const ::std::string& config() const;
  inline void set_config(const ::std::string& value);
  inline void set_config(const char* value);
  inline void set_config(const char* value, size_t size);
  inline ::std::string* mutable_config();
  inline ::std::string* release_config();
  inline void set_allocated_config(::std::string* config);

  // @@protoc_insertion_point(class_scope:Pmd.GmUserInfo)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_pri();
  inline void clear_has_pri();
  inline void set_has_qmaxnum();
  inline void clear_has_qmaxnum();
  inline void set_has_autorecv();
  inline void clear_has_autorecv();
  inline void set_has_workstate();
  inline void clear_has_workstate();
  inline void set_has_winnum();
  inline void clear_has_winnum();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_bindip();
  inline void clear_has_bindip();
  inline void set_has_config();
  inline void clear_has_config();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* password_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 qmaxnum_;
  ::google::protobuf::uint64 pri_;
  ::google::protobuf::uint32 autorecv_;
  ::google::protobuf::uint32 workstate_;
  ::google::protobuf::uint32 winnum_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 bindip_;
  ::std::string* config_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static GmUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestLoginGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestLoginGmUserPmd_C();
  virtual ~RequestLoginGmUserPmd_C();

  RequestLoginGmUserPmd_C(const RequestLoginGmUserPmd_C& from);

  inline RequestLoginGmUserPmd_C& operator=(const RequestLoginGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestLoginGmUserPmd_C& default_instance();

  void Swap(RequestLoginGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestLoginGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestLoginGmUserPmd_C& from);
  void MergeFrom(const RequestLoginGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required uint32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional string compress = 3;
  inline bool has_compress() const;
  inline void clear_compress();
  static const int kCompressFieldNumber = 3;
  inline const ::std::string& compress() const;
  inline void set_compress(const ::std::string& value);
  inline void set_compress(const char* value);
  inline void set_compress(const char* value, size_t size);
  inline ::std::string* mutable_compress();
  inline ::std::string* release_compress();
  inline void set_allocated_compress(::std::string* compress);

  // optional string encrypt = 4;
  inline bool has_encrypt() const;
  inline void clear_encrypt();
  static const int kEncryptFieldNumber = 4;
  inline const ::std::string& encrypt() const;
  inline void set_encrypt(const ::std::string& value);
  inline void set_encrypt(const char* value);
  inline void set_encrypt(const char* value, size_t size);
  inline ::std::string* mutable_encrypt();
  inline ::std::string* release_encrypt();
  inline void set_allocated_encrypt(::std::string* encrypt);

  // optional string encryptkey = 5;
  inline bool has_encryptkey() const;
  inline void clear_encryptkey();
  static const int kEncryptkeyFieldNumber = 5;
  inline const ::std::string& encryptkey() const;
  inline void set_encryptkey(const ::std::string& value);
  inline void set_encryptkey(const char* value);
  inline void set_encryptkey(const char* value, size_t size);
  inline ::std::string* mutable_encryptkey();
  inline ::std::string* release_encryptkey();
  inline void set_allocated_encryptkey(::std::string* encryptkey);

  // required string username = 6;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 6;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required string password = 7;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 7;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional uint32 logintype = 8;
  inline bool has_logintype() const;
  inline void clear_logintype();
  static const int kLogintypeFieldNumber = 8;
  inline ::google::protobuf::uint32 logintype() const;
  inline void set_logintype(::google::protobuf::uint32 value);

  // optional uint32 loginip = 9;
  inline bool has_loginip() const;
  inline void clear_loginip();
  static const int kLoginipFieldNumber = 9;
  inline ::google::protobuf::uint32 loginip() const;
  inline void set_loginip(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestLoginGmUserPmd_C)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_compress();
  inline void clear_has_compress();
  inline void set_has_encrypt();
  inline void clear_has_encrypt();
  inline void set_has_encryptkey();
  inline void clear_has_encryptkey();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_logintype();
  inline void clear_has_logintype();
  inline void set_has_loginip();
  inline void clear_has_loginip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  ::std::string* compress_;
  ::std::string* encrypt_;
  ::std::string* encryptkey_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 logintype_;
  ::std::string* username_;
  ::std::string* password_;
  ::google::protobuf::uint32 loginip_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestLoginGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnLoginGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnLoginGmUserPmd_S();
  virtual ~ReturnLoginGmUserPmd_S();

  ReturnLoginGmUserPmd_S(const ReturnLoginGmUserPmd_S& from);

  inline ReturnLoginGmUserPmd_S& operator=(const ReturnLoginGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnLoginGmUserPmd_S& default_instance();

  void Swap(ReturnLoginGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnLoginGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnLoginGmUserPmd_S& from);
  void MergeFrom(const ReturnLoginGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional .Pmd.GmUserInfo data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::Pmd::GmUserInfo& data() const;
  inline ::Pmd::GmUserInfo* mutable_data();
  inline ::Pmd::GmUserInfo* release_data();
  inline void set_allocated_data(::Pmd::GmUserInfo* data);

  // repeated .Pmd.GameZoneInfo zoneinfo = 3;
  inline int zoneinfo_size() const;
  inline void clear_zoneinfo();
  static const int kZoneinfoFieldNumber = 3;
  inline const ::Pmd::GameZoneInfo& zoneinfo(int index) const;
  inline ::Pmd::GameZoneInfo* mutable_zoneinfo(int index);
  inline ::Pmd::GameZoneInfo* add_zoneinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::GameZoneInfo >&
      zoneinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::GameZoneInfo >*
      mutable_zoneinfo();

  // @@protoc_insertion_point(class_scope:Pmd.ReturnLoginGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::GmUserInfo* data_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::GameZoneInfo > zoneinfo_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnLoginGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class SetPasswordGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  SetPasswordGmUserPmd_CS();
  virtual ~SetPasswordGmUserPmd_CS();

  SetPasswordGmUserPmd_CS(const SetPasswordGmUserPmd_CS& from);

  inline SetPasswordGmUserPmd_CS& operator=(const SetPasswordGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPasswordGmUserPmd_CS& default_instance();

  void Swap(SetPasswordGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  SetPasswordGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetPasswordGmUserPmd_CS& from);
  void MergeFrom(const SetPasswordGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string oldpassword = 1;
  inline bool has_oldpassword() const;
  inline void clear_oldpassword();
  static const int kOldpasswordFieldNumber = 1;
  inline const ::std::string& oldpassword() const;
  inline void set_oldpassword(const ::std::string& value);
  inline void set_oldpassword(const char* value);
  inline void set_oldpassword(const char* value, size_t size);
  inline ::std::string* mutable_oldpassword();
  inline ::std::string* release_oldpassword();
  inline void set_allocated_oldpassword(::std::string* oldpassword);

  // required string newpassword = 2;
  inline bool has_newpassword() const;
  inline void clear_newpassword();
  static const int kNewpasswordFieldNumber = 2;
  inline const ::std::string& newpassword() const;
  inline void set_newpassword(const ::std::string& value);
  inline void set_newpassword(const char* value);
  inline void set_newpassword(const char* value, size_t size);
  inline ::std::string* mutable_newpassword();
  inline ::std::string* release_newpassword();
  inline void set_allocated_newpassword(::std::string* newpassword);

  // optional uint32 retcode = 3;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 4;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 4;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.SetPasswordGmUserPmd_CS)
 private:
  inline void set_has_oldpassword();
  inline void clear_has_oldpassword();
  inline void set_has_newpassword();
  inline void clear_has_newpassword();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* oldpassword_;
  ::std::string* newpassword_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static SetPasswordGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class AddNewGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  AddNewGmUserPmd_CS();
  virtual ~AddNewGmUserPmd_CS();

  AddNewGmUserPmd_CS(const AddNewGmUserPmd_CS& from);

  inline AddNewGmUserPmd_CS& operator=(const AddNewGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddNewGmUserPmd_CS& default_instance();

  void Swap(AddNewGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  AddNewGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddNewGmUserPmd_CS& from);
  void MergeFrom(const AddNewGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.GmUserInfo data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::GmUserInfo& data() const;
  inline ::Pmd::GmUserInfo* mutable_data();
  inline ::Pmd::GmUserInfo* release_data();
  inline void set_allocated_data(::Pmd::GmUserInfo* data);

  // optional uint32 retcode = 2;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 3;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 3;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.AddNewGmUserPmd_CS)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::GmUserInfo* data_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static AddNewGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class GmAccountListGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  GmAccountListGmUserPmd_CS();
  virtual ~GmAccountListGmUserPmd_CS();

  GmAccountListGmUserPmd_CS(const GmAccountListGmUserPmd_CS& from);

  inline GmAccountListGmUserPmd_CS& operator=(const GmAccountListGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GmAccountListGmUserPmd_CS& default_instance();

  void Swap(GmAccountListGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  GmAccountListGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GmAccountListGmUserPmd_CS& from);
  void MergeFrom(const GmAccountListGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pmd.GmUserInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::GmUserInfo& data(int index) const;
  inline ::Pmd::GmUserInfo* mutable_data(int index);
  inline ::Pmd::GmUserInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::GmUserInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::GmUserInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.GmAccountListGmUserPmd_CS)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::GmUserInfo > data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static GmAccountListGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestDelGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestDelGmUserPmd_CS();
  virtual ~RequestDelGmUserPmd_CS();

  RequestDelGmUserPmd_CS(const RequestDelGmUserPmd_CS& from);

  inline RequestDelGmUserPmd_CS& operator=(const RequestDelGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestDelGmUserPmd_CS& default_instance();

  void Swap(RequestDelGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestDelGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestDelGmUserPmd_CS& from);
  void MergeFrom(const RequestDelGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 retcode = 2;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 2;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 3;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 3;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.RequestDelGmUserPmd_CS)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 retcode_;
  ::std::string* retdesc_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestDelGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class RequestModifyPriGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestModifyPriGmUserPmd_CS();
  virtual ~RequestModifyPriGmUserPmd_CS();

  RequestModifyPriGmUserPmd_CS(const RequestModifyPriGmUserPmd_CS& from);

  inline RequestModifyPriGmUserPmd_CS& operator=(const RequestModifyPriGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestModifyPriGmUserPmd_CS& default_instance();

  void Swap(RequestModifyPriGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestModifyPriGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestModifyPriGmUserPmd_CS& from);
  void MergeFrom(const RequestModifyPriGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // required uint64 pri = 2;
  inline bool has_pri() const;
  inline void clear_pri();
  static const int kPriFieldNumber = 2;
  inline ::google::protobuf::uint64 pri() const;
  inline void set_pri(::google::protobuf::uint64 value);

  // optional uint32 gameid = 3;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 3;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 4;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 retcode = 5;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 6;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 6;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.RequestModifyPriGmUserPmd_CS)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_pri();
  inline void clear_has_pri();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 pri_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 retcode_;
  ::std::string* retdesc_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestModifyPriGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class SelectGamezoneGmUserPmd_SC : public ::google::protobuf::Message {
 public:
  SelectGamezoneGmUserPmd_SC();
  virtual ~SelectGamezoneGmUserPmd_SC();

  SelectGamezoneGmUserPmd_SC(const SelectGamezoneGmUserPmd_SC& from);

  inline SelectGamezoneGmUserPmd_SC& operator=(const SelectGamezoneGmUserPmd_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectGamezoneGmUserPmd_SC& default_instance();

  void Swap(SelectGamezoneGmUserPmd_SC* other);

  // implements Message ----------------------------------------------

  SelectGamezoneGmUserPmd_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectGamezoneGmUserPmd_SC& from);
  void MergeFrom(const SelectGamezoneGmUserPmd_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // required uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.SelectGamezoneGmUserPmd_SC)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static SelectGamezoneGmUserPmd_SC* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastInfo : public ::google::protobuf::Message {
 public:
  BroadcastInfo();
  virtual ~BroadcastInfo();

  BroadcastInfo(const BroadcastInfo& from);

  inline BroadcastInfo& operator=(const BroadcastInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastInfo& default_instance();

  void Swap(BroadcastInfo* other);

  // implements Message ----------------------------------------------

  BroadcastInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastInfo& from);
  void MergeFrom(const BroadcastInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 countryid = 6;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 6;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 7;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 7;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 starttime = 8;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 8;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 9;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 9;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 intervaltime = 10;
  inline bool has_intervaltime() const;
  inline void clear_intervaltime();
  static const int kIntervaltimeFieldNumber = 10;
  inline ::google::protobuf::uint32 intervaltime() const;
  inline void set_intervaltime(::google::protobuf::uint32 value);

  // optional uint32 btype = 11;
  inline bool has_btype() const;
  inline void clear_btype();
  static const int kBtypeFieldNumber = 11;
  inline ::google::protobuf::uint32 btype() const;
  inline void set_btype(::google::protobuf::uint32 value);

  // optional string content = 12;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 12;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional uint32 recordtime = 13;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordtimeFieldNumber = 13;
  inline ::google::protobuf::uint32 recordtime() const;
  inline void set_recordtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.BroadcastInfo)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_intervaltime();
  inline void clear_has_intervaltime();
  inline void set_has_btype();
  inline void clear_has_btype();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 intervaltime_;
  ::google::protobuf::uint32 btype_;
  ::std::string* content_;
  ::google::protobuf::uint32 recordtime_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static BroadcastInfo* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastNewGmUserPmd_C : public ::google::protobuf::Message {
 public:
  BroadcastNewGmUserPmd_C();
  virtual ~BroadcastNewGmUserPmd_C();

  BroadcastNewGmUserPmd_C(const BroadcastNewGmUserPmd_C& from);

  inline BroadcastNewGmUserPmd_C& operator=(const BroadcastNewGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastNewGmUserPmd_C& default_instance();

  void Swap(BroadcastNewGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  BroadcastNewGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastNewGmUserPmd_C& from);
  void MergeFrom(const BroadcastNewGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.BroadcastInfo data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::BroadcastInfo& data() const;
  inline ::Pmd::BroadcastInfo* mutable_data();
  inline ::Pmd::BroadcastInfo* release_data();
  inline void set_allocated_data(::Pmd::BroadcastInfo* data);

  // optional uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.BroadcastNewGmUserPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::BroadcastInfo* data_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static BroadcastNewGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnBroadcastNewGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnBroadcastNewGmUserPmd_S();
  virtual ~ReturnBroadcastNewGmUserPmd_S();

  ReturnBroadcastNewGmUserPmd_S(const ReturnBroadcastNewGmUserPmd_S& from);

  inline ReturnBroadcastNewGmUserPmd_S& operator=(const ReturnBroadcastNewGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnBroadcastNewGmUserPmd_S& default_instance();

  void Swap(ReturnBroadcastNewGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnBroadcastNewGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnBroadcastNewGmUserPmd_S& from);
  void MergeFrom(const ReturnBroadcastNewGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // optional uint32 taskid = 3;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 3;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnBroadcastNewGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnBroadcastNewGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class BroadcastDeleteGmUserPmd_C : public ::google::protobuf::Message {
 public:
  BroadcastDeleteGmUserPmd_C();
  virtual ~BroadcastDeleteGmUserPmd_C();

  BroadcastDeleteGmUserPmd_C(const BroadcastDeleteGmUserPmd_C& from);

  inline BroadcastDeleteGmUserPmd_C& operator=(const BroadcastDeleteGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastDeleteGmUserPmd_C& default_instance();

  void Swap(BroadcastDeleteGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  BroadcastDeleteGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BroadcastDeleteGmUserPmd_C& from);
  void MergeFrom(const BroadcastDeleteGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.BroadcastDeleteGmUserPmd_C)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static BroadcastDeleteGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnBroadcastDeleteGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnBroadcastDeleteGmUserPmd_S();
  virtual ~ReturnBroadcastDeleteGmUserPmd_S();

  ReturnBroadcastDeleteGmUserPmd_S(const ReturnBroadcastDeleteGmUserPmd_S& from);

  inline ReturnBroadcastDeleteGmUserPmd_S& operator=(const ReturnBroadcastDeleteGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnBroadcastDeleteGmUserPmd_S& default_instance();

  void Swap(ReturnBroadcastDeleteGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnBroadcastDeleteGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnBroadcastDeleteGmUserPmd_S& from);
  void MergeFrom(const ReturnBroadcastDeleteGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // optional uint32 taskid = 3;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 3;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnBroadcastDeleteGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnBroadcastDeleteGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestBroadcastListGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestBroadcastListGmUserPmd_C();
  virtual ~RequestBroadcastListGmUserPmd_C();

  RequestBroadcastListGmUserPmd_C(const RequestBroadcastListGmUserPmd_C& from);

  inline RequestBroadcastListGmUserPmd_C& operator=(const RequestBroadcastListGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestBroadcastListGmUserPmd_C& default_instance();

  void Swap(RequestBroadcastListGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestBroadcastListGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestBroadcastListGmUserPmd_C& from);
  void MergeFrom(const RequestBroadcastListGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 countryid = 4;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 4;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 btype = 5;
  inline bool has_btype() const;
  inline void clear_btype();
  static const int kBtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 btype() const;
  inline void set_btype(::google::protobuf::uint32 value);

  // optional uint32 endtime = 6;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 6;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 curpage = 7;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 7;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 8;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 8;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 9;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 9;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestBroadcastListGmUserPmd_C)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_btype();
  inline void clear_has_btype();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 btype_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestBroadcastListGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnBroadcastListGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnBroadcastListGmUserPmd_S();
  virtual ~ReturnBroadcastListGmUserPmd_S();

  ReturnBroadcastListGmUserPmd_S(const ReturnBroadcastListGmUserPmd_S& from);

  inline ReturnBroadcastListGmUserPmd_S& operator=(const ReturnBroadcastListGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnBroadcastListGmUserPmd_S& default_instance();

  void Swap(ReturnBroadcastListGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnBroadcastListGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnBroadcastListGmUserPmd_S& from);
  void MergeFrom(const ReturnBroadcastListGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pmd.BroadcastInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::BroadcastInfo& data(int index) const;
  inline ::Pmd::BroadcastInfo* mutable_data(int index);
  inline ::Pmd::BroadcastInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BroadcastInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::BroadcastInfo >*
      mutable_data();

  // optional uint32 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 3;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 3;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 4;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 4;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 5;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 5;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnBroadcastListGmUserPmd_S)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::BroadcastInfo > data_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnBroadcastListGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class PunishUserInfo : public ::google::protobuf::Message {
 public:
  PunishUserInfo();
  virtual ~PunishUserInfo();

  PunishUserInfo(const PunishUserInfo& from);

  inline PunishUserInfo& operator=(const PunishUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PunishUserInfo& default_instance();

  void Swap(PunishUserInfo* other);

  // implements Message ----------------------------------------------

  PunishUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PunishUserInfo& from);
  void MergeFrom(const PunishUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 5;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 5;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 ip = 6;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 6;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);

  // optional uint32 gmid = 7;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 7;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional string reason = 8;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 8;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // optional uint32 ptype = 9;
  inline bool has_ptype() const;
  inline void clear_ptype();
  static const int kPtypeFieldNumber = 9;
  inline ::google::protobuf::uint32 ptype() const;
  inline void set_ptype(::google::protobuf::uint32 value);

  // optional uint64 starttime = 10;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 10;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 11;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 11;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // optional uint64 punishtime = 12;
  inline bool has_punishtime() const;
  inline void clear_punishtime();
  static const int kPunishtimeFieldNumber = 12;
  inline ::google::protobuf::uint64 punishtime() const;
  inline void set_punishtime(::google::protobuf::uint64 value);

  // optional uint32 state = 13;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 13;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.PunishUserInfo)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_ptype();
  inline void clear_has_ptype();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_punishtime();
  inline void clear_has_punishtime();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 ip_;
  ::std::string* charname_;
  ::std::string* reason_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 ptype_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint64 punishtime_;
  ::google::protobuf::uint32 state_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static PunishUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class PunishUserGmUserPmd_C : public ::google::protobuf::Message {
 public:
  PunishUserGmUserPmd_C();
  virtual ~PunishUserGmUserPmd_C();

  PunishUserGmUserPmd_C(const PunishUserGmUserPmd_C& from);

  inline PunishUserGmUserPmd_C& operator=(const PunishUserGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PunishUserGmUserPmd_C& default_instance();

  void Swap(PunishUserGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  PunishUserGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PunishUserGmUserPmd_C& from);
  void MergeFrom(const PunishUserGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Pmd.PunishUserInfo data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PunishUserInfo& data() const;
  inline ::Pmd::PunishUserInfo* mutable_data();
  inline ::Pmd::PunishUserInfo* release_data();
  inline void set_allocated_data(::Pmd::PunishUserInfo* data);

  // optional uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.PunishUserGmUserPmd_C)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::PunishUserInfo* data_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static PunishUserGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnPunishUserGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnPunishUserGmUserPmd_S();
  virtual ~ReturnPunishUserGmUserPmd_S();

  ReturnPunishUserGmUserPmd_S(const ReturnPunishUserGmUserPmd_S& from);

  inline ReturnPunishUserGmUserPmd_S& operator=(const ReturnPunishUserGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnPunishUserGmUserPmd_S& default_instance();

  void Swap(ReturnPunishUserGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnPunishUserGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnPunishUserGmUserPmd_S& from);
  void MergeFrom(const ReturnPunishUserGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // optional uint32 taskid = 3;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 3;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnPunishUserGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnPunishUserGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class DeletePunishUserGmUserPmd_C : public ::google::protobuf::Message {
 public:
  DeletePunishUserGmUserPmd_C();
  virtual ~DeletePunishUserGmUserPmd_C();

  DeletePunishUserGmUserPmd_C(const DeletePunishUserGmUserPmd_C& from);

  inline DeletePunishUserGmUserPmd_C& operator=(const DeletePunishUserGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePunishUserGmUserPmd_C& default_instance();

  void Swap(DeletePunishUserGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  DeletePunishUserGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeletePunishUserGmUserPmd_C& from);
  void MergeFrom(const DeletePunishUserGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 taskid = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.DeletePunishUserGmUserPmd_C)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static DeletePunishUserGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnDeletePunishUserGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnDeletePunishUserGmUserPmd_S();
  virtual ~ReturnDeletePunishUserGmUserPmd_S();

  ReturnDeletePunishUserGmUserPmd_S(const ReturnDeletePunishUserGmUserPmd_S& from);

  inline ReturnDeletePunishUserGmUserPmd_S& operator=(const ReturnDeletePunishUserGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnDeletePunishUserGmUserPmd_S& default_instance();

  void Swap(ReturnDeletePunishUserGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnDeletePunishUserGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnDeletePunishUserGmUserPmd_S& from);
  void MergeFrom(const ReturnDeletePunishUserGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional uint32 taskid = 2;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskidFieldNumber = 2;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnDeletePunishUserGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnDeletePunishUserGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestPunishListGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestPunishListGmUserPmd_C();
  virtual ~RequestPunishListGmUserPmd_C();

  RequestPunishListGmUserPmd_C(const RequestPunishListGmUserPmd_C& from);

  inline RequestPunishListGmUserPmd_C& operator=(const RequestPunishListGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestPunishListGmUserPmd_C& default_instance();

  void Swap(RequestPunishListGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestPunishListGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestPunishListGmUserPmd_C& from);
  void MergeFrom(const RequestPunishListGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 gmid = 5;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 5;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 ptype = 6;
  inline bool has_ptype() const;
  inline void clear_ptype();
  static const int kPtypeFieldNumber = 6;
  inline ::google::protobuf::uint32 ptype() const;
  inline void set_ptype(::google::protobuf::uint32 value);

  // optional uint32 state = 7;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 7;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint64 starttime = 8;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 8;
  inline ::google::protobuf::uint64 starttime() const;
  inline void set_starttime(::google::protobuf::uint64 value);

  // optional uint64 endtime = 9;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 9;
  inline ::google::protobuf::uint64 endtime() const;
  inline void set_endtime(::google::protobuf::uint64 value);

  // optional uint32 curpage = 10;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 10;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 11;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 11;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 12;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 12;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestPunishListGmUserPmd_C)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_ptype();
  inline void clear_has_ptype();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 ptype_;
  ::google::protobuf::uint64 starttime_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint64 endtime_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestPunishListGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnPunishListGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnPunishListGmUserPmd_S();
  virtual ~ReturnPunishListGmUserPmd_S();

  ReturnPunishListGmUserPmd_S(const ReturnPunishListGmUserPmd_S& from);

  inline ReturnPunishListGmUserPmd_S& operator=(const ReturnPunishListGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnPunishListGmUserPmd_S& default_instance();

  void Swap(ReturnPunishListGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnPunishListGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnPunishListGmUserPmd_S& from);
  void MergeFrom(const ReturnPunishListGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pmd.PunishUserInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::PunishUserInfo& data(int index) const;
  inline ::Pmd::PunishUserInfo* mutable_data(int index);
  inline ::Pmd::PunishUserInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PunishUserInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::PunishUserInfo >*
      mutable_data();

  // optional uint32 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 3;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 3;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 4;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 4;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 5;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 5;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnPunishListGmUserPmd_S)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::PunishUserInfo > data_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnPunishListGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class ItemInfo : public ::google::protobuf::Message {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  ItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // optional string itemname = 2;
  inline bool has_itemname() const;
  inline void clear_itemname();
  static const int kItemnameFieldNumber = 2;
  inline const ::std::string& itemname() const;
  inline void set_itemname(const ::std::string& value);
  inline void set_itemname(const char* value);
  inline void set_itemname(const char* value, size_t size);
  inline ::std::string* mutable_itemname();
  inline ::std::string* release_itemname();
  inline void set_allocated_itemname(::std::string* itemname);

  // optional uint32 itemnum = 3;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemnumFieldNumber = 3;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);

  // optional uint32 itemtype = 4;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemtypeFieldNumber = 4;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ItemInfo)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemname();
  inline void clear_has_itemname();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* itemname_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 itemtype_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemTypeInfo : public ::google::protobuf::Message {
 public:
  ItemTypeInfo();
  virtual ~ItemTypeInfo();

  ItemTypeInfo(const ItemTypeInfo& from);

  inline ItemTypeInfo& operator=(const ItemTypeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemTypeInfo& default_instance();

  void Swap(ItemTypeInfo* other);

  // implements Message ----------------------------------------------

  ItemTypeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemTypeInfo& from);
  void MergeFrom(const ItemTypeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemtype = 1;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 itemtype() const;
  inline void set_itemtype(::google::protobuf::uint32 value);

  // optional string typename = 2;
  inline bool has_typename_() const;
  inline void clear_typename_();
  static const int kTypenameFieldNumber = 2;
  inline const ::std::string& typename_() const;
  inline void set_typename_(const ::std::string& value);
  inline void set_typename_(const char* value);
  inline void set_typename_(const char* value, size_t size);
  inline ::std::string* mutable_typename_();
  inline ::std::string* release_typename_();
  inline void set_allocated_typename_(::std::string* typename_);

  // repeated .Pmd.ItemInfo data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Pmd::ItemInfo& data(int index) const;
  inline ::Pmd::ItemInfo* mutable_data(int index);
  inline ::Pmd::ItemInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.ItemTypeInfo)
 private:
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_typename_();
  inline void clear_has_typename_();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* typename__;
  ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo > data_;
  ::google::protobuf::uint32 itemtype_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ItemTypeInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestItemTypeInfoGmUserPmd_CS : public ::google::protobuf::Message {
 public:
  RequestItemTypeInfoGmUserPmd_CS();
  virtual ~RequestItemTypeInfoGmUserPmd_CS();

  RequestItemTypeInfoGmUserPmd_CS(const RequestItemTypeInfoGmUserPmd_CS& from);

  inline RequestItemTypeInfoGmUserPmd_CS& operator=(const RequestItemTypeInfoGmUserPmd_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestItemTypeInfoGmUserPmd_CS& default_instance();

  void Swap(RequestItemTypeInfoGmUserPmd_CS* other);

  // implements Message ----------------------------------------------

  RequestItemTypeInfoGmUserPmd_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestItemTypeInfoGmUserPmd_CS& from);
  void MergeFrom(const RequestItemTypeInfoGmUserPmd_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // repeated .Pmd.ItemTypeInfo data = 4;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::Pmd::ItemTypeInfo& data(int index) const;
  inline ::Pmd::ItemTypeInfo* mutable_data(int index);
  inline ::Pmd::ItemTypeInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo >*
      mutable_data();

  // optional uint32 retcode = 5;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 5;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 6;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 6;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // @@protoc_insertion_point(class_scope:Pmd.RequestItemTypeInfoGmUserPmd_CS)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo > data_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 retcode_;
  ::std::string* retdesc_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestItemTypeInfoGmUserPmd_CS* default_instance_;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  UserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional string profession = 5;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 5;
  inline const ::std::string& profession() const;
  inline void set_profession(const ::std::string& value);
  inline void set_profession(const char* value);
  inline void set_profession(const char* value, size_t size);
  inline ::std::string* mutable_profession();
  inline ::std::string* release_profession();
  inline void set_allocated_profession(::std::string* profession);

  // optional string countryname = 6;
  inline bool has_countryname() const;
  inline void clear_countryname();
  static const int kCountrynameFieldNumber = 6;
  inline const ::std::string& countryname() const;
  inline void set_countryname(const ::std::string& value);
  inline void set_countryname(const char* value);
  inline void set_countryname(const char* value, size_t size);
  inline ::std::string* mutable_countryname();
  inline ::std::string* release_countryname();
  inline void set_allocated_countryname(::std::string* countryname);

  // optional uint32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 viplevel = 8;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kViplevelFieldNumber = 8;
  inline ::google::protobuf::uint32 viplevel() const;
  inline void set_viplevel(::google::protobuf::uint32 value);

  // optional uint32 oldzoneid = 9;
  inline bool has_oldzoneid() const;
  inline void clear_oldzoneid();
  static const int kOldzoneidFieldNumber = 9;
  inline ::google::protobuf::uint32 oldzoneid() const;
  inline void set_oldzoneid(::google::protobuf::uint32 value);

  // optional uint32 lastofftime = 10;
  inline bool has_lastofftime() const;
  inline void clear_lastofftime();
  static const int kLastofftimeFieldNumber = 10;
  inline ::google::protobuf::uint32 lastofftime() const;
  inline void set_lastofftime(::google::protobuf::uint32 value);

  // optional uint32 lastloginip = 11;
  inline bool has_lastloginip() const;
  inline void clear_lastloginip();
  static const int kLastloginipFieldNumber = 11;
  inline ::google::protobuf::uint32 lastloginip() const;
  inline void set_lastloginip(::google::protobuf::uint32 value);

  // optional uint32 gmlevel = 12;
  inline bool has_gmlevel() const;
  inline void clear_gmlevel();
  static const int kGmlevelFieldNumber = 12;
  inline ::google::protobuf::uint32 gmlevel() const;
  inline void set_gmlevel(::google::protobuf::uint32 value);

  // optional uint32 createtime = 13;
  inline bool has_createtime() const;
  inline void clear_createtime();
  static const int kCreatetimeFieldNumber = 13;
  inline ::google::protobuf::uint32 createtime() const;
  inline void set_createtime(::google::protobuf::uint32 value);

  // optional uint32 isonline = 14;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsonlineFieldNumber = 14;
  inline ::google::protobuf::uint32 isonline() const;
  inline void set_isonline(::google::protobuf::uint32 value);

  // optional uint32 glodnum = 15;
  inline bool has_glodnum() const;
  inline void clear_glodnum();
  static const int kGlodnumFieldNumber = 15;
  inline ::google::protobuf::uint32 glodnum() const;
  inline void set_glodnum(::google::protobuf::uint32 value);

  // optional uint32 money = 16;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 16;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // optional int64 totalwin = 17;
  inline bool has_totalwin() const;
  inline void clear_totalwin();
  static const int kTotalwinFieldNumber = 17;
  inline ::google::protobuf::int64 totalwin() const;
  inline void set_totalwin(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Pmd.UserInfo)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_countryname();
  inline void clear_has_countryname();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_oldzoneid();
  inline void clear_has_oldzoneid();
  inline void set_has_lastofftime();
  inline void clear_has_lastofftime();
  inline void set_has_lastloginip();
  inline void clear_has_lastloginip();
  inline void set_has_gmlevel();
  inline void clear_has_gmlevel();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_isonline();
  inline void clear_has_isonline();
  inline void set_has_glodnum();
  inline void clear_has_glodnum();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_totalwin();
  inline void clear_has_totalwin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::std::string* profession_;
  ::std::string* countryname_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 oldzoneid_;
  ::google::protobuf::uint32 lastofftime_;
  ::google::protobuf::uint32 lastloginip_;
  ::google::protobuf::uint32 gmlevel_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 isonline_;
  ::google::protobuf::uint32 glodnum_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::int64 totalwin_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static UserInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestUserInfoGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestUserInfoGmUserPmd_C();
  virtual ~RequestUserInfoGmUserPmd_C();

  RequestUserInfoGmUserPmd_C(const RequestUserInfoGmUserPmd_C& from);

  inline RequestUserInfoGmUserPmd_C& operator=(const RequestUserInfoGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestUserInfoGmUserPmd_C& default_instance();

  void Swap(RequestUserInfoGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestUserInfoGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestUserInfoGmUserPmd_C& from);
  void MergeFrom(const RequestUserInfoGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 gmid = 5;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 5;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestUserInfoGmUserPmd_C)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestUserInfoGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnUserInfoGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnUserInfoGmUserPmd_S();
  virtual ~ReturnUserInfoGmUserPmd_S();

  ReturnUserInfoGmUserPmd_S(const ReturnUserInfoGmUserPmd_S& from);

  inline ReturnUserInfoGmUserPmd_S& operator=(const ReturnUserInfoGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnUserInfoGmUserPmd_S& default_instance();

  void Swap(ReturnUserInfoGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnUserInfoGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnUserInfoGmUserPmd_S& from);
  void MergeFrom(const ReturnUserInfoGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // required .Pmd.UserInfo data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Pmd::UserInfo& data() const;
  inline ::Pmd::UserInfo* mutable_data();
  inline ::Pmd::UserInfo* release_data();
  inline void set_allocated_data(::Pmd::UserInfo* data);

  // required uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnUserInfoGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 gmid_;
  ::Pmd::UserInfo* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnUserInfoGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestUserPackageGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestUserPackageGmUserPmd_C();
  virtual ~RequestUserPackageGmUserPmd_C();

  RequestUserPackageGmUserPmd_C(const RequestUserPackageGmUserPmd_C& from);

  inline RequestUserPackageGmUserPmd_C& operator=(const RequestUserPackageGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestUserPackageGmUserPmd_C& default_instance();

  void Swap(RequestUserPackageGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestUserPackageGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestUserPackageGmUserPmd_C& from);
  void MergeFrom(const RequestUserPackageGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional string charname = 4;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 4;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 gmid = 5;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 5;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestUserPackageGmUserPmd_C)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestUserPackageGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnUserPackageGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnUserPackageGmUserPmd_S();
  virtual ~ReturnUserPackageGmUserPmd_S();

  ReturnUserPackageGmUserPmd_S(const ReturnUserPackageGmUserPmd_S& from);

  inline ReturnUserPackageGmUserPmd_S& operator=(const ReturnUserPackageGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnUserPackageGmUserPmd_S& default_instance();

  void Swap(ReturnUserPackageGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnUserPackageGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnUserPackageGmUserPmd_S& from);
  void MergeFrom(const ReturnUserPackageGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Pmd.ItemTypeInfo data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::ItemTypeInfo& data(int index) const;
  inline ::Pmd::ItemTypeInfo* mutable_data(int index);
  inline ::Pmd::ItemTypeInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo >*
      mutable_data();

  // required uint32 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 gmid = 5;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 5;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnUserPackageGmUserPmd_S)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo > data_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnUserPackageGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestModifyUserInfoGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestModifyUserInfoGmUserPmd_C();
  virtual ~RequestModifyUserInfoGmUserPmd_C();

  RequestModifyUserInfoGmUserPmd_C(const RequestModifyUserInfoGmUserPmd_C& from);

  inline RequestModifyUserInfoGmUserPmd_C& operator=(const RequestModifyUserInfoGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestModifyUserInfoGmUserPmd_C& default_instance();

  void Swap(RequestModifyUserInfoGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestModifyUserInfoGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestModifyUserInfoGmUserPmd_C& from);
  void MergeFrom(const RequestModifyUserInfoGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // required uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 optype = 4;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 4;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // optional string charname = 5;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 5;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 opnum = 6;
  inline bool has_opnum() const;
  inline void clear_opnum();
  static const int kOpnumFieldNumber = 6;
  inline ::google::protobuf::uint32 opnum() const;
  inline void set_opnum(::google::protobuf::uint32 value);

  // optional uint32 gmid = 7;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 7;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestModifyUserInfoGmUserPmd_C)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_opnum();
  inline void clear_has_opnum();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 opnum_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestModifyUserInfoGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class ReturnModifyUserInfoGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnModifyUserInfoGmUserPmd_S();
  virtual ~ReturnModifyUserInfoGmUserPmd_S();

  ReturnModifyUserInfoGmUserPmd_S(const ReturnModifyUserInfoGmUserPmd_S& from);

  inline ReturnModifyUserInfoGmUserPmd_S& operator=(const ReturnModifyUserInfoGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnModifyUserInfoGmUserPmd_S& default_instance();

  void Swap(ReturnModifyUserInfoGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnModifyUserInfoGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnModifyUserInfoGmUserPmd_S& from);
  void MergeFrom(const ReturnModifyUserInfoGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 4;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 4;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // optional uint32 gmid = 5;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 5;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnModifyUserInfoGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnModifyUserInfoGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class RequestUserRecordGmUserPmd_C : public ::google::protobuf::Message {
 public:
  RequestUserRecordGmUserPmd_C();
  virtual ~RequestUserRecordGmUserPmd_C();

  RequestUserRecordGmUserPmd_C(const RequestUserRecordGmUserPmd_C& from);

  inline RequestUserRecordGmUserPmd_C& operator=(const RequestUserRecordGmUserPmd_C& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestUserRecordGmUserPmd_C& default_instance();

  void Swap(RequestUserRecordGmUserPmd_C* other);

  // implements Message ----------------------------------------------

  RequestUserRecordGmUserPmd_C* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestUserRecordGmUserPmd_C& from);
  void MergeFrom(const RequestUserRecordGmUserPmd_C& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint32 gameid() const;
  inline void set_gameid(::google::protobuf::uint32 value);

  // required uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint64 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 optype = 4;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 4;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // optional string charname = 5;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 5;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 recordtime = 6;
  inline bool has_recordtime() const;
  inline void clear_recordtime();
  static const int kRecordtimeFieldNumber = 6;
  inline ::google::protobuf::uint32 recordtime() const;
  inline void set_recordtime(::google::protobuf::uint32 value);

  // optional uint32 gmid = 7;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 7;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 8;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 8;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 9;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 9;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 10;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 10;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RequestUserRecordGmUserPmd_C)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_recordtime();
  inline void clear_has_recordtime();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gameid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint64 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 recordtime_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RequestUserRecordGmUserPmd_C* default_instance_;
};
// -------------------------------------------------------------------

class RecordInfo : public ::google::protobuf::Message {
 public:
  RecordInfo();
  virtual ~RecordInfo();

  RecordInfo(const RecordInfo& from);

  inline RecordInfo& operator=(const RecordInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecordInfo& default_instance();

  void Swap(RecordInfo* other);

  // implements Message ----------------------------------------------

  RecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecordInfo& from);
  void MergeFrom(const RecordInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 recordid = 1;
  inline bool has_recordid() const;
  inline void clear_recordid();
  static const int kRecordidFieldNumber = 1;
  inline ::google::protobuf::uint32 recordid() const;
  inline void set_recordid(::google::protobuf::uint32 value);

  // required uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional uint32 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // optional uint32 coin = 4;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 4;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // required uint32 starttime = 5;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 5;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 6;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 6;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.RecordInfo)
 private:
  inline void set_has_recordid();
  inline void clear_has_recordid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recordid_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 endtime_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static RecordInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReturnUserRecordGmUserPmd_S : public ::google::protobuf::Message {
 public:
  ReturnUserRecordGmUserPmd_S();
  virtual ~ReturnUserRecordGmUserPmd_S();

  ReturnUserRecordGmUserPmd_S(const ReturnUserRecordGmUserPmd_S& from);

  inline ReturnUserRecordGmUserPmd_S& operator=(const ReturnUserRecordGmUserPmd_S& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnUserRecordGmUserPmd_S& default_instance();

  void Swap(ReturnUserRecordGmUserPmd_S* other);

  // implements Message ----------------------------------------------

  ReturnUserRecordGmUserPmd_S* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnUserRecordGmUserPmd_S& from);
  void MergeFrom(const ReturnUserRecordGmUserPmd_S& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional string retdesc = 2;
  inline bool has_retdesc() const;
  inline void clear_retdesc();
  static const int kRetdescFieldNumber = 2;
  inline const ::std::string& retdesc() const;
  inline void set_retdesc(const ::std::string& value);
  inline void set_retdesc(const char* value);
  inline void set_retdesc(const char* value, size_t size);
  inline ::std::string* mutable_retdesc();
  inline ::std::string* release_retdesc();
  inline void set_allocated_retdesc(::std::string* retdesc);

  // repeated .Pmd.RecordInfo data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Pmd::RecordInfo& data(int index) const;
  inline ::Pmd::RecordInfo* mutable_data(int index);
  inline ::Pmd::RecordInfo* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::RecordInfo >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::RecordInfo >*
      mutable_data();

  // optional uint32 recordnum = 4;
  inline bool has_recordnum() const;
  inline void clear_recordnum();
  static const int kRecordnumFieldNumber = 4;
  inline ::google::protobuf::uint32 recordnum() const;
  inline void set_recordnum(::google::protobuf::uint32 value);

  // required uint32 gmid = 5;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 5;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 curpage = 6;
  inline bool has_curpage() const;
  inline void clear_curpage();
  static const int kCurpageFieldNumber = 6;
  inline ::google::protobuf::uint32 curpage() const;
  inline void set_curpage(::google::protobuf::uint32 value);

  // optional uint32 maxpage = 7;
  inline bool has_maxpage() const;
  inline void clear_maxpage();
  static const int kMaxpageFieldNumber = 7;
  inline ::google::protobuf::uint32 maxpage() const;
  inline void set_maxpage(::google::protobuf::uint32 value);

  // optional uint32 perpage = 8;
  inline bool has_perpage() const;
  inline void clear_perpage();
  static const int kPerpageFieldNumber = 8;
  inline ::google::protobuf::uint32 perpage() const;
  inline void set_perpage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.ReturnUserRecordGmUserPmd_S)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_retdesc();
  inline void clear_has_retdesc();
  inline void set_has_recordnum();
  inline void clear_has_recordnum();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_curpage();
  inline void clear_has_curpage();
  inline void set_has_maxpage();
  inline void clear_has_maxpage();
  inline void set_has_perpage();
  inline void clear_has_perpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* retdesc_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 recordnum_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::RecordInfo > data_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 curpage_;
  ::google::protobuf::uint32 maxpage_;
  ::google::protobuf::uint32 perpage_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ReturnUserRecordGmUserPmd_S* default_instance_;
};
// -------------------------------------------------------------------

class QuestionBaseData : public ::google::protobuf::Message {
 public:
  QuestionBaseData();
  virtual ~QuestionBaseData();

  QuestionBaseData(const QuestionBaseData& from);

  inline QuestionBaseData& operator=(const QuestionBaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestionBaseData& default_instance();

  void Swap(QuestionBaseData* other);

  // implements Message ----------------------------------------------

  QuestionBaseData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestionBaseData& from);
  void MergeFrom(const QuestionBaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 4;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countyrid = 5;
  inline bool has_countyrid() const;
  inline void clear_countyrid();
  static const int kCountyridFieldNumber = 5;
  inline ::google::protobuf::uint32 countyrid() const;
  inline void set_countyrid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 6;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 6;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Pmd.QuestionBaseData)
 private:
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countyrid();
  inline void clear_has_countyrid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countyrid_;
  ::google::protobuf::uint32 sceneid_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static QuestionBaseData* default_instance_;
};
// -------------------------------------------------------------------

class ForbidAccountData : public ::google::protobuf::Message {
 public:
  ForbidAccountData();
  virtual ~ForbidAccountData();

  ForbidAccountData(const ForbidAccountData& from);

  inline ForbidAccountData& operator=(const ForbidAccountData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForbidAccountData& default_instance();

  void Swap(ForbidAccountData* other);

  // implements Message ----------------------------------------------

  ForbidAccountData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ForbidAccountData& from);
  void MergeFrom(const ForbidAccountData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ForbidAccountData_ForbidType ForbidType;
  static const ForbidType ForbidType_AllZone = ForbidAccountData_ForbidType_ForbidType_AllZone;
  static const ForbidType ForbidType_CurrentZone = ForbidAccountData_ForbidType_ForbidType_CurrentZone;
  static inline bool ForbidType_IsValid(int value) {
    return ForbidAccountData_ForbidType_IsValid(value);
  }
  static const ForbidType ForbidType_MIN =
    ForbidAccountData_ForbidType_ForbidType_MIN;
  static const ForbidType ForbidType_MAX =
    ForbidAccountData_ForbidType_ForbidType_MAX;
  static const int ForbidType_ARRAYSIZE =
    ForbidAccountData_ForbidType_ForbidType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ForbidType_descriptor() {
    return ForbidAccountData_ForbidType_descriptor();
  }
  static inline const ::std::string& ForbidType_Name(ForbidType value) {
    return ForbidAccountData_ForbidType_Name(value);
  }
  static inline bool ForbidType_Parse(const ::std::string& name,
      ForbidType* value) {
    return ForbidAccountData_ForbidType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional string gmname = 3;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmnameFieldNumber = 3;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional uint32 accid = 4;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 4;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // optional uint32 ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);

  // optional uint32 forbidType = 6;
  inline bool has_forbidtype() const;
  inline void clear_forbidtype();
  static const int kForbidTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 forbidtype() const;
  inline void set_forbidtype(::google::protobuf::uint32 value);

  // optional string reserved = 7;
  inline bool has_reserved() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 7;
  inline const ::std::string& reserved() const;
  inline void set_reserved(const ::std::string& value);
  inline void set_reserved(const char* value);
  inline void set_reserved(const char* value, size_t size);
  inline ::std::string* mutable_reserved();
  inline ::std::string* release_reserved();
  inline void set_allocated_reserved(::std::string* reserved);

  // optional uint32 charid = 8;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 8;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // optional string charname = 9;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 9;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 begtime = 10;
  inline bool has_begtime() const;
  inline void clear_begtime();
  static const int kBegtimeFieldNumber = 10;
  inline ::google::protobuf::uint32 begtime() const;
  inline void set_begtime(::google::protobuf::uint32 value);

  // optional uint32 endtime = 11;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 11;
  inline ::google::protobuf::uint32 endtime() const;
  inline void set_endtime(::google::protobuf::uint32 value);

  // optional string desc = 12;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 12;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:Pmd.ForbidAccountData)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_forbidtype();
  inline void clear_has_forbidtype();
  inline void set_has_reserved();
  inline void clear_has_reserved();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_begtime();
  inline void clear_has_begtime();
  inline void set_has_endtime();
  inline void clear_has_endtime();
  inline void set_has_desc();
  inline void clear_has_desc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 gmid_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 accid_;
  ::google::protobuf::uint32 ip_;
  ::std::string* reserved_;
  ::google::protobuf::uint32 forbidtype_;
  ::google::protobuf::uint32 charid_;
  ::std::string* charname_;
  ::google::protobuf::uint32 begtime_;
  ::google::protobuf::uint32 endtime_;
  ::std::string* desc_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static ForbidAccountData* default_instance_;
};
// -------------------------------------------------------------------

class stRequestLoginGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestLoginGmUserCmd();
  virtual ~stRequestLoginGmUserCmd();

  stRequestLoginGmUserCmd(const stRequestLoginGmUserCmd& from);

  inline stRequestLoginGmUserCmd& operator=(const stRequestLoginGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestLoginGmUserCmd& default_instance();

  void Swap(stRequestLoginGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestLoginGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestLoginGmUserCmd& from);
  void MergeFrom(const stRequestLoginGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional uint32 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestLoginGmUserCmd)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* password_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestLoginGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnLoginGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnLoginGmUserCmd();
  virtual ~stReturnLoginGmUserCmd();

  stReturnLoginGmUserCmd(const stReturnLoginGmUserCmd& from);

  inline stReturnLoginGmUserCmd& operator=(const stReturnLoginGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnLoginGmUserCmd& default_instance();

  void Swap(stReturnLoginGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnLoginGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnLoginGmUserCmd& from);
  void MergeFrom(const stReturnLoginGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // optional uint32 gmID = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmIDFieldNumber = 2;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 pri = 3;
  inline bool has_pri() const;
  inline void clear_pri();
  static const int kPriFieldNumber = 3;
  inline ::google::protobuf::uint32 pri() const;
  inline void set_pri(::google::protobuf::uint32 value);

  // optional uint32 qMaxNum = 4;
  inline bool has_qmaxnum() const;
  inline void clear_qmaxnum();
  static const int kQMaxNumFieldNumber = 4;
  inline ::google::protobuf::uint32 qmaxnum() const;
  inline void set_qmaxnum(::google::protobuf::uint32 value);

  // optional uint32 autoRecv = 5;
  inline bool has_autorecv() const;
  inline void clear_autorecv();
  static const int kAutoRecvFieldNumber = 5;
  inline ::google::protobuf::uint32 autorecv() const;
  inline void set_autorecv(::google::protobuf::uint32 value);

  // optional uint32 workState = 6;
  inline bool has_workstate() const;
  inline void clear_workstate();
  static const int kWorkStateFieldNumber = 6;
  inline ::google::protobuf::uint32 workstate() const;
  inline void set_workstate(::google::protobuf::uint32 value);

  // optional uint32 winNum = 7;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinNumFieldNumber = 7;
  inline ::google::protobuf::uint32 winnum() const;
  inline void set_winnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnLoginGmUserCmd)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_pri();
  inline void clear_has_pri();
  inline void set_has_qmaxnum();
  inline void clear_has_qmaxnum();
  inline void set_has_autorecv();
  inline void clear_has_autorecv();
  inline void set_has_workstate();
  inline void clear_has_workstate();
  inline void set_has_winnum();
  inline void clear_has_winnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 pri_;
  ::google::protobuf::uint32 qmaxnum_;
  ::google::protobuf::uint32 autorecv_;
  ::google::protobuf::uint32 workstate_;
  ::google::protobuf::uint32 winnum_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnLoginGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stConfigGmUserCmd : public ::google::protobuf::Message {
 public:
  stConfigGmUserCmd();
  virtual ~stConfigGmUserCmd();

  stConfigGmUserCmd(const stConfigGmUserCmd& from);

  inline stConfigGmUserCmd& operator=(const stConfigGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stConfigGmUserCmd& default_instance();

  void Swap(stConfigGmUserCmd* other);

  // implements Message ----------------------------------------------

  stConfigGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stConfigGmUserCmd& from);
  void MergeFrom(const stConfigGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes config = 2;
  inline bool has_config() const;
  inline void clear_config();
  static const int kConfigFieldNumber = 2;
  inline const ::std::string& config() const;
  inline void set_config(const ::std::string& value);
  inline void set_config(const char* value);
  inline void set_config(const void* value, size_t size);
  inline ::std::string* mutable_config();
  inline ::std::string* release_config();
  inline void set_allocated_config(::std::string* config);

  // @@protoc_insertion_point(class_scope:Pmd.stConfigGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_config();
  inline void clear_has_config();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* config_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stConfigGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stSetPasswordGmUserCmd : public ::google::protobuf::Message {
 public:
  stSetPasswordGmUserCmd();
  virtual ~stSetPasswordGmUserCmd();

  stSetPasswordGmUserCmd(const stSetPasswordGmUserCmd& from);

  inline stSetPasswordGmUserCmd& operator=(const stSetPasswordGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stSetPasswordGmUserCmd& default_instance();

  void Swap(stSetPasswordGmUserCmd* other);

  // implements Message ----------------------------------------------

  stSetPasswordGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stSetPasswordGmUserCmd& from);
  void MergeFrom(const stSetPasswordGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string oldpasswd = 1;
  inline bool has_oldpasswd() const;
  inline void clear_oldpasswd();
  static const int kOldpasswdFieldNumber = 1;
  inline const ::std::string& oldpasswd() const;
  inline void set_oldpasswd(const ::std::string& value);
  inline void set_oldpasswd(const char* value);
  inline void set_oldpasswd(const char* value, size_t size);
  inline ::std::string* mutable_oldpasswd();
  inline ::std::string* release_oldpasswd();
  inline void set_allocated_oldpasswd(::std::string* oldpasswd);

  // optional string newpasswd = 2;
  inline bool has_newpasswd() const;
  inline void clear_newpasswd();
  static const int kNewpasswdFieldNumber = 2;
  inline const ::std::string& newpasswd() const;
  inline void set_newpasswd(const ::std::string& value);
  inline void set_newpasswd(const char* value);
  inline void set_newpasswd(const char* value, size_t size);
  inline ::std::string* mutable_newpasswd();
  inline ::std::string* release_newpasswd();
  inline void set_allocated_newpasswd(::std::string* newpasswd);

  // @@protoc_insertion_point(class_scope:Pmd.stSetPasswordGmUserCmd)
 private:
  inline void set_has_oldpasswd();
  inline void clear_has_oldpasswd();
  inline void set_has_newpasswd();
  inline void clear_has_newpasswd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* oldpasswd_;
  ::std::string* newpasswd_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stSetPasswordGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnPasswordGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnPasswordGmUserCmd();
  virtual ~stReturnPasswordGmUserCmd();

  stReturnPasswordGmUserCmd(const stReturnPasswordGmUserCmd& from);

  inline stReturnPasswordGmUserCmd& operator=(const stReturnPasswordGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnPasswordGmUserCmd& default_instance();

  void Swap(stReturnPasswordGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnPasswordGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnPasswordGmUserCmd& from);
  void MergeFrom(const stReturnPasswordGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnPasswordGmUserCmd)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnPasswordGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stAddNewGmUserCmd : public ::google::protobuf::Message {
 public:
  stAddNewGmUserCmd();
  virtual ~stAddNewGmUserCmd();

  stAddNewGmUserCmd(const stAddNewGmUserCmd& from);

  inline stAddNewGmUserCmd& operator=(const stAddNewGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stAddNewGmUserCmd& default_instance();

  void Swap(stAddNewGmUserCmd* other);

  // implements Message ----------------------------------------------

  stAddNewGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stAddNewGmUserCmd& from);
  void MergeFrom(const stAddNewGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional uint32 pri = 3;
  inline bool has_pri() const;
  inline void clear_pri();
  static const int kPriFieldNumber = 3;
  inline ::google::protobuf::uint32 pri() const;
  inline void set_pri(::google::protobuf::uint32 value);

  // optional uint32 qMaxNum = 4;
  inline bool has_qmaxnum() const;
  inline void clear_qmaxnum();
  static const int kQMaxNumFieldNumber = 4;
  inline ::google::protobuf::uint32 qmaxnum() const;
  inline void set_qmaxnum(::google::protobuf::uint32 value);

  // optional uint32 autoRecv = 5;
  inline bool has_autorecv() const;
  inline void clear_autorecv();
  static const int kAutoRecvFieldNumber = 5;
  inline ::google::protobuf::uint32 autorecv() const;
  inline void set_autorecv(::google::protobuf::uint32 value);

  // optional uint32 workState = 6;
  inline bool has_workstate() const;
  inline void clear_workstate();
  static const int kWorkStateFieldNumber = 6;
  inline ::google::protobuf::uint32 workstate() const;
  inline void set_workstate(::google::protobuf::uint32 value);

  // optional uint32 winNum = 7;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinNumFieldNumber = 7;
  inline ::google::protobuf::uint32 winnum() const;
  inline void set_winnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stAddNewGmUserCmd)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_pri();
  inline void clear_has_pri();
  inline void set_has_qmaxnum();
  inline void clear_has_qmaxnum();
  inline void set_has_autorecv();
  inline void clear_has_autorecv();
  inline void set_has_workstate();
  inline void clear_has_workstate();
  inline void set_has_winnum();
  inline void clear_has_winnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* password_;
  ::google::protobuf::uint32 pri_;
  ::google::protobuf::uint32 qmaxnum_;
  ::google::protobuf::uint32 autorecv_;
  ::google::protobuf::uint32 workstate_;
  ::google::protobuf::uint32 winnum_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stAddNewGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnAddNewGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnAddNewGmUserCmd();
  virtual ~stReturnAddNewGmUserCmd();

  stReturnAddNewGmUserCmd(const stReturnAddNewGmUserCmd& from);

  inline stReturnAddNewGmUserCmd& operator=(const stReturnAddNewGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnAddNewGmUserCmd& default_instance();

  void Swap(stReturnAddNewGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnAddNewGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnAddNewGmUserCmd& from);
  void MergeFrom(const stReturnAddNewGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retcode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnAddNewGmUserCmd)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnAddNewGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stQueryListGmUserCmd : public ::google::protobuf::Message {
 public:
  stQueryListGmUserCmd();
  virtual ~stQueryListGmUserCmd();

  stQueryListGmUserCmd(const stQueryListGmUserCmd& from);

  inline stQueryListGmUserCmd& operator=(const stQueryListGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stQueryListGmUserCmd& default_instance();

  void Swap(stQueryListGmUserCmd* other);

  // implements Message ----------------------------------------------

  stQueryListGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stQueryListGmUserCmd& from);
  void MergeFrom(const stQueryListGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.stQueryListGmUserCmd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stQueryListGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnListGmUserCmd_Data : public ::google::protobuf::Message {
 public:
  stReturnListGmUserCmd_Data();
  virtual ~stReturnListGmUserCmd_Data();

  stReturnListGmUserCmd_Data(const stReturnListGmUserCmd_Data& from);

  inline stReturnListGmUserCmd_Data& operator=(const stReturnListGmUserCmd_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnListGmUserCmd_Data& default_instance();

  void Swap(stReturnListGmUserCmd_Data* other);

  // implements Message ----------------------------------------------

  stReturnListGmUserCmd_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnListGmUserCmd_Data& from);
  void MergeFrom(const stReturnListGmUserCmd_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::uint32 name() const;
  inline void set_name(::google::protobuf::uint32 value);

  // optional uint32 pri = 3;
  inline bool has_pri() const;
  inline void clear_pri();
  static const int kPriFieldNumber = 3;
  inline ::google::protobuf::uint32 pri() const;
  inline void set_pri(::google::protobuf::uint32 value);

  // optional uint32 qMaxNum = 4;
  inline bool has_qmaxnum() const;
  inline void clear_qmaxnum();
  static const int kQMaxNumFieldNumber = 4;
  inline ::google::protobuf::uint32 qmaxnum() const;
  inline void set_qmaxnum(::google::protobuf::uint32 value);

  // optional uint32 autoRecv = 5;
  inline bool has_autorecv() const;
  inline void clear_autorecv();
  static const int kAutoRecvFieldNumber = 5;
  inline ::google::protobuf::uint32 autorecv() const;
  inline void set_autorecv(::google::protobuf::uint32 value);

  // optional uint32 workState = 6;
  inline bool has_workstate() const;
  inline void clear_workstate();
  static const int kWorkStateFieldNumber = 6;
  inline ::google::protobuf::uint32 workstate() const;
  inline void set_workstate(::google::protobuf::uint32 value);

  // optional uint32 winNum = 7;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinNumFieldNumber = 7;
  inline ::google::protobuf::uint32 winnum() const;
  inline void set_winnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnListGmUserCmd.Data)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pri();
  inline void clear_has_pri();
  inline void set_has_qmaxnum();
  inline void clear_has_qmaxnum();
  inline void set_has_autorecv();
  inline void clear_has_autorecv();
  inline void set_has_workstate();
  inline void clear_has_workstate();
  inline void set_has_winnum();
  inline void clear_has_winnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 name_;
  ::google::protobuf::uint32 pri_;
  ::google::protobuf::uint32 qmaxnum_;
  ::google::protobuf::uint32 autorecv_;
  ::google::protobuf::uint32 workstate_;
  ::google::protobuf::uint32 winnum_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnListGmUserCmd_Data* default_instance_;
};
// -------------------------------------------------------------------

class stReturnListGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnListGmUserCmd();
  virtual ~stReturnListGmUserCmd();

  stReturnListGmUserCmd(const stReturnListGmUserCmd& from);

  inline stReturnListGmUserCmd& operator=(const stReturnListGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnListGmUserCmd& default_instance();

  void Swap(stReturnListGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnListGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnListGmUserCmd& from);
  void MergeFrom(const stReturnListGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef stReturnListGmUserCmd_Data Data;

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // repeated .Pmd.stReturnListGmUserCmd.Data data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::Pmd::stReturnListGmUserCmd_Data& data(int index) const;
  inline ::Pmd::stReturnListGmUserCmd_Data* mutable_data(int index);
  inline ::Pmd::stReturnListGmUserCmd_Data* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnListGmUserCmd_Data >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnListGmUserCmd_Data >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.stReturnListGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnListGmUserCmd_Data > data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnListGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestZoneConfigGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestZoneConfigGmUserCmd();
  virtual ~stRequestZoneConfigGmUserCmd();

  stRequestZoneConfigGmUserCmd(const stRequestZoneConfigGmUserCmd& from);

  inline stRequestZoneConfigGmUserCmd& operator=(const stRequestZoneConfigGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestZoneConfigGmUserCmd& default_instance();

  void Swap(stRequestZoneConfigGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestZoneConfigGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestZoneConfigGmUserCmd& from);
  void MergeFrom(const stRequestZoneConfigGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestZoneConfigGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestZoneConfigGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnZoneDicCountryGmUserCmd_Data : public ::google::protobuf::Message {
 public:
  stReturnZoneDicCountryGmUserCmd_Data();
  virtual ~stReturnZoneDicCountryGmUserCmd_Data();

  stReturnZoneDicCountryGmUserCmd_Data(const stReturnZoneDicCountryGmUserCmd_Data& from);

  inline stReturnZoneDicCountryGmUserCmd_Data& operator=(const stReturnZoneDicCountryGmUserCmd_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnZoneDicCountryGmUserCmd_Data& default_instance();

  void Swap(stReturnZoneDicCountryGmUserCmd_Data* other);

  // implements Message ----------------------------------------------

  stReturnZoneDicCountryGmUserCmd_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnZoneDicCountryGmUserCmd_Data& from);
  void MergeFrom(const stReturnZoneDicCountryGmUserCmd_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 countryid = 1;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 1;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::uint32 name() const;
  inline void set_name(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnZoneDicCountryGmUserCmd.Data)
 private:
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 name_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnZoneDicCountryGmUserCmd_Data* default_instance_;
};
// -------------------------------------------------------------------

class stReturnZoneDicCountryGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnZoneDicCountryGmUserCmd();
  virtual ~stReturnZoneDicCountryGmUserCmd();

  stReturnZoneDicCountryGmUserCmd(const stReturnZoneDicCountryGmUserCmd& from);

  inline stReturnZoneDicCountryGmUserCmd& operator=(const stReturnZoneDicCountryGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnZoneDicCountryGmUserCmd& default_instance();

  void Swap(stReturnZoneDicCountryGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnZoneDicCountryGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnZoneDicCountryGmUserCmd& from);
  void MergeFrom(const stReturnZoneDicCountryGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef stReturnZoneDicCountryGmUserCmd_Data Data;

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // repeated .Pmd.stReturnZoneDicCountryGmUserCmd.Data data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Pmd::stReturnZoneDicCountryGmUserCmd_Data& data(int index) const;
  inline ::Pmd::stReturnZoneDicCountryGmUserCmd_Data* mutable_data(int index);
  inline ::Pmd::stReturnZoneDicCountryGmUserCmd_Data* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicCountryGmUserCmd_Data >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicCountryGmUserCmd_Data >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.stReturnZoneDicCountryGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicCountryGmUserCmd_Data > data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnZoneDicCountryGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnZoneDicMapGmUserCmd_Data : public ::google::protobuf::Message {
 public:
  stReturnZoneDicMapGmUserCmd_Data();
  virtual ~stReturnZoneDicMapGmUserCmd_Data();

  stReturnZoneDicMapGmUserCmd_Data(const stReturnZoneDicMapGmUserCmd_Data& from);

  inline stReturnZoneDicMapGmUserCmd_Data& operator=(const stReturnZoneDicMapGmUserCmd_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnZoneDicMapGmUserCmd_Data& default_instance();

  void Swap(stReturnZoneDicMapGmUserCmd_Data* other);

  // implements Message ----------------------------------------------

  stReturnZoneDicMapGmUserCmd_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnZoneDicMapGmUserCmd_Data& from);
  void MergeFrom(const stReturnZoneDicMapGmUserCmd_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sceneid = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::uint32 name() const;
  inline void set_name(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnZoneDicMapGmUserCmd.Data)
 private:
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 name_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnZoneDicMapGmUserCmd_Data* default_instance_;
};
// -------------------------------------------------------------------

class stReturnZoneDicMapGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnZoneDicMapGmUserCmd();
  virtual ~stReturnZoneDicMapGmUserCmd();

  stReturnZoneDicMapGmUserCmd(const stReturnZoneDicMapGmUserCmd& from);

  inline stReturnZoneDicMapGmUserCmd& operator=(const stReturnZoneDicMapGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnZoneDicMapGmUserCmd& default_instance();

  void Swap(stReturnZoneDicMapGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnZoneDicMapGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnZoneDicMapGmUserCmd& from);
  void MergeFrom(const stReturnZoneDicMapGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef stReturnZoneDicMapGmUserCmd_Data Data;

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // repeated .Pmd.stReturnZoneDicMapGmUserCmd.Data data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Pmd::stReturnZoneDicMapGmUserCmd_Data& data(int index) const;
  inline ::Pmd::stReturnZoneDicMapGmUserCmd_Data* mutable_data(int index);
  inline ::Pmd::stReturnZoneDicMapGmUserCmd_Data* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicMapGmUserCmd_Data >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicMapGmUserCmd_Data >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.stReturnZoneDicMapGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicMapGmUserCmd_Data > data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnZoneDicMapGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stForwardToAllGmUserCmd : public ::google::protobuf::Message {
 public:
  stForwardToAllGmUserCmd();
  virtual ~stForwardToAllGmUserCmd();

  stForwardToAllGmUserCmd(const stForwardToAllGmUserCmd& from);

  inline stForwardToAllGmUserCmd& operator=(const stForwardToAllGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stForwardToAllGmUserCmd& default_instance();

  void Swap(stForwardToAllGmUserCmd* other);

  // implements Message ----------------------------------------------

  stForwardToAllGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stForwardToAllGmUserCmd& from);
  void MergeFrom(const stForwardToAllGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dwZoneID = 1;
  inline bool has_dwzoneid() const;
  inline void clear_dwzoneid();
  static const int kDwZoneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwzoneid() const;
  inline void set_dwzoneid(::google::protobuf::uint32 value);

  // optional uint32 wCountryID = 2;
  inline bool has_wcountryid() const;
  inline void clear_wcountryid();
  static const int kWCountryIDFieldNumber = 2;
  inline ::google::protobuf::uint32 wcountryid() const;
  inline void set_wcountryid(::google::protobuf::uint32 value);

  // optional uint32 wSceneID = 3;
  inline bool has_wsceneid() const;
  inline void clear_wsceneid();
  static const int kWSceneIDFieldNumber = 3;
  inline ::google::protobuf::uint32 wsceneid() const;
  inline void set_wsceneid(::google::protobuf::uint32 value);

  // optional uint32 dwUserID = 4;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 4;
  inline ::google::protobuf::uint32 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::uint32 value);

  // optional uint32 dwProvinceID = 5;
  inline bool has_dwprovinceid() const;
  inline void clear_dwprovinceid();
  static const int kDwProvinceIDFieldNumber = 5;
  inline ::google::protobuf::uint32 dwprovinceid() const;
  inline void set_dwprovinceid(::google::protobuf::uint32 value);

  // optional uint32 dwCityID = 6;
  inline bool has_dwcityid() const;
  inline void clear_dwcityid();
  static const int kDwCityIDFieldNumber = 6;
  inline ::google::protobuf::uint32 dwcityid() const;
  inline void set_dwcityid(::google::protobuf::uint32 value);

  // optional string userName = 7;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 7;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional uint32 num = 8;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 8;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 9;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 9;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stForwardToAllGmUserCmd)
 private:
  inline void set_has_dwzoneid();
  inline void clear_has_dwzoneid();
  inline void set_has_wcountryid();
  inline void clear_has_wcountryid();
  inline void set_has_wsceneid();
  inline void clear_has_wsceneid();
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_dwprovinceid();
  inline void clear_has_dwprovinceid();
  inline void set_has_dwcityid();
  inline void clear_has_dwcityid();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dwzoneid_;
  ::google::protobuf::uint32 wcountryid_;
  ::google::protobuf::uint32 wsceneid_;
  ::google::protobuf::uint32 dwuserid_;
  ::google::protobuf::uint32 dwprovinceid_;
  ::google::protobuf::uint32 dwcityid_;
  ::std::string* username_;
  ::std::string* data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stForwardToAllGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stForwardToOnlyGmUserCmd : public ::google::protobuf::Message {
 public:
  stForwardToOnlyGmUserCmd();
  virtual ~stForwardToOnlyGmUserCmd();

  stForwardToOnlyGmUserCmd(const stForwardToOnlyGmUserCmd& from);

  inline stForwardToOnlyGmUserCmd& operator=(const stForwardToOnlyGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stForwardToOnlyGmUserCmd& default_instance();

  void Swap(stForwardToOnlyGmUserCmd* other);

  // implements Message ----------------------------------------------

  stForwardToOnlyGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stForwardToOnlyGmUserCmd& from);
  void MergeFrom(const stForwardToOnlyGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dwZoneID = 1;
  inline bool has_dwzoneid() const;
  inline void clear_dwzoneid();
  static const int kDwZoneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwzoneid() const;
  inline void set_dwzoneid(::google::protobuf::uint32 value);

  // optional uint32 wCountryID = 2;
  inline bool has_wcountryid() const;
  inline void clear_wcountryid();
  static const int kWCountryIDFieldNumber = 2;
  inline ::google::protobuf::uint32 wcountryid() const;
  inline void set_wcountryid(::google::protobuf::uint32 value);

  // optional uint32 wSceneID = 3;
  inline bool has_wsceneid() const;
  inline void clear_wsceneid();
  static const int kWSceneIDFieldNumber = 3;
  inline ::google::protobuf::uint32 wsceneid() const;
  inline void set_wsceneid(::google::protobuf::uint32 value);

  // optional uint32 dwUserID = 4;
  inline bool has_dwuserid() const;
  inline void clear_dwuserid();
  static const int kDwUserIDFieldNumber = 4;
  inline ::google::protobuf::uint32 dwuserid() const;
  inline void set_dwuserid(::google::protobuf::uint32 value);

  // optional string userName = 5;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 5;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional uint32 gmID = 6;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmIDFieldNumber = 6;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional string gmName = 7;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmNameFieldNumber = 7;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional uint32 num = 8;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 8;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 9;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 9;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stForwardToOnlyGmUserCmd)
 private:
  inline void set_has_dwzoneid();
  inline void clear_has_dwzoneid();
  inline void set_has_wcountryid();
  inline void clear_has_wcountryid();
  inline void set_has_wsceneid();
  inline void clear_has_wsceneid();
  inline void set_has_dwuserid();
  inline void clear_has_dwuserid();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dwzoneid_;
  ::google::protobuf::uint32 wcountryid_;
  ::google::protobuf::uint32 wsceneid_;
  ::google::protobuf::uint32 dwuserid_;
  ::std::string* username_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 num_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stForwardToOnlyGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stBroadcastNewGmUserCmd : public ::google::protobuf::Message {
 public:
  stBroadcastNewGmUserCmd();
  virtual ~stBroadcastNewGmUserCmd();

  stBroadcastNewGmUserCmd(const stBroadcastNewGmUserCmd& from);

  inline stBroadcastNewGmUserCmd& operator=(const stBroadcastNewGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stBroadcastNewGmUserCmd& default_instance();

  void Swap(stBroadcastNewGmUserCmd* other);

  // implements Message ----------------------------------------------

  stBroadcastNewGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stBroadcastNewGmUserCmd& from);
  void MergeFrom(const stBroadcastNewGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 gmID = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmIDFieldNumber = 2;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional string gmName = 3;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmNameFieldNumber = 3;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional uint32 dwZoneID = 4;
  inline bool has_dwzoneid() const;
  inline void clear_dwzoneid();
  static const int kDwZoneIDFieldNumber = 4;
  inline ::google::protobuf::uint32 dwzoneid() const;
  inline void set_dwzoneid(::google::protobuf::uint32 value);

  // optional uint32 wCountryID = 5;
  inline bool has_wcountryid() const;
  inline void clear_wcountryid();
  static const int kWCountryIDFieldNumber = 5;
  inline ::google::protobuf::uint32 wcountryid() const;
  inline void set_wcountryid(::google::protobuf::uint32 value);

  // optional uint32 wSceneID = 6;
  inline bool has_wsceneid() const;
  inline void clear_wsceneid();
  static const int kWSceneIDFieldNumber = 6;
  inline ::google::protobuf::uint32 wsceneid() const;
  inline void set_wsceneid(::google::protobuf::uint32 value);

  // optional uint32 dwTimeFrom = 7;
  inline bool has_dwtimefrom() const;
  inline void clear_dwtimefrom();
  static const int kDwTimeFromFieldNumber = 7;
  inline ::google::protobuf::uint32 dwtimefrom() const;
  inline void set_dwtimefrom(::google::protobuf::uint32 value);

  // optional uint32 dwTimeEnd = 8;
  inline bool has_dwtimeend() const;
  inline void clear_dwtimeend();
  static const int kDwTimeEndFieldNumber = 8;
  inline ::google::protobuf::uint32 dwtimeend() const;
  inline void set_dwtimeend(::google::protobuf::uint32 value);

  // optional uint32 dwIntervalTime = 9;
  inline bool has_dwintervaltime() const;
  inline void clear_dwintervaltime();
  static const int kDwIntervalTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 dwintervaltime() const;
  inline void set_dwintervaltime(::google::protobuf::uint32 value);

  // optional uint32 byPriority = 10;
  inline bool has_bypriority() const;
  inline void clear_bypriority();
  static const int kByPriorityFieldNumber = 10;
  inline ::google::protobuf::uint32 bypriority() const;
  inline void set_bypriority(::google::protobuf::uint32 value);

  // optional uint32 num = 11;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 11;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 12;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 12;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stBroadcastNewGmUserCmd)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_dwzoneid();
  inline void clear_has_dwzoneid();
  inline void set_has_wcountryid();
  inline void clear_has_wcountryid();
  inline void set_has_wsceneid();
  inline void clear_has_wsceneid();
  inline void set_has_dwtimefrom();
  inline void clear_has_dwtimefrom();
  inline void set_has_dwtimeend();
  inline void clear_has_dwtimeend();
  inline void set_has_dwintervaltime();
  inline void clear_has_dwintervaltime();
  inline void set_has_bypriority();
  inline void clear_has_bypriority();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 gmid_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 dwzoneid_;
  ::google::protobuf::uint32 wcountryid_;
  ::google::protobuf::uint32 wsceneid_;
  ::google::protobuf::uint32 dwtimefrom_;
  ::google::protobuf::uint32 dwtimeend_;
  ::google::protobuf::uint32 dwintervaltime_;
  ::google::protobuf::uint32 bypriority_;
  ::google::protobuf::uint32 num_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stBroadcastNewGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stBroadcastDeleteGmUserCmd : public ::google::protobuf::Message {
 public:
  stBroadcastDeleteGmUserCmd();
  virtual ~stBroadcastDeleteGmUserCmd();

  stBroadcastDeleteGmUserCmd(const stBroadcastDeleteGmUserCmd& from);

  inline stBroadcastDeleteGmUserCmd& operator=(const stBroadcastDeleteGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stBroadcastDeleteGmUserCmd& default_instance();

  void Swap(stBroadcastDeleteGmUserCmd* other);

  // implements Message ----------------------------------------------

  stBroadcastDeleteGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stBroadcastDeleteGmUserCmd& from);
  void MergeFrom(const stBroadcastDeleteGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stBroadcastDeleteGmUserCmd)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stBroadcastDeleteGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stBroadcastRequestGmUserCmd : public ::google::protobuf::Message {
 public:
  stBroadcastRequestGmUserCmd();
  virtual ~stBroadcastRequestGmUserCmd();

  stBroadcastRequestGmUserCmd(const stBroadcastRequestGmUserCmd& from);

  inline stBroadcastRequestGmUserCmd& operator=(const stBroadcastRequestGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stBroadcastRequestGmUserCmd& default_instance();

  void Swap(stBroadcastRequestGmUserCmd* other);

  // implements Message ----------------------------------------------

  stBroadcastRequestGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stBroadcastRequestGmUserCmd& from);
  void MergeFrom(const stBroadcastRequestGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dwZoneID = 1;
  inline bool has_dwzoneid() const;
  inline void clear_dwzoneid();
  static const int kDwZoneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwzoneid() const;
  inline void set_dwzoneid(::google::protobuf::uint32 value);

  // optional uint32 wCountryID = 2;
  inline bool has_wcountryid() const;
  inline void clear_wcountryid();
  static const int kWCountryIDFieldNumber = 2;
  inline ::google::protobuf::uint32 wcountryid() const;
  inline void set_wcountryid(::google::protobuf::uint32 value);

  // optional uint32 wSceneID = 3;
  inline bool has_wsceneid() const;
  inline void clear_wsceneid();
  static const int kWSceneIDFieldNumber = 3;
  inline ::google::protobuf::uint32 wsceneid() const;
  inline void set_wsceneid(::google::protobuf::uint32 value);

  // optional uint32 dwTimeEnd = 4;
  inline bool has_dwtimeend() const;
  inline void clear_dwtimeend();
  static const int kDwTimeEndFieldNumber = 4;
  inline ::google::protobuf::uint32 dwtimeend() const;
  inline void set_dwtimeend(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stBroadcastRequestGmUserCmd)
 private:
  inline void set_has_dwzoneid();
  inline void clear_has_dwzoneid();
  inline void set_has_wcountryid();
  inline void clear_has_wcountryid();
  inline void set_has_wsceneid();
  inline void clear_has_wsceneid();
  inline void set_has_dwtimeend();
  inline void clear_has_dwtimeend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 dwzoneid_;
  ::google::protobuf::uint32 wcountryid_;
  ::google::protobuf::uint32 wsceneid_;
  ::google::protobuf::uint32 dwtimeend_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stBroadcastRequestGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestTimeGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestTimeGmUserCmd();
  virtual ~stRequestTimeGmUserCmd();

  stRequestTimeGmUserCmd(const stRequestTimeGmUserCmd& from);

  inline stRequestTimeGmUserCmd& operator=(const stRequestTimeGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestTimeGmUserCmd& default_instance();

  void Swap(stRequestTimeGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestTimeGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestTimeGmUserCmd& from);
  void MergeFrom(const stRequestTimeGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.stRequestTimeGmUserCmd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestTimeGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnTimeGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnTimeGmUserCmd();
  virtual ~stReturnTimeGmUserCmd();

  stReturnTimeGmUserCmd(const stReturnTimeGmUserCmd& from);

  inline stReturnTimeGmUserCmd& operator=(const stReturnTimeGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnTimeGmUserCmd& default_instance();

  void Swap(stReturnTimeGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnTimeGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnTimeGmUserCmd& from);
  void MergeFrom(const stReturnTimeGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnTimeGmUserCmd)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnTimeGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stServerShutdownGmUserCmd : public ::google::protobuf::Message {
 public:
  stServerShutdownGmUserCmd();
  virtual ~stServerShutdownGmUserCmd();

  stServerShutdownGmUserCmd(const stServerShutdownGmUserCmd& from);

  inline stServerShutdownGmUserCmd& operator=(const stServerShutdownGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stServerShutdownGmUserCmd& default_instance();

  void Swap(stServerShutdownGmUserCmd* other);

  // implements Message ----------------------------------------------

  stServerShutdownGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stServerShutdownGmUserCmd& from);
  void MergeFrom(const stServerShutdownGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 serverid = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // optional uint32 servertype = 3;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServertypeFieldNumber = 3;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);

  // optional string servername = 4;
  inline bool has_servername() const;
  inline void clear_servername();
  static const int kServernameFieldNumber = 4;
  inline const ::std::string& servername() const;
  inline void set_servername(const ::std::string& value);
  inline void set_servername(const char* value);
  inline void set_servername(const char* value, size_t size);
  inline ::std::string* mutable_servername();
  inline ::std::string* release_servername();
  inline void set_allocated_servername(::std::string* servername);

  // optional uint32 serverip = 5;
  inline bool has_serverip() const;
  inline void clear_serverip();
  static const int kServeripFieldNumber = 5;
  inline ::google::protobuf::uint32 serverip() const;
  inline void set_serverip(::google::protobuf::uint32 value);

  // optional uint32 usernum = 6;
  inline bool has_usernum() const;
  inline void clear_usernum();
  static const int kUsernumFieldNumber = 6;
  inline ::google::protobuf::uint32 usernum() const;
  inline void set_usernum(::google::protobuf::uint32 value);

  // optional uint32 time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stServerShutdownGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_servertype();
  inline void clear_has_servertype();
  inline void set_has_servername();
  inline void clear_has_servername();
  inline void set_has_serverip();
  inline void clear_has_serverip();
  inline void set_has_usernum();
  inline void clear_has_usernum();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 serverid_;
  ::std::string* servername_;
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 serverip_;
  ::google::protobuf::uint32 usernum_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stServerShutdownGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestZoneDicGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestZoneDicGmUserCmd();
  virtual ~stRequestZoneDicGmUserCmd();

  stRequestZoneDicGmUserCmd(const stRequestZoneDicGmUserCmd& from);

  inline stRequestZoneDicGmUserCmd& operator=(const stRequestZoneDicGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestZoneDicGmUserCmd& default_instance();

  void Swap(stRequestZoneDicGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestZoneDicGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestZoneDicGmUserCmd& from);
  void MergeFrom(const stRequestZoneDicGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.stRequestZoneDicGmUserCmd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestZoneDicGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnZoneDicGmUserCmd_Data : public ::google::protobuf::Message {
 public:
  stReturnZoneDicGmUserCmd_Data();
  virtual ~stReturnZoneDicGmUserCmd_Data();

  stReturnZoneDicGmUserCmd_Data(const stReturnZoneDicGmUserCmd_Data& from);

  inline stReturnZoneDicGmUserCmd_Data& operator=(const stReturnZoneDicGmUserCmd_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnZoneDicGmUserCmd_Data& default_instance();

  void Swap(stReturnZoneDicGmUserCmd_Data* other);

  // implements Message ----------------------------------------------

  stReturnZoneDicGmUserCmd_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnZoneDicGmUserCmd_Data& from);
  void MergeFrom(const stReturnZoneDicGmUserCmd_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::uint32 name() const;
  inline void set_name(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnZoneDicGmUserCmd.Data)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 name_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnZoneDicGmUserCmd_Data* default_instance_;
};
// -------------------------------------------------------------------

class stReturnZoneDicGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnZoneDicGmUserCmd();
  virtual ~stReturnZoneDicGmUserCmd();

  stReturnZoneDicGmUserCmd(const stReturnZoneDicGmUserCmd& from);

  inline stReturnZoneDicGmUserCmd& operator=(const stReturnZoneDicGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnZoneDicGmUserCmd& default_instance();

  void Swap(stReturnZoneDicGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnZoneDicGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnZoneDicGmUserCmd& from);
  void MergeFrom(const stReturnZoneDicGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef stReturnZoneDicGmUserCmd_Data Data;

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // repeated .Pmd.stReturnZoneDicGmUserCmd.Data data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::Pmd::stReturnZoneDicGmUserCmd_Data& data(int index) const;
  inline ::Pmd::stReturnZoneDicGmUserCmd_Data* mutable_data(int index);
  inline ::Pmd::stReturnZoneDicGmUserCmd_Data* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicGmUserCmd_Data >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicGmUserCmd_Data >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.stReturnZoneDicGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicGmUserCmd_Data > data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnZoneDicGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stAddChatConfigGmUserCmd : public ::google::protobuf::Message {
 public:
  stAddChatConfigGmUserCmd();
  virtual ~stAddChatConfigGmUserCmd();

  stAddChatConfigGmUserCmd(const stAddChatConfigGmUserCmd& from);

  inline stAddChatConfigGmUserCmd& operator=(const stAddChatConfigGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stAddChatConfigGmUserCmd& default_instance();

  void Swap(stAddChatConfigGmUserCmd* other);

  // implements Message ----------------------------------------------

  stAddChatConfigGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stAddChatConfigGmUserCmd& from);
  void MergeFrom(const stAddChatConfigGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countyrid = 2;
  inline bool has_countyrid() const;
  inline void clear_countyrid();
  static const int kCountyridFieldNumber = 2;
  inline ::google::protobuf::uint32 countyrid() const;
  inline void set_countyrid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 channel = 4;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 4;
  inline ::google::protobuf::uint32 channel() const;
  inline void set_channel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stAddChatConfigGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countyrid();
  inline void clear_has_countyrid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_channel();
  inline void clear_has_channel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countyrid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 channel_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stAddChatConfigGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stCancelChatConfigGmUserCmd : public ::google::protobuf::Message {
 public:
  stCancelChatConfigGmUserCmd();
  virtual ~stCancelChatConfigGmUserCmd();

  stCancelChatConfigGmUserCmd(const stCancelChatConfigGmUserCmd& from);

  inline stCancelChatConfigGmUserCmd& operator=(const stCancelChatConfigGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stCancelChatConfigGmUserCmd& default_instance();

  void Swap(stCancelChatConfigGmUserCmd* other);

  // implements Message ----------------------------------------------

  stCancelChatConfigGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stCancelChatConfigGmUserCmd& from);
  void MergeFrom(const stCancelChatConfigGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countyrid = 2;
  inline bool has_countyrid() const;
  inline void clear_countyrid();
  static const int kCountyridFieldNumber = 2;
  inline ::google::protobuf::uint32 countyrid() const;
  inline void set_countyrid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 channel = 4;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 4;
  inline ::google::protobuf::uint32 channel() const;
  inline void set_channel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stCancelChatConfigGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countyrid();
  inline void clear_has_countyrid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_channel();
  inline void clear_has_channel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countyrid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 channel_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stCancelChatConfigGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestChatTypesGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestChatTypesGmUserCmd();
  virtual ~stRequestChatTypesGmUserCmd();

  stRequestChatTypesGmUserCmd(const stRequestChatTypesGmUserCmd& from);

  inline stRequestChatTypesGmUserCmd& operator=(const stRequestChatTypesGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestChatTypesGmUserCmd& default_instance();

  void Swap(stRequestChatTypesGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestChatTypesGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestChatTypesGmUserCmd& from);
  void MergeFrom(const stRequestChatTypesGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.stRequestChatTypesGmUserCmd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestChatTypesGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnChatTypesGmUserCmd_Data : public ::google::protobuf::Message {
 public:
  stReturnChatTypesGmUserCmd_Data();
  virtual ~stReturnChatTypesGmUserCmd_Data();

  stReturnChatTypesGmUserCmd_Data(const stReturnChatTypesGmUserCmd_Data& from);

  inline stReturnChatTypesGmUserCmd_Data& operator=(const stReturnChatTypesGmUserCmd_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnChatTypesGmUserCmd_Data& default_instance();

  void Swap(stReturnChatTypesGmUserCmd_Data* other);

  // implements Message ----------------------------------------------

  stReturnChatTypesGmUserCmd_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnChatTypesGmUserCmd_Data& from);
  void MergeFrom(const stReturnChatTypesGmUserCmd_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chatType = 1;
  inline bool has_chattype() const;
  inline void clear_chattype();
  static const int kChatTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 chattype() const;
  inline void set_chattype(::google::protobuf::uint32 value);

  // optional uint32 name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline ::google::protobuf::uint32 name() const;
  inline void set_name(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnChatTypesGmUserCmd.Data)
 private:
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 chattype_;
  ::google::protobuf::uint32 name_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnChatTypesGmUserCmd_Data* default_instance_;
};
// -------------------------------------------------------------------

class stReturnChatTypesGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnChatTypesGmUserCmd();
  virtual ~stReturnChatTypesGmUserCmd();

  stReturnChatTypesGmUserCmd(const stReturnChatTypesGmUserCmd& from);

  inline stReturnChatTypesGmUserCmd& operator=(const stReturnChatTypesGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnChatTypesGmUserCmd& default_instance();

  void Swap(stReturnChatTypesGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnChatTypesGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnChatTypesGmUserCmd& from);
  void MergeFrom(const stReturnChatTypesGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef stReturnChatTypesGmUserCmd_Data Data;

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // repeated .Pmd.stReturnChatTypesGmUserCmd.Data data = 2;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::Pmd::stReturnChatTypesGmUserCmd_Data& data(int index) const;
  inline ::Pmd::stReturnChatTypesGmUserCmd_Data* mutable_data(int index);
  inline ::Pmd::stReturnChatTypesGmUserCmd_Data* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnChatTypesGmUserCmd_Data >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnChatTypesGmUserCmd_Data >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.stReturnChatTypesGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnChatTypesGmUserCmd_Data > data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnChatTypesGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stServerStartupGmUserCmd : public ::google::protobuf::Message {
 public:
  stServerStartupGmUserCmd();
  virtual ~stServerStartupGmUserCmd();

  stServerStartupGmUserCmd(const stServerStartupGmUserCmd& from);

  inline stServerStartupGmUserCmd& operator=(const stServerStartupGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stServerStartupGmUserCmd& default_instance();

  void Swap(stServerStartupGmUserCmd* other);

  // implements Message ----------------------------------------------

  stServerStartupGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stServerStartupGmUserCmd& from);
  void MergeFrom(const stServerStartupGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 serverid = 2;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 2;
  inline ::google::protobuf::uint32 serverid() const;
  inline void set_serverid(::google::protobuf::uint32 value);

  // optional uint32 servertype = 3;
  inline bool has_servertype() const;
  inline void clear_servertype();
  static const int kServertypeFieldNumber = 3;
  inline ::google::protobuf::uint32 servertype() const;
  inline void set_servertype(::google::protobuf::uint32 value);

  // optional string servername = 4;
  inline bool has_servername() const;
  inline void clear_servername();
  static const int kServernameFieldNumber = 4;
  inline const ::std::string& servername() const;
  inline void set_servername(const ::std::string& value);
  inline void set_servername(const char* value);
  inline void set_servername(const char* value, size_t size);
  inline ::std::string* mutable_servername();
  inline ::std::string* release_servername();
  inline void set_allocated_servername(::std::string* servername);

  // optional uint32 serverip = 5;
  inline bool has_serverip() const;
  inline void clear_serverip();
  static const int kServeripFieldNumber = 5;
  inline ::google::protobuf::uint32 serverip() const;
  inline void set_serverip(::google::protobuf::uint32 value);

  // optional uint32 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stServerStartupGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_servertype();
  inline void clear_has_servertype();
  inline void set_has_servername();
  inline void clear_has_servername();
  inline void set_has_serverip();
  inline void clear_has_serverip();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 serverid_;
  ::std::string* servername_;
  ::google::protobuf::uint32 servertype_;
  ::google::protobuf::uint32 serverip_;
  ::google::protobuf::uint32 time_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stServerStartupGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stNotifyShutdownGmUserCmd : public ::google::protobuf::Message {
 public:
  stNotifyShutdownGmUserCmd();
  virtual ~stNotifyShutdownGmUserCmd();

  stNotifyShutdownGmUserCmd(const stNotifyShutdownGmUserCmd& from);

  inline stNotifyShutdownGmUserCmd& operator=(const stNotifyShutdownGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stNotifyShutdownGmUserCmd& default_instance();

  void Swap(stNotifyShutdownGmUserCmd* other);

  // implements Message ----------------------------------------------

  stNotifyShutdownGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stNotifyShutdownGmUserCmd& from);
  void MergeFrom(const stNotifyShutdownGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional string gmName = 2;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmNameFieldNumber = 2;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 leftTime = 4;
  inline bool has_lefttime() const;
  inline void clear_lefttime();
  static const int kLeftTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 lefttime() const;
  inline void set_lefttime(::google::protobuf::uint32 value);

  // optional uint32 shutdownTime = 5;
  inline bool has_shutdowntime() const;
  inline void clear_shutdowntime();
  static const int kShutdownTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 shutdowntime() const;
  inline void set_shutdowntime(::google::protobuf::uint32 value);

  // optional string data = 6;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const char* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stNotifyShutdownGmUserCmd)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_lefttime();
  inline void clear_has_lefttime();
  inline void set_has_shutdowntime();
  inline void clear_has_shutdowntime();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 lefttime_;
  ::google::protobuf::uint32 shutdowntime_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stNotifyShutdownGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stCancelShutdownGmUserCmd : public ::google::protobuf::Message {
 public:
  stCancelShutdownGmUserCmd();
  virtual ~stCancelShutdownGmUserCmd();

  stCancelShutdownGmUserCmd(const stCancelShutdownGmUserCmd& from);

  inline stCancelShutdownGmUserCmd& operator=(const stCancelShutdownGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stCancelShutdownGmUserCmd& default_instance();

  void Swap(stCancelShutdownGmUserCmd* other);

  // implements Message ----------------------------------------------

  stCancelShutdownGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stCancelShutdownGmUserCmd& from);
  void MergeFrom(const stCancelShutdownGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stCancelShutdownGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stCancelShutdownGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stGmServerMessageGmUserCmd : public ::google::protobuf::Message {
 public:
  stGmServerMessageGmUserCmd();
  virtual ~stGmServerMessageGmUserCmd();

  stGmServerMessageGmUserCmd(const stGmServerMessageGmUserCmd& from);

  inline stGmServerMessageGmUserCmd& operator=(const stGmServerMessageGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stGmServerMessageGmUserCmd& default_instance();

  void Swap(stGmServerMessageGmUserCmd* other);

  // implements Message ----------------------------------------------

  stGmServerMessageGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stGmServerMessageGmUserCmd& from);
  void MergeFrom(const stGmServerMessageGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional uint32 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stGmServerMessageGmUserCmd)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 gmid_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stGmServerMessageGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestDelGmUserGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestDelGmUserGmUserCmd();
  virtual ~stRequestDelGmUserGmUserCmd();

  stRequestDelGmUserGmUserCmd(const stRequestDelGmUserGmUserCmd& from);

  inline stRequestDelGmUserGmUserCmd& operator=(const stRequestDelGmUserGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestDelGmUserGmUserCmd& default_instance();

  void Swap(stRequestDelGmUserGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestDelGmUserGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestDelGmUserGmUserCmd& from);
  void MergeFrom(const stRequestDelGmUserGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestDelGmUserGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestDelGmUserGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestResetGmUserPasswordGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestResetGmUserPasswordGmUserCmd();
  virtual ~stRequestResetGmUserPasswordGmUserCmd();

  stRequestResetGmUserPasswordGmUserCmd(const stRequestResetGmUserPasswordGmUserCmd& from);

  inline stRequestResetGmUserPasswordGmUserCmd& operator=(const stRequestResetGmUserPasswordGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestResetGmUserPasswordGmUserCmd& default_instance();

  void Swap(stRequestResetGmUserPasswordGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestResetGmUserPasswordGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestResetGmUserPasswordGmUserCmd& from);
  void MergeFrom(const stRequestResetGmUserPasswordGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestResetGmUserPasswordGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestResetGmUserPasswordGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stQequestShutDownGmUserCmd : public ::google::protobuf::Message {
 public:
  stQequestShutDownGmUserCmd();
  virtual ~stQequestShutDownGmUserCmd();

  stQequestShutDownGmUserCmd(const stQequestShutDownGmUserCmd& from);

  inline stQequestShutDownGmUserCmd& operator=(const stQequestShutDownGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stQequestShutDownGmUserCmd& default_instance();

  void Swap(stQequestShutDownGmUserCmd* other);

  // implements Message ----------------------------------------------

  stQequestShutDownGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stQequestShutDownGmUserCmd& from);
  void MergeFrom(const stQequestShutDownGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stQequestShutDownGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stQequestShutDownGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestForbidAccountGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestForbidAccountGmUserCmd();
  virtual ~stRequestForbidAccountGmUserCmd();

  stRequestForbidAccountGmUserCmd(const stRequestForbidAccountGmUserCmd& from);

  inline stRequestForbidAccountGmUserCmd& operator=(const stRequestForbidAccountGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestForbidAccountGmUserCmd& default_instance();

  void Swap(stRequestForbidAccountGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestForbidAccountGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestForbidAccountGmUserCmd& from);
  void MergeFrom(const stRequestForbidAccountGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.ForbidAccountData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::ForbidAccountData& data() const;
  inline ::Pmd::ForbidAccountData* mutable_data();
  inline ::Pmd::ForbidAccountData* release_data();
  inline void set_allocated_data(::Pmd::ForbidAccountData* data);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestForbidAccountGmUserCmd)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::ForbidAccountData* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestForbidAccountGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stQueryForbidAccountGmUserCmd : public ::google::protobuf::Message {
 public:
  stQueryForbidAccountGmUserCmd();
  virtual ~stQueryForbidAccountGmUserCmd();

  stQueryForbidAccountGmUserCmd(const stQueryForbidAccountGmUserCmd& from);

  inline stQueryForbidAccountGmUserCmd& operator=(const stQueryForbidAccountGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stQueryForbidAccountGmUserCmd& default_instance();

  void Swap(stQueryForbidAccountGmUserCmd* other);

  // implements Message ----------------------------------------------

  stQueryForbidAccountGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stQueryForbidAccountGmUserCmd& from);
  void MergeFrom(const stQueryForbidAccountGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.ForbidAccountData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::ForbidAccountData& data() const;
  inline ::Pmd::ForbidAccountData* mutable_data();
  inline ::Pmd::ForbidAccountData* release_data();
  inline void set_allocated_data(::Pmd::ForbidAccountData* data);

  // @@protoc_insertion_point(class_scope:Pmd.stQueryForbidAccountGmUserCmd)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::ForbidAccountData* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stQueryForbidAccountGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnForbidAccountListGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnForbidAccountListGmUserCmd();
  virtual ~stReturnForbidAccountListGmUserCmd();

  stReturnForbidAccountListGmUserCmd(const stReturnForbidAccountListGmUserCmd& from);

  inline stReturnForbidAccountListGmUserCmd& operator=(const stReturnForbidAccountListGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnForbidAccountListGmUserCmd& default_instance();

  void Swap(stReturnForbidAccountListGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnForbidAccountListGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnForbidAccountListGmUserCmd& from);
  void MergeFrom(const stReturnForbidAccountListGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnForbidAccountListGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnForbidAccountListGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestUnForbidAccountGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestUnForbidAccountGmUserCmd();
  virtual ~stRequestUnForbidAccountGmUserCmd();

  stRequestUnForbidAccountGmUserCmd(const stRequestUnForbidAccountGmUserCmd& from);

  inline stRequestUnForbidAccountGmUserCmd& operator=(const stRequestUnForbidAccountGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestUnForbidAccountGmUserCmd& default_instance();

  void Swap(stRequestUnForbidAccountGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestUnForbidAccountGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestUnForbidAccountGmUserCmd& from);
  void MergeFrom(const stRequestUnForbidAccountGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.ForbidAccountData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::Pmd::ForbidAccountData& data() const;
  inline ::Pmd::ForbidAccountData* mutable_data();
  inline ::Pmd::ForbidAccountData* release_data();
  inline void set_allocated_data(::Pmd::ForbidAccountData* data);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestUnForbidAccountGmUserCmd)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::ForbidAccountData* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestUnForbidAccountGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stBroadcastDeleteZoneGmUserCmd : public ::google::protobuf::Message {
 public:
  stBroadcastDeleteZoneGmUserCmd();
  virtual ~stBroadcastDeleteZoneGmUserCmd();

  stBroadcastDeleteZoneGmUserCmd(const stBroadcastDeleteZoneGmUserCmd& from);

  inline stBroadcastDeleteZoneGmUserCmd& operator=(const stBroadcastDeleteZoneGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stBroadcastDeleteZoneGmUserCmd& default_instance();

  void Swap(stBroadcastDeleteZoneGmUserCmd* other);

  // implements Message ----------------------------------------------

  stBroadcastDeleteZoneGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stBroadcastDeleteZoneGmUserCmd& from);
  void MergeFrom(const stBroadcastDeleteZoneGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneID = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneIDFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stBroadcastDeleteZoneGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stBroadcastDeleteZoneGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestNameAccountGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestNameAccountGmUserCmd();
  virtual ~stRequestNameAccountGmUserCmd();

  stRequestNameAccountGmUserCmd(const stRequestNameAccountGmUserCmd& from);

  inline stRequestNameAccountGmUserCmd& operator=(const stRequestNameAccountGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestNameAccountGmUserCmd& default_instance();

  void Swap(stRequestNameAccountGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestNameAccountGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestNameAccountGmUserCmd& from);
  void MergeFrom(const stRequestNameAccountGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestNameAccountGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestNameAccountGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnNameAccountGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnNameAccountGmUserCmd();
  virtual ~stReturnNameAccountGmUserCmd();

  stReturnNameAccountGmUserCmd(const stReturnNameAccountGmUserCmd& from);

  inline stReturnNameAccountGmUserCmd& operator=(const stReturnNameAccountGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnNameAccountGmUserCmd& default_instance();

  void Swap(stReturnNameAccountGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnNameAccountGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnNameAccountGmUserCmd& from);
  void MergeFrom(const stReturnNameAccountGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnNameAccountGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnNameAccountGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestDBConnectionConfigGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestDBConnectionConfigGmUserCmd();
  virtual ~stRequestDBConnectionConfigGmUserCmd();

  stRequestDBConnectionConfigGmUserCmd(const stRequestDBConnectionConfigGmUserCmd& from);

  inline stRequestDBConnectionConfigGmUserCmd& operator=(const stRequestDBConnectionConfigGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestDBConnectionConfigGmUserCmd& default_instance();

  void Swap(stRequestDBConnectionConfigGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestDBConnectionConfigGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestDBConnectionConfigGmUserCmd& from);
  void MergeFrom(const stRequestDBConnectionConfigGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.stRequestDBConnectionConfigGmUserCmd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestDBConnectionConfigGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnDBConnectionConfigGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnDBConnectionConfigGmUserCmd();
  virtual ~stReturnDBConnectionConfigGmUserCmd();

  stReturnDBConnectionConfigGmUserCmd(const stReturnDBConnectionConfigGmUserCmd& from);

  inline stReturnDBConnectionConfigGmUserCmd& operator=(const stReturnDBConnectionConfigGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnDBConnectionConfigGmUserCmd& default_instance();

  void Swap(stReturnDBConnectionConfigGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnDBConnectionConfigGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnDBConnectionConfigGmUserCmd& from);
  void MergeFrom(const stReturnDBConnectionConfigGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnDBConnectionConfigGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnDBConnectionConfigGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stQueryNameExistGmUserCmd : public ::google::protobuf::Message {
 public:
  stQueryNameExistGmUserCmd();
  virtual ~stQueryNameExistGmUserCmd();

  stQueryNameExistGmUserCmd(const stQueryNameExistGmUserCmd& from);

  inline stQueryNameExistGmUserCmd& operator=(const stQueryNameExistGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stQueryNameExistGmUserCmd& default_instance();

  void Swap(stQueryNameExistGmUserCmd* other);

  // implements Message ----------------------------------------------

  stQueryNameExistGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stQueryNameExistGmUserCmd& from);
  void MergeFrom(const stQueryNameExistGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 optype = 2;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 2;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stQueryNameExistGmUserCmd)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stQueryNameExistGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stForceInsertNameGmUserCmd : public ::google::protobuf::Message {
 public:
  stForceInsertNameGmUserCmd();
  virtual ~stForceInsertNameGmUserCmd();

  stForceInsertNameGmUserCmd(const stForceInsertNameGmUserCmd& from);

  inline stForceInsertNameGmUserCmd& operator=(const stForceInsertNameGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stForceInsertNameGmUserCmd& default_instance();

  void Swap(stForceInsertNameGmUserCmd* other);

  // implements Message ----------------------------------------------

  stForceInsertNameGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stForceInsertNameGmUserCmd& from);
  void MergeFrom(const stForceInsertNameGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 optype = 2;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 2;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stForceInsertNameGmUserCmd)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 optype_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stForceInsertNameGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stForceModifyNameGmUserCmd : public ::google::protobuf::Message {
 public:
  stForceModifyNameGmUserCmd();
  virtual ~stForceModifyNameGmUserCmd();

  stForceModifyNameGmUserCmd(const stForceModifyNameGmUserCmd& from);

  inline stForceModifyNameGmUserCmd& operator=(const stForceModifyNameGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stForceModifyNameGmUserCmd& default_instance();

  void Swap(stForceModifyNameGmUserCmd* other);

  // implements Message ----------------------------------------------

  stForceModifyNameGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stForceModifyNameGmUserCmd& from);
  void MergeFrom(const stForceModifyNameGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 opid = 3;
  inline bool has_opid() const;
  inline void clear_opid();
  static const int kOpidFieldNumber = 3;
  inline ::google::protobuf::uint32 opid() const;
  inline void set_opid(::google::protobuf::uint32 value);

  // optional string oldname = 4;
  inline bool has_oldname() const;
  inline void clear_oldname();
  static const int kOldnameFieldNumber = 4;
  inline const ::std::string& oldname() const;
  inline void set_oldname(const ::std::string& value);
  inline void set_oldname(const char* value);
  inline void set_oldname(const char* value, size_t size);
  inline ::std::string* mutable_oldname();
  inline ::std::string* release_oldname();
  inline void set_allocated_oldname(::std::string* oldname);

  // optional string newname = 5;
  inline bool has_newname() const;
  inline void clear_newname();
  static const int kNewnameFieldNumber = 5;
  inline const ::std::string& newname() const;
  inline void set_newname(const ::std::string& value);
  inline void set_newname(const char* value);
  inline void set_newname(const char* value, size_t size);
  inline ::std::string* mutable_newname();
  inline ::std::string* release_newname();
  inline void set_allocated_newname(::std::string* newname);

  // optional uint32 optype = 6;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 6;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stForceModifyNameGmUserCmd)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_opid();
  inline void clear_has_opid();
  inline void set_has_oldname();
  inline void clear_has_oldname();
  inline void set_has_newname();
  inline void clear_has_newname();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 zoneid_;
  ::std::string* oldname_;
  ::google::protobuf::uint32 opid_;
  ::google::protobuf::uint32 optype_;
  ::std::string* newname_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stForceModifyNameGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stCheckOnlineGmUserCmd : public ::google::protobuf::Message {
 public:
  stCheckOnlineGmUserCmd();
  virtual ~stCheckOnlineGmUserCmd();

  stCheckOnlineGmUserCmd(const stCheckOnlineGmUserCmd& from);

  inline stCheckOnlineGmUserCmd& operator=(const stCheckOnlineGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stCheckOnlineGmUserCmd& default_instance();

  void Swap(stCheckOnlineGmUserCmd* other);

  // implements Message ----------------------------------------------

  stCheckOnlineGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stCheckOnlineGmUserCmd& from);
  void MergeFrom(const stCheckOnlineGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:Pmd.stCheckOnlineGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 zoneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stCheckOnlineGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnCheckOnlineGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnCheckOnlineGmUserCmd();
  virtual ~stReturnCheckOnlineGmUserCmd();

  stReturnCheckOnlineGmUserCmd(const stReturnCheckOnlineGmUserCmd& from);

  inline stReturnCheckOnlineGmUserCmd& operator=(const stReturnCheckOnlineGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnCheckOnlineGmUserCmd& default_instance();

  void Swap(stReturnCheckOnlineGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnCheckOnlineGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnCheckOnlineGmUserCmd& from);
  void MergeFrom(const stReturnCheckOnlineGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 retcode = 3;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetcodeFieldNumber = 3;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnCheckOnlineGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnCheckOnlineGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stPunishUserGmUserCmd : public ::google::protobuf::Message {
 public:
  stPunishUserGmUserCmd();
  virtual ~stPunishUserGmUserCmd();

  stPunishUserGmUserCmd(const stPunishUserGmUserCmd& from);

  inline stPunishUserGmUserCmd& operator=(const stPunishUserGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stPunishUserGmUserCmd& default_instance();

  void Swap(stPunishUserGmUserCmd* other);

  // implements Message ----------------------------------------------

  stPunishUserGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stPunishUserGmUserCmd& from);
  void MergeFrom(const stPunishUserGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userName = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional string GM = 2;
  inline bool has_gm() const;
  inline void clear_gm();
  static const int kGMFieldNumber = 2;
  inline const ::std::string& gm() const;
  inline void set_gm(const ::std::string& value);
  inline void set_gm(const char* value);
  inline void set_gm(const char* value, size_t size);
  inline ::std::string* mutable_gm();
  inline ::std::string* release_gm();
  inline void set_allocated_gm(::std::string* gm);

  // optional string reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // optional uint32 operation = 4;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 4;
  inline ::google::protobuf::uint32 operation() const;
  inline void set_operation(::google::protobuf::uint32 value);

  // optional uint32 delay = 5;
  inline bool has_delay() const;
  inline void clear_delay();
  static const int kDelayFieldNumber = 5;
  inline ::google::protobuf::uint32 delay() const;
  inline void set_delay(::google::protobuf::uint32 value);

  // optional uint32 waitTime = 6;
  inline bool has_waittime() const;
  inline void clear_waittime();
  static const int kWaitTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 waittime() const;
  inline void set_waittime(::google::protobuf::uint32 value);

  // optional uint32 accid = 7;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 7;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // optional uint32 ip = 8;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 8;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stPunishUserGmUserCmd)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_gm();
  inline void clear_has_gm();
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_operation();
  inline void clear_has_operation();
  inline void set_has_delay();
  inline void clear_has_delay();
  inline void set_has_waittime();
  inline void clear_has_waittime();
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_ip();
  inline void clear_has_ip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* username_;
  ::std::string* gm_;
  ::std::string* reason_;
  ::google::protobuf::uint32 operation_;
  ::google::protobuf::uint32 delay_;
  ::google::protobuf::uint32 waittime_;
  ::google::protobuf::uint32 accid_;
  ::google::protobuf::uint32 ip_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stPunishUserGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestUserPosUserGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestUserPosUserGmUserCmd();
  virtual ~stRequestUserPosUserGmUserCmd();

  stRequestUserPosUserGmUserCmd(const stRequestUserPosUserGmUserCmd& from);

  inline stRequestUserPosUserGmUserCmd& operator=(const stRequestUserPosUserGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestUserPosUserGmUserCmd& default_instance();

  void Swap(stRequestUserPosUserGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestUserPosUserGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestUserPosUserGmUserCmd& from);
  void MergeFrom(const stRequestUserPosUserGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestUserPosUserGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestUserPosUserGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnUserPosUserGmUserCmd_Data : public ::google::protobuf::Message {
 public:
  stReturnUserPosUserGmUserCmd_Data();
  virtual ~stReturnUserPosUserGmUserCmd_Data();

  stReturnUserPosUserGmUserCmd_Data(const stReturnUserPosUserGmUserCmd_Data& from);

  inline stReturnUserPosUserGmUserCmd_Data& operator=(const stReturnUserPosUserGmUserCmd_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnUserPosUserGmUserCmd_Data& default_instance();

  void Swap(stReturnUserPosUserGmUserCmd_Data* other);

  // implements Message ----------------------------------------------

  stReturnUserPosUserGmUserCmd_Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnUserPosUserGmUserCmd_Data& from);
  void MergeFrom(const stReturnUserPosUserGmUserCmd_Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::uint32 x() const;
  inline void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::uint32 y() const;
  inline void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnUserPosUserGmUserCmd.Data)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnUserPosUserGmUserCmd_Data* default_instance_;
};
// -------------------------------------------------------------------

class stReturnUserPosUserGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnUserPosUserGmUserCmd();
  virtual ~stReturnUserPosUserGmUserCmd();

  stReturnUserPosUserGmUserCmd(const stReturnUserPosUserGmUserCmd& from);

  inline stReturnUserPosUserGmUserCmd& operator=(const stReturnUserPosUserGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnUserPosUserGmUserCmd& default_instance();

  void Swap(stReturnUserPosUserGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnUserPosUserGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnUserPosUserGmUserCmd& from);
  void MergeFrom(const stReturnUserPosUserGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef stReturnUserPosUserGmUserCmd_Data Data;

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 width = 4;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 4;
  inline ::google::protobuf::uint32 width() const;
  inline void set_width(::google::protobuf::uint32 value);

  // optional uint32 height = 5;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 5;
  inline ::google::protobuf::uint32 height() const;
  inline void set_height(::google::protobuf::uint32 value);

  // repeated .Pmd.stReturnUserPosUserGmUserCmd.Data data = 6;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::Pmd::stReturnUserPosUserGmUserCmd_Data& data(int index) const;
  inline ::Pmd::stReturnUserPosUserGmUserCmd_Data* mutable_data(int index);
  inline ::Pmd::stReturnUserPosUserGmUserCmd_Data* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnUserPosUserGmUserCmd_Data >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnUserPosUserGmUserCmd_Data >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Pmd.stReturnUserPosUserGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnUserPosUserGmUserCmd_Data > data_;
  ::google::protobuf::uint32 height_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnUserPosUserGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stEndUserPosUserGmUserCmd : public ::google::protobuf::Message {
 public:
  stEndUserPosUserGmUserCmd();
  virtual ~stEndUserPosUserGmUserCmd();

  stEndUserPosUserGmUserCmd(const stEndUserPosUserGmUserCmd& from);

  inline stEndUserPosUserGmUserCmd& operator=(const stEndUserPosUserGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stEndUserPosUserGmUserCmd& default_instance();

  void Swap(stEndUserPosUserGmUserCmd* other);

  // implements Message ----------------------------------------------

  stEndUserPosUserGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stEndUserPosUserGmUserCmd& from);
  void MergeFrom(const stEndUserPosUserGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 zoneid = 1;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 2;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stEndUserPosUserGmUserCmd)
 private:
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stEndUserPosUserGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stBroadcastReallySendGmUserCmd : public ::google::protobuf::Message {
 public:
  stBroadcastReallySendGmUserCmd();
  virtual ~stBroadcastReallySendGmUserCmd();

  stBroadcastReallySendGmUserCmd(const stBroadcastReallySendGmUserCmd& from);

  inline stBroadcastReallySendGmUserCmd& operator=(const stBroadcastReallySendGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stBroadcastReallySendGmUserCmd& default_instance();

  void Swap(stBroadcastReallySendGmUserCmd* other);

  // implements Message ----------------------------------------------

  stBroadcastReallySendGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stBroadcastReallySendGmUserCmd& from);
  void MergeFrom(const stBroadcastReallySendGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 taskID = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIDFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);

  // optional uint32 dwZoneID = 2;
  inline bool has_dwzoneid() const;
  inline void clear_dwzoneid();
  static const int kDwZoneIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dwzoneid() const;
  inline void set_dwzoneid(::google::protobuf::uint32 value);

  // optional uint32 wCountryID = 3;
  inline bool has_wcountryid() const;
  inline void clear_wcountryid();
  static const int kWCountryIDFieldNumber = 3;
  inline ::google::protobuf::uint32 wcountryid() const;
  inline void set_wcountryid(::google::protobuf::uint32 value);

  // optional uint32 wSceneID = 4;
  inline bool has_wsceneid() const;
  inline void clear_wsceneid();
  static const int kWSceneIDFieldNumber = 4;
  inline ::google::protobuf::uint32 wsceneid() const;
  inline void set_wsceneid(::google::protobuf::uint32 value);

  // optional uint32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 6;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stBroadcastReallySendGmUserCmd)
 private:
  inline void set_has_taskid();
  inline void clear_has_taskid();
  inline void set_has_dwzoneid();
  inline void clear_has_dwzoneid();
  inline void set_has_wcountryid();
  inline void clear_has_wcountryid();
  inline void set_has_wsceneid();
  inline void clear_has_wsceneid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 dwzoneid_;
  ::google::protobuf::uint32 wcountryid_;
  ::google::protobuf::uint32 wsceneid_;
  ::std::string* data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stBroadcastReallySendGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stDBQueryGmUserCmd : public ::google::protobuf::Message {
 public:
  stDBQueryGmUserCmd();
  virtual ~stDBQueryGmUserCmd();

  stDBQueryGmUserCmd(const stDBQueryGmUserCmd& from);

  inline stDBQueryGmUserCmd& operator=(const stDBQueryGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stDBQueryGmUserCmd& default_instance();

  void Swap(stDBQueryGmUserCmd* other);

  // implements Message ----------------------------------------------

  stDBQueryGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stDBQueryGmUserCmd& from);
  void MergeFrom(const stDBQueryGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 byNoLimit = 1;
  inline bool has_bynolimit() const;
  inline void clear_bynolimit();
  static const int kByNoLimitFieldNumber = 1;
  inline ::google::protobuf::uint32 bynolimit() const;
  inline void set_bynolimit(::google::protobuf::uint32 value);

  // optional string tablename = 2;
  inline bool has_tablename() const;
  inline void clear_tablename();
  static const int kTablenameFieldNumber = 2;
  inline const ::std::string& tablename() const;
  inline void set_tablename(const ::std::string& value);
  inline void set_tablename(const char* value);
  inline void set_tablename(const char* value, size_t size);
  inline ::std::string* mutable_tablename();
  inline ::std::string* release_tablename();
  inline void set_allocated_tablename(::std::string* tablename);

  // optional uint32 timebegin = 3;
  inline bool has_timebegin() const;
  inline void clear_timebegin();
  static const int kTimebeginFieldNumber = 3;
  inline ::google::protobuf::uint32 timebegin() const;
  inline void set_timebegin(::google::protobuf::uint32 value);

  // optional uint32 timeend = 4;
  inline bool has_timeend() const;
  inline void clear_timeend();
  static const int kTimeendFieldNumber = 4;
  inline ::google::protobuf::uint32 timeend() const;
  inline void set_timeend(::google::protobuf::uint32 value);

  // optional uint32 sqllen = 5;
  inline bool has_sqllen() const;
  inline void clear_sqllen();
  static const int kSqllenFieldNumber = 5;
  inline ::google::protobuf::uint32 sqllen() const;
  inline void set_sqllen(::google::protobuf::uint32 value);

  // optional uint32 typelen = 6;
  inline bool has_typelen() const;
  inline void clear_typelen();
  static const int kTypelenFieldNumber = 6;
  inline ::google::protobuf::uint32 typelen() const;
  inline void set_typelen(::google::protobuf::uint32 value);

  // optional bytes data = 7;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 7;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stDBQueryGmUserCmd)
 private:
  inline void set_has_bynolimit();
  inline void clear_has_bynolimit();
  inline void set_has_tablename();
  inline void clear_has_tablename();
  inline void set_has_timebegin();
  inline void clear_has_timebegin();
  inline void set_has_timeend();
  inline void clear_has_timeend();
  inline void set_has_sqllen();
  inline void clear_has_sqllen();
  inline void set_has_typelen();
  inline void clear_has_typelen();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tablename_;
  ::google::protobuf::uint32 bynolimit_;
  ::google::protobuf::uint32 timebegin_;
  ::google::protobuf::uint32 timeend_;
  ::google::protobuf::uint32 sqllen_;
  ::std::string* data_;
  ::google::protobuf::uint32 typelen_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stDBQueryGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stDBReturnDataGmUserCmd : public ::google::protobuf::Message {
 public:
  stDBReturnDataGmUserCmd();
  virtual ~stDBReturnDataGmUserCmd();

  stDBReturnDataGmUserCmd(const stDBReturnDataGmUserCmd& from);

  inline stDBReturnDataGmUserCmd& operator=(const stDBReturnDataGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stDBReturnDataGmUserCmd& default_instance();

  void Swap(stDBReturnDataGmUserCmd* other);

  // implements Message ----------------------------------------------

  stDBReturnDataGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stDBReturnDataGmUserCmd& from);
  void MergeFrom(const stDBReturnDataGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stDBReturnDataGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stDBReturnDataGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stDBReturnEndGmUserCmd : public ::google::protobuf::Message {
 public:
  stDBReturnEndGmUserCmd();
  virtual ~stDBReturnEndGmUserCmd();

  stDBReturnEndGmUserCmd(const stDBReturnEndGmUserCmd& from);

  inline stDBReturnEndGmUserCmd& operator=(const stDBReturnEndGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stDBReturnEndGmUserCmd& default_instance();

  void Swap(stDBReturnEndGmUserCmd* other);

  // implements Message ----------------------------------------------

  stDBReturnEndGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stDBReturnEndGmUserCmd& from);
  void MergeFrom(const stDBReturnEndGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.stDBReturnEndGmUserCmd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stDBReturnEndGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stFullForbidAccountLogDataGmUserCmd : public ::google::protobuf::Message {
 public:
  stFullForbidAccountLogDataGmUserCmd();
  virtual ~stFullForbidAccountLogDataGmUserCmd();

  stFullForbidAccountLogDataGmUserCmd(const stFullForbidAccountLogDataGmUserCmd& from);

  inline stFullForbidAccountLogDataGmUserCmd& operator=(const stFullForbidAccountLogDataGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stFullForbidAccountLogDataGmUserCmd& default_instance();

  void Swap(stFullForbidAccountLogDataGmUserCmd* other);

  // implements Message ----------------------------------------------

  stFullForbidAccountLogDataGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stFullForbidAccountLogDataGmUserCmd& from);
  void MergeFrom(const stFullForbidAccountLogDataGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 byOperation = 1;
  inline bool has_byoperation() const;
  inline void clear_byoperation();
  static const int kByOperationFieldNumber = 1;
  inline ::google::protobuf::uint32 byoperation() const;
  inline void set_byoperation(::google::protobuf::uint32 value);

  // optional .Pmd.ForbidAccountData data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::Pmd::ForbidAccountData& data() const;
  inline ::Pmd::ForbidAccountData* mutable_data();
  inline ::Pmd::ForbidAccountData* release_data();
  inline void set_allocated_data(::Pmd::ForbidAccountData* data);

  // @@protoc_insertion_point(class_scope:Pmd.stFullForbidAccountLogDataGmUserCmd)
 private:
  inline void set_has_byoperation();
  inline void clear_has_byoperation();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::ForbidAccountData* data_;
  ::google::protobuf::uint32 byoperation_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stFullForbidAccountLogDataGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stFullGameGmCmdLogDataGmUserCmd : public ::google::protobuf::Message {
 public:
  stFullGameGmCmdLogDataGmUserCmd();
  virtual ~stFullGameGmCmdLogDataGmUserCmd();

  stFullGameGmCmdLogDataGmUserCmd(const stFullGameGmCmdLogDataGmUserCmd& from);

  inline stFullGameGmCmdLogDataGmUserCmd& operator=(const stFullGameGmCmdLogDataGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stFullGameGmCmdLogDataGmUserCmd& default_instance();

  void Swap(stFullGameGmCmdLogDataGmUserCmd* other);

  // implements Message ----------------------------------------------

  stFullGameGmCmdLogDataGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stFullGameGmCmdLogDataGmUserCmd& from);
  void MergeFrom(const stFullGameGmCmdLogDataGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accID = 1;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccIDFieldNumber = 1;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // optional uint32 charID = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 2;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // optional string gmName = 3;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmNameFieldNumber = 3;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional uint32 zoneID = 4;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneIDFieldNumber = 4;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countryID = 5;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIDFieldNumber = 5;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 sceneID = 6;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIDFieldNumber = 6;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional string cmd = 7;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 7;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  inline ::std::string* release_cmd();
  inline void set_allocated_cmd(::std::string* cmd);

  // optional string content = 8;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 8;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:Pmd.stFullGameGmCmdLogDataGmUserCmd)
 private:
  inline void set_has_accid();
  inline void clear_has_accid();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 accid_;
  ::google::protobuf::uint32 charid_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countryid_;
  ::std::string* cmd_;
  ::std::string* content_;
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stFullGameGmCmdLogDataGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestAddQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestAddQuestionGmUserCmd();
  virtual ~stRequestAddQuestionGmUserCmd();

  stRequestAddQuestionGmUserCmd(const stRequestAddQuestionGmUserCmd& from);

  inline stRequestAddQuestionGmUserCmd& operator=(const stRequestAddQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestAddQuestionGmUserCmd& default_instance();

  void Swap(stRequestAddQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestAddQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestAddQuestionGmUserCmd& from);
  void MergeFrom(const stRequestAddQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.QuestionBaseData head = 1;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1;
  inline const ::Pmd::QuestionBaseData& head() const;
  inline ::Pmd::QuestionBaseData* mutable_head();
  inline ::Pmd::QuestionBaseData* release_head();
  inline void set_allocated_head(::Pmd::QuestionBaseData* head);

  // optional string desc = 2;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 2;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestAddQuestionGmUserCmd)
 private:
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::QuestionBaseData* head_;
  ::std::string* desc_;
  ::std::string* data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestAddQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnQuestionGmUserCmd();
  virtual ~stReturnQuestionGmUserCmd();

  stReturnQuestionGmUserCmd(const stReturnQuestionGmUserCmd& from);

  inline stReturnQuestionGmUserCmd& operator=(const stReturnQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnQuestionGmUserCmd& default_instance();

  void Swap(stReturnQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnQuestionGmUserCmd& from);
  void MergeFrom(const stReturnQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.QuestionBaseData head = 1;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1;
  inline const ::Pmd::QuestionBaseData& head() const;
  inline ::Pmd::QuestionBaseData* mutable_head();
  inline ::Pmd::QuestionBaseData* release_head();
  inline void set_allocated_head(::Pmd::QuestionBaseData* head);

  // optional string desc = 2;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 2;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional uint32 seq = 3;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 3;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // optional uint32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnQuestionGmUserCmd)
 private:
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::QuestionBaseData* head_;
  ::std::string* desc_;
  ::google::protobuf::uint32 seq_;
  ::google::protobuf::uint32 num_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stSequenceQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stSequenceQuestionGmUserCmd();
  virtual ~stSequenceQuestionGmUserCmd();

  stSequenceQuestionGmUserCmd(const stSequenceQuestionGmUserCmd& from);

  inline stSequenceQuestionGmUserCmd& operator=(const stSequenceQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stSequenceQuestionGmUserCmd& default_instance();

  void Swap(stSequenceQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stSequenceQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stSequenceQuestionGmUserCmd& from);
  void MergeFrom(const stSequenceQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 seq = 2;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 2;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stSequenceQuestionGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 seq_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stSequenceQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stDeleteQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stDeleteQuestionGmUserCmd();
  virtual ~stDeleteQuestionGmUserCmd();

  stDeleteQuestionGmUserCmd(const stDeleteQuestionGmUserCmd& from);

  inline stDeleteQuestionGmUserCmd& operator=(const stDeleteQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stDeleteQuestionGmUserCmd& default_instance();

  void Swap(stDeleteQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stDeleteQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stDeleteQuestionGmUserCmd& from);
  void MergeFrom(const stDeleteQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stDeleteQuestionGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 userid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stDeleteQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestQuestionGmUserCmd();
  virtual ~stRequestQuestionGmUserCmd();

  stRequestQuestionGmUserCmd(const stRequestQuestionGmUserCmd& from);

  inline stRequestQuestionGmUserCmd& operator=(const stRequestQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestQuestionGmUserCmd& default_instance();

  void Swap(stRequestQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestQuestionGmUserCmd& from);
  void MergeFrom(const stRequestQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestQuestionGmUserCmd)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestSeqQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestSeqQuestionGmUserCmd();
  virtual ~stRequestSeqQuestionGmUserCmd();

  stRequestSeqQuestionGmUserCmd(const stRequestSeqQuestionGmUserCmd& from);

  inline stRequestSeqQuestionGmUserCmd& operator=(const stRequestSeqQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestSeqQuestionGmUserCmd& default_instance();

  void Swap(stRequestSeqQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestSeqQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestSeqQuestionGmUserCmd& from);
  void MergeFrom(const stRequestSeqQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestSeqQuestionGmUserCmd)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestSeqQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnNoneQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnNoneQuestionGmUserCmd();
  virtual ~stReturnNoneQuestionGmUserCmd();

  stReturnNoneQuestionGmUserCmd(const stReturnNoneQuestionGmUserCmd& from);

  inline stReturnNoneQuestionGmUserCmd& operator=(const stReturnNoneQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnNoneQuestionGmUserCmd& default_instance();

  void Swap(stReturnNoneQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnNoneQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnNoneQuestionGmUserCmd& from);
  void MergeFrom(const stReturnNoneQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.stReturnNoneQuestionGmUserCmd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnNoneQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stUserCmdForwardGmUserCmd : public ::google::protobuf::Message {
 public:
  stUserCmdForwardGmUserCmd();
  virtual ~stUserCmdForwardGmUserCmd();

  stUserCmdForwardGmUserCmd(const stUserCmdForwardGmUserCmd& from);

  inline stUserCmdForwardGmUserCmd& operator=(const stUserCmdForwardGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stUserCmdForwardGmUserCmd& default_instance();

  void Swap(stUserCmdForwardGmUserCmd* other);

  // implements Message ----------------------------------------------

  stUserCmdForwardGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stUserCmdForwardGmUserCmd& from);
  void MergeFrom(const stUserCmdForwardGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // optional bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stUserCmdForwardGmUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 userid_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stUserCmdForwardGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stProcessQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stProcessQuestionGmUserCmd();
  virtual ~stProcessQuestionGmUserCmd();

  stProcessQuestionGmUserCmd(const stProcessQuestionGmUserCmd& from);

  inline stProcessQuestionGmUserCmd& operator=(const stProcessQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stProcessQuestionGmUserCmd& default_instance();

  void Swap(stProcessQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stProcessQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stProcessQuestionGmUserCmd& from);
  void MergeFrom(const stProcessQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 gmid = 2;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 2;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stProcessQuestionGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stProcessQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stGMToolBeginQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stGMToolBeginQuestionGmUserCmd();
  virtual ~stGMToolBeginQuestionGmUserCmd();

  stGMToolBeginQuestionGmUserCmd(const stGMToolBeginQuestionGmUserCmd& from);

  inline stGMToolBeginQuestionGmUserCmd& operator=(const stGMToolBeginQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stGMToolBeginQuestionGmUserCmd& default_instance();

  void Swap(stGMToolBeginQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stGMToolBeginQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stGMToolBeginQuestionGmUserCmd& from);
  void MergeFrom(const stGMToolBeginQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stGMToolBeginQuestionGmUserCmd)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stGMToolBeginQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stGMToolEndQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stGMToolEndQuestionGmUserCmd();
  virtual ~stGMToolEndQuestionGmUserCmd();

  stGMToolEndQuestionGmUserCmd(const stGMToolEndQuestionGmUserCmd& from);

  inline stGMToolEndQuestionGmUserCmd& operator=(const stGMToolEndQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stGMToolEndQuestionGmUserCmd& default_instance();

  void Swap(stGMToolEndQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stGMToolEndQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stGMToolEndQuestionGmUserCmd& from);
  void MergeFrom(const stGMToolEndQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stGMToolEndQuestionGmUserCmd)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stGMToolEndQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stDisableGMChatInputGmUserCmd : public ::google::protobuf::Message {
 public:
  stDisableGMChatInputGmUserCmd();
  virtual ~stDisableGMChatInputGmUserCmd();

  stDisableGMChatInputGmUserCmd(const stDisableGMChatInputGmUserCmd& from);

  inline stDisableGMChatInputGmUserCmd& operator=(const stDisableGMChatInputGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stDisableGMChatInputGmUserCmd& default_instance();

  void Swap(stDisableGMChatInputGmUserCmd* other);

  // implements Message ----------------------------------------------

  stDisableGMChatInputGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stDisableGMChatInputGmUserCmd& from);
  void MergeFrom(const stDisableGMChatInputGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional string gmname = 2;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmnameFieldNumber = 2;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional string rolename = 3;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 3;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional uint32 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stDisableGMChatInputGmUserCmd)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 id_;
  ::std::string* rolename_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stDisableGMChatInputGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stDeleteQuestionByGmUserCmd : public ::google::protobuf::Message {
 public:
  stDeleteQuestionByGmUserCmd();
  virtual ~stDeleteQuestionByGmUserCmd();

  stDeleteQuestionByGmUserCmd(const stDeleteQuestionByGmUserCmd& from);

  inline stDeleteQuestionByGmUserCmd& operator=(const stDeleteQuestionByGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stDeleteQuestionByGmUserCmd& default_instance();

  void Swap(stDeleteQuestionByGmUserCmd* other);

  // implements Message ----------------------------------------------

  stDeleteQuestionByGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stDeleteQuestionByGmUserCmd& from);
  void MergeFrom(const stDeleteQuestionByGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // optional uint32 gmid = 3;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 3;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stDeleteQuestionByGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stDeleteQuestionByGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stQuestionOverGmUserCmd : public ::google::protobuf::Message {
 public:
  stQuestionOverGmUserCmd();
  virtual ~stQuestionOverGmUserCmd();

  stQuestionOverGmUserCmd(const stQuestionOverGmUserCmd& from);

  inline stQuestionOverGmUserCmd& operator=(const stQuestionOverGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stQuestionOverGmUserCmd& default_instance();

  void Swap(stQuestionOverGmUserCmd* other);

  // implements Message ----------------------------------------------

  stQuestionOverGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stQuestionOverGmUserCmd& from);
  void MergeFrom(const stQuestionOverGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::google::protobuf::uint32 reason() const;
  inline void set_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stQuestionOverGmUserCmd)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 reason_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stQuestionOverGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stQueryQuestionLimitGmUserCmd : public ::google::protobuf::Message {
 public:
  stQueryQuestionLimitGmUserCmd();
  virtual ~stQueryQuestionLimitGmUserCmd();

  stQueryQuestionLimitGmUserCmd(const stQueryQuestionLimitGmUserCmd& from);

  inline stQueryQuestionLimitGmUserCmd& operator=(const stQueryQuestionLimitGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stQueryQuestionLimitGmUserCmd& default_instance();

  void Swap(stQueryQuestionLimitGmUserCmd* other);

  // implements Message ----------------------------------------------

  stQueryQuestionLimitGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stQueryQuestionLimitGmUserCmd& from);
  void MergeFrom(const stQueryQuestionLimitGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stQueryQuestionLimitGmUserCmd)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stQueryQuestionLimitGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnQuestionLimitGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnQuestionLimitGmUserCmd();
  virtual ~stReturnQuestionLimitGmUserCmd();

  stReturnQuestionLimitGmUserCmd(const stReturnQuestionLimitGmUserCmd& from);

  inline stReturnQuestionLimitGmUserCmd& operator=(const stReturnQuestionLimitGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnQuestionLimitGmUserCmd& default_instance();

  void Swap(stReturnQuestionLimitGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnQuestionLimitGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnQuestionLimitGmUserCmd& from);
  void MergeFrom(const stReturnQuestionLimitGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 max = 1;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 1;
  inline ::google::protobuf::uint32 max() const;
  inline void set_max(::google::protobuf::uint32 value);

  // optional uint32 maxWaitTime = 2;
  inline bool has_maxwaittime() const;
  inline void clear_maxwaittime();
  static const int kMaxWaitTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 maxwaittime() const;
  inline void set_maxwaittime(::google::protobuf::uint32 value);

  // optional uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnQuestionLimitGmUserCmd)
 private:
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_maxwaittime();
  inline void clear_has_maxwaittime();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 max_;
  ::google::protobuf::uint32 maxwaittime_;
  ::std::string* data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnQuestionLimitGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stResetQuestionLimitGmUserCmd : public ::google::protobuf::Message {
 public:
  stResetQuestionLimitGmUserCmd();
  virtual ~stResetQuestionLimitGmUserCmd();

  stResetQuestionLimitGmUserCmd(const stResetQuestionLimitGmUserCmd& from);

  inline stResetQuestionLimitGmUserCmd& operator=(const stResetQuestionLimitGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stResetQuestionLimitGmUserCmd& default_instance();

  void Swap(stResetQuestionLimitGmUserCmd* other);

  // implements Message ----------------------------------------------

  stResetQuestionLimitGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stResetQuestionLimitGmUserCmd& from);
  void MergeFrom(const stResetQuestionLimitGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 max = 2;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 2;
  inline ::google::protobuf::uint32 max() const;
  inline void set_max(::google::protobuf::uint32 value);

  // optional uint32 maxWaitTime = 3;
  inline bool has_maxwaittime() const;
  inline void clear_maxwaittime();
  static const int kMaxWaitTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 maxwaittime() const;
  inline void set_maxwaittime(::google::protobuf::uint32 value);

  // optional uint32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stResetQuestionLimitGmUserCmd)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_max();
  inline void clear_has_max();
  inline void set_has_maxwaittime();
  inline void clear_has_maxwaittime();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gmid_;
  ::google::protobuf::uint32 max_;
  ::google::protobuf::uint32 maxwaittime_;
  ::google::protobuf::uint32 num_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stResetQuestionLimitGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stBroadcastToWorldGmUserCmd : public ::google::protobuf::Message {
 public:
  stBroadcastToWorldGmUserCmd();
  virtual ~stBroadcastToWorldGmUserCmd();

  stBroadcastToWorldGmUserCmd(const stBroadcastToWorldGmUserCmd& from);

  inline stBroadcastToWorldGmUserCmd& operator=(const stBroadcastToWorldGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stBroadcastToWorldGmUserCmd& default_instance();

  void Swap(stBroadcastToWorldGmUserCmd* other);

  // implements Message ----------------------------------------------

  stBroadcastToWorldGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stBroadcastToWorldGmUserCmd& from);
  void MergeFrom(const stBroadcastToWorldGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countryid = 3;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 3;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 4;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 4;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 provinceid = 5;
  inline bool has_provinceid() const;
  inline void clear_provinceid();
  static const int kProvinceidFieldNumber = 5;
  inline ::google::protobuf::uint32 provinceid() const;
  inline void set_provinceid(::google::protobuf::uint32 value);

  // optional uint32 cityid = 6;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityidFieldNumber = 6;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);

  // optional uint32 chatType = 7;
  inline bool has_chattype() const;
  inline void clear_chattype();
  static const int kChatTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 chattype() const;
  inline void set_chattype(::google::protobuf::uint32 value);

  // optional uint32 chatpos = 8;
  inline bool has_chatpos() const;
  inline void clear_chatpos();
  static const int kChatposFieldNumber = 8;
  inline ::google::protobuf::uint32 chatpos() const;
  inline void set_chatpos(::google::protobuf::uint32 value);

  // optional uint32 color = 9;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 9;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // optional uint32 num = 10;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 10;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 11;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 11;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stBroadcastToWorldGmUserCmd)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_provinceid();
  inline void clear_has_provinceid();
  inline void set_has_cityid();
  inline void clear_has_cityid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_chatpos();
  inline void clear_has_chatpos();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 provinceid_;
  ::google::protobuf::uint32 cityid_;
  ::google::protobuf::uint32 chattype_;
  ::google::protobuf::uint32 chatpos_;
  ::google::protobuf::uint32 color_;
  ::std::string* data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stBroadcastToWorldGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stSetActivityNoteGmUserCmd : public ::google::protobuf::Message {
 public:
  stSetActivityNoteGmUserCmd();
  virtual ~stSetActivityNoteGmUserCmd();

  stSetActivityNoteGmUserCmd(const stSetActivityNoteGmUserCmd& from);

  inline stSetActivityNoteGmUserCmd& operator=(const stSetActivityNoteGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stSetActivityNoteGmUserCmd& default_instance();

  void Swap(stSetActivityNoteGmUserCmd* other);

  // implements Message ----------------------------------------------

  stSetActivityNoteGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stSetActivityNoteGmUserCmd& from);
  void MergeFrom(const stSetActivityNoteGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gmname = 1;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmnameFieldNumber = 1;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 4;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stSetActivityNoteGmUserCmd)
 private:
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 num_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stSetActivityNoteGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestRefreshUserQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestRefreshUserQuestionGmUserCmd();
  virtual ~stRequestRefreshUserQuestionGmUserCmd();

  stRequestRefreshUserQuestionGmUserCmd(const stRequestRefreshUserQuestionGmUserCmd& from);

  inline stRequestRefreshUserQuestionGmUserCmd& operator=(const stRequestRefreshUserQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestRefreshUserQuestionGmUserCmd& default_instance();

  void Swap(stRequestRefreshUserQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestRefreshUserQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestRefreshUserQuestionGmUserCmd& from);
  void MergeFrom(const stRequestRefreshUserQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.stRequestRefreshUserQuestionGmUserCmd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestRefreshUserQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestSetUserGoldInGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestSetUserGoldInGmUserCmd();
  virtual ~stRequestSetUserGoldInGmUserCmd();

  stRequestSetUserGoldInGmUserCmd(const stRequestSetUserGoldInGmUserCmd& from);

  inline stRequestSetUserGoldInGmUserCmd& operator=(const stRequestSetUserGoldInGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestSetUserGoldInGmUserCmd& default_instance();

  void Swap(stRequestSetUserGoldInGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestSetUserGoldInGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestSetUserGoldInGmUserCmd& from);
  void MergeFrom(const stRequestSetUserGoldInGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string szUserName = 1;
  inline bool has_szusername() const;
  inline void clear_szusername();
  static const int kSzUserNameFieldNumber = 1;
  inline const ::std::string& szusername() const;
  inline void set_szusername(const ::std::string& value);
  inline void set_szusername(const char* value);
  inline void set_szusername(const char* value, size_t size);
  inline ::std::string* mutable_szusername();
  inline ::std::string* release_szusername();
  inline void set_allocated_szusername(::std::string* szusername);

  // optional uint32 dwGold = 2;
  inline bool has_dwgold() const;
  inline void clear_dwgold();
  static const int kDwGoldFieldNumber = 2;
  inline ::google::protobuf::uint32 dwgold() const;
  inline void set_dwgold(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestSetUserGoldInGmUserCmd)
 private:
  inline void set_has_szusername();
  inline void clear_has_szusername();
  inline void set_has_dwgold();
  inline void clear_has_dwgold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* szusername_;
  ::google::protobuf::uint32 dwgold_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestSetUserGoldInGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stSetPrivilegesGmUserCmd : public ::google::protobuf::Message {
 public:
  stSetPrivilegesGmUserCmd();
  virtual ~stSetPrivilegesGmUserCmd();

  stSetPrivilegesGmUserCmd(const stSetPrivilegesGmUserCmd& from);

  inline stSetPrivilegesGmUserCmd& operator=(const stSetPrivilegesGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stSetPrivilegesGmUserCmd& default_instance();

  void Swap(stSetPrivilegesGmUserCmd* other);

  // implements Message ----------------------------------------------

  stSetPrivilegesGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stSetPrivilegesGmUserCmd& from);
  void MergeFrom(const stSetPrivilegesGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pri = 1;
  inline bool has_pri() const;
  inline void clear_pri();
  static const int kPriFieldNumber = 1;
  inline ::google::protobuf::uint32 pri() const;
  inline void set_pri(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stSetPrivilegesGmUserCmd)
 private:
  inline void set_has_pri();
  inline void clear_has_pri();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 pri_;
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stSetPrivilegesGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestSaveChatGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestSaveChatGmUserCmd();
  virtual ~stRequestSaveChatGmUserCmd();

  stRequestSaveChatGmUserCmd(const stRequestSaveChatGmUserCmd& from);

  inline stRequestSaveChatGmUserCmd& operator=(const stRequestSaveChatGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestSaveChatGmUserCmd& default_instance();

  void Swap(stRequestSaveChatGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestSaveChatGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestSaveChatGmUserCmd& from);
  void MergeFrom(const stRequestSaveChatGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hashnumber = 1;
  inline bool has_hashnumber() const;
  inline void clear_hashnumber();
  static const int kHashnumberFieldNumber = 1;
  inline ::google::protobuf::uint32 hashnumber() const;
  inline void set_hashnumber(::google::protobuf::uint32 value);

  // optional string gmname = 2;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmnameFieldNumber = 2;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional uint32 chattype = 3;
  inline bool has_chattype() const;
  inline void clear_chattype();
  static const int kChattypeFieldNumber = 3;
  inline ::google::protobuf::uint32 chattype() const;
  inline void set_chattype(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 4;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countryid = 5;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 5;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 6;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 6;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional string rolename = 7;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRolenameFieldNumber = 7;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // optional uint32 num = 8;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 8;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 9;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 9;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestSaveChatGmUserCmd)
 private:
  inline void set_has_hashnumber();
  inline void clear_has_hashnumber();
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 hashnumber_;
  ::google::protobuf::uint32 chattype_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countryid_;
  ::std::string* rolename_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 num_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestSaveChatGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stGameClientMessageBoxGmUserCmd : public ::google::protobuf::Message {
 public:
  stGameClientMessageBoxGmUserCmd();
  virtual ~stGameClientMessageBoxGmUserCmd();

  stGameClientMessageBoxGmUserCmd(const stGameClientMessageBoxGmUserCmd& from);

  inline stGameClientMessageBoxGmUserCmd& operator=(const stGameClientMessageBoxGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stGameClientMessageBoxGmUserCmd& default_instance();

  void Swap(stGameClientMessageBoxGmUserCmd* other);

  // implements Message ----------------------------------------------

  stGameClientMessageBoxGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stGameClientMessageBoxGmUserCmd& from);
  void MergeFrom(const stGameClientMessageBoxGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gmname = 1;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmnameFieldNumber = 1;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countryid = 3;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 3;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 4;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 4;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 6;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stGameClientMessageBoxGmUserCmd)
 private:
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 num_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stGameClientMessageBoxGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stGameClientChatMessageGMUserCmd : public ::google::protobuf::Message {
 public:
  stGameClientChatMessageGMUserCmd();
  virtual ~stGameClientChatMessageGMUserCmd();

  stGameClientChatMessageGMUserCmd(const stGameClientChatMessageGMUserCmd& from);

  inline stGameClientChatMessageGMUserCmd& operator=(const stGameClientChatMessageGMUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stGameClientChatMessageGMUserCmd& default_instance();

  void Swap(stGameClientChatMessageGMUserCmd* other);

  // implements Message ----------------------------------------------

  stGameClientChatMessageGMUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stGameClientChatMessageGMUserCmd& from);
  void MergeFrom(const stGameClientChatMessageGMUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gmname = 1;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmnameFieldNumber = 1;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // optional uint32 zoneid = 3;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countryid = 4;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 4;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 5;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 5;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 byChatType = 6;
  inline bool has_bychattype() const;
  inline void clear_bychattype();
  static const int kByChatTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 bychattype() const;
  inline void set_bychattype(::google::protobuf::uint32 value);

  // optional uint32 byChatPos = 7;
  inline bool has_bychatpos() const;
  inline void clear_bychatpos();
  static const int kByChatPosFieldNumber = 7;
  inline ::google::protobuf::uint32 bychatpos() const;
  inline void set_bychatpos(::google::protobuf::uint32 value);

  // optional uint32 color = 8;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 8;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // optional uint32 bySize = 9;
  inline bool has_bysize() const;
  inline void clear_bysize();
  static const int kBySizeFieldNumber = 9;
  inline ::google::protobuf::uint32 bysize() const;
  inline void set_bysize(::google::protobuf::uint32 value);

  // optional bytes szInfo = 10;
  inline bool has_szinfo() const;
  inline void clear_szinfo();
  static const int kSzInfoFieldNumber = 10;
  inline const ::std::string& szinfo() const;
  inline void set_szinfo(const ::std::string& value);
  inline void set_szinfo(const char* value);
  inline void set_szinfo(const void* value, size_t size);
  inline ::std::string* mutable_szinfo();
  inline ::std::string* release_szinfo();
  inline void set_allocated_szinfo(::std::string* szinfo);

  // @@protoc_insertion_point(class_scope:Pmd.stGameClientChatMessageGMUserCmd)
 private:
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_bychattype();
  inline void clear_has_bychattype();
  inline void set_has_bychatpos();
  inline void clear_has_bychatpos();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_bysize();
  inline void clear_has_bysize();
  inline void set_has_szinfo();
  inline void clear_has_szinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gmname_;
  ::std::string* username_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 bychattype_;
  ::google::protobuf::uint32 bychatpos_;
  ::google::protobuf::uint32 color_;
  ::std::string* szinfo_;
  ::google::protobuf::uint32 bysize_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stGameClientChatMessageGMUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestGameClientMessageConfigGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestGameClientMessageConfigGmUserCmd();
  virtual ~stRequestGameClientMessageConfigGmUserCmd();

  stRequestGameClientMessageConfigGmUserCmd(const stRequestGameClientMessageConfigGmUserCmd& from);

  inline stRequestGameClientMessageConfigGmUserCmd& operator=(const stRequestGameClientMessageConfigGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestGameClientMessageConfigGmUserCmd& default_instance();

  void Swap(stRequestGameClientMessageConfigGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestGameClientMessageConfigGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestGameClientMessageConfigGmUserCmd& from);
  void MergeFrom(const stRequestGameClientMessageConfigGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 keyID = 1;
  inline bool has_keyid() const;
  inline void clear_keyid();
  static const int kKeyIDFieldNumber = 1;
  inline ::google::protobuf::uint32 keyid() const;
  inline void set_keyid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestGameClientMessageConfigGmUserCmd)
 private:
  inline void set_has_keyid();
  inline void clear_has_keyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 keyid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestGameClientMessageConfigGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnGameClientMessageConfigGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnGameClientMessageConfigGmUserCmd();
  virtual ~stReturnGameClientMessageConfigGmUserCmd();

  stReturnGameClientMessageConfigGmUserCmd(const stReturnGameClientMessageConfigGmUserCmd& from);

  inline stReturnGameClientMessageConfigGmUserCmd& operator=(const stReturnGameClientMessageConfigGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnGameClientMessageConfigGmUserCmd& default_instance();

  void Swap(stReturnGameClientMessageConfigGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnGameClientMessageConfigGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnGameClientMessageConfigGmUserCmd& from);
  void MergeFrom(const stReturnGameClientMessageConfigGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 keyID = 1;
  inline bool has_keyid() const;
  inline void clear_keyid();
  static const int kKeyIDFieldNumber = 1;
  inline ::google::protobuf::uint32 keyid() const;
  inline void set_keyid(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 3;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnGameClientMessageConfigGmUserCmd)
 private:
  inline void set_has_keyid();
  inline void clear_has_keyid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 keyid_;
  ::google::protobuf::uint32 num_;
  ::std::string* data_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnGameClientMessageConfigGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stPlayerSatisfactionGmUserCmd : public ::google::protobuf::Message {
 public:
  stPlayerSatisfactionGmUserCmd();
  virtual ~stPlayerSatisfactionGmUserCmd();

  stPlayerSatisfactionGmUserCmd(const stPlayerSatisfactionGmUserCmd& from);

  inline stPlayerSatisfactionGmUserCmd& operator=(const stPlayerSatisfactionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stPlayerSatisfactionGmUserCmd& default_instance();

  void Swap(stPlayerSatisfactionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stPlayerSatisfactionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stPlayerSatisfactionGmUserCmd& from);
  void MergeFrom(const stPlayerSatisfactionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gmname = 1;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmnameFieldNumber = 1;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional string charname = 2;
  inline bool has_charname() const;
  inline void clear_charname();
  static const int kCharnameFieldNumber = 2;
  inline const ::std::string& charname() const;
  inline void set_charname(const ::std::string& value);
  inline void set_charname(const char* value);
  inline void set_charname(const char* value, size_t size);
  inline ::std::string* mutable_charname();
  inline ::std::string* release_charname();
  inline void set_allocated_charname(::std::string* charname);

  // optional uint32 charid = 3;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 3;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 4;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 4;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countryid = 5;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 5;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 6;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 6;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 questionid = 7;
  inline bool has_questionid() const;
  inline void clear_questionid();
  static const int kQuestionidFieldNumber = 7;
  inline ::google::protobuf::uint32 questionid() const;
  inline void set_questionid(::google::protobuf::uint32 value);

  // optional uint32 satisfaction = 8;
  inline bool has_satisfaction() const;
  inline void clear_satisfaction();
  static const int kSatisfactionFieldNumber = 8;
  inline ::google::protobuf::uint32 satisfaction() const;
  inline void set_satisfaction(::google::protobuf::uint32 value);

  // optional string desc = 9;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 9;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:Pmd.stPlayerSatisfactionGmUserCmd)
 private:
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_charname();
  inline void clear_has_charname();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_questionid();
  inline void clear_has_questionid();
  inline void set_has_satisfaction();
  inline void clear_has_satisfaction();
  inline void set_has_desc();
  inline void clear_has_desc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gmname_;
  ::std::string* charname_;
  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 questionid_;
  ::google::protobuf::uint32 satisfaction_;
  ::std::string* desc_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stPlayerSatisfactionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestMyQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestMyQuestionGmUserCmd();
  virtual ~stRequestMyQuestionGmUserCmd();

  stRequestMyQuestionGmUserCmd(const stRequestMyQuestionGmUserCmd& from);

  inline stRequestMyQuestionGmUserCmd& operator=(const stRequestMyQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestMyQuestionGmUserCmd& default_instance();

  void Swap(stRequestMyQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestMyQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestMyQuestionGmUserCmd& from);
  void MergeFrom(const stRequestMyQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestMyQuestionGmUserCmd)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestMyQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestQuestionSubmitableGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestQuestionSubmitableGmUserCmd();
  virtual ~stRequestQuestionSubmitableGmUserCmd();

  stRequestQuestionSubmitableGmUserCmd(const stRequestQuestionSubmitableGmUserCmd& from);

  inline stRequestQuestionSubmitableGmUserCmd& operator=(const stRequestQuestionSubmitableGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestQuestionSubmitableGmUserCmd& default_instance();

  void Swap(stRequestQuestionSubmitableGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestQuestionSubmitableGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestQuestionSubmitableGmUserCmd& from);
  void MergeFrom(const stRequestQuestionSubmitableGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestQuestionSubmitableGmUserCmd)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 userid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestQuestionSubmitableGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stVerifyOnlineQaGmUserCmd : public ::google::protobuf::Message {
 public:
  stVerifyOnlineQaGmUserCmd();
  virtual ~stVerifyOnlineQaGmUserCmd();

  stVerifyOnlineQaGmUserCmd(const stVerifyOnlineQaGmUserCmd& from);

  inline stVerifyOnlineQaGmUserCmd& operator=(const stVerifyOnlineQaGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stVerifyOnlineQaGmUserCmd& default_instance();

  void Swap(stVerifyOnlineQaGmUserCmd* other);

  // implements Message ----------------------------------------------

  stVerifyOnlineQaGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stVerifyOnlineQaGmUserCmd& from);
  void MergeFrom(const stVerifyOnlineQaGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stamp = 1;
  inline bool has_stamp() const;
  inline void clear_stamp();
  static const int kStampFieldNumber = 1;
  inline ::google::protobuf::uint32 stamp() const;
  inline void set_stamp(::google::protobuf::uint32 value);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 3;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 3;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 countryid = 4;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 4;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional string gmname = 5;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmnameFieldNumber = 5;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional string username = 6;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 6;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:Pmd.stVerifyOnlineQaGmUserCmd)
 private:
  inline void set_has_stamp();
  inline void clear_has_stamp();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_username();
  inline void clear_has_username();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 stamp_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 countryid_;
  ::std::string* gmname_;
  ::std::string* username_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stVerifyOnlineQaGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stNewGameClientMessageBoxGmUserCmd : public ::google::protobuf::Message {
 public:
  stNewGameClientMessageBoxGmUserCmd();
  virtual ~stNewGameClientMessageBoxGmUserCmd();

  stNewGameClientMessageBoxGmUserCmd(const stNewGameClientMessageBoxGmUserCmd& from);

  inline stNewGameClientMessageBoxGmUserCmd& operator=(const stNewGameClientMessageBoxGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stNewGameClientMessageBoxGmUserCmd& default_instance();

  void Swap(stNewGameClientMessageBoxGmUserCmd* other);

  // implements Message ----------------------------------------------

  stNewGameClientMessageBoxGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stNewGameClientMessageBoxGmUserCmd& from);
  void MergeFrom(const stNewGameClientMessageBoxGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string gmname = 1;
  inline bool has_gmname() const;
  inline void clear_gmname();
  static const int kGmnameFieldNumber = 1;
  inline const ::std::string& gmname() const;
  inline void set_gmname(const ::std::string& value);
  inline void set_gmname(const char* value);
  inline void set_gmname(const char* value, size_t size);
  inline ::std::string* mutable_gmname();
  inline ::std::string* release_gmname();
  inline void set_allocated_gmname(::std::string* gmname);

  // optional uint32 zoneid = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);

  // optional uint32 countryid = 3;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryidFieldNumber = 3;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);

  // optional uint32 sceneid = 4;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneidFieldNumber = 4;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);

  // optional uint32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional uint32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional bytes data = 7;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 7;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stNewGameClientMessageBoxGmUserCmd)
 private:
  inline void set_has_gmname();
  inline void clear_has_gmname();
  inline void set_has_zoneid();
  inline void clear_has_zoneid();
  inline void set_has_countryid();
  inline void clear_has_countryid();
  inline void set_has_sceneid();
  inline void clear_has_sceneid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* gmname_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 countryid_;
  ::google::protobuf::uint32 sceneid_;
  ::google::protobuf::uint32 num_;
  ::std::string* data_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stNewGameClientMessageBoxGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestPreProcessQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestPreProcessQuestionGmUserCmd();
  virtual ~stRequestPreProcessQuestionGmUserCmd();

  stRequestPreProcessQuestionGmUserCmd(const stRequestPreProcessQuestionGmUserCmd& from);

  inline stRequestPreProcessQuestionGmUserCmd& operator=(const stRequestPreProcessQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestPreProcessQuestionGmUserCmd& default_instance();

  void Swap(stRequestPreProcessQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestPreProcessQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestPreProcessQuestionGmUserCmd& from);
  void MergeFrom(const stRequestPreProcessQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestPreProcessQuestionGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 userid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestPreProcessQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnPreProcessQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnPreProcessQuestionGmUserCmd();
  virtual ~stReturnPreProcessQuestionGmUserCmd();

  stReturnPreProcessQuestionGmUserCmd(const stReturnPreProcessQuestionGmUserCmd& from);

  inline stReturnPreProcessQuestionGmUserCmd& operator=(const stReturnPreProcessQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnPreProcessQuestionGmUserCmd& default_instance();

  void Swap(stReturnPreProcessQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnPreProcessQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnPreProcessQuestionGmUserCmd& from);
  void MergeFrom(const stReturnPreProcessQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Pmd.QuestionBaseData head = 1;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1;
  inline const ::Pmd::QuestionBaseData& head() const;
  inline ::Pmd::QuestionBaseData* mutable_head();
  inline ::Pmd::QuestionBaseData* release_head();
  inline void set_allocated_head(::Pmd::QuestionBaseData* head);

  // optional string desc = 2;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 2;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional uint32 seq = 3;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 3;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // optional uint32 gmid = 4;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 4;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional uint32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 6;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnPreProcessQuestionGmUserCmd)
 private:
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::QuestionBaseData* head_;
  ::std::string* desc_;
  ::google::protobuf::uint32 seq_;
  ::google::protobuf::uint32 gmid_;
  ::std::string* data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnPreProcessQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnNowPreProcessQusetGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnNowPreProcessQusetGmUserCmd();
  virtual ~stReturnNowPreProcessQusetGmUserCmd();

  stReturnNowPreProcessQusetGmUserCmd(const stReturnNowPreProcessQusetGmUserCmd& from);

  inline stReturnNowPreProcessQusetGmUserCmd& operator=(const stReturnNowPreProcessQusetGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnNowPreProcessQusetGmUserCmd& default_instance();

  void Swap(stReturnNowPreProcessQusetGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnNowPreProcessQusetGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnNowPreProcessQusetGmUserCmd& from);
  void MergeFrom(const stReturnNowPreProcessQusetGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnNowPreProcessQusetGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 userid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnNowPreProcessQusetGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stDeleteProcessedQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stDeleteProcessedQuestionGmUserCmd();
  virtual ~stDeleteProcessedQuestionGmUserCmd();

  stDeleteProcessedQuestionGmUserCmd(const stDeleteProcessedQuestionGmUserCmd& from);

  inline stDeleteProcessedQuestionGmUserCmd& operator=(const stDeleteProcessedQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stDeleteProcessedQuestionGmUserCmd& default_instance();

  void Swap(stDeleteProcessedQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stDeleteProcessedQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stDeleteProcessedQuestionGmUserCmd& from);
  void MergeFrom(const stDeleteProcessedQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stDeleteProcessedQuestionGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 userid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stDeleteProcessedQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestOneQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestOneQuestionGmUserCmd();
  virtual ~stRequestOneQuestionGmUserCmd();

  stRequestOneQuestionGmUserCmd(const stRequestOneQuestionGmUserCmd& from);

  inline stRequestOneQuestionGmUserCmd& operator=(const stRequestOneQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestOneQuestionGmUserCmd& default_instance();

  void Swap(stRequestOneQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestOneQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestOneQuestionGmUserCmd& from);
  void MergeFrom(const stRequestOneQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestOneQuestionGmUserCmd)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestOneQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnOneQuestionGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnOneQuestionGmUserCmd();
  virtual ~stReturnOneQuestionGmUserCmd();

  stReturnOneQuestionGmUserCmd(const stReturnOneQuestionGmUserCmd& from);

  inline stReturnOneQuestionGmUserCmd& operator=(const stReturnOneQuestionGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnOneQuestionGmUserCmd& default_instance();

  void Swap(stReturnOneQuestionGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnOneQuestionGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnOneQuestionGmUserCmd& from);
  void MergeFrom(const stReturnOneQuestionGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // optional .Pmd.QuestionBaseData head = 2;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 2;
  inline const ::Pmd::QuestionBaseData& head() const;
  inline ::Pmd::QuestionBaseData* mutable_head();
  inline ::Pmd::QuestionBaseData* release_head();
  inline void set_allocated_head(::Pmd::QuestionBaseData* head);

  // optional string desc = 3;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 3;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  inline void set_allocated_desc(::std::string* desc);

  // optional uint32 seq = 4;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 4;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // optional uint32 num = 5;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 5;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes data = 6;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 6;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnOneQuestionGmUserCmd)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Pmd::QuestionBaseData* head_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 seq_;
  ::std::string* desc_;
  ::std::string* data_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnOneQuestionGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestResetGmWorkStateGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestResetGmWorkStateGmUserCmd();
  virtual ~stRequestResetGmWorkStateGmUserCmd();

  stRequestResetGmWorkStateGmUserCmd(const stRequestResetGmWorkStateGmUserCmd& from);

  inline stRequestResetGmWorkStateGmUserCmd& operator=(const stRequestResetGmWorkStateGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestResetGmWorkStateGmUserCmd& default_instance();

  void Swap(stRequestResetGmWorkStateGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestResetGmWorkStateGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestResetGmWorkStateGmUserCmd& from);
  void MergeFrom(const stRequestResetGmWorkStateGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 qMaxNum = 2;
  inline bool has_qmaxnum() const;
  inline void clear_qmaxnum();
  static const int kQMaxNumFieldNumber = 2;
  inline ::google::protobuf::uint32 qmaxnum() const;
  inline void set_qmaxnum(::google::protobuf::uint32 value);

  // optional uint32 autoRecv = 3;
  inline bool has_autorecv() const;
  inline void clear_autorecv();
  static const int kAutoRecvFieldNumber = 3;
  inline ::google::protobuf::uint32 autorecv() const;
  inline void set_autorecv(::google::protobuf::uint32 value);

  // optional uint32 workState = 4;
  inline bool has_workstate() const;
  inline void clear_workstate();
  static const int kWorkStateFieldNumber = 4;
  inline ::google::protobuf::uint32 workstate() const;
  inline void set_workstate(::google::protobuf::uint32 value);

  // optional uint32 winNum = 5;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinNumFieldNumber = 5;
  inline ::google::protobuf::uint32 winnum() const;
  inline void set_winnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestResetGmWorkStateGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_qmaxnum();
  inline void clear_has_qmaxnum();
  inline void set_has_autorecv();
  inline void clear_has_autorecv();
  inline void set_has_workstate();
  inline void clear_has_workstate();
  inline void set_has_winnum();
  inline void clear_has_winnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 qmaxnum_;
  ::google::protobuf::uint32 autorecv_;
  ::google::protobuf::uint32 workstate_;
  ::google::protobuf::uint32 winnum_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestResetGmWorkStateGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stReturnResetGmWorkStateGmUserCmd : public ::google::protobuf::Message {
 public:
  stReturnResetGmWorkStateGmUserCmd();
  virtual ~stReturnResetGmWorkStateGmUserCmd();

  stReturnResetGmWorkStateGmUserCmd(const stReturnResetGmWorkStateGmUserCmd& from);

  inline stReturnResetGmWorkStateGmUserCmd& operator=(const stReturnResetGmWorkStateGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stReturnResetGmWorkStateGmUserCmd& default_instance();

  void Swap(stReturnResetGmWorkStateGmUserCmd* other);

  // implements Message ----------------------------------------------

  stReturnResetGmWorkStateGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stReturnResetGmWorkStateGmUserCmd& from);
  void MergeFrom(const stReturnResetGmWorkStateGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // optional uint32 qMaxNum = 2;
  inline bool has_qmaxnum() const;
  inline void clear_qmaxnum();
  static const int kQMaxNumFieldNumber = 2;
  inline ::google::protobuf::uint32 qmaxnum() const;
  inline void set_qmaxnum(::google::protobuf::uint32 value);

  // optional uint32 autoRecv = 3;
  inline bool has_autorecv() const;
  inline void clear_autorecv();
  static const int kAutoRecvFieldNumber = 3;
  inline ::google::protobuf::uint32 autorecv() const;
  inline void set_autorecv(::google::protobuf::uint32 value);

  // optional uint32 workState = 4;
  inline bool has_workstate() const;
  inline void clear_workstate();
  static const int kWorkStateFieldNumber = 4;
  inline ::google::protobuf::uint32 workstate() const;
  inline void set_workstate(::google::protobuf::uint32 value);

  // optional uint32 winNum = 5;
  inline bool has_winnum() const;
  inline void clear_winnum();
  static const int kWinNumFieldNumber = 5;
  inline ::google::protobuf::uint32 winnum() const;
  inline void set_winnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stReturnResetGmWorkStateGmUserCmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_qmaxnum();
  inline void clear_has_qmaxnum();
  inline void set_has_autorecv();
  inline void clear_has_autorecv();
  inline void set_has_workstate();
  inline void clear_has_workstate();
  inline void set_has_winnum();
  inline void clear_has_winnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 qmaxnum_;
  ::google::protobuf::uint32 autorecv_;
  ::google::protobuf::uint32 workstate_;
  ::google::protobuf::uint32 winnum_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stReturnResetGmWorkStateGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stGmCommandUserCmd : public ::google::protobuf::Message {
 public:
  stGmCommandUserCmd();
  virtual ~stGmCommandUserCmd();

  stGmCommandUserCmd(const stGmCommandUserCmd& from);

  inline stGmCommandUserCmd& operator=(const stGmCommandUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stGmCommandUserCmd& default_instance();

  void Swap(stGmCommandUserCmd* other);

  // implements Message ----------------------------------------------

  stGmCommandUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stGmCommandUserCmd& from);
  void MergeFrom(const stGmCommandUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num = 1;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 1;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // optional bytes str = 2;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 2;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const void* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:Pmd.stGmCommandUserCmd)
 private:
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* str_;
  ::google::protobuf::uint32 num_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stGmCommandUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stGmCommandToSceneUserCmd : public ::google::protobuf::Message {
 public:
  stGmCommandToSceneUserCmd();
  virtual ~stGmCommandToSceneUserCmd();

  stGmCommandToSceneUserCmd(const stGmCommandToSceneUserCmd& from);

  inline stGmCommandToSceneUserCmd& operator=(const stGmCommandToSceneUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stGmCommandToSceneUserCmd& default_instance();

  void Swap(stGmCommandToSceneUserCmd* other);

  // implements Message ----------------------------------------------

  stGmCommandToSceneUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stGmCommandToSceneUserCmd& from);
  void MergeFrom(const stGmCommandToSceneUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 gmid = 1;
  inline bool has_gmid() const;
  inline void clear_gmid();
  static const int kGmidFieldNumber = 1;
  inline ::google::protobuf::uint32 gmid() const;
  inline void set_gmid(::google::protobuf::uint32 value);

  // optional bytes str = 2;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 2;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const void* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:Pmd.stGmCommandToSceneUserCmd)
 private:
  inline void set_has_gmid();
  inline void clear_has_gmid();
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* str_;
  ::google::protobuf::uint32 gmid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stGmCommandToSceneUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stForceChangeSexGmUserCmd : public ::google::protobuf::Message {
 public:
  stForceChangeSexGmUserCmd();
  virtual ~stForceChangeSexGmUserCmd();

  stForceChangeSexGmUserCmd(const stForceChangeSexGmUserCmd& from);

  inline stForceChangeSexGmUserCmd& operator=(const stForceChangeSexGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stForceChangeSexGmUserCmd& default_instance();

  void Swap(stForceChangeSexGmUserCmd* other);

  // implements Message ----------------------------------------------

  stForceChangeSexGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stForceChangeSexGmUserCmd& from);
  void MergeFrom(const stForceChangeSexGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Pmd.stForceChangeSexGmUserCmd)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stForceChangeSexGmUserCmd* default_instance_;
};
// -------------------------------------------------------------------

class stRequestMobileInfoGmUserCmd : public ::google::protobuf::Message {
 public:
  stRequestMobileInfoGmUserCmd();
  virtual ~stRequestMobileInfoGmUserCmd();

  stRequestMobileInfoGmUserCmd(const stRequestMobileInfoGmUserCmd& from);

  inline stRequestMobileInfoGmUserCmd& operator=(const stRequestMobileInfoGmUserCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const stRequestMobileInfoGmUserCmd& default_instance();

  void Swap(stRequestMobileInfoGmUserCmd* other);

  // implements Message ----------------------------------------------

  stRequestMobileInfoGmUserCmd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const stRequestMobileInfoGmUserCmd& from);
  void MergeFrom(const stRequestMobileInfoGmUserCmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 mobile = 1;
  inline bool has_mobile() const;
  inline void clear_mobile();
  static const int kMobileFieldNumber = 1;
  inline ::google::protobuf::uint64 mobile() const;
  inline void set_mobile(::google::protobuf::uint64 value);

  // optional uint32 accid = 2;
  inline bool has_accid() const;
  inline void clear_accid();
  static const int kAccidFieldNumber = 2;
  inline ::google::protobuf::uint32 accid() const;
  inline void set_accid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Pmd.stRequestMobileInfoGmUserCmd)
 private:
  inline void set_has_mobile();
  inline void clear_has_mobile();
  inline void set_has_accid();
  inline void clear_has_accid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 mobile_;
  ::google::protobuf::uint32 accid_;
  friend void  protobuf_AddDesc_gmcommand_2eproto();
  friend void protobuf_AssignDesc_gmcommand_2eproto();
  friend void protobuf_ShutdownFile_gmcommand_2eproto();

  void InitAsDefaultInstance();
  static stRequestMobileInfoGmUserCmd* default_instance_;
};
// ===================================================================


// ===================================================================

// Gm

// -------------------------------------------------------------------

// RequestExecGmCommandGmPmd_SC

// required uint32 gameid = 1;
inline bool RequestExecGmCommandGmPmd_SC::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestExecGmCommandGmPmd_SC::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestExecGmCommandGmPmd_SC::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestExecGmCommandGmPmd_SC::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestExecGmCommandGmPmd_SC::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestExecGmCommandGmPmd_SC.gameid)
  return gameid_;
}
inline void RequestExecGmCommandGmPmd_SC::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestExecGmCommandGmPmd_SC.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestExecGmCommandGmPmd_SC::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestExecGmCommandGmPmd_SC::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestExecGmCommandGmPmd_SC::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestExecGmCommandGmPmd_SC::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestExecGmCommandGmPmd_SC::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestExecGmCommandGmPmd_SC.zoneid)
  return zoneid_;
}
inline void RequestExecGmCommandGmPmd_SC::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestExecGmCommandGmPmd_SC.zoneid)
}

// required uint32 gmid = 3;
inline bool RequestExecGmCommandGmPmd_SC::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestExecGmCommandGmPmd_SC::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestExecGmCommandGmPmd_SC::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestExecGmCommandGmPmd_SC::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestExecGmCommandGmPmd_SC::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestExecGmCommandGmPmd_SC.gmid)
  return gmid_;
}
inline void RequestExecGmCommandGmPmd_SC::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestExecGmCommandGmPmd_SC.gmid)
}

// required string msg = 4;
inline bool RequestExecGmCommandGmPmd_SC::has_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestExecGmCommandGmPmd_SC::set_has_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestExecGmCommandGmPmd_SC::clear_has_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestExecGmCommandGmPmd_SC::clear_msg() {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& RequestExecGmCommandGmPmd_SC::msg() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestExecGmCommandGmPmd_SC.msg)
  return *msg_;
}
inline void RequestExecGmCommandGmPmd_SC::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestExecGmCommandGmPmd_SC.msg)
}
inline void RequestExecGmCommandGmPmd_SC::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestExecGmCommandGmPmd_SC.msg)
}
inline void RequestExecGmCommandGmPmd_SC::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestExecGmCommandGmPmd_SC.msg)
}
inline ::std::string* RequestExecGmCommandGmPmd_SC::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestExecGmCommandGmPmd_SC.msg)
  return msg_;
}
inline ::std::string* RequestExecGmCommandGmPmd_SC::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestExecGmCommandGmPmd_SC::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestExecGmCommandGmPmd_SC.msg)
}

// -------------------------------------------------------------------

// RequestGameZoneErrorGmPmd_S

// required uint32 retcode = 1;
inline bool RequestGameZoneErrorGmPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGameZoneErrorGmPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGameZoneErrorGmPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGameZoneErrorGmPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 RequestGameZoneErrorGmPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGameZoneErrorGmPmd_S.retcode)
  return retcode_;
}
inline void RequestGameZoneErrorGmPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestGameZoneErrorGmPmd_S.retcode)
}

// optional string retdesc = 2;
inline bool RequestGameZoneErrorGmPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestGameZoneErrorGmPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestGameZoneErrorGmPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestGameZoneErrorGmPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& RequestGameZoneErrorGmPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGameZoneErrorGmPmd_S.retdesc)
  return *retdesc_;
}
inline void RequestGameZoneErrorGmPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestGameZoneErrorGmPmd_S.retdesc)
}
inline void RequestGameZoneErrorGmPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestGameZoneErrorGmPmd_S.retdesc)
}
inline void RequestGameZoneErrorGmPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestGameZoneErrorGmPmd_S.retdesc)
}
inline ::std::string* RequestGameZoneErrorGmPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestGameZoneErrorGmPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* RequestGameZoneErrorGmPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestGameZoneErrorGmPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestGameZoneErrorGmPmd_S.retdesc)
}

// required uint32 gmid = 3;
inline bool RequestGameZoneErrorGmPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestGameZoneErrorGmPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestGameZoneErrorGmPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestGameZoneErrorGmPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestGameZoneErrorGmPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGameZoneErrorGmPmd_S.gmid)
  return gmid_;
}
inline void RequestGameZoneErrorGmPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestGameZoneErrorGmPmd_S.gmid)
}

// -------------------------------------------------------------------

// RequestHotRestartGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestHotRestartGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestHotRestartGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestHotRestartGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestHotRestartGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestHotRestartGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestHotRestartGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestHotRestartGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestHotRestartGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestHotRestartGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestHotRestartGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestHotRestartGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestHotRestartGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestHotRestartGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestHotRestartGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestHotRestartGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestHotRestartGmUserPmd_CS.zoneid)
}

// required uint32 gmid = 3;
inline bool RequestHotRestartGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestHotRestartGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestHotRestartGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestHotRestartGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestHotRestartGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestHotRestartGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestHotRestartGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestHotRestartGmUserPmd_CS.gmid)
}

// optional uint32 ret = 4;
inline bool RequestHotRestartGmUserPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestHotRestartGmUserPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestHotRestartGmUserPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestHotRestartGmUserPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RequestHotRestartGmUserPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestHotRestartGmUserPmd_CS.ret)
  return ret_;
}
inline void RequestHotRestartGmUserPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestHotRestartGmUserPmd_CS.ret)
}

// -------------------------------------------------------------------

// RequesetScriptUpdateGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequesetScriptUpdateGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequesetScriptUpdateGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequesetScriptUpdateGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequesetScriptUpdateGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequesetScriptUpdateGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequesetScriptUpdateGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequesetScriptUpdateGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequesetScriptUpdateGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequesetScriptUpdateGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequesetScriptUpdateGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequesetScriptUpdateGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequesetScriptUpdateGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequesetScriptUpdateGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequesetScriptUpdateGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequesetScriptUpdateGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequesetScriptUpdateGmUserPmd_CS.zoneid)
}

// required uint32 gmid = 3;
inline bool RequesetScriptUpdateGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequesetScriptUpdateGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequesetScriptUpdateGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequesetScriptUpdateGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequesetScriptUpdateGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequesetScriptUpdateGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequesetScriptUpdateGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequesetScriptUpdateGmUserPmd_CS.gmid)
}

// optional uint32 ret = 4;
inline bool RequesetScriptUpdateGmUserPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequesetScriptUpdateGmUserPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequesetScriptUpdateGmUserPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequesetScriptUpdateGmUserPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RequesetScriptUpdateGmUserPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.RequesetScriptUpdateGmUserPmd_CS.ret)
  return ret_;
}
inline void RequesetScriptUpdateGmUserPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequesetScriptUpdateGmUserPmd_CS.ret)
}

// -------------------------------------------------------------------

// RequesetRefreshGatewaylistGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequesetRefreshGatewaylistGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequesetRefreshGatewaylistGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequesetRefreshGatewaylistGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequesetRefreshGatewaylistGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequesetRefreshGatewaylistGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequesetRefreshGatewaylistGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequesetRefreshGatewaylistGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequesetRefreshGatewaylistGmUserPmd_CS.zoneid)
}

// required uint32 gmid = 3;
inline bool RequesetRefreshGatewaylistGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequesetRefreshGatewaylistGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequesetRefreshGatewaylistGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequesetRefreshGatewaylistGmUserPmd_CS.gmid)
}

// optional uint32 ret = 4;
inline bool RequesetRefreshGatewaylistGmUserPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RequesetRefreshGatewaylistGmUserPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.RequesetRefreshGatewaylistGmUserPmd_CS.ret)
  return ret_;
}
inline void RequesetRefreshGatewaylistGmUserPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequesetRefreshGatewaylistGmUserPmd_CS.ret)
}

// -------------------------------------------------------------------

// RequestGenerateCodeGmUserPmd_C

// optional uint32 gameid = 1;
inline bool RequestGenerateCodeGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestGenerateCodeGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestGenerateCodeGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGenerateCodeGmUserPmd_C.gameid)
  return gameid_;
}
inline void RequestGenerateCodeGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestGenerateCodeGmUserPmd_C.gameid)
}

// optional uint32 zoneid = 2;
inline bool RequestGenerateCodeGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestGenerateCodeGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestGenerateCodeGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGenerateCodeGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void RequestGenerateCodeGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestGenerateCodeGmUserPmd_C.zoneid)
}

// optional string code = 3;
inline bool RequestGenerateCodeGmUserPmd_C::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestGenerateCodeGmUserPmd_C::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& RequestGenerateCodeGmUserPmd_C::code() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGenerateCodeGmUserPmd_C.code)
  return *code_;
}
inline void RequestGenerateCodeGmUserPmd_C::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestGenerateCodeGmUserPmd_C.code)
}
inline void RequestGenerateCodeGmUserPmd_C::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestGenerateCodeGmUserPmd_C.code)
}
inline void RequestGenerateCodeGmUserPmd_C::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestGenerateCodeGmUserPmd_C.code)
}
inline ::std::string* RequestGenerateCodeGmUserPmd_C::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestGenerateCodeGmUserPmd_C.code)
  return code_;
}
inline ::std::string* RequestGenerateCodeGmUserPmd_C::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestGenerateCodeGmUserPmd_C::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestGenerateCodeGmUserPmd_C.code)
}

// optional uint32 codenum = 4;
inline bool RequestGenerateCodeGmUserPmd_C::has_codenum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestGenerateCodeGmUserPmd_C::set_has_codenum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_has_codenum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_codenum() {
  codenum_ = 0u;
  clear_has_codenum();
}
inline ::google::protobuf::uint32 RequestGenerateCodeGmUserPmd_C::codenum() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGenerateCodeGmUserPmd_C.codenum)
  return codenum_;
}
inline void RequestGenerateCodeGmUserPmd_C::set_codenum(::google::protobuf::uint32 value) {
  set_has_codenum();
  codenum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestGenerateCodeGmUserPmd_C.codenum)
}

// required uint32 codetype = 5;
inline bool RequestGenerateCodeGmUserPmd_C::has_codetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestGenerateCodeGmUserPmd_C::set_has_codetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_has_codetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_codetype() {
  codetype_ = 0u;
  clear_has_codetype();
}
inline ::google::protobuf::uint32 RequestGenerateCodeGmUserPmd_C::codetype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGenerateCodeGmUserPmd_C.codetype)
  return codetype_;
}
inline void RequestGenerateCodeGmUserPmd_C::set_codetype(::google::protobuf::uint32 value) {
  set_has_codetype();
  codetype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestGenerateCodeGmUserPmd_C.codetype)
}

// optional uint64 charid = 6;
inline bool RequestGenerateCodeGmUserPmd_C::has_charid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestGenerateCodeGmUserPmd_C::set_has_charid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_has_charid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestGenerateCodeGmUserPmd_C::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGenerateCodeGmUserPmd_C.charid)
  return charid_;
}
inline void RequestGenerateCodeGmUserPmd_C::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestGenerateCodeGmUserPmd_C.charid)
}

// optional uint32 gmid = 7;
inline bool RequestGenerateCodeGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestGenerateCodeGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestGenerateCodeGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestGenerateCodeGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestGenerateCodeGmUserPmd_C.gmid)
  return gmid_;
}
inline void RequestGenerateCodeGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestGenerateCodeGmUserPmd_C.gmid)
}

// -------------------------------------------------------------------

// ReturnGenerateCodeGmUserPmd_S

// optional uint32 retcode = 1;
inline bool ReturnGenerateCodeGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnGenerateCodeGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnGenerateCodeGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnGenerateCodeGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnGenerateCodeGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnGenerateCodeGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnGenerateCodeGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnGenerateCodeGmUserPmd_S.retcode)
}

// optional string retdesc = 2;
inline bool ReturnGenerateCodeGmUserPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnGenerateCodeGmUserPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnGenerateCodeGmUserPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnGenerateCodeGmUserPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnGenerateCodeGmUserPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnGenerateCodeGmUserPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnGenerateCodeGmUserPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnGenerateCodeGmUserPmd_S.retdesc)
}
inline void ReturnGenerateCodeGmUserPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnGenerateCodeGmUserPmd_S.retdesc)
}
inline void ReturnGenerateCodeGmUserPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnGenerateCodeGmUserPmd_S.retdesc)
}
inline ::std::string* ReturnGenerateCodeGmUserPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnGenerateCodeGmUserPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnGenerateCodeGmUserPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnGenerateCodeGmUserPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnGenerateCodeGmUserPmd_S.retdesc)
}

// optional uint32 codenum = 3;
inline bool ReturnGenerateCodeGmUserPmd_S::has_codenum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnGenerateCodeGmUserPmd_S::set_has_codenum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnGenerateCodeGmUserPmd_S::clear_has_codenum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnGenerateCodeGmUserPmd_S::clear_codenum() {
  codenum_ = 0u;
  clear_has_codenum();
}
inline ::google::protobuf::uint32 ReturnGenerateCodeGmUserPmd_S::codenum() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnGenerateCodeGmUserPmd_S.codenum)
  return codenum_;
}
inline void ReturnGenerateCodeGmUserPmd_S::set_codenum(::google::protobuf::uint32 value) {
  set_has_codenum();
  codenum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnGenerateCodeGmUserPmd_S.codenum)
}

// optional uint32 gmid = 4;
inline bool ReturnGenerateCodeGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnGenerateCodeGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnGenerateCodeGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnGenerateCodeGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnGenerateCodeGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnGenerateCodeGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnGenerateCodeGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnGenerateCodeGmUserPmd_S.gmid)
}

// -------------------------------------------------------------------

// RequestOpeartorCodeGmUserPmd_C

// required uint32 gameid = 1;
inline bool RequestOpeartorCodeGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestOpeartorCodeGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestOpeartorCodeGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestOpeartorCodeGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestOpeartorCodeGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOpeartorCodeGmUserPmd_C.gameid)
  return gameid_;
}
inline void RequestOpeartorCodeGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOpeartorCodeGmUserPmd_C.gameid)
}

// required string code = 2;
inline bool RequestOpeartorCodeGmUserPmd_C::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestOpeartorCodeGmUserPmd_C::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestOpeartorCodeGmUserPmd_C::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestOpeartorCodeGmUserPmd_C::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& RequestOpeartorCodeGmUserPmd_C::code() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOpeartorCodeGmUserPmd_C.code)
  return *code_;
}
inline void RequestOpeartorCodeGmUserPmd_C::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestOpeartorCodeGmUserPmd_C.code)
}
inline void RequestOpeartorCodeGmUserPmd_C::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestOpeartorCodeGmUserPmd_C.code)
}
inline void RequestOpeartorCodeGmUserPmd_C::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestOpeartorCodeGmUserPmd_C.code)
}
inline ::std::string* RequestOpeartorCodeGmUserPmd_C::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestOpeartorCodeGmUserPmd_C.code)
  return code_;
}
inline ::std::string* RequestOpeartorCodeGmUserPmd_C::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestOpeartorCodeGmUserPmd_C::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestOpeartorCodeGmUserPmd_C.code)
}

// required uint32 optype = 3;
inline bool RequestOpeartorCodeGmUserPmd_C::has_optype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestOpeartorCodeGmUserPmd_C::set_has_optype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestOpeartorCodeGmUserPmd_C::clear_has_optype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestOpeartorCodeGmUserPmd_C::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 RequestOpeartorCodeGmUserPmd_C::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOpeartorCodeGmUserPmd_C.optype)
  return optype_;
}
inline void RequestOpeartorCodeGmUserPmd_C::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOpeartorCodeGmUserPmd_C.optype)
}

// -------------------------------------------------------------------

// CodeInfo

// optional uint64 id = 1;
inline bool CodeInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CodeInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CodeInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CodeInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CodeInfo::id() const {
  // @@protoc_insertion_point(field_get:Pmd.CodeInfo.id)
  return id_;
}
inline void CodeInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CodeInfo.id)
}

// optional uint32 gameid = 2;
inline bool CodeInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CodeInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CodeInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CodeInfo::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 CodeInfo::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.CodeInfo.gameid)
  return gameid_;
}
inline void CodeInfo::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CodeInfo.gameid)
}

// optional uint32 zoneid = 3;
inline bool CodeInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CodeInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CodeInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CodeInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 CodeInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.CodeInfo.zoneid)
  return zoneid_;
}
inline void CodeInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CodeInfo.zoneid)
}

// optional uint64 charid = 4;
inline bool CodeInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CodeInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CodeInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CodeInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 CodeInfo::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.CodeInfo.charid)
  return charid_;
}
inline void CodeInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CodeInfo.charid)
}

// optional uint32 codetype = 5;
inline bool CodeInfo::has_codetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CodeInfo::set_has_codetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CodeInfo::clear_has_codetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CodeInfo::clear_codetype() {
  codetype_ = 0u;
  clear_has_codetype();
}
inline ::google::protobuf::uint32 CodeInfo::codetype() const {
  // @@protoc_insertion_point(field_get:Pmd.CodeInfo.codetype)
  return codetype_;
}
inline void CodeInfo::set_codetype(::google::protobuf::uint32 value) {
  set_has_codetype();
  codetype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CodeInfo.codetype)
}

// optional string code = 6;
inline bool CodeInfo::has_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CodeInfo::set_has_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CodeInfo::clear_has_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CodeInfo::clear_code() {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& CodeInfo::code() const {
  // @@protoc_insertion_point(field_get:Pmd.CodeInfo.code)
  return *code_;
}
inline void CodeInfo::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.CodeInfo.code)
}
inline void CodeInfo::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.CodeInfo.code)
}
inline void CodeInfo::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.CodeInfo.code)
}
inline ::std::string* CodeInfo::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.CodeInfo.code)
  return code_;
}
inline ::std::string* CodeInfo::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CodeInfo::set_allocated_code(::std::string* code) {
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (code) {
    set_has_code();
    code_ = code;
  } else {
    clear_has_code();
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.CodeInfo.code)
}

// optional uint32 createtime = 7;
inline bool CodeInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CodeInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CodeInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CodeInfo::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 CodeInfo::createtime() const {
  // @@protoc_insertion_point(field_get:Pmd.CodeInfo.createtime)
  return createtime_;
}
inline void CodeInfo::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CodeInfo.createtime)
}

// optional uint32 endtime = 8;
inline bool CodeInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CodeInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CodeInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CodeInfo::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 CodeInfo::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.CodeInfo.endtime)
  return endtime_;
}
inline void CodeInfo::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CodeInfo.endtime)
}

// optional uint32 flag = 9;
inline bool CodeInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CodeInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CodeInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CodeInfo::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 CodeInfo::flag() const {
  // @@protoc_insertion_point(field_get:Pmd.CodeInfo.flag)
  return flag_;
}
inline void CodeInfo::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:Pmd.CodeInfo.flag)
}

// -------------------------------------------------------------------

// ReturnOpreatorCodeGmUserPmd_S

// required uint32 retcode = 1;
inline bool ReturnOpreatorCodeGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnOpreatorCodeGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnOpreatorCodeGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnOpreatorCodeGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnOpreatorCodeGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnOpreatorCodeGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnOpreatorCodeGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnOpreatorCodeGmUserPmd_S.retcode)
}

// optional string retdesc = 2;
inline bool ReturnOpreatorCodeGmUserPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnOpreatorCodeGmUserPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnOpreatorCodeGmUserPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnOpreatorCodeGmUserPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnOpreatorCodeGmUserPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnOpreatorCodeGmUserPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnOpreatorCodeGmUserPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnOpreatorCodeGmUserPmd_S.retdesc)
}
inline void ReturnOpreatorCodeGmUserPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnOpreatorCodeGmUserPmd_S.retdesc)
}
inline void ReturnOpreatorCodeGmUserPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnOpreatorCodeGmUserPmd_S.retdesc)
}
inline ::std::string* ReturnOpreatorCodeGmUserPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnOpreatorCodeGmUserPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnOpreatorCodeGmUserPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnOpreatorCodeGmUserPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnOpreatorCodeGmUserPmd_S.retdesc)
}

// optional .Pmd.CodeInfo data = 3;
inline bool ReturnOpreatorCodeGmUserPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnOpreatorCodeGmUserPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnOpreatorCodeGmUserPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnOpreatorCodeGmUserPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::CodeInfo::Clear();
  clear_has_data();
}
inline const ::Pmd::CodeInfo& ReturnOpreatorCodeGmUserPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnOpreatorCodeGmUserPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::CodeInfo* ReturnOpreatorCodeGmUserPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::CodeInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnOpreatorCodeGmUserPmd_S.data)
  return data_;
}
inline ::Pmd::CodeInfo* ReturnOpreatorCodeGmUserPmd_S::release_data() {
  clear_has_data();
  ::Pmd::CodeInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ReturnOpreatorCodeGmUserPmd_S::set_allocated_data(::Pmd::CodeInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnOpreatorCodeGmUserPmd_S.data)
}

// -------------------------------------------------------------------

// OrderInfo

// optional uint64 id = 1;
inline bool OrderInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 OrderInfo::id() const {
  // @@protoc_insertion_point(field_get:Pmd.OrderInfo.id)
  return id_;
}
inline void OrderInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.OrderInfo.id)
}

// optional uint32 zoneid = 2;
inline bool OrderInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 OrderInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.OrderInfo.zoneid)
  return zoneid_;
}
inline void OrderInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.OrderInfo.zoneid)
}

// optional uint64 charid = 3;
inline bool OrderInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 OrderInfo::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.OrderInfo.charid)
  return charid_;
}
inline void OrderInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.OrderInfo.charid)
}

// optional string gameorder = 4;
inline bool OrderInfo::has_gameorder() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderInfo::set_has_gameorder() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderInfo::clear_has_gameorder() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderInfo::clear_gameorder() {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_->clear();
  }
  clear_has_gameorder();
}
inline const ::std::string& OrderInfo::gameorder() const {
  // @@protoc_insertion_point(field_get:Pmd.OrderInfo.gameorder)
  return *gameorder_;
}
inline void OrderInfo::set_gameorder(const ::std::string& value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.OrderInfo.gameorder)
}
inline void OrderInfo::set_gameorder(const char* value) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.OrderInfo.gameorder)
}
inline void OrderInfo::set_gameorder(const char* value, size_t size) {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  gameorder_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.OrderInfo.gameorder)
}
inline ::std::string* OrderInfo::mutable_gameorder() {
  set_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gameorder_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.OrderInfo.gameorder)
  return gameorder_;
}
inline ::std::string* OrderInfo::release_gameorder() {
  clear_has_gameorder();
  if (gameorder_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gameorder_;
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void OrderInfo::set_allocated_gameorder(::std::string* gameorder) {
  if (gameorder_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gameorder_;
  }
  if (gameorder) {
    set_has_gameorder();
    gameorder_ = gameorder;
  } else {
    clear_has_gameorder();
    gameorder_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.OrderInfo.gameorder)
}

// optional float money = 5;
inline bool OrderInfo::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OrderInfo::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OrderInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OrderInfo::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline float OrderInfo::money() const {
  // @@protoc_insertion_point(field_get:Pmd.OrderInfo.money)
  return money_;
}
inline void OrderInfo::set_money(float value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Pmd.OrderInfo.money)
}

// optional uint64 createtime = 6;
inline bool OrderInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderInfo::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 OrderInfo::createtime() const {
  // @@protoc_insertion_point(field_get:Pmd.OrderInfo.createtime)
  return createtime_;
}
inline void OrderInfo::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.OrderInfo.createtime)
}

// -------------------------------------------------------------------

// GameOrderListGmUserPmd_CS

// required uint32 gameid = 1;
inline bool GameOrderListGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameOrderListGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameOrderListGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameOrderListGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 GameOrderListGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.GameOrderListGmUserPmd_CS.gameid)
  return gameid_;
}
inline void GameOrderListGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GameOrderListGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool GameOrderListGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameOrderListGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameOrderListGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameOrderListGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GameOrderListGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.GameOrderListGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void GameOrderListGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GameOrderListGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool GameOrderListGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameOrderListGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameOrderListGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameOrderListGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GameOrderListGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.GameOrderListGmUserPmd_CS.charid)
  return charid_;
}
inline void GameOrderListGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GameOrderListGmUserPmd_CS.charid)
}

// required uint32 gmid = 4;
inline bool GameOrderListGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameOrderListGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameOrderListGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameOrderListGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 GameOrderListGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.GameOrderListGmUserPmd_CS.gmid)
  return gmid_;
}
inline void GameOrderListGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GameOrderListGmUserPmd_CS.gmid)
}

// optional uint64 timestamp = 5;
inline bool GameOrderListGmUserPmd_CS::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameOrderListGmUserPmd_CS::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameOrderListGmUserPmd_CS::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameOrderListGmUserPmd_CS::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 GameOrderListGmUserPmd_CS::timestamp() const {
  // @@protoc_insertion_point(field_get:Pmd.GameOrderListGmUserPmd_CS.timestamp)
  return timestamp_;
}
inline void GameOrderListGmUserPmd_CS::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GameOrderListGmUserPmd_CS.timestamp)
}

// repeated .Pmd.OrderInfo data = 6;
inline int GameOrderListGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void GameOrderListGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::OrderInfo& GameOrderListGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.GameOrderListGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::OrderInfo* GameOrderListGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.GameOrderListGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::OrderInfo* GameOrderListGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.GameOrderListGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::OrderInfo >&
GameOrderListGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.GameOrderListGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::OrderInfo >*
GameOrderListGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.GameOrderListGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 curpage = 7;
inline bool GameOrderListGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameOrderListGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameOrderListGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameOrderListGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 GameOrderListGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.GameOrderListGmUserPmd_CS.curpage)
  return curpage_;
}
inline void GameOrderListGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GameOrderListGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 8;
inline bool GameOrderListGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GameOrderListGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GameOrderListGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GameOrderListGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 GameOrderListGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.GameOrderListGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void GameOrderListGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GameOrderListGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 9;
inline bool GameOrderListGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GameOrderListGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GameOrderListGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GameOrderListGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 GameOrderListGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.GameOrderListGmUserPmd_CS.perpage)
  return perpage_;
}
inline void GameOrderListGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GameOrderListGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// QueryPackageCodeGmUserPmd_CS

// required string codeid = 1;
inline bool QueryPackageCodeGmUserPmd_CS::has_codeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_codeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_codeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_codeid() {
  if (codeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_->clear();
  }
  clear_has_codeid();
}
inline const ::std::string& QueryPackageCodeGmUserPmd_CS::codeid() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.codeid)
  return *codeid_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_codeid(const ::std::string& value) {
  set_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_ = new ::std::string;
  }
  codeid_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.codeid)
}
inline void QueryPackageCodeGmUserPmd_CS::set_codeid(const char* value) {
  set_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_ = new ::std::string;
  }
  codeid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.QueryPackageCodeGmUserPmd_CS.codeid)
}
inline void QueryPackageCodeGmUserPmd_CS::set_codeid(const char* value, size_t size) {
  set_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_ = new ::std::string;
  }
  codeid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.QueryPackageCodeGmUserPmd_CS.codeid)
}
inline ::std::string* QueryPackageCodeGmUserPmd_CS::mutable_codeid() {
  set_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.QueryPackageCodeGmUserPmd_CS.codeid)
  return codeid_;
}
inline ::std::string* QueryPackageCodeGmUserPmd_CS::release_codeid() {
  clear_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = codeid_;
    codeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QueryPackageCodeGmUserPmd_CS::set_allocated_codeid(::std::string* codeid) {
  if (codeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete codeid_;
  }
  if (codeid) {
    set_has_codeid();
    codeid_ = codeid;
  } else {
    clear_has_codeid();
    codeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.QueryPackageCodeGmUserPmd_CS.codeid)
}

// required uint64 accid = 2;
inline bool QueryPackageCodeGmUserPmd_CS::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 QueryPackageCodeGmUserPmd_CS::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.accid)
  return accid_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.accid)
}

// optional uint32 ret = 3;
inline bool QueryPackageCodeGmUserPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 QueryPackageCodeGmUserPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.ret)
  return ret_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.ret)
}

// optional uint32 flag = 4;
inline bool QueryPackageCodeGmUserPmd_CS::has_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 QueryPackageCodeGmUserPmd_CS::flag() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.flag)
  return flag_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.flag)
}

// optional uint64 createtime = 5;
inline bool QueryPackageCodeGmUserPmd_CS::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 QueryPackageCodeGmUserPmd_CS::createtime() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.createtime)
  return createtime_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.createtime)
}

// optional uint64 usedtime = 6;
inline bool QueryPackageCodeGmUserPmd_CS::has_usedtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_usedtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_usedtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_usedtime() {
  usedtime_ = GOOGLE_ULONGLONG(0);
  clear_has_usedtime();
}
inline ::google::protobuf::uint64 QueryPackageCodeGmUserPmd_CS::usedtime() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.usedtime)
  return usedtime_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_usedtime(::google::protobuf::uint64 value) {
  set_has_usedtime();
  usedtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.usedtime)
}

// optional uint32 usedgameid = 7;
inline bool QueryPackageCodeGmUserPmd_CS::has_usedgameid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_usedgameid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_usedgameid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_usedgameid() {
  usedgameid_ = 0u;
  clear_has_usedgameid();
}
inline ::google::protobuf::uint32 QueryPackageCodeGmUserPmd_CS::usedgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.usedgameid)
  return usedgameid_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_usedgameid(::google::protobuf::uint32 value) {
  set_has_usedgameid();
  usedgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.usedgameid)
}

// optional uint32 usedzoneid = 8;
inline bool QueryPackageCodeGmUserPmd_CS::has_usedzoneid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_usedzoneid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_usedzoneid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_usedzoneid() {
  usedzoneid_ = 0u;
  clear_has_usedzoneid();
}
inline ::google::protobuf::uint32 QueryPackageCodeGmUserPmd_CS::usedzoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.usedzoneid)
  return usedzoneid_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_usedzoneid(::google::protobuf::uint32 value) {
  set_has_usedzoneid();
  usedzoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.usedzoneid)
}

// optional uint64 useduid = 9;
inline bool QueryPackageCodeGmUserPmd_CS::has_useduid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_useduid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_useduid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_useduid() {
  useduid_ = GOOGLE_ULONGLONG(0);
  clear_has_useduid();
}
inline ::google::protobuf::uint64 QueryPackageCodeGmUserPmd_CS::useduid() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.useduid)
  return useduid_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_useduid(::google::protobuf::uint64 value) {
  set_has_useduid();
  useduid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.useduid)
}

// optional string extdata = 10;
inline bool QueryPackageCodeGmUserPmd_CS::has_extdata() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_extdata() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& QueryPackageCodeGmUserPmd_CS::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.extdata)
  return *extdata_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.extdata)
}
inline void QueryPackageCodeGmUserPmd_CS::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.QueryPackageCodeGmUserPmd_CS.extdata)
}
inline void QueryPackageCodeGmUserPmd_CS::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.QueryPackageCodeGmUserPmd_CS.extdata)
}
inline ::std::string* QueryPackageCodeGmUserPmd_CS::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.QueryPackageCodeGmUserPmd_CS.extdata)
  return extdata_;
}
inline ::std::string* QueryPackageCodeGmUserPmd_CS::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QueryPackageCodeGmUserPmd_CS::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.QueryPackageCodeGmUserPmd_CS.extdata)
}

// optional uint32 codetype = 11;
inline bool QueryPackageCodeGmUserPmd_CS::has_codetype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QueryPackageCodeGmUserPmd_CS::set_has_codetype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_has_codetype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QueryPackageCodeGmUserPmd_CS::clear_codetype() {
  codetype_ = 0u;
  clear_has_codetype();
}
inline ::google::protobuf::uint32 QueryPackageCodeGmUserPmd_CS::codetype() const {
  // @@protoc_insertion_point(field_get:Pmd.QueryPackageCodeGmUserPmd_CS.codetype)
  return codetype_;
}
inline void QueryPackageCodeGmUserPmd_CS::set_codetype(::google::protobuf::uint32 value) {
  set_has_codetype();
  codetype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QueryPackageCodeGmUserPmd_CS.codetype)
}

// -------------------------------------------------------------------

// RequestUsePackageCodeGmUserPmd_CS

// required string codeid = 1;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_codeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_codeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_codeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_codeid() {
  if (codeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_->clear();
  }
  clear_has_codeid();
}
inline const ::std::string& RequestUsePackageCodeGmUserPmd_CS::codeid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.codeid)
  return *codeid_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_codeid(const ::std::string& value) {
  set_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_ = new ::std::string;
  }
  codeid_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.codeid)
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_codeid(const char* value) {
  set_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_ = new ::std::string;
  }
  codeid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestUsePackageCodeGmUserPmd_CS.codeid)
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_codeid(const char* value, size_t size) {
  set_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_ = new ::std::string;
  }
  codeid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestUsePackageCodeGmUserPmd_CS.codeid)
}
inline ::std::string* RequestUsePackageCodeGmUserPmd_CS::mutable_codeid() {
  set_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    codeid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestUsePackageCodeGmUserPmd_CS.codeid)
  return codeid_;
}
inline ::std::string* RequestUsePackageCodeGmUserPmd_CS::release_codeid() {
  clear_has_codeid();
  if (codeid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = codeid_;
    codeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_allocated_codeid(::std::string* codeid) {
  if (codeid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete codeid_;
  }
  if (codeid) {
    set_has_codeid();
    codeid_ = codeid;
  } else {
    clear_has_codeid();
    codeid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestUsePackageCodeGmUserPmd_CS.codeid)
}

// required uint64 accid = 2;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 RequestUsePackageCodeGmUserPmd_CS::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.accid)
  return accid_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.accid)
}

// optional uint32 typemutex = 3;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_typemutex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_typemutex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_typemutex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_typemutex() {
  typemutex_ = 0u;
  clear_has_typemutex();
}
inline ::google::protobuf::uint32 RequestUsePackageCodeGmUserPmd_CS::typemutex() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.typemutex)
  return typemutex_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_typemutex(::google::protobuf::uint32 value) {
  set_has_typemutex();
  typemutex_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.typemutex)
}

// optional uint32 ret = 4;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_ret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_ret() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_ret() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 RequestUsePackageCodeGmUserPmd_CS::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.ret)
  return ret_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.ret)
}

// optional uint64 createtime = 5;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_createtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_createtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
  clear_has_createtime();
}
inline ::google::protobuf::uint64 RequestUsePackageCodeGmUserPmd_CS::createtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.createtime)
  return createtime_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_createtime(::google::protobuf::uint64 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.createtime)
}

// optional uint64 usedtime = 6;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_usedtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_usedtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_usedtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_usedtime() {
  usedtime_ = GOOGLE_ULONGLONG(0);
  clear_has_usedtime();
}
inline ::google::protobuf::uint64 RequestUsePackageCodeGmUserPmd_CS::usedtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.usedtime)
  return usedtime_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_usedtime(::google::protobuf::uint64 value) {
  set_has_usedtime();
  usedtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.usedtime)
}

// optional uint32 usedgameid = 7;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_usedgameid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_usedgameid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_usedgameid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_usedgameid() {
  usedgameid_ = 0u;
  clear_has_usedgameid();
}
inline ::google::protobuf::uint32 RequestUsePackageCodeGmUserPmd_CS::usedgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.usedgameid)
  return usedgameid_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_usedgameid(::google::protobuf::uint32 value) {
  set_has_usedgameid();
  usedgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.usedgameid)
}

// optional uint32 usedzoneid = 8;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_usedzoneid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_usedzoneid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_usedzoneid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_usedzoneid() {
  usedzoneid_ = 0u;
  clear_has_usedzoneid();
}
inline ::google::protobuf::uint32 RequestUsePackageCodeGmUserPmd_CS::usedzoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.usedzoneid)
  return usedzoneid_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_usedzoneid(::google::protobuf::uint32 value) {
  set_has_usedzoneid();
  usedzoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.usedzoneid)
}

// optional uint64 useduid = 9;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_useduid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_useduid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_useduid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_useduid() {
  useduid_ = GOOGLE_ULONGLONG(0);
  clear_has_useduid();
}
inline ::google::protobuf::uint64 RequestUsePackageCodeGmUserPmd_CS::useduid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.useduid)
  return useduid_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_useduid(::google::protobuf::uint64 value) {
  set_has_useduid();
  useduid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.useduid)
}

// optional string extdata = 10;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_extdata() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_extdata() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_extdata() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_extdata() {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_->clear();
  }
  clear_has_extdata();
}
inline const ::std::string& RequestUsePackageCodeGmUserPmd_CS::extdata() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.extdata)
  return *extdata_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_extdata(const ::std::string& value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.extdata)
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_extdata(const char* value) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestUsePackageCodeGmUserPmd_CS.extdata)
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_extdata(const char* value, size_t size) {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  extdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestUsePackageCodeGmUserPmd_CS.extdata)
}
inline ::std::string* RequestUsePackageCodeGmUserPmd_CS::mutable_extdata() {
  set_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestUsePackageCodeGmUserPmd_CS.extdata)
  return extdata_;
}
inline ::std::string* RequestUsePackageCodeGmUserPmd_CS::release_extdata() {
  clear_has_extdata();
  if (extdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extdata_;
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_allocated_extdata(::std::string* extdata) {
  if (extdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extdata_;
  }
  if (extdata) {
    set_has_extdata();
    extdata_ = extdata;
  } else {
    clear_has_extdata();
    extdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestUsePackageCodeGmUserPmd_CS.extdata)
}

// optional uint32 codetype = 11;
inline bool RequestUsePackageCodeGmUserPmd_CS::has_codetype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_has_codetype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_has_codetype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestUsePackageCodeGmUserPmd_CS::clear_codetype() {
  codetype_ = 0u;
  clear_has_codetype();
}
inline ::google::protobuf::uint32 RequestUsePackageCodeGmUserPmd_CS::codetype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUsePackageCodeGmUserPmd_CS.codetype)
  return codetype_;
}
inline void RequestUsePackageCodeGmUserPmd_CS::set_codetype(::google::protobuf::uint32 value) {
  set_has_codetype();
  codetype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUsePackageCodeGmUserPmd_CS.codetype)
}

// -------------------------------------------------------------------

// FeedbackData

// required uint32 gameid = 1;
inline bool FeedbackData::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeedbackData::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeedbackData::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeedbackData::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 FeedbackData::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.gameid)
  return gameid_;
}
inline void FeedbackData::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.gameid)
}

// required uint32 zoneid = 2;
inline bool FeedbackData::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeedbackData::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeedbackData::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeedbackData::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 FeedbackData::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.zoneid)
  return zoneid_;
}
inline void FeedbackData::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.zoneid)
}

// required uint64 charid = 3;
inline bool FeedbackData::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FeedbackData::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FeedbackData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FeedbackData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 FeedbackData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.charid)
  return charid_;
}
inline void FeedbackData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.charid)
}

// required string charname = 4;
inline bool FeedbackData::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FeedbackData::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FeedbackData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FeedbackData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& FeedbackData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.charname)
  return *charname_;
}
inline void FeedbackData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.charname)
}
inline void FeedbackData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.FeedbackData.charname)
}
inline void FeedbackData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.FeedbackData.charname)
}
inline ::std::string* FeedbackData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.FeedbackData.charname)
  return charname_;
}
inline ::std::string* FeedbackData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FeedbackData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.FeedbackData.charname)
}

// required uint32 userlevel = 5;
inline bool FeedbackData::has_userlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FeedbackData::set_has_userlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FeedbackData::clear_has_userlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FeedbackData::clear_userlevel() {
  userlevel_ = 0u;
  clear_has_userlevel();
}
inline ::google::protobuf::uint32 FeedbackData::userlevel() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.userlevel)
  return userlevel_;
}
inline void FeedbackData::set_userlevel(::google::protobuf::uint32 value) {
  set_has_userlevel();
  userlevel_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.userlevel)
}

// required uint32 viplevel = 6;
inline bool FeedbackData::has_viplevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FeedbackData::set_has_viplevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FeedbackData::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FeedbackData::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 FeedbackData::viplevel() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.viplevel)
  return viplevel_;
}
inline void FeedbackData::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.viplevel)
}

// optional uint32 feedbackid = 7;
inline bool FeedbackData::has_feedbackid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FeedbackData::set_has_feedbackid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FeedbackData::clear_has_feedbackid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FeedbackData::clear_feedbackid() {
  feedbackid_ = 0u;
  clear_has_feedbackid();
}
inline ::google::protobuf::uint32 FeedbackData::feedbackid() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.feedbackid)
  return feedbackid_;
}
inline void FeedbackData::set_feedbackid(::google::protobuf::uint32 value) {
  set_has_feedbackid();
  feedbackid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.feedbackid)
}

// optional string subject = 8;
inline bool FeedbackData::has_subject() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FeedbackData::set_has_subject() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FeedbackData::clear_has_subject() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FeedbackData::clear_subject() {
  if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_->clear();
  }
  clear_has_subject();
}
inline const ::std::string& FeedbackData::subject() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.subject)
  return *subject_;
}
inline void FeedbackData::set_subject(const ::std::string& value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.subject)
}
inline void FeedbackData::set_subject(const char* value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.FeedbackData.subject)
}
inline void FeedbackData::set_subject(const char* value, size_t size) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.FeedbackData.subject)
}
inline ::std::string* FeedbackData::mutable_subject() {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.FeedbackData.subject)
  return subject_;
}
inline ::std::string* FeedbackData::release_subject() {
  clear_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = subject_;
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FeedbackData::set_allocated_subject(::std::string* subject) {
  if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subject_;
  }
  if (subject) {
    set_has_subject();
    subject_ = subject;
  } else {
    clear_has_subject();
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.FeedbackData.subject)
}

// optional string content = 9;
inline bool FeedbackData::has_content() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FeedbackData::set_has_content() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FeedbackData::clear_has_content() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FeedbackData::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& FeedbackData::content() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.content)
  return *content_;
}
inline void FeedbackData::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.content)
}
inline void FeedbackData::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.FeedbackData.content)
}
inline void FeedbackData::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.FeedbackData.content)
}
inline ::std::string* FeedbackData::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.FeedbackData.content)
  return content_;
}
inline ::std::string* FeedbackData::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FeedbackData::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.FeedbackData.content)
}

// required uint32 star = 10;
inline bool FeedbackData::has_star() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FeedbackData::set_has_star() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FeedbackData::clear_has_star() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FeedbackData::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 FeedbackData::star() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.star)
  return star_;
}
inline void FeedbackData::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.star)
}

// required uint64 recordtime = 11;
inline bool FeedbackData::has_recordtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FeedbackData::set_has_recordtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FeedbackData::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FeedbackData::clear_recordtime() {
  recordtime_ = GOOGLE_ULONGLONG(0);
  clear_has_recordtime();
}
inline ::google::protobuf::uint64 FeedbackData::recordtime() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.recordtime)
  return recordtime_;
}
inline void FeedbackData::set_recordtime(::google::protobuf::uint64 value) {
  set_has_recordtime();
  recordtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.recordtime)
}

// optional uint64 recordid = 12;
inline bool FeedbackData::has_recordid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void FeedbackData::set_has_recordid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void FeedbackData::clear_has_recordid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void FeedbackData::clear_recordid() {
  recordid_ = GOOGLE_ULONGLONG(0);
  clear_has_recordid();
}
inline ::google::protobuf::uint64 FeedbackData::recordid() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.recordid)
  return recordid_;
}
inline void FeedbackData::set_recordid(::google::protobuf::uint64 value) {
  set_has_recordid();
  recordid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.recordid)
}

// optional uint32 state = 13;
inline bool FeedbackData::has_state() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void FeedbackData::set_has_state() {
  _has_bits_[0] |= 0x00001000u;
}
inline void FeedbackData::clear_has_state() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void FeedbackData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 FeedbackData::state() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.state)
  return state_;
}
inline void FeedbackData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.state)
}

// optional string reply = 14;
inline bool FeedbackData::has_reply() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void FeedbackData::set_has_reply() {
  _has_bits_[0] |= 0x00002000u;
}
inline void FeedbackData::clear_has_reply() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void FeedbackData::clear_reply() {
  if (reply_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_->clear();
  }
  clear_has_reply();
}
inline const ::std::string& FeedbackData::reply() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.reply)
  return *reply_;
}
inline void FeedbackData::set_reply(const ::std::string& value) {
  set_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_ = new ::std::string;
  }
  reply_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.reply)
}
inline void FeedbackData::set_reply(const char* value) {
  set_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_ = new ::std::string;
  }
  reply_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.FeedbackData.reply)
}
inline void FeedbackData::set_reply(const char* value, size_t size) {
  set_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_ = new ::std::string;
  }
  reply_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.FeedbackData.reply)
}
inline ::std::string* FeedbackData::mutable_reply() {
  set_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.FeedbackData.reply)
  return reply_;
}
inline ::std::string* FeedbackData::release_reply() {
  clear_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reply_;
    reply_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FeedbackData::set_allocated_reply(::std::string* reply) {
  if (reply_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reply_;
  }
  if (reply) {
    set_has_reply();
    reply_ = reply;
  } else {
    clear_has_reply();
    reply_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.FeedbackData.reply)
}

// optional string phonenum = 15;
inline bool FeedbackData::has_phonenum() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void FeedbackData::set_has_phonenum() {
  _has_bits_[0] |= 0x00004000u;
}
inline void FeedbackData::clear_has_phonenum() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void FeedbackData::clear_phonenum() {
  if (phonenum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_->clear();
  }
  clear_has_phonenum();
}
inline const ::std::string& FeedbackData::phonenum() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackData.phonenum)
  return *phonenum_;
}
inline void FeedbackData::set_phonenum(const ::std::string& value) {
  set_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_ = new ::std::string;
  }
  phonenum_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.FeedbackData.phonenum)
}
inline void FeedbackData::set_phonenum(const char* value) {
  set_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_ = new ::std::string;
  }
  phonenum_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.FeedbackData.phonenum)
}
inline void FeedbackData::set_phonenum(const char* value, size_t size) {
  set_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_ = new ::std::string;
  }
  phonenum_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.FeedbackData.phonenum)
}
inline ::std::string* FeedbackData::mutable_phonenum() {
  set_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phonenum_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.FeedbackData.phonenum)
  return phonenum_;
}
inline ::std::string* FeedbackData::release_phonenum() {
  clear_has_phonenum();
  if (phonenum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phonenum_;
    phonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FeedbackData::set_allocated_phonenum(::std::string* phonenum) {
  if (phonenum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phonenum_;
  }
  if (phonenum) {
    set_has_phonenum();
    phonenum_ = phonenum;
  } else {
    clear_has_phonenum();
    phonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.FeedbackData.phonenum)
}

// -------------------------------------------------------------------

// FeedbackGmUserPmd_CS

// repeated .Pmd.FeedbackData data = 1;
inline int FeedbackGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void FeedbackGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::FeedbackData& FeedbackGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::FeedbackData* FeedbackGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.FeedbackGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::FeedbackData* FeedbackGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.FeedbackGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::FeedbackData >&
FeedbackGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.FeedbackGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::FeedbackData >*
FeedbackGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.FeedbackGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 feedbacktype = 2;
inline bool FeedbackGmUserPmd_CS::has_feedbacktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeedbackGmUserPmd_CS::set_has_feedbacktype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeedbackGmUserPmd_CS::clear_has_feedbacktype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeedbackGmUserPmd_CS::clear_feedbacktype() {
  feedbacktype_ = 0u;
  clear_has_feedbacktype();
}
inline ::google::protobuf::uint32 FeedbackGmUserPmd_CS::feedbacktype() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackGmUserPmd_CS.feedbacktype)
  return feedbacktype_;
}
inline void FeedbackGmUserPmd_CS::set_feedbacktype(::google::protobuf::uint32 value) {
  set_has_feedbacktype();
  feedbacktype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackGmUserPmd_CS.feedbacktype)
}

// optional uint32 curpage = 3;
inline bool FeedbackGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FeedbackGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FeedbackGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FeedbackGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 FeedbackGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackGmUserPmd_CS.curpage)
  return curpage_;
}
inline void FeedbackGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 4;
inline bool FeedbackGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FeedbackGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FeedbackGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FeedbackGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 FeedbackGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void FeedbackGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 5;
inline bool FeedbackGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FeedbackGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FeedbackGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FeedbackGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 FeedbackGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.FeedbackGmUserPmd_CS.perpage)
  return perpage_;
}
inline void FeedbackGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.FeedbackGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// RequestFeedbackListGmUserPmd_C

// required uint32 gameid = 1;
inline bool RequestFeedbackListGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestFeedbackListGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.gameid)
  return gameid_;
}
inline void RequestFeedbackListGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestFeedbackListGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestFeedbackListGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void RequestFeedbackListGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestFeedbackListGmUserPmd_C::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestFeedbackListGmUserPmd_C::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.charid)
  return charid_;
}
inline void RequestFeedbackListGmUserPmd_C::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.charid)
}

// optional string charname = 4;
inline bool RequestFeedbackListGmUserPmd_C::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RequestFeedbackListGmUserPmd_C::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.charname)
  return *charname_;
}
inline void RequestFeedbackListGmUserPmd_C::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.charname)
}
inline void RequestFeedbackListGmUserPmd_C::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestFeedbackListGmUserPmd_C.charname)
}
inline void RequestFeedbackListGmUserPmd_C::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestFeedbackListGmUserPmd_C.charname)
}
inline ::std::string* RequestFeedbackListGmUserPmd_C::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestFeedbackListGmUserPmd_C.charname)
  return charname_;
}
inline ::std::string* RequestFeedbackListGmUserPmd_C::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestFeedbackListGmUserPmd_C::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestFeedbackListGmUserPmd_C.charname)
}

// optional uint32 feedbacktype = 5;
inline bool RequestFeedbackListGmUserPmd_C::has_feedbacktype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_feedbacktype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_feedbacktype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_feedbacktype() {
  feedbacktype_ = 0u;
  clear_has_feedbacktype();
}
inline ::google::protobuf::uint32 RequestFeedbackListGmUserPmd_C::feedbacktype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.feedbacktype)
  return feedbacktype_;
}
inline void RequestFeedbackListGmUserPmd_C::set_feedbacktype(::google::protobuf::uint32 value) {
  set_has_feedbacktype();
  feedbacktype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.feedbacktype)
}

// optional uint32 state = 6;
inline bool RequestFeedbackListGmUserPmd_C::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 RequestFeedbackListGmUserPmd_C::state() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.state)
  return state_;
}
inline void RequestFeedbackListGmUserPmd_C::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.state)
}

// optional uint64 starttime = 7;
inline bool RequestFeedbackListGmUserPmd_C::has_starttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_starttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestFeedbackListGmUserPmd_C::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.starttime)
  return starttime_;
}
inline void RequestFeedbackListGmUserPmd_C::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.starttime)
}

// optional uint64 endtime = 8;
inline bool RequestFeedbackListGmUserPmd_C::has_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestFeedbackListGmUserPmd_C::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.endtime)
  return endtime_;
}
inline void RequestFeedbackListGmUserPmd_C::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.endtime)
}

// optional uint32 curpage = 9;
inline bool RequestFeedbackListGmUserPmd_C::has_curpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_curpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestFeedbackListGmUserPmd_C::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.curpage)
  return curpage_;
}
inline void RequestFeedbackListGmUserPmd_C::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.curpage)
}

// optional uint32 maxpage = 10;
inline bool RequestFeedbackListGmUserPmd_C::has_maxpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_maxpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestFeedbackListGmUserPmd_C::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.maxpage)
  return maxpage_;
}
inline void RequestFeedbackListGmUserPmd_C::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.maxpage)
}

// optional uint32 perpage = 11;
inline bool RequestFeedbackListGmUserPmd_C::has_perpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestFeedbackListGmUserPmd_C::set_has_perpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestFeedbackListGmUserPmd_C::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestFeedbackListGmUserPmd_C::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestFeedbackListGmUserPmd_C.perpage)
  return perpage_;
}
inline void RequestFeedbackListGmUserPmd_C::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestFeedbackListGmUserPmd_C.perpage)
}

// -------------------------------------------------------------------

// RequestDealFeedbackGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestDealFeedbackGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestDealFeedbackGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestDealFeedbackGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestDealFeedbackGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.zoneid)
}

// required uint32 recordid = 3;
inline bool RequestDealFeedbackGmUserPmd_CS::has_recordid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_recordid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_recordid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_recordid() {
  recordid_ = 0u;
  clear_has_recordid();
}
inline ::google::protobuf::uint32 RequestDealFeedbackGmUserPmd_CS::recordid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.recordid)
  return recordid_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_recordid(::google::protobuf::uint32 value) {
  set_has_recordid();
  recordid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.recordid)
}

// optional uint64 charid = 4;
inline bool RequestDealFeedbackGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestDealFeedbackGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.charid)
}

// optional uint32 state = 5;
inline bool RequestDealFeedbackGmUserPmd_CS::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 RequestDealFeedbackGmUserPmd_CS::state() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.state)
  return state_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.state)
}

// optional string subject = 6;
inline bool RequestDealFeedbackGmUserPmd_CS::has_subject() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_subject() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_subject() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_subject() {
  if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_->clear();
  }
  clear_has_subject();
}
inline const ::std::string& RequestDealFeedbackGmUserPmd_CS::subject() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.subject)
  return *subject_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_subject(const ::std::string& value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.subject)
}
inline void RequestDealFeedbackGmUserPmd_CS::set_subject(const char* value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestDealFeedbackGmUserPmd_CS.subject)
}
inline void RequestDealFeedbackGmUserPmd_CS::set_subject(const char* value, size_t size) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestDealFeedbackGmUserPmd_CS.subject)
}
inline ::std::string* RequestDealFeedbackGmUserPmd_CS::mutable_subject() {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestDealFeedbackGmUserPmd_CS.subject)
  return subject_;
}
inline ::std::string* RequestDealFeedbackGmUserPmd_CS::release_subject() {
  clear_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = subject_;
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestDealFeedbackGmUserPmd_CS::set_allocated_subject(::std::string* subject) {
  if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subject_;
  }
  if (subject) {
    set_has_subject();
    subject_ = subject;
  } else {
    clear_has_subject();
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestDealFeedbackGmUserPmd_CS.subject)
}

// optional string reply = 7;
inline bool RequestDealFeedbackGmUserPmd_CS::has_reply() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_reply() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_reply() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_reply() {
  if (reply_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_->clear();
  }
  clear_has_reply();
}
inline const ::std::string& RequestDealFeedbackGmUserPmd_CS::reply() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.reply)
  return *reply_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_reply(const ::std::string& value) {
  set_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_ = new ::std::string;
  }
  reply_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.reply)
}
inline void RequestDealFeedbackGmUserPmd_CS::set_reply(const char* value) {
  set_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_ = new ::std::string;
  }
  reply_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestDealFeedbackGmUserPmd_CS.reply)
}
inline void RequestDealFeedbackGmUserPmd_CS::set_reply(const char* value, size_t size) {
  set_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_ = new ::std::string;
  }
  reply_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestDealFeedbackGmUserPmd_CS.reply)
}
inline ::std::string* RequestDealFeedbackGmUserPmd_CS::mutable_reply() {
  set_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reply_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestDealFeedbackGmUserPmd_CS.reply)
  return reply_;
}
inline ::std::string* RequestDealFeedbackGmUserPmd_CS::release_reply() {
  clear_has_reply();
  if (reply_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reply_;
    reply_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestDealFeedbackGmUserPmd_CS::set_allocated_reply(::std::string* reply) {
  if (reply_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reply_;
  }
  if (reply) {
    set_has_reply();
    reply_ = reply;
  } else {
    clear_has_reply();
    reply_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestDealFeedbackGmUserPmd_CS.reply)
}

// optional uint32 feedbacktype = 8;
inline bool RequestDealFeedbackGmUserPmd_CS::has_feedbacktype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_feedbacktype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_feedbacktype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_feedbacktype() {
  feedbacktype_ = 0u;
  clear_has_feedbacktype();
}
inline ::google::protobuf::uint32 RequestDealFeedbackGmUserPmd_CS::feedbacktype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.feedbacktype)
  return feedbacktype_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_feedbacktype(::google::protobuf::uint32 value) {
  set_has_feedbacktype();
  feedbacktype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.feedbacktype)
}

// optional uint32 retcode = 9;
inline bool RequestDealFeedbackGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 RequestDealFeedbackGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.retcode)
  return retcode_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.retcode)
}

// optional string retdesc = 10;
inline bool RequestDealFeedbackGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& RequestDealFeedbackGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.retdesc)
}
inline void RequestDealFeedbackGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestDealFeedbackGmUserPmd_CS.retdesc)
}
inline void RequestDealFeedbackGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestDealFeedbackGmUserPmd_CS.retdesc)
}
inline ::std::string* RequestDealFeedbackGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestDealFeedbackGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* RequestDealFeedbackGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestDealFeedbackGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestDealFeedbackGmUserPmd_CS.retdesc)
}

// optional uint32 gmid = 11;
inline bool RequestDealFeedbackGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestDealFeedbackGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestDealFeedbackGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDealFeedbackGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestDealFeedbackGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDealFeedbackGmUserPmd_CS.gmid)
}

// -------------------------------------------------------------------

// PointReportData

// required uint32 recorddate = 1;
inline bool PointReportData::has_recorddate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointReportData::set_has_recorddate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointReportData::clear_has_recorddate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointReportData::clear_recorddate() {
  recorddate_ = 0u;
  clear_has_recorddate();
}
inline ::google::protobuf::uint32 PointReportData::recorddate() const {
  // @@protoc_insertion_point(field_get:Pmd.PointReportData.recorddate)
  return recorddate_;
}
inline void PointReportData::set_recorddate(::google::protobuf::uint32 value) {
  set_has_recorddate();
  recorddate_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointReportData.recorddate)
}

// required uint64 redeemin = 2;
inline bool PointReportData::has_redeemin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointReportData::set_has_redeemin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointReportData::clear_has_redeemin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointReportData::clear_redeemin() {
  redeemin_ = GOOGLE_ULONGLONG(0);
  clear_has_redeemin();
}
inline ::google::protobuf::uint64 PointReportData::redeemin() const {
  // @@protoc_insertion_point(field_get:Pmd.PointReportData.redeemin)
  return redeemin_;
}
inline void PointReportData::set_redeemin(::google::protobuf::uint64 value) {
  set_has_redeemin();
  redeemin_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointReportData.redeemin)
}

// required uint64 redeemout = 3;
inline bool PointReportData::has_redeemout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointReportData::set_has_redeemout() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointReportData::clear_has_redeemout() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointReportData::clear_redeemout() {
  redeemout_ = GOOGLE_ULONGLONG(0);
  clear_has_redeemout();
}
inline ::google::protobuf::uint64 PointReportData::redeemout() const {
  // @@protoc_insertion_point(field_get:Pmd.PointReportData.redeemout)
  return redeemout_;
}
inline void PointReportData::set_redeemout(::google::protobuf::uint64 value) {
  set_has_redeemout();
  redeemout_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointReportData.redeemout)
}

// optional int64 redeemtotal = 4;
inline bool PointReportData::has_redeemtotal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PointReportData::set_has_redeemtotal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PointReportData::clear_has_redeemtotal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PointReportData::clear_redeemtotal() {
  redeemtotal_ = GOOGLE_LONGLONG(0);
  clear_has_redeemtotal();
}
inline ::google::protobuf::int64 PointReportData::redeemtotal() const {
  // @@protoc_insertion_point(field_get:Pmd.PointReportData.redeemtotal)
  return redeemtotal_;
}
inline void PointReportData::set_redeemtotal(::google::protobuf::int64 value) {
  set_has_redeemtotal();
  redeemtotal_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointReportData.redeemtotal)
}

// -------------------------------------------------------------------

// RequestPointReportGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestPointReportGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestPointReportGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestPointReportGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestPointReportGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestPointReportGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestPointReportGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointReportGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestPointReportGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestPointReportGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestPointReportGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestPointReportGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestPointReportGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestPointReportGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointReportGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestPointReportGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestPointReportGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestPointReportGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestPointReportGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestPointReportGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestPointReportGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointReportGmUserPmd_CS.charid)
}

// optional uint32 starttime = 4;
inline bool RequestPointReportGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestPointReportGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestPointReportGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestPointReportGmUserPmd_CS::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 RequestPointReportGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestPointReportGmUserPmd_CS::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointReportGmUserPmd_CS.starttime)
}

// optional uint32 endtime = 5;
inline bool RequestPointReportGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestPointReportGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestPointReportGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestPointReportGmUserPmd_CS::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 RequestPointReportGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestPointReportGmUserPmd_CS::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointReportGmUserPmd_CS.endtime)
}

// optional uint32 gmid = 6;
inline bool RequestPointReportGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestPointReportGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestPointReportGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestPointReportGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestPointReportGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestPointReportGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointReportGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 7;
inline bool RequestPointReportGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestPointReportGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestPointReportGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestPointReportGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestPointReportGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestPointReportGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointReportGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 8;
inline bool RequestPointReportGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestPointReportGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestPointReportGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestPointReportGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestPointReportGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestPointReportGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointReportGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 9;
inline bool RequestPointReportGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestPointReportGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestPointReportGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestPointReportGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestPointReportGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestPointReportGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointReportGmUserPmd_CS.perpage)
}

// repeated .Pmd.PointReportData data = 10;
inline int RequestPointReportGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestPointReportGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::PointReportData& RequestPointReportGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointReportGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::PointReportData* RequestPointReportGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestPointReportGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::PointReportData* RequestPointReportGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestPointReportGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PointReportData >&
RequestPointReportGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestPointReportGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::PointReportData >*
RequestPointReportGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestPointReportGmUserPmd_CS.data)
  return &data_;
}

// -------------------------------------------------------------------

// PointDetailData

// optional uint64 id = 1;
inline bool PointDetailData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PointDetailData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PointDetailData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PointDetailData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 PointDetailData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.PointDetailData.id)
  return id_;
}
inline void PointDetailData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointDetailData.id)
}

// required uint64 recordtime = 2;
inline bool PointDetailData::has_recordtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PointDetailData::set_has_recordtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PointDetailData::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PointDetailData::clear_recordtime() {
  recordtime_ = GOOGLE_ULONGLONG(0);
  clear_has_recordtime();
}
inline ::google::protobuf::uint64 PointDetailData::recordtime() const {
  // @@protoc_insertion_point(field_get:Pmd.PointDetailData.recordtime)
  return recordtime_;
}
inline void PointDetailData::set_recordtime(::google::protobuf::uint64 value) {
  set_has_recordtime();
  recordtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointDetailData.recordtime)
}

// required uint64 charid = 3;
inline bool PointDetailData::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PointDetailData::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PointDetailData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PointDetailData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 PointDetailData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.PointDetailData.charid)
  return charid_;
}
inline void PointDetailData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointDetailData.charid)
}

// optional string charname = 4;
inline bool PointDetailData::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PointDetailData::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PointDetailData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PointDetailData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& PointDetailData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.PointDetailData.charname)
  return *charname_;
}
inline void PointDetailData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PointDetailData.charname)
}
inline void PointDetailData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PointDetailData.charname)
}
inline void PointDetailData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PointDetailData.charname)
}
inline ::std::string* PointDetailData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PointDetailData.charname)
  return charname_;
}
inline ::std::string* PointDetailData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PointDetailData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PointDetailData.charname)
}

// required uint32 ptype = 5;
inline bool PointDetailData::has_ptype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PointDetailData::set_has_ptype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PointDetailData::clear_has_ptype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PointDetailData::clear_ptype() {
  ptype_ = 0u;
  clear_has_ptype();
}
inline ::google::protobuf::uint32 PointDetailData::ptype() const {
  // @@protoc_insertion_point(field_get:Pmd.PointDetailData.ptype)
  return ptype_;
}
inline void PointDetailData::set_ptype(::google::protobuf::uint32 value) {
  set_has_ptype();
  ptype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointDetailData.ptype)
}

// required uint64 redeemnum = 6;
inline bool PointDetailData::has_redeemnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PointDetailData::set_has_redeemnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PointDetailData::clear_has_redeemnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PointDetailData::clear_redeemnum() {
  redeemnum_ = GOOGLE_ULONGLONG(0);
  clear_has_redeemnum();
}
inline ::google::protobuf::uint64 PointDetailData::redeemnum() const {
  // @@protoc_insertion_point(field_get:Pmd.PointDetailData.redeemnum)
  return redeemnum_;
}
inline void PointDetailData::set_redeemnum(::google::protobuf::uint64 value) {
  set_has_redeemnum();
  redeemnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointDetailData.redeemnum)
}

// optional uint64 originnum = 7;
inline bool PointDetailData::has_originnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PointDetailData::set_has_originnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PointDetailData::clear_has_originnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PointDetailData::clear_originnum() {
  originnum_ = GOOGLE_ULONGLONG(0);
  clear_has_originnum();
}
inline ::google::protobuf::uint64 PointDetailData::originnum() const {
  // @@protoc_insertion_point(field_get:Pmd.PointDetailData.originnum)
  return originnum_;
}
inline void PointDetailData::set_originnum(::google::protobuf::uint64 value) {
  set_has_originnum();
  originnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointDetailData.originnum)
}

// optional uint64 currentnum = 8;
inline bool PointDetailData::has_currentnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PointDetailData::set_has_currentnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PointDetailData::clear_has_currentnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PointDetailData::clear_currentnum() {
  currentnum_ = GOOGLE_ULONGLONG(0);
  clear_has_currentnum();
}
inline ::google::protobuf::uint64 PointDetailData::currentnum() const {
  // @@protoc_insertion_point(field_get:Pmd.PointDetailData.currentnum)
  return currentnum_;
}
inline void PointDetailData::set_currentnum(::google::protobuf::uint64 value) {
  set_has_currentnum();
  currentnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PointDetailData.currentnum)
}

// -------------------------------------------------------------------

// RequestPointDetailGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestPointDetailGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestPointDetailGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestPointDetailGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestPointDetailGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestPointDetailGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestPointDetailGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestPointDetailGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestPointDetailGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestPointDetailGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.charid)
}

// optional uint32 ptype = 4;
inline bool RequestPointDetailGmUserPmd_CS::has_ptype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_ptype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_ptype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_ptype() {
  ptype_ = 0u;
  clear_has_ptype();
}
inline ::google::protobuf::uint32 RequestPointDetailGmUserPmd_CS::ptype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.ptype)
  return ptype_;
}
inline void RequestPointDetailGmUserPmd_CS::set_ptype(::google::protobuf::uint32 value) {
  set_has_ptype();
  ptype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.ptype)
}

// optional uint64 starttime = 5;
inline bool RequestPointDetailGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestPointDetailGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestPointDetailGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 6;
inline bool RequestPointDetailGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestPointDetailGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestPointDetailGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.endtime)
}

// optional uint32 gmid = 7;
inline bool RequestPointDetailGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestPointDetailGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestPointDetailGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 8;
inline bool RequestPointDetailGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestPointDetailGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestPointDetailGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 9;
inline bool RequestPointDetailGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestPointDetailGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestPointDetailGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 10;
inline bool RequestPointDetailGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestPointDetailGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestPointDetailGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestPointDetailGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestPointDetailGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPointDetailGmUserPmd_CS.perpage)
}

// repeated .Pmd.PointDetailData data = 11;
inline int RequestPointDetailGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestPointDetailGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::PointDetailData& RequestPointDetailGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPointDetailGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::PointDetailData* RequestPointDetailGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestPointDetailGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::PointDetailData* RequestPointDetailGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestPointDetailGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PointDetailData >&
RequestPointDetailGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestPointDetailGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::PointDetailData >*
RequestPointDetailGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestPointDetailGmUserPmd_CS.data)
  return &data_;
}

// -------------------------------------------------------------------

// BettingDetailData

// optional uint64 id = 1;
inline bool BettingDetailData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BettingDetailData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BettingDetailData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BettingDetailData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BettingDetailData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.id)
  return id_;
}
inline void BettingDetailData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.id)
}

// optional uint64 roundid = 2;
inline bool BettingDetailData::has_roundid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BettingDetailData::set_has_roundid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BettingDetailData::clear_has_roundid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BettingDetailData::clear_roundid() {
  roundid_ = GOOGLE_ULONGLONG(0);
  clear_has_roundid();
}
inline ::google::protobuf::uint64 BettingDetailData::roundid() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.roundid)
  return roundid_;
}
inline void BettingDetailData::set_roundid(::google::protobuf::uint64 value) {
  set_has_roundid();
  roundid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.roundid)
}

// required uint64 recordtime = 3;
inline bool BettingDetailData::has_recordtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BettingDetailData::set_has_recordtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BettingDetailData::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BettingDetailData::clear_recordtime() {
  recordtime_ = GOOGLE_ULONGLONG(0);
  clear_has_recordtime();
}
inline ::google::protobuf::uint64 BettingDetailData::recordtime() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.recordtime)
  return recordtime_;
}
inline void BettingDetailData::set_recordtime(::google::protobuf::uint64 value) {
  set_has_recordtime();
  recordtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.recordtime)
}

// required uint64 charid = 4;
inline bool BettingDetailData::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BettingDetailData::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BettingDetailData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BettingDetailData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 BettingDetailData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.charid)
  return charid_;
}
inline void BettingDetailData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.charid)
}

// optional string charname = 5;
inline bool BettingDetailData::has_charname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BettingDetailData::set_has_charname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BettingDetailData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BettingDetailData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& BettingDetailData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.charname)
  return *charname_;
}
inline void BettingDetailData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.charname)
}
inline void BettingDetailData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BettingDetailData.charname)
}
inline void BettingDetailData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BettingDetailData.charname)
}
inline ::std::string* BettingDetailData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BettingDetailData.charname)
  return charname_;
}
inline ::std::string* BettingDetailData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BettingDetailData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BettingDetailData.charname)
}

// required int64 winlosenum = 6;
inline bool BettingDetailData::has_winlosenum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BettingDetailData::set_has_winlosenum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BettingDetailData::clear_has_winlosenum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BettingDetailData::clear_winlosenum() {
  winlosenum_ = GOOGLE_LONGLONG(0);
  clear_has_winlosenum();
}
inline ::google::protobuf::int64 BettingDetailData::winlosenum() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.winlosenum)
  return winlosenum_;
}
inline void BettingDetailData::set_winlosenum(::google::protobuf::int64 value) {
  set_has_winlosenum();
  winlosenum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.winlosenum)
}

// optional uint64 totalnum = 7;
inline bool BettingDetailData::has_totalnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BettingDetailData::set_has_totalnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BettingDetailData::clear_has_totalnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BettingDetailData::clear_totalnum() {
  totalnum_ = GOOGLE_ULONGLONG(0);
  clear_has_totalnum();
}
inline ::google::protobuf::uint64 BettingDetailData::totalnum() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.totalnum)
  return totalnum_;
}
inline void BettingDetailData::set_totalnum(::google::protobuf::uint64 value) {
  set_has_totalnum();
  totalnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.totalnum)
}

// optional uint64 dealerid = 8;
inline bool BettingDetailData::has_dealerid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BettingDetailData::set_has_dealerid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BettingDetailData::clear_has_dealerid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BettingDetailData::clear_dealerid() {
  dealerid_ = GOOGLE_ULONGLONG(0);
  clear_has_dealerid();
}
inline ::google::protobuf::uint64 BettingDetailData::dealerid() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.dealerid)
  return dealerid_;
}
inline void BettingDetailData::set_dealerid(::google::protobuf::uint64 value) {
  set_has_dealerid();
  dealerid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.dealerid)
}

// optional uint64 dealernum = 9;
inline bool BettingDetailData::has_dealernum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BettingDetailData::set_has_dealernum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BettingDetailData::clear_has_dealernum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BettingDetailData::clear_dealernum() {
  dealernum_ = GOOGLE_ULONGLONG(0);
  clear_has_dealernum();
}
inline ::google::protobuf::uint64 BettingDetailData::dealernum() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.dealernum)
  return dealernum_;
}
inline void BettingDetailData::set_dealernum(::google::protobuf::uint64 value) {
  set_has_dealernum();
  dealernum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.dealernum)
}

// optional string betdetail = 10;
inline bool BettingDetailData::has_betdetail() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BettingDetailData::set_has_betdetail() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BettingDetailData::clear_has_betdetail() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BettingDetailData::clear_betdetail() {
  if (betdetail_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    betdetail_->clear();
  }
  clear_has_betdetail();
}
inline const ::std::string& BettingDetailData::betdetail() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.betdetail)
  return *betdetail_;
}
inline void BettingDetailData::set_betdetail(const ::std::string& value) {
  set_has_betdetail();
  if (betdetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    betdetail_ = new ::std::string;
  }
  betdetail_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.betdetail)
}
inline void BettingDetailData::set_betdetail(const char* value) {
  set_has_betdetail();
  if (betdetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    betdetail_ = new ::std::string;
  }
  betdetail_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BettingDetailData.betdetail)
}
inline void BettingDetailData::set_betdetail(const char* value, size_t size) {
  set_has_betdetail();
  if (betdetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    betdetail_ = new ::std::string;
  }
  betdetail_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BettingDetailData.betdetail)
}
inline ::std::string* BettingDetailData::mutable_betdetail() {
  set_has_betdetail();
  if (betdetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    betdetail_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BettingDetailData.betdetail)
  return betdetail_;
}
inline ::std::string* BettingDetailData::release_betdetail() {
  clear_has_betdetail();
  if (betdetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = betdetail_;
    betdetail_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BettingDetailData::set_allocated_betdetail(::std::string* betdetail) {
  if (betdetail_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete betdetail_;
  }
  if (betdetail) {
    set_has_betdetail();
    betdetail_ = betdetail;
  } else {
    clear_has_betdetail();
    betdetail_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BettingDetailData.betdetail)
}

// optional string lotterydetail = 11;
inline bool BettingDetailData::has_lotterydetail() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BettingDetailData::set_has_lotterydetail() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BettingDetailData::clear_has_lotterydetail() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BettingDetailData::clear_lotterydetail() {
  if (lotterydetail_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lotterydetail_->clear();
  }
  clear_has_lotterydetail();
}
inline const ::std::string& BettingDetailData::lotterydetail() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.lotterydetail)
  return *lotterydetail_;
}
inline void BettingDetailData::set_lotterydetail(const ::std::string& value) {
  set_has_lotterydetail();
  if (lotterydetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lotterydetail_ = new ::std::string;
  }
  lotterydetail_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.lotterydetail)
}
inline void BettingDetailData::set_lotterydetail(const char* value) {
  set_has_lotterydetail();
  if (lotterydetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lotterydetail_ = new ::std::string;
  }
  lotterydetail_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BettingDetailData.lotterydetail)
}
inline void BettingDetailData::set_lotterydetail(const char* value, size_t size) {
  set_has_lotterydetail();
  if (lotterydetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lotterydetail_ = new ::std::string;
  }
  lotterydetail_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BettingDetailData.lotterydetail)
}
inline ::std::string* BettingDetailData::mutable_lotterydetail() {
  set_has_lotterydetail();
  if (lotterydetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lotterydetail_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BettingDetailData.lotterydetail)
  return lotterydetail_;
}
inline ::std::string* BettingDetailData::release_lotterydetail() {
  clear_has_lotterydetail();
  if (lotterydetail_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lotterydetail_;
    lotterydetail_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BettingDetailData::set_allocated_lotterydetail(::std::string* lotterydetail) {
  if (lotterydetail_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lotterydetail_;
  }
  if (lotterydetail) {
    set_has_lotterydetail();
    lotterydetail_ = lotterydetail;
  } else {
    clear_has_lotterydetail();
    lotterydetail_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BettingDetailData.lotterydetail)
}

// optional uint32 opensource = 12;
inline bool BettingDetailData::has_opensource() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BettingDetailData::set_has_opensource() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BettingDetailData::clear_has_opensource() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BettingDetailData::clear_opensource() {
  opensource_ = 0u;
  clear_has_opensource();
}
inline ::google::protobuf::uint32 BettingDetailData::opensource() const {
  // @@protoc_insertion_point(field_get:Pmd.BettingDetailData.opensource)
  return opensource_;
}
inline void BettingDetailData::set_opensource(::google::protobuf::uint32 value) {
  set_has_opensource();
  opensource_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BettingDetailData.opensource)
}

// -------------------------------------------------------------------

// RequestBettingDetailGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestBettingDetailGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestBettingDetailGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestBettingDetailGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestBettingDetailGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestBettingDetailGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestBettingDetailGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.charid)
}

// optional uint64 dealerid = 4;
inline bool RequestBettingDetailGmUserPmd_CS::has_dealerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_dealerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_dealerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_dealerid() {
  dealerid_ = GOOGLE_ULONGLONG(0);
  clear_has_dealerid();
}
inline ::google::protobuf::uint64 RequestBettingDetailGmUserPmd_CS::dealerid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.dealerid)
  return dealerid_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_dealerid(::google::protobuf::uint64 value) {
  set_has_dealerid();
  dealerid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.dealerid)
}

// optional uint64 roundid = 5;
inline bool RequestBettingDetailGmUserPmd_CS::has_roundid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_roundid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_roundid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_roundid() {
  roundid_ = GOOGLE_ULONGLONG(0);
  clear_has_roundid();
}
inline ::google::protobuf::uint64 RequestBettingDetailGmUserPmd_CS::roundid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.roundid)
  return roundid_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_roundid(::google::protobuf::uint64 value) {
  set_has_roundid();
  roundid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.roundid)
}

// optional uint64 starttime = 6;
inline bool RequestBettingDetailGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestBettingDetailGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 7;
inline bool RequestBettingDetailGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestBettingDetailGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.endtime)
}

// optional uint32 gmid = 8;
inline bool RequestBettingDetailGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestBettingDetailGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.gmid)
}

// optional uint32 subgameid = 9;
inline bool RequestBettingDetailGmUserPmd_CS::has_subgameid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_subgameid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_subgameid() {
  subgameid_ = 0u;
  clear_has_subgameid();
}
inline ::google::protobuf::uint32 RequestBettingDetailGmUserPmd_CS::subgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.subgameid)
  return subgameid_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_subgameid(::google::protobuf::uint32 value) {
  set_has_subgameid();
  subgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.subgameid)
}

// optional uint32 curpage = 10;
inline bool RequestBettingDetailGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestBettingDetailGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 11;
inline bool RequestBettingDetailGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestBettingDetailGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 12;
inline bool RequestBettingDetailGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestBettingDetailGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.perpage)
}

// repeated .Pmd.BettingDetailData data = 13;
inline int RequestBettingDetailGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestBettingDetailGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::BettingDetailData& RequestBettingDetailGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::BettingDetailData* RequestBettingDetailGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestBettingDetailGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::BettingDetailData* RequestBettingDetailGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestBettingDetailGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BettingDetailData >&
RequestBettingDetailGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestBettingDetailGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::BettingDetailData >*
RequestBettingDetailGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestBettingDetailGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 opensource = 14;
inline bool RequestBettingDetailGmUserPmd_CS::has_opensource() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RequestBettingDetailGmUserPmd_CS::set_has_opensource() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_has_opensource() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RequestBettingDetailGmUserPmd_CS::clear_opensource() {
  opensource_ = 0u;
  clear_has_opensource();
}
inline ::google::protobuf::uint32 RequestBettingDetailGmUserPmd_CS::opensource() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBettingDetailGmUserPmd_CS.opensource)
  return opensource_;
}
inline void RequestBettingDetailGmUserPmd_CS::set_opensource(::google::protobuf::uint32 value) {
  set_has_opensource();
  opensource_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBettingDetailGmUserPmd_CS.opensource)
}

// -------------------------------------------------------------------

// StockData

// optional uint64 id = 1;
inline bool StockData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StockData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StockData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StockData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 StockData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.StockData.id)
  return id_;
}
inline void StockData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StockData.id)
}

// optional uint64 stock = 2;
inline bool StockData::has_stock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StockData::set_has_stock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StockData::clear_has_stock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StockData::clear_stock() {
  stock_ = GOOGLE_ULONGLONG(0);
  clear_has_stock();
}
inline ::google::protobuf::uint64 StockData::stock() const {
  // @@protoc_insertion_point(field_get:Pmd.StockData.stock)
  return stock_;
}
inline void StockData::set_stock(::google::protobuf::uint64 value) {
  set_has_stock();
  stock_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StockData.stock)
}

// optional uint64 threshold = 3;
inline bool StockData::has_threshold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StockData::set_has_threshold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StockData::clear_has_threshold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StockData::clear_threshold() {
  threshold_ = GOOGLE_ULONGLONG(0);
  clear_has_threshold();
}
inline ::google::protobuf::uint64 StockData::threshold() const {
  // @@protoc_insertion_point(field_get:Pmd.StockData.threshold)
  return threshold_;
}
inline void StockData::set_threshold(::google::protobuf::uint64 value) {
  set_has_threshold();
  threshold_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StockData.threshold)
}

// optional uint64 lottery = 4;
inline bool StockData::has_lottery() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StockData::set_has_lottery() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StockData::clear_has_lottery() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StockData::clear_lottery() {
  lottery_ = GOOGLE_ULONGLONG(0);
  clear_has_lottery();
}
inline ::google::protobuf::uint64 StockData::lottery() const {
  // @@protoc_insertion_point(field_get:Pmd.StockData.lottery)
  return lottery_;
}
inline void StockData::set_lottery(::google::protobuf::uint64 value) {
  set_has_lottery();
  lottery_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StockData.lottery)
}

// optional uint64 profit = 5;
inline bool StockData::has_profit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StockData::set_has_profit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StockData::clear_has_profit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StockData::clear_profit() {
  profit_ = GOOGLE_ULONGLONG(0);
  clear_has_profit();
}
inline ::google::protobuf::uint64 StockData::profit() const {
  // @@protoc_insertion_point(field_get:Pmd.StockData.profit)
  return profit_;
}
inline void StockData::set_profit(::google::protobuf::uint64 value) {
  set_has_profit();
  profit_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StockData.profit)
}

// optional uint32 subgameid = 6;
inline bool StockData::has_subgameid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StockData::set_has_subgameid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StockData::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StockData::clear_subgameid() {
  subgameid_ = 0u;
  clear_has_subgameid();
}
inline ::google::protobuf::uint32 StockData::subgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.StockData.subgameid)
  return subgameid_;
}
inline void StockData::set_subgameid(::google::protobuf::uint32 value) {
  set_has_subgameid();
  subgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StockData.subgameid)
}

// -------------------------------------------------------------------

// RequestStockInfoGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestStockInfoGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestStockInfoGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestStockInfoGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestStockInfoGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestStockInfoGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStockInfoGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestStockInfoGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStockInfoGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestStockInfoGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestStockInfoGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestStockInfoGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestStockInfoGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestStockInfoGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStockInfoGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestStockInfoGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStockInfoGmUserPmd_CS.zoneid)
}

// optional uint32 gmid = 3;
inline bool RequestStockInfoGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestStockInfoGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestStockInfoGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestStockInfoGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestStockInfoGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStockInfoGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestStockInfoGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStockInfoGmUserPmd_CS.gmid)
}

// repeated .Pmd.StockData data = 4;
inline int RequestStockInfoGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestStockInfoGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::StockData& RequestStockInfoGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStockInfoGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::StockData* RequestStockInfoGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestStockInfoGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::StockData* RequestStockInfoGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestStockInfoGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::StockData >&
RequestStockInfoGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestStockInfoGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::StockData >*
RequestStockInfoGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestStockInfoGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 subgameid = 5;
inline bool RequestStockInfoGmUserPmd_CS::has_subgameid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestStockInfoGmUserPmd_CS::set_has_subgameid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestStockInfoGmUserPmd_CS::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestStockInfoGmUserPmd_CS::clear_subgameid() {
  subgameid_ = 0u;
  clear_has_subgameid();
}
inline ::google::protobuf::uint32 RequestStockInfoGmUserPmd_CS::subgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStockInfoGmUserPmd_CS.subgameid)
  return subgameid_;
}
inline void RequestStockInfoGmUserPmd_CS::set_subgameid(::google::protobuf::uint32 value) {
  set_has_subgameid();
  subgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStockInfoGmUserPmd_CS.subgameid)
}

// -------------------------------------------------------------------

// RequestOnlineUserInfoGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestOnlineUserInfoGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestOnlineUserInfoGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOnlineUserInfoGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestOnlineUserInfoGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestOnlineUserInfoGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOnlineUserInfoGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestOnlineUserInfoGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestOnlineUserInfoGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOnlineUserInfoGmUserPmd_CS.charid)
}

// optional string charname = 4;
inline bool RequestOnlineUserInfoGmUserPmd_CS::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RequestOnlineUserInfoGmUserPmd_CS::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.charname)
  return *charname_;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestOnlineUserInfoGmUserPmd_CS.charname)
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestOnlineUserInfoGmUserPmd_CS.charname)
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestOnlineUserInfoGmUserPmd_CS.charname)
}
inline ::std::string* RequestOnlineUserInfoGmUserPmd_CS::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestOnlineUserInfoGmUserPmd_CS.charname)
  return charname_;
}
inline ::std::string* RequestOnlineUserInfoGmUserPmd_CS::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestOnlineUserInfoGmUserPmd_CS.charname)
}

// required uint32 isonline = 5;
inline bool RequestOnlineUserInfoGmUserPmd_CS::has_isonline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_has_isonline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_isonline() {
  isonline_ = 0u;
  clear_has_isonline();
}
inline ::google::protobuf::uint32 RequestOnlineUserInfoGmUserPmd_CS::isonline() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.isonline)
  return isonline_;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_isonline(::google::protobuf::uint32 value) {
  set_has_isonline();
  isonline_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOnlineUserInfoGmUserPmd_CS.isonline)
}

// optional uint32 gmid = 6;
inline bool RequestOnlineUserInfoGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestOnlineUserInfoGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOnlineUserInfoGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 7;
inline bool RequestOnlineUserInfoGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestOnlineUserInfoGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOnlineUserInfoGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 8;
inline bool RequestOnlineUserInfoGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestOnlineUserInfoGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOnlineUserInfoGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 9;
inline bool RequestOnlineUserInfoGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestOnlineUserInfoGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestOnlineUserInfoGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestOnlineUserInfoGmUserPmd_CS.perpage)
}

// repeated .Pmd.UserInfo data = 10;
inline int RequestOnlineUserInfoGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestOnlineUserInfoGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::UserInfo& RequestOnlineUserInfoGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestOnlineUserInfoGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::UserInfo* RequestOnlineUserInfoGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestOnlineUserInfoGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::UserInfo* RequestOnlineUserInfoGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestOnlineUserInfoGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::UserInfo >&
RequestOnlineUserInfoGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestOnlineUserInfoGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::UserInfo >*
RequestOnlineUserInfoGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestOnlineUserInfoGmUserPmd_CS.data)
  return &data_;
}

// -------------------------------------------------------------------

// RedPacketsInfo

// required string id = 1;
inline bool RedPacketsInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RedPacketsInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RedPacketsInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RedPacketsInfo::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& RedPacketsInfo::id() const {
  // @@protoc_insertion_point(field_get:Pmd.RedPacketsInfo.id)
  return *id_;
}
inline void RedPacketsInfo::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RedPacketsInfo.id)
}
inline void RedPacketsInfo::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RedPacketsInfo.id)
}
inline void RedPacketsInfo::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RedPacketsInfo.id)
}
inline ::std::string* RedPacketsInfo::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RedPacketsInfo.id)
  return id_;
}
inline ::std::string* RedPacketsInfo::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RedPacketsInfo::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RedPacketsInfo.id)
}

// required uint64 srcuid = 2;
inline bool RedPacketsInfo::has_srcuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RedPacketsInfo::set_has_srcuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RedPacketsInfo::clear_has_srcuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RedPacketsInfo::clear_srcuid() {
  srcuid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcuid();
}
inline ::google::protobuf::uint64 RedPacketsInfo::srcuid() const {
  // @@protoc_insertion_point(field_get:Pmd.RedPacketsInfo.srcuid)
  return srcuid_;
}
inline void RedPacketsInfo::set_srcuid(::google::protobuf::uint64 value) {
  set_has_srcuid();
  srcuid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RedPacketsInfo.srcuid)
}

// required string srcnickname = 3;
inline bool RedPacketsInfo::has_srcnickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RedPacketsInfo::set_has_srcnickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RedPacketsInfo::clear_has_srcnickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RedPacketsInfo::clear_srcnickname() {
  if (srcnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcnickname_->clear();
  }
  clear_has_srcnickname();
}
inline const ::std::string& RedPacketsInfo::srcnickname() const {
  // @@protoc_insertion_point(field_get:Pmd.RedPacketsInfo.srcnickname)
  return *srcnickname_;
}
inline void RedPacketsInfo::set_srcnickname(const ::std::string& value) {
  set_has_srcnickname();
  if (srcnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcnickname_ = new ::std::string;
  }
  srcnickname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RedPacketsInfo.srcnickname)
}
inline void RedPacketsInfo::set_srcnickname(const char* value) {
  set_has_srcnickname();
  if (srcnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcnickname_ = new ::std::string;
  }
  srcnickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RedPacketsInfo.srcnickname)
}
inline void RedPacketsInfo::set_srcnickname(const char* value, size_t size) {
  set_has_srcnickname();
  if (srcnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcnickname_ = new ::std::string;
  }
  srcnickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RedPacketsInfo.srcnickname)
}
inline ::std::string* RedPacketsInfo::mutable_srcnickname() {
  set_has_srcnickname();
  if (srcnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    srcnickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RedPacketsInfo.srcnickname)
  return srcnickname_;
}
inline ::std::string* RedPacketsInfo::release_srcnickname() {
  clear_has_srcnickname();
  if (srcnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = srcnickname_;
    srcnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RedPacketsInfo::set_allocated_srcnickname(::std::string* srcnickname) {
  if (srcnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srcnickname_;
  }
  if (srcnickname) {
    set_has_srcnickname();
    srcnickname_ = srcnickname;
  } else {
    clear_has_srcnickname();
    srcnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RedPacketsInfo.srcnickname)
}

// required uint64 desuid = 4;
inline bool RedPacketsInfo::has_desuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RedPacketsInfo::set_has_desuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RedPacketsInfo::clear_has_desuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RedPacketsInfo::clear_desuid() {
  desuid_ = GOOGLE_ULONGLONG(0);
  clear_has_desuid();
}
inline ::google::protobuf::uint64 RedPacketsInfo::desuid() const {
  // @@protoc_insertion_point(field_get:Pmd.RedPacketsInfo.desuid)
  return desuid_;
}
inline void RedPacketsInfo::set_desuid(::google::protobuf::uint64 value) {
  set_has_desuid();
  desuid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RedPacketsInfo.desuid)
}

// required string desnickname = 5;
inline bool RedPacketsInfo::has_desnickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RedPacketsInfo::set_has_desnickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RedPacketsInfo::clear_has_desnickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RedPacketsInfo::clear_desnickname() {
  if (desnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desnickname_->clear();
  }
  clear_has_desnickname();
}
inline const ::std::string& RedPacketsInfo::desnickname() const {
  // @@protoc_insertion_point(field_get:Pmd.RedPacketsInfo.desnickname)
  return *desnickname_;
}
inline void RedPacketsInfo::set_desnickname(const ::std::string& value) {
  set_has_desnickname();
  if (desnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desnickname_ = new ::std::string;
  }
  desnickname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RedPacketsInfo.desnickname)
}
inline void RedPacketsInfo::set_desnickname(const char* value) {
  set_has_desnickname();
  if (desnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desnickname_ = new ::std::string;
  }
  desnickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RedPacketsInfo.desnickname)
}
inline void RedPacketsInfo::set_desnickname(const char* value, size_t size) {
  set_has_desnickname();
  if (desnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desnickname_ = new ::std::string;
  }
  desnickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RedPacketsInfo.desnickname)
}
inline ::std::string* RedPacketsInfo::mutable_desnickname() {
  set_has_desnickname();
  if (desnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desnickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RedPacketsInfo.desnickname)
  return desnickname_;
}
inline ::std::string* RedPacketsInfo::release_desnickname() {
  clear_has_desnickname();
  if (desnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desnickname_;
    desnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RedPacketsInfo::set_allocated_desnickname(::std::string* desnickname) {
  if (desnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desnickname_;
  }
  if (desnickname) {
    set_has_desnickname();
    desnickname_ = desnickname;
  } else {
    clear_has_desnickname();
    desnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RedPacketsInfo.desnickname)
}

// required uint64 money = 6;
inline bool RedPacketsInfo::has_money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RedPacketsInfo::set_has_money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RedPacketsInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RedPacketsInfo::clear_money() {
  money_ = GOOGLE_ULONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::uint64 RedPacketsInfo::money() const {
  // @@protoc_insertion_point(field_get:Pmd.RedPacketsInfo.money)
  return money_;
}
inline void RedPacketsInfo::set_money(::google::protobuf::uint64 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RedPacketsInfo.money)
}

// required uint64 recordtime = 7;
inline bool RedPacketsInfo::has_recordtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RedPacketsInfo::set_has_recordtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RedPacketsInfo::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RedPacketsInfo::clear_recordtime() {
  recordtime_ = GOOGLE_ULONGLONG(0);
  clear_has_recordtime();
}
inline ::google::protobuf::uint64 RedPacketsInfo::recordtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RedPacketsInfo.recordtime)
  return recordtime_;
}
inline void RedPacketsInfo::set_recordtime(::google::protobuf::uint64 value) {
  set_has_recordtime();
  recordtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RedPacketsInfo.recordtime)
}

// -------------------------------------------------------------------

// RequestRedPacketsGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestRedPacketsGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestRedPacketsGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestRedPacketsGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestRedPacketsGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.zoneid)
}

// optional uint32 gmid = 3;
inline bool RequestRedPacketsGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestRedPacketsGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.gmid)
}

// optional uint64 starttime = 4;
inline bool RequestRedPacketsGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestRedPacketsGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 5;
inline bool RequestRedPacketsGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestRedPacketsGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.endtime)
}

// optional uint64 srcuid = 6;
inline bool RequestRedPacketsGmUserPmd_CS::has_srcuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_srcuid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_srcuid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_srcuid() {
  srcuid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcuid();
}
inline ::google::protobuf::uint64 RequestRedPacketsGmUserPmd_CS::srcuid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.srcuid)
  return srcuid_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_srcuid(::google::protobuf::uint64 value) {
  set_has_srcuid();
  srcuid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.srcuid)
}

// optional uint64 desuid = 7;
inline bool RequestRedPacketsGmUserPmd_CS::has_desuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_desuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_desuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_desuid() {
  desuid_ = GOOGLE_ULONGLONG(0);
  clear_has_desuid();
}
inline ::google::protobuf::uint64 RequestRedPacketsGmUserPmd_CS::desuid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.desuid)
  return desuid_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_desuid(::google::protobuf::uint64 value) {
  set_has_desuid();
  desuid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.desuid)
}

// optional string packetcode = 8;
inline bool RequestRedPacketsGmUserPmd_CS::has_packetcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_packetcode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_packetcode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_packetcode() {
  if (packetcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    packetcode_->clear();
  }
  clear_has_packetcode();
}
inline const ::std::string& RequestRedPacketsGmUserPmd_CS::packetcode() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.packetcode)
  return *packetcode_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_packetcode(const ::std::string& value) {
  set_has_packetcode();
  if (packetcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    packetcode_ = new ::std::string;
  }
  packetcode_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.packetcode)
}
inline void RequestRedPacketsGmUserPmd_CS::set_packetcode(const char* value) {
  set_has_packetcode();
  if (packetcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    packetcode_ = new ::std::string;
  }
  packetcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestRedPacketsGmUserPmd_CS.packetcode)
}
inline void RequestRedPacketsGmUserPmd_CS::set_packetcode(const char* value, size_t size) {
  set_has_packetcode();
  if (packetcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    packetcode_ = new ::std::string;
  }
  packetcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestRedPacketsGmUserPmd_CS.packetcode)
}
inline ::std::string* RequestRedPacketsGmUserPmd_CS::mutable_packetcode() {
  set_has_packetcode();
  if (packetcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    packetcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRedPacketsGmUserPmd_CS.packetcode)
  return packetcode_;
}
inline ::std::string* RequestRedPacketsGmUserPmd_CS::release_packetcode() {
  clear_has_packetcode();
  if (packetcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = packetcode_;
    packetcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestRedPacketsGmUserPmd_CS::set_allocated_packetcode(::std::string* packetcode) {
  if (packetcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete packetcode_;
  }
  if (packetcode) {
    set_has_packetcode();
    packetcode_ = packetcode;
  } else {
    clear_has_packetcode();
    packetcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRedPacketsGmUserPmd_CS.packetcode)
}

// optional uint32 curpage = 9;
inline bool RequestRedPacketsGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestRedPacketsGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 10;
inline bool RequestRedPacketsGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestRedPacketsGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 11;
inline bool RequestRedPacketsGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestRedPacketsGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestRedPacketsGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestRedPacketsGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestRedPacketsGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRedPacketsGmUserPmd_CS.perpage)
}

// repeated .Pmd.RedPacketsInfo data = 12;
inline int RequestRedPacketsGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestRedPacketsGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::RedPacketsInfo& RequestRedPacketsGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRedPacketsGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::RedPacketsInfo* RequestRedPacketsGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRedPacketsGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::RedPacketsInfo* RequestRedPacketsGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestRedPacketsGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::RedPacketsInfo >&
RequestRedPacketsGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestRedPacketsGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::RedPacketsInfo >*
RequestRedPacketsGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestRedPacketsGmUserPmd_CS.data)
  return &data_;
}

// -------------------------------------------------------------------

// SubgameList

// required uint64 gameid = 1;
inline bool SubgameList::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubgameList::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubgameList::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubgameList::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
  clear_has_gameid();
}
inline ::google::protobuf::uint64 SubgameList::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.SubgameList.gameid)
  return gameid_;
}
inline void SubgameList::set_gameid(::google::protobuf::uint64 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.SubgameList.gameid)
}

// optional uint64 zoneid = 2;
inline bool SubgameList::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubgameList::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubgameList::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubgameList::clear_zoneid() {
  zoneid_ = GOOGLE_ULONGLONG(0);
  clear_has_zoneid();
}
inline ::google::protobuf::uint64 SubgameList::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.SubgameList.zoneid)
  return zoneid_;
}
inline void SubgameList::set_zoneid(::google::protobuf::uint64 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.SubgameList.zoneid)
}

// required string gamename = 3;
inline bool SubgameList::has_gamename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubgameList::set_has_gamename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubgameList::clear_has_gamename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubgameList::clear_gamename() {
  if (gamename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_->clear();
  }
  clear_has_gamename();
}
inline const ::std::string& SubgameList::gamename() const {
  // @@protoc_insertion_point(field_get:Pmd.SubgameList.gamename)
  return *gamename_;
}
inline void SubgameList::set_gamename(const ::std::string& value) {
  set_has_gamename();
  if (gamename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_ = new ::std::string;
  }
  gamename_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.SubgameList.gamename)
}
inline void SubgameList::set_gamename(const char* value) {
  set_has_gamename();
  if (gamename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_ = new ::std::string;
  }
  gamename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.SubgameList.gamename)
}
inline void SubgameList::set_gamename(const char* value, size_t size) {
  set_has_gamename();
  if (gamename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_ = new ::std::string;
  }
  gamename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.SubgameList.gamename)
}
inline ::std::string* SubgameList::mutable_gamename() {
  set_has_gamename();
  if (gamename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gamename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.SubgameList.gamename)
  return gamename_;
}
inline ::std::string* SubgameList::release_gamename() {
  clear_has_gamename();
  if (gamename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gamename_;
    gamename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SubgameList::set_allocated_gamename(::std::string* gamename) {
  if (gamename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gamename_;
  }
  if (gamename) {
    set_has_gamename();
    gamename_ = gamename;
  } else {
    clear_has_gamename();
    gamename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.SubgameList.gamename)
}

// optional string zonename = 4;
inline bool SubgameList::has_zonename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SubgameList::set_has_zonename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SubgameList::clear_has_zonename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SubgameList::clear_zonename() {
  if (zonename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zonename_->clear();
  }
  clear_has_zonename();
}
inline const ::std::string& SubgameList::zonename() const {
  // @@protoc_insertion_point(field_get:Pmd.SubgameList.zonename)
  return *zonename_;
}
inline void SubgameList::set_zonename(const ::std::string& value) {
  set_has_zonename();
  if (zonename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zonename_ = new ::std::string;
  }
  zonename_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.SubgameList.zonename)
}
inline void SubgameList::set_zonename(const char* value) {
  set_has_zonename();
  if (zonename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zonename_ = new ::std::string;
  }
  zonename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.SubgameList.zonename)
}
inline void SubgameList::set_zonename(const char* value, size_t size) {
  set_has_zonename();
  if (zonename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zonename_ = new ::std::string;
  }
  zonename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.SubgameList.zonename)
}
inline ::std::string* SubgameList::mutable_zonename() {
  set_has_zonename();
  if (zonename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    zonename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.SubgameList.zonename)
  return zonename_;
}
inline ::std::string* SubgameList::release_zonename() {
  clear_has_zonename();
  if (zonename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = zonename_;
    zonename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SubgameList::set_allocated_zonename(::std::string* zonename) {
  if (zonename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete zonename_;
  }
  if (zonename) {
    set_has_zonename();
    zonename_ = zonename;
  } else {
    clear_has_zonename();
    zonename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.SubgameList.zonename)
}

// -------------------------------------------------------------------

// RequestedSubgameListGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestedSubgameListGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestedSubgameListGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestedSubgameListGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestedSubgameListGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestedSubgameListGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestedSubgameListGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestedSubgameListGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestedSubgameListGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestedSubgameListGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestedSubgameListGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestedSubgameListGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestedSubgameListGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestedSubgameListGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestedSubgameListGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestedSubgameListGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestedSubgameListGmUserPmd_CS.zoneid)
}

// optional uint32 gmid = 3;
inline bool RequestedSubgameListGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestedSubgameListGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestedSubgameListGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestedSubgameListGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestedSubgameListGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestedSubgameListGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestedSubgameListGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestedSubgameListGmUserPmd_CS.gmid)
}

// repeated .Pmd.SubgameList data = 4;
inline int RequestedSubgameListGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestedSubgameListGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::SubgameList& RequestedSubgameListGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestedSubgameListGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::SubgameList* RequestedSubgameListGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestedSubgameListGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::SubgameList* RequestedSubgameListGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestedSubgameListGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::SubgameList >&
RequestedSubgameListGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestedSubgameListGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::SubgameList >*
RequestedSubgameListGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestedSubgameListGmUserPmd_CS.data)
  return &data_;
}

// -------------------------------------------------------------------

// WinLoseInfo

// required uint32 id = 1;
inline bool WinLoseInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WinLoseInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WinLoseInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WinLoseInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 WinLoseInfo::id() const {
  // @@protoc_insertion_point(field_get:Pmd.WinLoseInfo.id)
  return id_;
}
inline void WinLoseInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WinLoseInfo.id)
}

// required uint64 charid = 2;
inline bool WinLoseInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WinLoseInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WinLoseInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WinLoseInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 WinLoseInfo::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.WinLoseInfo.charid)
  return charid_;
}
inline void WinLoseInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WinLoseInfo.charid)
}

// required string charname = 3;
inline bool WinLoseInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WinLoseInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WinLoseInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WinLoseInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& WinLoseInfo::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.WinLoseInfo.charname)
  return *charname_;
}
inline void WinLoseInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.WinLoseInfo.charname)
}
inline void WinLoseInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.WinLoseInfo.charname)
}
inline void WinLoseInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.WinLoseInfo.charname)
}
inline ::std::string* WinLoseInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.WinLoseInfo.charname)
  return charname_;
}
inline ::std::string* WinLoseInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void WinLoseInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.WinLoseInfo.charname)
}

// required uint32 viplevel = 4;
inline bool WinLoseInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WinLoseInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WinLoseInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WinLoseInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 WinLoseInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:Pmd.WinLoseInfo.viplevel)
  return viplevel_;
}
inline void WinLoseInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WinLoseInfo.viplevel)
}

// required uint32 isonline = 5;
inline bool WinLoseInfo::has_isonline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WinLoseInfo::set_has_isonline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WinLoseInfo::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WinLoseInfo::clear_isonline() {
  isonline_ = 0u;
  clear_has_isonline();
}
inline ::google::protobuf::uint32 WinLoseInfo::isonline() const {
  // @@protoc_insertion_point(field_get:Pmd.WinLoseInfo.isonline)
  return isonline_;
}
inline void WinLoseInfo::set_isonline(::google::protobuf::uint32 value) {
  set_has_isonline();
  isonline_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WinLoseInfo.isonline)
}

// required int64 totalnum = 6;
inline bool WinLoseInfo::has_totalnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WinLoseInfo::set_has_totalnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WinLoseInfo::clear_has_totalnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WinLoseInfo::clear_totalnum() {
  totalnum_ = GOOGLE_LONGLONG(0);
  clear_has_totalnum();
}
inline ::google::protobuf::int64 WinLoseInfo::totalnum() const {
  // @@protoc_insertion_point(field_get:Pmd.WinLoseInfo.totalnum)
  return totalnum_;
}
inline void WinLoseInfo::set_totalnum(::google::protobuf::int64 value) {
  set_has_totalnum();
  totalnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WinLoseInfo.totalnum)
}

// required uint64 curnum = 7;
inline bool WinLoseInfo::has_curnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WinLoseInfo::set_has_curnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WinLoseInfo::clear_has_curnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WinLoseInfo::clear_curnum() {
  curnum_ = GOOGLE_ULONGLONG(0);
  clear_has_curnum();
}
inline ::google::protobuf::uint64 WinLoseInfo::curnum() const {
  // @@protoc_insertion_point(field_get:Pmd.WinLoseInfo.curnum)
  return curnum_;
}
inline void WinLoseInfo::set_curnum(::google::protobuf::uint64 value) {
  set_has_curnum();
  curnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.WinLoseInfo.curnum)
}

// -------------------------------------------------------------------

// RequestWinningListGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestWinningListGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestWinningListGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestWinningListGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestWinningListGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestWinningListGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestWinningListGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestWinningListGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestWinningListGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestWinningListGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestWinningListGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestWinningListGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestWinningListGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestWinningListGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestWinningListGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestWinningListGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestWinningListGmUserPmd_CS.zoneid)
}

// optional uint32 gmid = 3;
inline bool RequestWinningListGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestWinningListGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestWinningListGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestWinningListGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestWinningListGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestWinningListGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestWinningListGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestWinningListGmUserPmd_CS.gmid)
}

// optional uint32 subgameid = 4;
inline bool RequestWinningListGmUserPmd_CS::has_subgameid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestWinningListGmUserPmd_CS::set_has_subgameid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestWinningListGmUserPmd_CS::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestWinningListGmUserPmd_CS::clear_subgameid() {
  subgameid_ = 0u;
  clear_has_subgameid();
}
inline ::google::protobuf::uint32 RequestWinningListGmUserPmd_CS::subgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestWinningListGmUserPmd_CS.subgameid)
  return subgameid_;
}
inline void RequestWinningListGmUserPmd_CS::set_subgameid(::google::protobuf::uint32 value) {
  set_has_subgameid();
  subgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestWinningListGmUserPmd_CS.subgameid)
}

// optional uint64 timestamp = 5;
inline bool RequestWinningListGmUserPmd_CS::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestWinningListGmUserPmd_CS::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestWinningListGmUserPmd_CS::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestWinningListGmUserPmd_CS::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 RequestWinningListGmUserPmd_CS::timestamp() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestWinningListGmUserPmd_CS.timestamp)
  return timestamp_;
}
inline void RequestWinningListGmUserPmd_CS::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestWinningListGmUserPmd_CS.timestamp)
}

// optional uint32 curpage = 6;
inline bool RequestWinningListGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestWinningListGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestWinningListGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestWinningListGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestWinningListGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestWinningListGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestWinningListGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestWinningListGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 7;
inline bool RequestWinningListGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestWinningListGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestWinningListGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestWinningListGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestWinningListGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestWinningListGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestWinningListGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestWinningListGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 8;
inline bool RequestWinningListGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestWinningListGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestWinningListGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestWinningListGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestWinningListGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestWinningListGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestWinningListGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestWinningListGmUserPmd_CS.perpage)
}

// repeated .Pmd.WinLoseInfo data = 9;
inline int RequestWinningListGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestWinningListGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::WinLoseInfo& RequestWinningListGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestWinningListGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::WinLoseInfo* RequestWinningListGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestWinningListGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::WinLoseInfo* RequestWinningListGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestWinningListGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::WinLoseInfo >&
RequestWinningListGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestWinningListGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::WinLoseInfo >*
RequestWinningListGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestWinningListGmUserPmd_CS.data)
  return &data_;
}

// -------------------------------------------------------------------

// BlackWhitelistInfo

// optional uint32 id = 1;
inline bool BlackWhitelistInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlackWhitelistInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlackWhitelistInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlackWhitelistInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::id() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.id)
  return id_;
}
inline void BlackWhitelistInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.id)
}

// optional uint64 charid = 2;
inline bool BlackWhitelistInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlackWhitelistInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlackWhitelistInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlackWhitelistInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 BlackWhitelistInfo::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.charid)
  return charid_;
}
inline void BlackWhitelistInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.charid)
}

// optional string charname = 3;
inline bool BlackWhitelistInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlackWhitelistInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlackWhitelistInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlackWhitelistInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& BlackWhitelistInfo::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.charname)
  return *charname_;
}
inline void BlackWhitelistInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.charname)
}
inline void BlackWhitelistInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BlackWhitelistInfo.charname)
}
inline void BlackWhitelistInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BlackWhitelistInfo.charname)
}
inline ::std::string* BlackWhitelistInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BlackWhitelistInfo.charname)
  return charname_;
}
inline ::std::string* BlackWhitelistInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BlackWhitelistInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BlackWhitelistInfo.charname)
}

// optional uint32 subgameid = 4;
inline bool BlackWhitelistInfo::has_subgameid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlackWhitelistInfo::set_has_subgameid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BlackWhitelistInfo::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BlackWhitelistInfo::clear_subgameid() {
  subgameid_ = 0u;
  clear_has_subgameid();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::subgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.subgameid)
  return subgameid_;
}
inline void BlackWhitelistInfo::set_subgameid(::google::protobuf::uint32 value) {
  set_has_subgameid();
  subgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.subgameid)
}

// optional uint32 setchips = 5;
inline bool BlackWhitelistInfo::has_setchips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BlackWhitelistInfo::set_has_setchips() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BlackWhitelistInfo::clear_has_setchips() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BlackWhitelistInfo::clear_setchips() {
  setchips_ = 0u;
  clear_has_setchips();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::setchips() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.setchips)
  return setchips_;
}
inline void BlackWhitelistInfo::set_setchips(::google::protobuf::uint32 value) {
  set_has_setchips();
  setchips_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.setchips)
}

// optional uint32 curchips = 6;
inline bool BlackWhitelistInfo::has_curchips() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BlackWhitelistInfo::set_has_curchips() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BlackWhitelistInfo::clear_has_curchips() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BlackWhitelistInfo::clear_curchips() {
  curchips_ = 0u;
  clear_has_curchips();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::curchips() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.curchips)
  return curchips_;
}
inline void BlackWhitelistInfo::set_curchips(::google::protobuf::uint32 value) {
  set_has_curchips();
  curchips_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.curchips)
}

// optional uint32 winrate = 7;
inline bool BlackWhitelistInfo::has_winrate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BlackWhitelistInfo::set_has_winrate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BlackWhitelistInfo::clear_has_winrate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BlackWhitelistInfo::clear_winrate() {
  winrate_ = 0u;
  clear_has_winrate();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::winrate() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.winrate)
  return winrate_;
}
inline void BlackWhitelistInfo::set_winrate(::google::protobuf::uint32 value) {
  set_has_winrate();
  winrate_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.winrate)
}

// optional uint32 state = 8;
inline bool BlackWhitelistInfo::has_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BlackWhitelistInfo::set_has_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BlackWhitelistInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BlackWhitelistInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::state() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.state)
  return state_;
}
inline void BlackWhitelistInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.state)
}

// optional uint32 type = 9;
inline bool BlackWhitelistInfo::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BlackWhitelistInfo::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BlackWhitelistInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BlackWhitelistInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::type() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.type)
  return type_;
}
inline void BlackWhitelistInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.type)
}

// optional uint32 settimes = 10;
inline bool BlackWhitelistInfo::has_settimes() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BlackWhitelistInfo::set_has_settimes() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BlackWhitelistInfo::clear_has_settimes() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BlackWhitelistInfo::clear_settimes() {
  settimes_ = 0u;
  clear_has_settimes();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::settimes() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.settimes)
  return settimes_;
}
inline void BlackWhitelistInfo::set_settimes(::google::protobuf::uint32 value) {
  set_has_settimes();
  settimes_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.settimes)
}

// optional uint32 curtimes = 11;
inline bool BlackWhitelistInfo::has_curtimes() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BlackWhitelistInfo::set_has_curtimes() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BlackWhitelistInfo::clear_has_curtimes() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BlackWhitelistInfo::clear_curtimes() {
  curtimes_ = 0u;
  clear_has_curtimes();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::curtimes() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.curtimes)
  return curtimes_;
}
inline void BlackWhitelistInfo::set_curtimes(::google::protobuf::uint32 value) {
  set_has_curtimes();
  curtimes_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.curtimes)
}

// optional uint32 intervaltimes = 12;
inline bool BlackWhitelistInfo::has_intervaltimes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BlackWhitelistInfo::set_has_intervaltimes() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BlackWhitelistInfo::clear_has_intervaltimes() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BlackWhitelistInfo::clear_intervaltimes() {
  intervaltimes_ = 0u;
  clear_has_intervaltimes();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::intervaltimes() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.intervaltimes)
  return intervaltimes_;
}
inline void BlackWhitelistInfo::set_intervaltimes(::google::protobuf::uint32 value) {
  set_has_intervaltimes();
  intervaltimes_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.intervaltimes)
}

// optional uint64 recordtime = 13;
inline bool BlackWhitelistInfo::has_recordtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BlackWhitelistInfo::set_has_recordtime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BlackWhitelistInfo::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BlackWhitelistInfo::clear_recordtime() {
  recordtime_ = GOOGLE_ULONGLONG(0);
  clear_has_recordtime();
}
inline ::google::protobuf::uint64 BlackWhitelistInfo::recordtime() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.recordtime)
  return recordtime_;
}
inline void BlackWhitelistInfo::set_recordtime(::google::protobuf::uint64 value) {
  set_has_recordtime();
  recordtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.recordtime)
}

// optional uint32 gameid = 14;
inline bool BlackWhitelistInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BlackWhitelistInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BlackWhitelistInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BlackWhitelistInfo::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.gameid)
  return gameid_;
}
inline void BlackWhitelistInfo::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.gameid)
}

// optional uint32 zoneid = 15;
inline bool BlackWhitelistInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BlackWhitelistInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BlackWhitelistInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BlackWhitelistInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 BlackWhitelistInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.BlackWhitelistInfo.zoneid)
  return zoneid_;
}
inline void BlackWhitelistInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BlackWhitelistInfo.zoneid)
}

// -------------------------------------------------------------------

// AddBlackWhitelistGmUserPmd_CS

// required uint32 gameid = 1;
inline bool AddBlackWhitelistGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 AddBlackWhitelistGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.AddBlackWhitelistGmUserPmd_CS.gameid)
  return gameid_;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.AddBlackWhitelistGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool AddBlackWhitelistGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 AddBlackWhitelistGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.AddBlackWhitelistGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.AddBlackWhitelistGmUserPmd_CS.zoneid)
}

// optional uint32 subgameid = 3;
inline bool AddBlackWhitelistGmUserPmd_CS::has_subgameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_has_subgameid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_subgameid() {
  subgameid_ = 0u;
  clear_has_subgameid();
}
inline ::google::protobuf::uint32 AddBlackWhitelistGmUserPmd_CS::subgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.AddBlackWhitelistGmUserPmd_CS.subgameid)
  return subgameid_;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_subgameid(::google::protobuf::uint32 value) {
  set_has_subgameid();
  subgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.AddBlackWhitelistGmUserPmd_CS.subgameid)
}

// optional uint32 gmid = 4;
inline bool AddBlackWhitelistGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 AddBlackWhitelistGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.AddBlackWhitelistGmUserPmd_CS.gmid)
  return gmid_;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.AddBlackWhitelistGmUserPmd_CS.gmid)
}

// repeated .Pmd.BlackWhitelistInfo data = 5;
inline int AddBlackWhitelistGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::BlackWhitelistInfo& AddBlackWhitelistGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.AddBlackWhitelistGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::BlackWhitelistInfo* AddBlackWhitelistGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.AddBlackWhitelistGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::BlackWhitelistInfo* AddBlackWhitelistGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.AddBlackWhitelistGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo >&
AddBlackWhitelistGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.AddBlackWhitelistGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo >*
AddBlackWhitelistGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.AddBlackWhitelistGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 retcode = 6;
inline bool AddBlackWhitelistGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 AddBlackWhitelistGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.AddBlackWhitelistGmUserPmd_CS.retcode)
  return retcode_;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.AddBlackWhitelistGmUserPmd_CS.retcode)
}

// optional string retdesc = 7;
inline bool AddBlackWhitelistGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AddBlackWhitelistGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& AddBlackWhitelistGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.AddBlackWhitelistGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void AddBlackWhitelistGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.AddBlackWhitelistGmUserPmd_CS.retdesc)
}
inline void AddBlackWhitelistGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.AddBlackWhitelistGmUserPmd_CS.retdesc)
}
inline void AddBlackWhitelistGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.AddBlackWhitelistGmUserPmd_CS.retdesc)
}
inline ::std::string* AddBlackWhitelistGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.AddBlackWhitelistGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* AddBlackWhitelistGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AddBlackWhitelistGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.AddBlackWhitelistGmUserPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// ModBlackWhitelistGmUserPmd_CS

// required uint32 gameid = 1;
inline bool ModBlackWhitelistGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 ModBlackWhitelistGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.ModBlackWhitelistGmUserPmd_CS.gameid)
  return gameid_;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ModBlackWhitelistGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool ModBlackWhitelistGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 ModBlackWhitelistGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.ModBlackWhitelistGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ModBlackWhitelistGmUserPmd_CS.zoneid)
}

// optional uint32 subgameid = 3;
inline bool ModBlackWhitelistGmUserPmd_CS::has_subgameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_has_subgameid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_subgameid() {
  subgameid_ = 0u;
  clear_has_subgameid();
}
inline ::google::protobuf::uint32 ModBlackWhitelistGmUserPmd_CS::subgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.ModBlackWhitelistGmUserPmd_CS.subgameid)
  return subgameid_;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_subgameid(::google::protobuf::uint32 value) {
  set_has_subgameid();
  subgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ModBlackWhitelistGmUserPmd_CS.subgameid)
}

// optional uint32 gmid = 4;
inline bool ModBlackWhitelistGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ModBlackWhitelistGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ModBlackWhitelistGmUserPmd_CS.gmid)
  return gmid_;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ModBlackWhitelistGmUserPmd_CS.gmid)
}

// required .Pmd.BlackWhitelistInfo data = 5;
inline bool ModBlackWhitelistGmUserPmd_CS::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_data() {
  if (data_ != NULL) data_->::Pmd::BlackWhitelistInfo::Clear();
  clear_has_data();
}
inline const ::Pmd::BlackWhitelistInfo& ModBlackWhitelistGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_get:Pmd.ModBlackWhitelistGmUserPmd_CS.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::BlackWhitelistInfo* ModBlackWhitelistGmUserPmd_CS::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::BlackWhitelistInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.ModBlackWhitelistGmUserPmd_CS.data)
  return data_;
}
inline ::Pmd::BlackWhitelistInfo* ModBlackWhitelistGmUserPmd_CS::release_data() {
  clear_has_data();
  ::Pmd::BlackWhitelistInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_allocated_data(::Pmd::BlackWhitelistInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ModBlackWhitelistGmUserPmd_CS.data)
}

// optional uint32 retcode = 6;
inline bool ModBlackWhitelistGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ModBlackWhitelistGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ModBlackWhitelistGmUserPmd_CS.retcode)
  return retcode_;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ModBlackWhitelistGmUserPmd_CS.retcode)
}

// optional string retdesc = 7;
inline bool ModBlackWhitelistGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ModBlackWhitelistGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ModBlackWhitelistGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ModBlackWhitelistGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void ModBlackWhitelistGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ModBlackWhitelistGmUserPmd_CS.retdesc)
}
inline void ModBlackWhitelistGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ModBlackWhitelistGmUserPmd_CS.retdesc)
}
inline void ModBlackWhitelistGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ModBlackWhitelistGmUserPmd_CS.retdesc)
}
inline ::std::string* ModBlackWhitelistGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ModBlackWhitelistGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* ModBlackWhitelistGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ModBlackWhitelistGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ModBlackWhitelistGmUserPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// DelBlackWhitelistGmUserPmd_CS

// required uint32 gameid = 1;
inline bool DelBlackWhitelistGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 DelBlackWhitelistGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.DelBlackWhitelistGmUserPmd_CS.gameid)
  return gameid_;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.DelBlackWhitelistGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool DelBlackWhitelistGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 DelBlackWhitelistGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.DelBlackWhitelistGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.DelBlackWhitelistGmUserPmd_CS.zoneid)
}

// optional uint32 subgameid = 3;
inline bool DelBlackWhitelistGmUserPmd_CS::has_subgameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_has_subgameid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_subgameid() {
  subgameid_ = 0u;
  clear_has_subgameid();
}
inline ::google::protobuf::uint32 DelBlackWhitelistGmUserPmd_CS::subgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.DelBlackWhitelistGmUserPmd_CS.subgameid)
  return subgameid_;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_subgameid(::google::protobuf::uint32 value) {
  set_has_subgameid();
  subgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.DelBlackWhitelistGmUserPmd_CS.subgameid)
}

// optional uint32 gmid = 4;
inline bool DelBlackWhitelistGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 DelBlackWhitelistGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.DelBlackWhitelistGmUserPmd_CS.gmid)
  return gmid_;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.DelBlackWhitelistGmUserPmd_CS.gmid)
}

// repeated uint32 ids = 5;
inline int DelBlackWhitelistGmUserPmd_CS::ids_size() const {
  return ids_.size();
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint32 DelBlackWhitelistGmUserPmd_CS::ids(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.DelBlackWhitelistGmUserPmd_CS.ids)
  return ids_.Get(index);
}
inline void DelBlackWhitelistGmUserPmd_CS::set_ids(int index, ::google::protobuf::uint32 value) {
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Pmd.DelBlackWhitelistGmUserPmd_CS.ids)
}
inline void DelBlackWhitelistGmUserPmd_CS::add_ids(::google::protobuf::uint32 value) {
  ids_.Add(value);
  // @@protoc_insertion_point(field_add:Pmd.DelBlackWhitelistGmUserPmd_CS.ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelBlackWhitelistGmUserPmd_CS::ids() const {
  // @@protoc_insertion_point(field_list:Pmd.DelBlackWhitelistGmUserPmd_CS.ids)
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelBlackWhitelistGmUserPmd_CS::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.DelBlackWhitelistGmUserPmd_CS.ids)
  return &ids_;
}

// optional uint32 retcode = 6;
inline bool DelBlackWhitelistGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 DelBlackWhitelistGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.DelBlackWhitelistGmUserPmd_CS.retcode)
  return retcode_;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.DelBlackWhitelistGmUserPmd_CS.retcode)
}

// optional string retdesc = 7;
inline bool DelBlackWhitelistGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DelBlackWhitelistGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& DelBlackWhitelistGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.DelBlackWhitelistGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void DelBlackWhitelistGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.DelBlackWhitelistGmUserPmd_CS.retdesc)
}
inline void DelBlackWhitelistGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.DelBlackWhitelistGmUserPmd_CS.retdesc)
}
inline void DelBlackWhitelistGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.DelBlackWhitelistGmUserPmd_CS.retdesc)
}
inline ::std::string* DelBlackWhitelistGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.DelBlackWhitelistGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* DelBlackWhitelistGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DelBlackWhitelistGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.DelBlackWhitelistGmUserPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// RequestBlackWhitelistGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestBlackWhitelistGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestBlackWhitelistGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.zoneid)
}

// optional uint32 subgameid = 3;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_subgameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_subgameid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_subgameid() {
  subgameid_ = 0u;
  clear_has_subgameid();
}
inline ::google::protobuf::uint32 RequestBlackWhitelistGmUserPmd_CS::subgameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.subgameid)
  return subgameid_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_subgameid(::google::protobuf::uint32 value) {
  set_has_subgameid();
  subgameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.subgameid)
}

// optional uint32 gmid = 4;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestBlackWhitelistGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.gmid)
}

// optional uint32 id = 5;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RequestBlackWhitelistGmUserPmd_CS::id() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.id)
  return id_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.id)
}

// optional uint64 charid = 6;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestBlackWhitelistGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.charid)
}

// optional string charname = 7;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_charname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_charname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_charname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RequestBlackWhitelistGmUserPmd_CS::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.charname)
  return *charname_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.charname)
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestBlackWhitelistGmUserPmd_CS.charname)
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestBlackWhitelistGmUserPmd_CS.charname)
}
inline ::std::string* RequestBlackWhitelistGmUserPmd_CS::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestBlackWhitelistGmUserPmd_CS.charname)
  return charname_;
}
inline ::std::string* RequestBlackWhitelistGmUserPmd_CS::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestBlackWhitelistGmUserPmd_CS.charname)
}

// optional uint64 starttime = 8;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestBlackWhitelistGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 9;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestBlackWhitelistGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.endtime)
}

// optional uint32 curpage = 10;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestBlackWhitelistGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 11;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestBlackWhitelistGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 12;
inline bool RequestBlackWhitelistGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestBlackWhitelistGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestBlackWhitelistGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBlackWhitelistGmUserPmd_CS.perpage)
}

// repeated .Pmd.BlackWhitelistInfo data = 13;
inline int RequestBlackWhitelistGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestBlackWhitelistGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::BlackWhitelistInfo& RequestBlackWhitelistGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBlackWhitelistGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::BlackWhitelistInfo* RequestBlackWhitelistGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestBlackWhitelistGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::BlackWhitelistInfo* RequestBlackWhitelistGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestBlackWhitelistGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo >&
RequestBlackWhitelistGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestBlackWhitelistGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::BlackWhitelistInfo >*
RequestBlackWhitelistGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestBlackWhitelistGmUserPmd_CS.data)
  return &data_;
}

// -------------------------------------------------------------------

// GmMailInfo

// optional uint64 id = 1;
inline bool GmMailInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GmMailInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GmMailInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GmMailInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 GmMailInfo::id() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.id)
  return id_;
}
inline void GmMailInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.id)
}

// optional uint32 gameid = 2;
inline bool GmMailInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GmMailInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GmMailInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GmMailInfo::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 GmMailInfo::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.gameid)
  return gameid_;
}
inline void GmMailInfo::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.gameid)
}

// optional uint32 zoneid = 3;
inline bool GmMailInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GmMailInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GmMailInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GmMailInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GmMailInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.zoneid)
  return zoneid_;
}
inline void GmMailInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.zoneid)
}

// optional uint32 type = 4;
inline bool GmMailInfo::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GmMailInfo::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GmMailInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GmMailInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GmMailInfo::type() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.type)
  return type_;
}
inline void GmMailInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.type)
}

// optional uint32 gmid = 5;
inline bool GmMailInfo::has_gmid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GmMailInfo::set_has_gmid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GmMailInfo::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GmMailInfo::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 GmMailInfo::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.gmid)
  return gmid_;
}
inline void GmMailInfo::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.gmid)
}

// optional uint64 charid = 6;
inline bool GmMailInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GmMailInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GmMailInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GmMailInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 GmMailInfo::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.charid)
  return charid_;
}
inline void GmMailInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.charid)
}

// optional string charname = 7;
inline bool GmMailInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GmMailInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GmMailInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GmMailInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& GmMailInfo::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.charname)
  return *charname_;
}
inline void GmMailInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.charname)
}
inline void GmMailInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.GmMailInfo.charname)
}
inline void GmMailInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.GmMailInfo.charname)
}
inline ::std::string* GmMailInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.GmMailInfo.charname)
  return charname_;
}
inline ::std::string* GmMailInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GmMailInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.GmMailInfo.charname)
}

// optional string subject = 8;
inline bool GmMailInfo::has_subject() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GmMailInfo::set_has_subject() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GmMailInfo::clear_has_subject() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GmMailInfo::clear_subject() {
  if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_->clear();
  }
  clear_has_subject();
}
inline const ::std::string& GmMailInfo::subject() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.subject)
  return *subject_;
}
inline void GmMailInfo::set_subject(const ::std::string& value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.subject)
}
inline void GmMailInfo::set_subject(const char* value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.GmMailInfo.subject)
}
inline void GmMailInfo::set_subject(const char* value, size_t size) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.GmMailInfo.subject)
}
inline ::std::string* GmMailInfo::mutable_subject() {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.GmMailInfo.subject)
  return subject_;
}
inline ::std::string* GmMailInfo::release_subject() {
  clear_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = subject_;
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GmMailInfo::set_allocated_subject(::std::string* subject) {
  if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subject_;
  }
  if (subject) {
    set_has_subject();
    subject_ = subject;
  } else {
    clear_has_subject();
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.GmMailInfo.subject)
}

// optional string content = 9;
inline bool GmMailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GmMailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GmMailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GmMailInfo::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& GmMailInfo::content() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.content)
  return *content_;
}
inline void GmMailInfo::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.content)
}
inline void GmMailInfo::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.GmMailInfo.content)
}
inline void GmMailInfo::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.GmMailInfo.content)
}
inline ::std::string* GmMailInfo::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.GmMailInfo.content)
  return content_;
}
inline ::std::string* GmMailInfo::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GmMailInfo::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.GmMailInfo.content)
}

// repeated .Pmd.ItemInfo attachment = 10;
inline int GmMailInfo::attachment_size() const {
  return attachment_.size();
}
inline void GmMailInfo::clear_attachment() {
  attachment_.Clear();
}
inline const ::Pmd::ItemInfo& GmMailInfo::attachment(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.attachment)
  return attachment_.Get(index);
}
inline ::Pmd::ItemInfo* GmMailInfo::mutable_attachment(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.GmMailInfo.attachment)
  return attachment_.Mutable(index);
}
inline ::Pmd::ItemInfo* GmMailInfo::add_attachment() {
  // @@protoc_insertion_point(field_add:Pmd.GmMailInfo.attachment)
  return attachment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo >&
GmMailInfo::attachment() const {
  // @@protoc_insertion_point(field_list:Pmd.GmMailInfo.attachment)
  return attachment_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo >*
GmMailInfo::mutable_attachment() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.GmMailInfo.attachment)
  return &attachment_;
}

// optional uint32 state = 11;
inline bool GmMailInfo::has_state() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GmMailInfo::set_has_state() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GmMailInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GmMailInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 GmMailInfo::state() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.state)
  return state_;
}
inline void GmMailInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.state)
}

// optional uint32 recordtime = 12;
inline bool GmMailInfo::has_recordtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GmMailInfo::set_has_recordtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GmMailInfo::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GmMailInfo::clear_recordtime() {
  recordtime_ = 0u;
  clear_has_recordtime();
}
inline ::google::protobuf::uint32 GmMailInfo::recordtime() const {
  // @@protoc_insertion_point(field_get:Pmd.GmMailInfo.recordtime)
  return recordtime_;
}
inline void GmMailInfo::set_recordtime(::google::protobuf::uint32 value) {
  set_has_recordtime();
  recordtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmMailInfo.recordtime)
}

// -------------------------------------------------------------------

// RequestSendMailGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestSendMailGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestSendMailGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestSendMailGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestSendMailGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestSendMailGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestSendMailGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestSendMailGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestSendMailGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestSendMailGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestSendMailGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestSendMailGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestSendMailGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestSendMailGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestSendMailGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestSendMailGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestSendMailGmUserPmd_CS.zoneid)
}

// optional .Pmd.GmMailInfo data = 3;
inline bool RequestSendMailGmUserPmd_CS::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestSendMailGmUserPmd_CS::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestSendMailGmUserPmd_CS::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestSendMailGmUserPmd_CS::clear_data() {
  if (data_ != NULL) data_->::Pmd::GmMailInfo::Clear();
  clear_has_data();
}
inline const ::Pmd::GmMailInfo& RequestSendMailGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestSendMailGmUserPmd_CS.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::GmMailInfo* RequestSendMailGmUserPmd_CS::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::GmMailInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.RequestSendMailGmUserPmd_CS.data)
  return data_;
}
inline ::Pmd::GmMailInfo* RequestSendMailGmUserPmd_CS::release_data() {
  clear_has_data();
  ::Pmd::GmMailInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void RequestSendMailGmUserPmd_CS::set_allocated_data(::Pmd::GmMailInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestSendMailGmUserPmd_CS.data)
}

// optional uint32 gmid = 4;
inline bool RequestSendMailGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestSendMailGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestSendMailGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestSendMailGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestSendMailGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestSendMailGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestSendMailGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestSendMailGmUserPmd_CS.gmid)
}

// optional uint32 retcode = 5;
inline bool RequestSendMailGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestSendMailGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestSendMailGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestSendMailGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 RequestSendMailGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestSendMailGmUserPmd_CS.retcode)
  return retcode_;
}
inline void RequestSendMailGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestSendMailGmUserPmd_CS.retcode)
}

// optional string retdesc = 6;
inline bool RequestSendMailGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestSendMailGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestSendMailGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestSendMailGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& RequestSendMailGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestSendMailGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void RequestSendMailGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestSendMailGmUserPmd_CS.retdesc)
}
inline void RequestSendMailGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestSendMailGmUserPmd_CS.retdesc)
}
inline void RequestSendMailGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestSendMailGmUserPmd_CS.retdesc)
}
inline ::std::string* RequestSendMailGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestSendMailGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* RequestSendMailGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestSendMailGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestSendMailGmUserPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// LoginRecordData

// optional uint64 id = 1;
inline bool LoginRecordData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRecordData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRecordData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRecordData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 LoginRecordData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.id)
  return id_;
}
inline void LoginRecordData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.id)
}

// optional uint32 type = 2;
inline bool LoginRecordData::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRecordData::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRecordData::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRecordData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 LoginRecordData::type() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.type)
  return type_;
}
inline void LoginRecordData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.type)
}

// optional uint64 accid = 3;
inline bool LoginRecordData::has_accid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRecordData::set_has_accid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRecordData::clear_has_accid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRecordData::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 LoginRecordData::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.accid)
  return accid_;
}
inline void LoginRecordData::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.accid)
}

// optional uint64 charid = 4;
inline bool LoginRecordData::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRecordData::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRecordData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRecordData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 LoginRecordData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.charid)
  return charid_;
}
inline void LoginRecordData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.charid)
}

// optional string charname = 5;
inline bool LoginRecordData::has_charname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginRecordData::set_has_charname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginRecordData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginRecordData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& LoginRecordData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.charname)
  return *charname_;
}
inline void LoginRecordData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.charname)
}
inline void LoginRecordData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.LoginRecordData.charname)
}
inline void LoginRecordData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.LoginRecordData.charname)
}
inline ::std::string* LoginRecordData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.LoginRecordData.charname)
  return charname_;
}
inline ::std::string* LoginRecordData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRecordData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.LoginRecordData.charname)
}

// optional uint32 userlevel = 6;
inline bool LoginRecordData::has_userlevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginRecordData::set_has_userlevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginRecordData::clear_has_userlevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginRecordData::clear_userlevel() {
  userlevel_ = 0u;
  clear_has_userlevel();
}
inline ::google::protobuf::uint32 LoginRecordData::userlevel() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.userlevel)
  return userlevel_;
}
inline void LoginRecordData::set_userlevel(::google::protobuf::uint32 value) {
  set_has_userlevel();
  userlevel_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.userlevel)
}

// optional uint32 viplevel = 7;
inline bool LoginRecordData::has_viplevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginRecordData::set_has_viplevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginRecordData::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginRecordData::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 LoginRecordData::viplevel() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.viplevel)
  return viplevel_;
}
inline void LoginRecordData::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.viplevel)
}

// optional uint32 gold = 8;
inline bool LoginRecordData::has_gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginRecordData::set_has_gold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginRecordData::clear_has_gold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginRecordData::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 LoginRecordData::gold() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.gold)
  return gold_;
}
inline void LoginRecordData::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.gold)
}

// optional uint32 money = 9;
inline bool LoginRecordData::has_money() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LoginRecordData::set_has_money() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LoginRecordData::clear_has_money() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LoginRecordData::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 LoginRecordData::money() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.money)
  return money_;
}
inline void LoginRecordData::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.money)
}

// optional uint32 power = 10;
inline bool LoginRecordData::has_power() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LoginRecordData::set_has_power() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LoginRecordData::clear_has_power() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LoginRecordData::clear_power() {
  power_ = 0u;
  clear_has_power();
}
inline ::google::protobuf::uint32 LoginRecordData::power() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.power)
  return power_;
}
inline void LoginRecordData::set_power(::google::protobuf::uint32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.power)
}

// optional uint32 guid = 11;
inline bool LoginRecordData::has_guid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LoginRecordData::set_has_guid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LoginRecordData::clear_has_guid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LoginRecordData::clear_guid() {
  guid_ = 0u;
  clear_has_guid();
}
inline ::google::protobuf::uint32 LoginRecordData::guid() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.guid)
  return guid_;
}
inline void LoginRecordData::set_guid(::google::protobuf::uint32 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.guid)
}

// optional string imei = 12;
inline bool LoginRecordData::has_imei() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LoginRecordData::set_has_imei() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LoginRecordData::clear_has_imei() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LoginRecordData::clear_imei() {
  if (imei_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_->clear();
  }
  clear_has_imei();
}
inline const ::std::string& LoginRecordData::imei() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.imei)
  return *imei_;
}
inline void LoginRecordData::set_imei(const ::std::string& value) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_ = new ::std::string;
  }
  imei_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.imei)
}
inline void LoginRecordData::set_imei(const char* value) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_ = new ::std::string;
  }
  imei_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.LoginRecordData.imei)
}
inline void LoginRecordData::set_imei(const char* value, size_t size) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_ = new ::std::string;
  }
  imei_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.LoginRecordData.imei)
}
inline ::std::string* LoginRecordData::mutable_imei() {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    imei_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.LoginRecordData.imei)
  return imei_;
}
inline ::std::string* LoginRecordData::release_imei() {
  clear_has_imei();
  if (imei_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = imei_;
    imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRecordData::set_allocated_imei(::std::string* imei) {
  if (imei_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete imei_;
  }
  if (imei) {
    set_has_imei();
    imei_ = imei;
  } else {
    clear_has_imei();
    imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.LoginRecordData.imei)
}

// optional string ip = 13;
inline bool LoginRecordData::has_ip() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LoginRecordData::set_has_ip() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LoginRecordData::clear_has_ip() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LoginRecordData::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& LoginRecordData::ip() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.ip)
  return *ip_;
}
inline void LoginRecordData::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.ip)
}
inline void LoginRecordData::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.LoginRecordData.ip)
}
inline void LoginRecordData::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.LoginRecordData.ip)
}
inline ::std::string* LoginRecordData::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.LoginRecordData.ip)
  return ip_;
}
inline ::std::string* LoginRecordData::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRecordData::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.LoginRecordData.ip)
}

// optional string mac = 14;
inline bool LoginRecordData::has_mac() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LoginRecordData::set_has_mac() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LoginRecordData::clear_has_mac() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LoginRecordData::clear_mac() {
  if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_->clear();
  }
  clear_has_mac();
}
inline const ::std::string& LoginRecordData::mac() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.mac)
  return *mac_;
}
inline void LoginRecordData::set_mac(const ::std::string& value) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.mac)
}
inline void LoginRecordData::set_mac(const char* value) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.LoginRecordData.mac)
}
inline void LoginRecordData::set_mac(const char* value, size_t size) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.LoginRecordData.mac)
}
inline ::std::string* LoginRecordData::mutable_mac() {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.LoginRecordData.mac)
  return mac_;
}
inline ::std::string* LoginRecordData::release_mac() {
  clear_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mac_;
    mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void LoginRecordData::set_allocated_mac(::std::string* mac) {
  if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mac_;
  }
  if (mac) {
    set_has_mac();
    mac_ = mac;
  } else {
    clear_has_mac();
    mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.LoginRecordData.mac)
}

// optional uint64 ts = 15;
inline bool LoginRecordData::has_ts() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LoginRecordData::set_has_ts() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LoginRecordData::clear_has_ts() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LoginRecordData::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 LoginRecordData::ts() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.ts)
  return ts_;
}
inline void LoginRecordData::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.ts)
}

// optional uint32 onlinemin = 16;
inline bool LoginRecordData::has_onlinemin() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LoginRecordData::set_has_onlinemin() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LoginRecordData::clear_has_onlinemin() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LoginRecordData::clear_onlinemin() {
  onlinemin_ = 0u;
  clear_has_onlinemin();
}
inline ::google::protobuf::uint32 LoginRecordData::onlinemin() const {
  // @@protoc_insertion_point(field_get:Pmd.LoginRecordData.onlinemin)
  return onlinemin_;
}
inline void LoginRecordData::set_onlinemin(::google::protobuf::uint32 value) {
  set_has_onlinemin();
  onlinemin_ = value;
  // @@protoc_insertion_point(field_set:Pmd.LoginRecordData.onlinemin)
}

// -------------------------------------------------------------------

// RequestLoginRecordGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestLoginRecordGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestLoginRecordGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestLoginRecordGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestLoginRecordGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.zoneid)
}

// optional uint64 accid = 3;
inline bool RequestLoginRecordGmUserPmd_CS::has_accid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_accid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_accid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 RequestLoginRecordGmUserPmd_CS::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.accid)
  return accid_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.accid)
}

// optional uint64 charid = 4;
inline bool RequestLoginRecordGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestLoginRecordGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.charid)
}

// optional uint64 starttime = 5;
inline bool RequestLoginRecordGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestLoginRecordGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 6;
inline bool RequestLoginRecordGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestLoginRecordGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.endtime)
}

// repeated .Pmd.LoginRecordData data = 7;
inline int RequestLoginRecordGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestLoginRecordGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::LoginRecordData& RequestLoginRecordGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::LoginRecordData* RequestLoginRecordGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestLoginRecordGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::LoginRecordData* RequestLoginRecordGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestLoginRecordGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::LoginRecordData >&
RequestLoginRecordGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestLoginRecordGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::LoginRecordData >*
RequestLoginRecordGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestLoginRecordGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 gmid = 8;
inline bool RequestLoginRecordGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestLoginRecordGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 9;
inline bool RequestLoginRecordGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestLoginRecordGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 10;
inline bool RequestLoginRecordGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestLoginRecordGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 11;
inline bool RequestLoginRecordGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestLoginRecordGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestLoginRecordGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestLoginRecordGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginRecordGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestLoginRecordGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginRecordGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// ConsumeRecordData

// optional uint64 id = 1;
inline bool ConsumeRecordData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsumeRecordData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsumeRecordData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsumeRecordData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 ConsumeRecordData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.id)
  return id_;
}
inline void ConsumeRecordData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.id)
}

// optional uint64 accid = 2;
inline bool ConsumeRecordData::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConsumeRecordData::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConsumeRecordData::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConsumeRecordData::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 ConsumeRecordData::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.accid)
  return accid_;
}
inline void ConsumeRecordData::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.accid)
}

// optional uint64 charid = 3;
inline bool ConsumeRecordData::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConsumeRecordData::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConsumeRecordData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConsumeRecordData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ConsumeRecordData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.charid)
  return charid_;
}
inline void ConsumeRecordData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.charid)
}

// optional string charname = 4;
inline bool ConsumeRecordData::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConsumeRecordData::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConsumeRecordData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConsumeRecordData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& ConsumeRecordData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.charname)
  return *charname_;
}
inline void ConsumeRecordData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.charname)
}
inline void ConsumeRecordData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ConsumeRecordData.charname)
}
inline void ConsumeRecordData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ConsumeRecordData.charname)
}
inline ::std::string* ConsumeRecordData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ConsumeRecordData.charname)
  return charname_;
}
inline ::std::string* ConsumeRecordData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ConsumeRecordData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ConsumeRecordData.charname)
}

// optional uint32 itemtype = 5;
inline bool ConsumeRecordData::has_itemtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConsumeRecordData::set_has_itemtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConsumeRecordData::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConsumeRecordData::clear_itemtype() {
  itemtype_ = 0u;
  clear_has_itemtype();
}
inline ::google::protobuf::uint32 ConsumeRecordData::itemtype() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.itemtype)
  return itemtype_;
}
inline void ConsumeRecordData::set_itemtype(::google::protobuf::uint32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.itemtype)
}

// optional uint32 itemid = 6;
inline bool ConsumeRecordData::has_itemid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConsumeRecordData::set_has_itemid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConsumeRecordData::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConsumeRecordData::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 ConsumeRecordData::itemid() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.itemid)
  return itemid_;
}
inline void ConsumeRecordData::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.itemid)
}

// optional string itemname = 7;
inline bool ConsumeRecordData::has_itemname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConsumeRecordData::set_has_itemname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConsumeRecordData::clear_has_itemname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConsumeRecordData::clear_itemname() {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_->clear();
  }
  clear_has_itemname();
}
inline const ::std::string& ConsumeRecordData::itemname() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.itemname)
  return *itemname_;
}
inline void ConsumeRecordData::set_itemname(const ::std::string& value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.itemname)
}
inline void ConsumeRecordData::set_itemname(const char* value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ConsumeRecordData.itemname)
}
inline void ConsumeRecordData::set_itemname(const char* value, size_t size) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ConsumeRecordData.itemname)
}
inline ::std::string* ConsumeRecordData::mutable_itemname() {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ConsumeRecordData.itemname)
  return itemname_;
}
inline ::std::string* ConsumeRecordData::release_itemname() {
  clear_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemname_;
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ConsumeRecordData::set_allocated_itemname(::std::string* itemname) {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemname_;
  }
  if (itemname) {
    set_has_itemname();
    itemname_ = itemname;
  } else {
    clear_has_itemname();
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ConsumeRecordData.itemname)
}

// optional uint32 optype = 8;
inline bool ConsumeRecordData::has_optype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConsumeRecordData::set_has_optype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConsumeRecordData::clear_has_optype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConsumeRecordData::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 ConsumeRecordData::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.optype)
  return optype_;
}
inline void ConsumeRecordData::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.optype)
}

// optional uint32 actionid = 9;
inline bool ConsumeRecordData::has_actionid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConsumeRecordData::set_has_actionid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConsumeRecordData::clear_has_actionid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConsumeRecordData::clear_actionid() {
  actionid_ = 0u;
  clear_has_actionid();
}
inline ::google::protobuf::uint32 ConsumeRecordData::actionid() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.actionid)
  return actionid_;
}
inline void ConsumeRecordData::set_actionid(::google::protobuf::uint32 value) {
  set_has_actionid();
  actionid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.actionid)
}

// optional string actionname = 10;
inline bool ConsumeRecordData::has_actionname() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConsumeRecordData::set_has_actionname() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConsumeRecordData::clear_has_actionname() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConsumeRecordData::clear_actionname() {
  if (actionname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_->clear();
  }
  clear_has_actionname();
}
inline const ::std::string& ConsumeRecordData::actionname() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.actionname)
  return *actionname_;
}
inline void ConsumeRecordData::set_actionname(const ::std::string& value) {
  set_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_ = new ::std::string;
  }
  actionname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.actionname)
}
inline void ConsumeRecordData::set_actionname(const char* value) {
  set_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_ = new ::std::string;
  }
  actionname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ConsumeRecordData.actionname)
}
inline void ConsumeRecordData::set_actionname(const char* value, size_t size) {
  set_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_ = new ::std::string;
  }
  actionname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ConsumeRecordData.actionname)
}
inline ::std::string* ConsumeRecordData::mutable_actionname() {
  set_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ConsumeRecordData.actionname)
  return actionname_;
}
inline ::std::string* ConsumeRecordData::release_actionname() {
  clear_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = actionname_;
    actionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ConsumeRecordData::set_allocated_actionname(::std::string* actionname) {
  if (actionname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete actionname_;
  }
  if (actionname) {
    set_has_actionname();
    actionname_ = actionname;
  } else {
    clear_has_actionname();
    actionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ConsumeRecordData.actionname)
}

// optional uint32 beforenum = 11;
inline bool ConsumeRecordData::has_beforenum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConsumeRecordData::set_has_beforenum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConsumeRecordData::clear_has_beforenum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConsumeRecordData::clear_beforenum() {
  beforenum_ = 0u;
  clear_has_beforenum();
}
inline ::google::protobuf::uint32 ConsumeRecordData::beforenum() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.beforenum)
  return beforenum_;
}
inline void ConsumeRecordData::set_beforenum(::google::protobuf::uint32 value) {
  set_has_beforenum();
  beforenum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.beforenum)
}

// optional uint32 afternum = 12;
inline bool ConsumeRecordData::has_afternum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConsumeRecordData::set_has_afternum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ConsumeRecordData::clear_has_afternum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ConsumeRecordData::clear_afternum() {
  afternum_ = 0u;
  clear_has_afternum();
}
inline ::google::protobuf::uint32 ConsumeRecordData::afternum() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.afternum)
  return afternum_;
}
inline void ConsumeRecordData::set_afternum(::google::protobuf::uint32 value) {
  set_has_afternum();
  afternum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.afternum)
}

// optional uint32 usednum = 13;
inline bool ConsumeRecordData::has_usednum() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ConsumeRecordData::set_has_usednum() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ConsumeRecordData::clear_has_usednum() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ConsumeRecordData::clear_usednum() {
  usednum_ = 0u;
  clear_has_usednum();
}
inline ::google::protobuf::uint32 ConsumeRecordData::usednum() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.usednum)
  return usednum_;
}
inline void ConsumeRecordData::set_usednum(::google::protobuf::uint32 value) {
  set_has_usednum();
  usednum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.usednum)
}

// optional uint64 ts = 14;
inline bool ConsumeRecordData::has_ts() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ConsumeRecordData::set_has_ts() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ConsumeRecordData::clear_has_ts() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ConsumeRecordData::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 ConsumeRecordData::ts() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.ts)
  return ts_;
}
inline void ConsumeRecordData::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.ts)
}

// optional string ext = 15;
inline bool ConsumeRecordData::has_ext() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ConsumeRecordData::set_has_ext() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ConsumeRecordData::clear_has_ext() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ConsumeRecordData::clear_ext() {
  if (ext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_->clear();
  }
  clear_has_ext();
}
inline const ::std::string& ConsumeRecordData::ext() const {
  // @@protoc_insertion_point(field_get:Pmd.ConsumeRecordData.ext)
  return *ext_;
}
inline void ConsumeRecordData::set_ext(const ::std::string& value) {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  ext_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ConsumeRecordData.ext)
}
inline void ConsumeRecordData::set_ext(const char* value) {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  ext_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ConsumeRecordData.ext)
}
inline void ConsumeRecordData::set_ext(const char* value, size_t size) {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  ext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ConsumeRecordData.ext)
}
inline ::std::string* ConsumeRecordData::mutable_ext() {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ConsumeRecordData.ext)
  return ext_;
}
inline ::std::string* ConsumeRecordData::release_ext() {
  clear_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ext_;
    ext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ConsumeRecordData::set_allocated_ext(::std::string* ext) {
  if (ext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ext_;
  }
  if (ext) {
    set_has_ext();
    ext_ = ext;
  } else {
    clear_has_ext();
    ext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ConsumeRecordData.ext)
}

// -------------------------------------------------------------------

// RequestConsumeRecordGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestConsumeRecordGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestConsumeRecordGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestConsumeRecordGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestConsumeRecordGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.charid)
}

// required uint32 type = 4;
inline bool RequestConsumeRecordGmUserPmd_CS::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::type() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.type)
  return type_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.type)
}

// optional uint32 itemid = 5;
inline bool RequestConsumeRecordGmUserPmd_CS::has_itemid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_itemid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::itemid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.itemid)
  return itemid_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.itemid)
}

// optional uint32 optype = 6;
inline bool RequestConsumeRecordGmUserPmd_CS::has_optype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_optype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_optype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.optype)
  return optype_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.optype)
}

// optional uint32 actionid = 7;
inline bool RequestConsumeRecordGmUserPmd_CS::has_actionid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_actionid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_actionid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_actionid() {
  actionid_ = 0u;
  clear_has_actionid();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::actionid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.actionid)
  return actionid_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_actionid(::google::protobuf::uint32 value) {
  set_has_actionid();
  actionid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.actionid)
}

// optional uint64 starttime = 8;
inline bool RequestConsumeRecordGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestConsumeRecordGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 9;
inline bool RequestConsumeRecordGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestConsumeRecordGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.endtime)
}

// repeated .Pmd.ConsumeRecordData data = 10;
inline int RequestConsumeRecordGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::ConsumeRecordData& RequestConsumeRecordGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::ConsumeRecordData* RequestConsumeRecordGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestConsumeRecordGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::ConsumeRecordData* RequestConsumeRecordGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestConsumeRecordGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ConsumeRecordData >&
RequestConsumeRecordGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestConsumeRecordGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::ConsumeRecordData >*
RequestConsumeRecordGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestConsumeRecordGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 gmid = 11;
inline bool RequestConsumeRecordGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 12;
inline bool RequestConsumeRecordGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 13;
inline bool RequestConsumeRecordGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 14;
inline bool RequestConsumeRecordGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RequestConsumeRecordGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestConsumeRecordGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestConsumeRecordGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestConsumeRecordGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestConsumeRecordGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// ActionRecordData

// optional uint64 id = 1;
inline bool ActionRecordData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionRecordData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionRecordData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionRecordData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 ActionRecordData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.id)
  return id_;
}
inline void ActionRecordData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.id)
}

// optional uint64 accid = 2;
inline bool ActionRecordData::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionRecordData::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionRecordData::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionRecordData::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 ActionRecordData::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.accid)
  return accid_;
}
inline void ActionRecordData::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.accid)
}

// optional uint64 charid = 3;
inline bool ActionRecordData::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionRecordData::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionRecordData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionRecordData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ActionRecordData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.charid)
  return charid_;
}
inline void ActionRecordData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.charid)
}

// optional string charname = 4;
inline bool ActionRecordData::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActionRecordData::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActionRecordData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActionRecordData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& ActionRecordData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.charname)
  return *charname_;
}
inline void ActionRecordData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.charname)
}
inline void ActionRecordData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ActionRecordData.charname)
}
inline void ActionRecordData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ActionRecordData.charname)
}
inline ::std::string* ActionRecordData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ActionRecordData.charname)
  return charname_;
}
inline ::std::string* ActionRecordData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActionRecordData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ActionRecordData.charname)
}

// optional uint32 acttype = 5;
inline bool ActionRecordData::has_acttype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActionRecordData::set_has_acttype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActionRecordData::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActionRecordData::clear_acttype() {
  acttype_ = 0u;
  clear_has_acttype();
}
inline ::google::protobuf::uint32 ActionRecordData::acttype() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.acttype)
  return acttype_;
}
inline void ActionRecordData::set_acttype(::google::protobuf::uint32 value) {
  set_has_acttype();
  acttype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.acttype)
}

// optional string typename = 6;
inline bool ActionRecordData::has_typename_() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActionRecordData::set_has_typename_() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActionRecordData::clear_has_typename_() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActionRecordData::clear_typename_() {
  if (typename__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__->clear();
  }
  clear_has_typename_();
}
inline const ::std::string& ActionRecordData::typename_() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.typename)
  return *typename__;
}
inline void ActionRecordData::set_typename_(const ::std::string& value) {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  typename__->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.typename)
}
inline void ActionRecordData::set_typename_(const char* value) {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  typename__->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ActionRecordData.typename)
}
inline void ActionRecordData::set_typename_(const char* value, size_t size) {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  typename__->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ActionRecordData.typename)
}
inline ::std::string* ActionRecordData::mutable_typename_() {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ActionRecordData.typename)
  return typename__;
}
inline ::std::string* ActionRecordData::release_typename_() {
  clear_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = typename__;
    typename__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActionRecordData::set_allocated_typename_(::std::string* typename_) {
  if (typename__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete typename__;
  }
  if (typename_) {
    set_has_typename_();
    typename__ = typename_;
  } else {
    clear_has_typename_();
    typename__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ActionRecordData.typename)
}

// optional uint32 actionid = 7;
inline bool ActionRecordData::has_actionid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActionRecordData::set_has_actionid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActionRecordData::clear_has_actionid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActionRecordData::clear_actionid() {
  actionid_ = 0u;
  clear_has_actionid();
}
inline ::google::protobuf::uint32 ActionRecordData::actionid() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.actionid)
  return actionid_;
}
inline void ActionRecordData::set_actionid(::google::protobuf::uint32 value) {
  set_has_actionid();
  actionid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.actionid)
}

// optional string actionname = 8;
inline bool ActionRecordData::has_actionname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ActionRecordData::set_has_actionname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ActionRecordData::clear_has_actionname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ActionRecordData::clear_actionname() {
  if (actionname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_->clear();
  }
  clear_has_actionname();
}
inline const ::std::string& ActionRecordData::actionname() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.actionname)
  return *actionname_;
}
inline void ActionRecordData::set_actionname(const ::std::string& value) {
  set_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_ = new ::std::string;
  }
  actionname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.actionname)
}
inline void ActionRecordData::set_actionname(const char* value) {
  set_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_ = new ::std::string;
  }
  actionname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ActionRecordData.actionname)
}
inline void ActionRecordData::set_actionname(const char* value, size_t size) {
  set_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_ = new ::std::string;
  }
  actionname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ActionRecordData.actionname)
}
inline ::std::string* ActionRecordData::mutable_actionname() {
  set_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actionname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ActionRecordData.actionname)
  return actionname_;
}
inline ::std::string* ActionRecordData::release_actionname() {
  clear_has_actionname();
  if (actionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = actionname_;
    actionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActionRecordData::set_allocated_actionname(::std::string* actionname) {
  if (actionname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete actionname_;
  }
  if (actionname) {
    set_has_actionname();
    actionname_ = actionname;
  } else {
    clear_has_actionname();
    actionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ActionRecordData.actionname)
}

// optional uint32 state = 9;
inline bool ActionRecordData::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ActionRecordData::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ActionRecordData::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ActionRecordData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 ActionRecordData::state() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.state)
  return state_;
}
inline void ActionRecordData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.state)
}

// optional uint32 power = 10;
inline bool ActionRecordData::has_power() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ActionRecordData::set_has_power() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ActionRecordData::clear_has_power() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ActionRecordData::clear_power() {
  power_ = 0u;
  clear_has_power();
}
inline ::google::protobuf::uint32 ActionRecordData::power() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.power)
  return power_;
}
inline void ActionRecordData::set_power(::google::protobuf::uint32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.power)
}

// optional uint32 lastmin = 11;
inline bool ActionRecordData::has_lastmin() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ActionRecordData::set_has_lastmin() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ActionRecordData::clear_has_lastmin() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ActionRecordData::clear_lastmin() {
  lastmin_ = 0u;
  clear_has_lastmin();
}
inline ::google::protobuf::uint32 ActionRecordData::lastmin() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.lastmin)
  return lastmin_;
}
inline void ActionRecordData::set_lastmin(::google::protobuf::uint32 value) {
  set_has_lastmin();
  lastmin_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.lastmin)
}

// optional uint64 starttime = 12;
inline bool ActionRecordData::has_starttime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ActionRecordData::set_has_starttime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ActionRecordData::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ActionRecordData::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 ActionRecordData::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.starttime)
  return starttime_;
}
inline void ActionRecordData::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.starttime)
}

// optional uint64 endtime = 13;
inline bool ActionRecordData::has_endtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ActionRecordData::set_has_endtime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ActionRecordData::clear_has_endtime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ActionRecordData::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 ActionRecordData::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.endtime)
  return endtime_;
}
inline void ActionRecordData::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.endtime)
}

// optional string ext1 = 14;
inline bool ActionRecordData::has_ext1() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ActionRecordData::set_has_ext1() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ActionRecordData::clear_has_ext1() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ActionRecordData::clear_ext1() {
  if (ext1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext1_->clear();
  }
  clear_has_ext1();
}
inline const ::std::string& ActionRecordData::ext1() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.ext1)
  return *ext1_;
}
inline void ActionRecordData::set_ext1(const ::std::string& value) {
  set_has_ext1();
  if (ext1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext1_ = new ::std::string;
  }
  ext1_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.ext1)
}
inline void ActionRecordData::set_ext1(const char* value) {
  set_has_ext1();
  if (ext1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext1_ = new ::std::string;
  }
  ext1_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ActionRecordData.ext1)
}
inline void ActionRecordData::set_ext1(const char* value, size_t size) {
  set_has_ext1();
  if (ext1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext1_ = new ::std::string;
  }
  ext1_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ActionRecordData.ext1)
}
inline ::std::string* ActionRecordData::mutable_ext1() {
  set_has_ext1();
  if (ext1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext1_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ActionRecordData.ext1)
  return ext1_;
}
inline ::std::string* ActionRecordData::release_ext1() {
  clear_has_ext1();
  if (ext1_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ext1_;
    ext1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActionRecordData::set_allocated_ext1(::std::string* ext1) {
  if (ext1_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ext1_;
  }
  if (ext1) {
    set_has_ext1();
    ext1_ = ext1;
  } else {
    clear_has_ext1();
    ext1_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ActionRecordData.ext1)
}

// optional string ext2 = 15;
inline bool ActionRecordData::has_ext2() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ActionRecordData::set_has_ext2() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ActionRecordData::clear_has_ext2() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ActionRecordData::clear_ext2() {
  if (ext2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext2_->clear();
  }
  clear_has_ext2();
}
inline const ::std::string& ActionRecordData::ext2() const {
  // @@protoc_insertion_point(field_get:Pmd.ActionRecordData.ext2)
  return *ext2_;
}
inline void ActionRecordData::set_ext2(const ::std::string& value) {
  set_has_ext2();
  if (ext2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext2_ = new ::std::string;
  }
  ext2_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ActionRecordData.ext2)
}
inline void ActionRecordData::set_ext2(const char* value) {
  set_has_ext2();
  if (ext2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext2_ = new ::std::string;
  }
  ext2_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ActionRecordData.ext2)
}
inline void ActionRecordData::set_ext2(const char* value, size_t size) {
  set_has_ext2();
  if (ext2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext2_ = new ::std::string;
  }
  ext2_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ActionRecordData.ext2)
}
inline ::std::string* ActionRecordData::mutable_ext2() {
  set_has_ext2();
  if (ext2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext2_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ActionRecordData.ext2)
  return ext2_;
}
inline ::std::string* ActionRecordData::release_ext2() {
  clear_has_ext2();
  if (ext2_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ext2_;
    ext2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActionRecordData::set_allocated_ext2(::std::string* ext2) {
  if (ext2_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ext2_;
  }
  if (ext2) {
    set_has_ext2();
    ext2_ = ext2;
  } else {
    clear_has_ext2();
    ext2_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ActionRecordData.ext2)
}

// -------------------------------------------------------------------

// RequestActionRecordGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestActionRecordGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestActionRecordGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestActionRecordGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestActionRecordGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestActionRecordGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestActionRecordGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestActionRecordGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestActionRecordGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestActionRecordGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.charid)
}

// required uint32 type = 4;
inline bool RequestActionRecordGmUserPmd_CS::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 RequestActionRecordGmUserPmd_CS::type() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.type)
  return type_;
}
inline void RequestActionRecordGmUserPmd_CS::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.type)
}

// optional uint32 acttype = 5;
inline bool RequestActionRecordGmUserPmd_CS::has_acttype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_acttype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_acttype() {
  acttype_ = 0u;
  clear_has_acttype();
}
inline ::google::protobuf::uint32 RequestActionRecordGmUserPmd_CS::acttype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.acttype)
  return acttype_;
}
inline void RequestActionRecordGmUserPmd_CS::set_acttype(::google::protobuf::uint32 value) {
  set_has_acttype();
  acttype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.acttype)
}

// optional uint32 actionid = 6;
inline bool RequestActionRecordGmUserPmd_CS::has_actionid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_actionid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_actionid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_actionid() {
  actionid_ = 0u;
  clear_has_actionid();
}
inline ::google::protobuf::uint32 RequestActionRecordGmUserPmd_CS::actionid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.actionid)
  return actionid_;
}
inline void RequestActionRecordGmUserPmd_CS::set_actionid(::google::protobuf::uint32 value) {
  set_has_actionid();
  actionid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.actionid)
}

// optional uint64 starttime = 7;
inline bool RequestActionRecordGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestActionRecordGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestActionRecordGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 8;
inline bool RequestActionRecordGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestActionRecordGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestActionRecordGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.endtime)
}

// repeated .Pmd.ActionRecordData data = 9;
inline int RequestActionRecordGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestActionRecordGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::ActionRecordData& RequestActionRecordGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::ActionRecordData* RequestActionRecordGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestActionRecordGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::ActionRecordData* RequestActionRecordGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestActionRecordGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ActionRecordData >&
RequestActionRecordGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestActionRecordGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::ActionRecordData >*
RequestActionRecordGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestActionRecordGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 gmid = 10;
inline bool RequestActionRecordGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestActionRecordGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestActionRecordGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 11;
inline bool RequestActionRecordGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestActionRecordGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestActionRecordGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 12;
inline bool RequestActionRecordGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestActionRecordGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestActionRecordGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 13;
inline bool RequestActionRecordGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RequestActionRecordGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RequestActionRecordGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestActionRecordGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestActionRecordGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestActionRecordGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestActionRecordGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// StrengthenRecordData

// optional uint64 id = 1;
inline bool StrengthenRecordData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StrengthenRecordData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StrengthenRecordData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StrengthenRecordData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 StrengthenRecordData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.id)
  return id_;
}
inline void StrengthenRecordData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.id)
}

// optional uint64 accid = 2;
inline bool StrengthenRecordData::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StrengthenRecordData::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StrengthenRecordData::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StrengthenRecordData::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 StrengthenRecordData::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.accid)
  return accid_;
}
inline void StrengthenRecordData::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.accid)
}

// optional uint64 charid = 3;
inline bool StrengthenRecordData::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StrengthenRecordData::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StrengthenRecordData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StrengthenRecordData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 StrengthenRecordData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.charid)
  return charid_;
}
inline void StrengthenRecordData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.charid)
}

// optional string charname = 4;
inline bool StrengthenRecordData::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StrengthenRecordData::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StrengthenRecordData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StrengthenRecordData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& StrengthenRecordData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.charname)
  return *charname_;
}
inline void StrengthenRecordData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.charname)
}
inline void StrengthenRecordData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StrengthenRecordData.charname)
}
inline void StrengthenRecordData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StrengthenRecordData.charname)
}
inline ::std::string* StrengthenRecordData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StrengthenRecordData.charname)
  return charname_;
}
inline ::std::string* StrengthenRecordData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StrengthenRecordData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StrengthenRecordData.charname)
}

// optional uint32 optarget = 5;
inline bool StrengthenRecordData::has_optarget() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StrengthenRecordData::set_has_optarget() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StrengthenRecordData::clear_has_optarget() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StrengthenRecordData::clear_optarget() {
  optarget_ = 0u;
  clear_has_optarget();
}
inline ::google::protobuf::uint32 StrengthenRecordData::optarget() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.optarget)
  return optarget_;
}
inline void StrengthenRecordData::set_optarget(::google::protobuf::uint32 value) {
  set_has_optarget();
  optarget_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.optarget)
}

// optional string targetname = 6;
inline bool StrengthenRecordData::has_targetname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StrengthenRecordData::set_has_targetname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StrengthenRecordData::clear_has_targetname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StrengthenRecordData::clear_targetname() {
  if (targetname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_->clear();
  }
  clear_has_targetname();
}
inline const ::std::string& StrengthenRecordData::targetname() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.targetname)
  return *targetname_;
}
inline void StrengthenRecordData::set_targetname(const ::std::string& value) {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.targetname)
}
inline void StrengthenRecordData::set_targetname(const char* value) {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StrengthenRecordData.targetname)
}
inline void StrengthenRecordData::set_targetname(const char* value, size_t size) {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_ = new ::std::string;
  }
  targetname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StrengthenRecordData.targetname)
}
inline ::std::string* StrengthenRecordData::mutable_targetname() {
  set_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StrengthenRecordData.targetname)
  return targetname_;
}
inline ::std::string* StrengthenRecordData::release_targetname() {
  clear_has_targetname();
  if (targetname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = targetname_;
    targetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StrengthenRecordData::set_allocated_targetname(::std::string* targetname) {
  if (targetname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete targetname_;
  }
  if (targetname) {
    set_has_targetname();
    targetname_ = targetname;
  } else {
    clear_has_targetname();
    targetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StrengthenRecordData.targetname)
}

// optional uint32 optype = 7;
inline bool StrengthenRecordData::has_optype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StrengthenRecordData::set_has_optype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StrengthenRecordData::clear_has_optype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StrengthenRecordData::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 StrengthenRecordData::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.optype)
  return optype_;
}
inline void StrengthenRecordData::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.optype)
}

// optional string typename = 8;
inline bool StrengthenRecordData::has_typename_() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StrengthenRecordData::set_has_typename_() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StrengthenRecordData::clear_has_typename_() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StrengthenRecordData::clear_typename_() {
  if (typename__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__->clear();
  }
  clear_has_typename_();
}
inline const ::std::string& StrengthenRecordData::typename_() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.typename)
  return *typename__;
}
inline void StrengthenRecordData::set_typename_(const ::std::string& value) {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  typename__->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.typename)
}
inline void StrengthenRecordData::set_typename_(const char* value) {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  typename__->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StrengthenRecordData.typename)
}
inline void StrengthenRecordData::set_typename_(const char* value, size_t size) {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  typename__->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StrengthenRecordData.typename)
}
inline ::std::string* StrengthenRecordData::mutable_typename_() {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StrengthenRecordData.typename)
  return typename__;
}
inline ::std::string* StrengthenRecordData::release_typename_() {
  clear_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = typename__;
    typename__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StrengthenRecordData::set_allocated_typename_(::std::string* typename_) {
  if (typename__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete typename__;
  }
  if (typename_) {
    set_has_typename_();
    typename__ = typename_;
  } else {
    clear_has_typename_();
    typename__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StrengthenRecordData.typename)
}

// optional uint32 opresult = 9;
inline bool StrengthenRecordData::has_opresult() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StrengthenRecordData::set_has_opresult() {
  _has_bits_[0] |= 0x00000100u;
}
inline void StrengthenRecordData::clear_has_opresult() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void StrengthenRecordData::clear_opresult() {
  opresult_ = 0u;
  clear_has_opresult();
}
inline ::google::protobuf::uint32 StrengthenRecordData::opresult() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.opresult)
  return opresult_;
}
inline void StrengthenRecordData::set_opresult(::google::protobuf::uint32 value) {
  set_has_opresult();
  opresult_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.opresult)
}

// optional uint32 beforenum = 10;
inline bool StrengthenRecordData::has_beforenum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void StrengthenRecordData::set_has_beforenum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void StrengthenRecordData::clear_has_beforenum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void StrengthenRecordData::clear_beforenum() {
  beforenum_ = 0u;
  clear_has_beforenum();
}
inline ::google::protobuf::uint32 StrengthenRecordData::beforenum() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.beforenum)
  return beforenum_;
}
inline void StrengthenRecordData::set_beforenum(::google::protobuf::uint32 value) {
  set_has_beforenum();
  beforenum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.beforenum)
}

// optional uint32 afternum = 11;
inline bool StrengthenRecordData::has_afternum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void StrengthenRecordData::set_has_afternum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void StrengthenRecordData::clear_has_afternum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void StrengthenRecordData::clear_afternum() {
  afternum_ = 0u;
  clear_has_afternum();
}
inline ::google::protobuf::uint32 StrengthenRecordData::afternum() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.afternum)
  return afternum_;
}
inline void StrengthenRecordData::set_afternum(::google::protobuf::uint32 value) {
  set_has_afternum();
  afternum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.afternum)
}

// optional uint64 ts = 12;
inline bool StrengthenRecordData::has_ts() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void StrengthenRecordData::set_has_ts() {
  _has_bits_[0] |= 0x00000800u;
}
inline void StrengthenRecordData::clear_has_ts() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void StrengthenRecordData::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 StrengthenRecordData::ts() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.ts)
  return ts_;
}
inline void StrengthenRecordData::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.ts)
}

// optional string ext = 13;
inline bool StrengthenRecordData::has_ext() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void StrengthenRecordData::set_has_ext() {
  _has_bits_[0] |= 0x00001000u;
}
inline void StrengthenRecordData::clear_has_ext() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void StrengthenRecordData::clear_ext() {
  if (ext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_->clear();
  }
  clear_has_ext();
}
inline const ::std::string& StrengthenRecordData::ext() const {
  // @@protoc_insertion_point(field_get:Pmd.StrengthenRecordData.ext)
  return *ext_;
}
inline void StrengthenRecordData::set_ext(const ::std::string& value) {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  ext_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StrengthenRecordData.ext)
}
inline void StrengthenRecordData::set_ext(const char* value) {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  ext_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StrengthenRecordData.ext)
}
inline void StrengthenRecordData::set_ext(const char* value, size_t size) {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  ext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StrengthenRecordData.ext)
}
inline ::std::string* StrengthenRecordData::mutable_ext() {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StrengthenRecordData.ext)
  return ext_;
}
inline ::std::string* StrengthenRecordData::release_ext() {
  clear_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ext_;
    ext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StrengthenRecordData::set_allocated_ext(::std::string* ext) {
  if (ext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ext_;
  }
  if (ext) {
    set_has_ext();
    ext_ = ext;
  } else {
    clear_has_ext();
    ext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StrengthenRecordData.ext)
}

// -------------------------------------------------------------------

// RequestStrengthenRecordGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestStrengthenRecordGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestStrengthenRecordGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestStrengthenRecordGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.charid)
}

// optional uint32 optarget = 4;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_optarget() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_optarget() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_optarget() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_optarget() {
  optarget_ = 0u;
  clear_has_optarget();
}
inline ::google::protobuf::uint32 RequestStrengthenRecordGmUserPmd_CS::optarget() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.optarget)
  return optarget_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_optarget(::google::protobuf::uint32 value) {
  set_has_optarget();
  optarget_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.optarget)
}

// optional uint32 optype = 5;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_optype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_optype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_optype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 RequestStrengthenRecordGmUserPmd_CS::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.optype)
  return optype_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.optype)
}

// optional uint32 state = 6;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 RequestStrengthenRecordGmUserPmd_CS::state() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.state)
  return state_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.state)
}

// optional uint64 starttime = 7;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestStrengthenRecordGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 8;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestStrengthenRecordGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.endtime)
}

// repeated .Pmd.StrengthenRecordData data = 9;
inline int RequestStrengthenRecordGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::StrengthenRecordData& RequestStrengthenRecordGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::StrengthenRecordData* RequestStrengthenRecordGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestStrengthenRecordGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::StrengthenRecordData* RequestStrengthenRecordGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestStrengthenRecordGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::StrengthenRecordData >&
RequestStrengthenRecordGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestStrengthenRecordGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::StrengthenRecordData >*
RequestStrengthenRecordGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestStrengthenRecordGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 gmid = 10;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestStrengthenRecordGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 11;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestStrengthenRecordGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 12;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestStrengthenRecordGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 13;
inline bool RequestStrengthenRecordGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RequestStrengthenRecordGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestStrengthenRecordGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestStrengthenRecordGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestStrengthenRecordGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestStrengthenRecordGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// MailRecordData

// optional uint64 id = 1;
inline bool MailRecordData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailRecordData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailRecordData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailRecordData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MailRecordData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.id)
  return id_;
}
inline void MailRecordData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.id)
}

// optional uint64 charid = 2;
inline bool MailRecordData::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailRecordData::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailRecordData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailRecordData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 MailRecordData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.charid)
  return charid_;
}
inline void MailRecordData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.charid)
}

// optional string charname = 3;
inline bool MailRecordData::has_charname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailRecordData::set_has_charname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailRecordData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailRecordData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& MailRecordData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.charname)
  return *charname_;
}
inline void MailRecordData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.charname)
}
inline void MailRecordData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.MailRecordData.charname)
}
inline void MailRecordData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.MailRecordData.charname)
}
inline ::std::string* MailRecordData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.MailRecordData.charname)
  return charname_;
}
inline ::std::string* MailRecordData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailRecordData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.MailRecordData.charname)
}

// optional uint64 recvid = 4;
inline bool MailRecordData::has_recvid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailRecordData::set_has_recvid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailRecordData::clear_has_recvid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailRecordData::clear_recvid() {
  recvid_ = GOOGLE_ULONGLONG(0);
  clear_has_recvid();
}
inline ::google::protobuf::uint64 MailRecordData::recvid() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.recvid)
  return recvid_;
}
inline void MailRecordData::set_recvid(::google::protobuf::uint64 value) {
  set_has_recvid();
  recvid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.recvid)
}

// optional string recvname = 5;
inline bool MailRecordData::has_recvname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailRecordData::set_has_recvname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailRecordData::clear_has_recvname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailRecordData::clear_recvname() {
  if (recvname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recvname_->clear();
  }
  clear_has_recvname();
}
inline const ::std::string& MailRecordData::recvname() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.recvname)
  return *recvname_;
}
inline void MailRecordData::set_recvname(const ::std::string& value) {
  set_has_recvname();
  if (recvname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recvname_ = new ::std::string;
  }
  recvname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.recvname)
}
inline void MailRecordData::set_recvname(const char* value) {
  set_has_recvname();
  if (recvname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recvname_ = new ::std::string;
  }
  recvname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.MailRecordData.recvname)
}
inline void MailRecordData::set_recvname(const char* value, size_t size) {
  set_has_recvname();
  if (recvname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recvname_ = new ::std::string;
  }
  recvname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.MailRecordData.recvname)
}
inline ::std::string* MailRecordData::mutable_recvname() {
  set_has_recvname();
  if (recvname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    recvname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.MailRecordData.recvname)
  return recvname_;
}
inline ::std::string* MailRecordData::release_recvname() {
  clear_has_recvname();
  if (recvname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = recvname_;
    recvname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailRecordData::set_allocated_recvname(::std::string* recvname) {
  if (recvname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete recvname_;
  }
  if (recvname) {
    set_has_recvname();
    recvname_ = recvname;
  } else {
    clear_has_recvname();
    recvname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.MailRecordData.recvname)
}

// optional string subject = 6;
inline bool MailRecordData::has_subject() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailRecordData::set_has_subject() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailRecordData::clear_has_subject() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailRecordData::clear_subject() {
  if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_->clear();
  }
  clear_has_subject();
}
inline const ::std::string& MailRecordData::subject() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.subject)
  return *subject_;
}
inline void MailRecordData::set_subject(const ::std::string& value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.subject)
}
inline void MailRecordData::set_subject(const char* value) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.MailRecordData.subject)
}
inline void MailRecordData::set_subject(const char* value, size_t size) {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  subject_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.MailRecordData.subject)
}
inline ::std::string* MailRecordData::mutable_subject() {
  set_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    subject_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.MailRecordData.subject)
  return subject_;
}
inline ::std::string* MailRecordData::release_subject() {
  clear_has_subject();
  if (subject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = subject_;
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailRecordData::set_allocated_subject(::std::string* subject) {
  if (subject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete subject_;
  }
  if (subject) {
    set_has_subject();
    subject_ = subject;
  } else {
    clear_has_subject();
    subject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.MailRecordData.subject)
}

// optional string content = 7;
inline bool MailRecordData::has_content() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailRecordData::set_has_content() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailRecordData::clear_has_content() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailRecordData::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& MailRecordData::content() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.content)
  return *content_;
}
inline void MailRecordData::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.content)
}
inline void MailRecordData::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.MailRecordData.content)
}
inline void MailRecordData::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.MailRecordData.content)
}
inline ::std::string* MailRecordData::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.MailRecordData.content)
  return content_;
}
inline ::std::string* MailRecordData::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailRecordData::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.MailRecordData.content)
}

// optional string attachment = 8;
inline bool MailRecordData::has_attachment() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailRecordData::set_has_attachment() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailRecordData::clear_has_attachment() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailRecordData::clear_attachment() {
  if (attachment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attachment_->clear();
  }
  clear_has_attachment();
}
inline const ::std::string& MailRecordData::attachment() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.attachment)
  return *attachment_;
}
inline void MailRecordData::set_attachment(const ::std::string& value) {
  set_has_attachment();
  if (attachment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attachment_ = new ::std::string;
  }
  attachment_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.attachment)
}
inline void MailRecordData::set_attachment(const char* value) {
  set_has_attachment();
  if (attachment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attachment_ = new ::std::string;
  }
  attachment_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.MailRecordData.attachment)
}
inline void MailRecordData::set_attachment(const char* value, size_t size) {
  set_has_attachment();
  if (attachment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attachment_ = new ::std::string;
  }
  attachment_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.MailRecordData.attachment)
}
inline ::std::string* MailRecordData::mutable_attachment() {
  set_has_attachment();
  if (attachment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attachment_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.MailRecordData.attachment)
  return attachment_;
}
inline ::std::string* MailRecordData::release_attachment() {
  clear_has_attachment();
  if (attachment_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attachment_;
    attachment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailRecordData::set_allocated_attachment(::std::string* attachment) {
  if (attachment_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attachment_;
  }
  if (attachment) {
    set_has_attachment();
    attachment_ = attachment;
  } else {
    clear_has_attachment();
    attachment_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.MailRecordData.attachment)
}

// optional uint32 state = 9;
inline bool MailRecordData::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailRecordData::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailRecordData::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailRecordData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 MailRecordData::state() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.state)
  return state_;
}
inline void MailRecordData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.state)
}

// optional uint64 ts = 10;
inline bool MailRecordData::has_ts() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailRecordData::set_has_ts() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailRecordData::clear_has_ts() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailRecordData::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 MailRecordData::ts() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.ts)
  return ts_;
}
inline void MailRecordData::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.ts)
}

// optional uint32 optype = 11;
inline bool MailRecordData::has_optype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MailRecordData::set_has_optype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MailRecordData::clear_has_optype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MailRecordData::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 MailRecordData::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.MailRecordData.optype)
  return optype_;
}
inline void MailRecordData::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.MailRecordData.optype)
}

// -------------------------------------------------------------------

// RequestMailRecordGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestMailRecordGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestMailRecordGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestMailRecordGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestMailRecordGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestMailRecordGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestMailRecordGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestMailRecordGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestMailRecordGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestMailRecordGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.charid)
}

// optional uint64 recvid = 4;
inline bool RequestMailRecordGmUserPmd_CS::has_recvid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_recvid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_recvid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_recvid() {
  recvid_ = GOOGLE_ULONGLONG(0);
  clear_has_recvid();
}
inline ::google::protobuf::uint64 RequestMailRecordGmUserPmd_CS::recvid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.recvid)
  return recvid_;
}
inline void RequestMailRecordGmUserPmd_CS::set_recvid(::google::protobuf::uint64 value) {
  set_has_recvid();
  recvid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.recvid)
}

// optional uint32 optype = 5;
inline bool RequestMailRecordGmUserPmd_CS::has_optype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_optype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_optype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 RequestMailRecordGmUserPmd_CS::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.optype)
  return optype_;
}
inline void RequestMailRecordGmUserPmd_CS::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.optype)
}

// optional uint64 starttime = 6;
inline bool RequestMailRecordGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestMailRecordGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestMailRecordGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 7;
inline bool RequestMailRecordGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestMailRecordGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestMailRecordGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.endtime)
}

// repeated .Pmd.MailRecordData data = 8;
inline int RequestMailRecordGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestMailRecordGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::MailRecordData& RequestMailRecordGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::MailRecordData* RequestMailRecordGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestMailRecordGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::MailRecordData* RequestMailRecordGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestMailRecordGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::MailRecordData >&
RequestMailRecordGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestMailRecordGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::MailRecordData >*
RequestMailRecordGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestMailRecordGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 gmid = 9;
inline bool RequestMailRecordGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestMailRecordGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestMailRecordGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 10;
inline bool RequestMailRecordGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestMailRecordGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestMailRecordGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 11;
inline bool RequestMailRecordGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestMailRecordGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestMailRecordGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 12;
inline bool RequestMailRecordGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RequestMailRecordGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RequestMailRecordGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestMailRecordGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestMailRecordGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestMailRecordGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestMailRecordGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// RankRecordData

// optional uint64 id = 1;
inline bool RankRecordData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankRecordData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankRecordData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankRecordData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RankRecordData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.id)
  return id_;
}
inline void RankRecordData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.id)
}

// optional uint64 rankid = 2;
inline bool RankRecordData::has_rankid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankRecordData::set_has_rankid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankRecordData::clear_has_rankid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankRecordData::clear_rankid() {
  rankid_ = GOOGLE_ULONGLONG(0);
  clear_has_rankid();
}
inline ::google::protobuf::uint64 RankRecordData::rankid() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.rankid)
  return rankid_;
}
inline void RankRecordData::set_rankid(::google::protobuf::uint64 value) {
  set_has_rankid();
  rankid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.rankid)
}

// optional string rankname = 3;
inline bool RankRecordData::has_rankname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankRecordData::set_has_rankname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankRecordData::clear_has_rankname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankRecordData::clear_rankname() {
  if (rankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_->clear();
  }
  clear_has_rankname();
}
inline const ::std::string& RankRecordData::rankname() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.rankname)
  return *rankname_;
}
inline void RankRecordData::set_rankname(const ::std::string& value) {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  rankname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.rankname)
}
inline void RankRecordData::set_rankname(const char* value) {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  rankname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RankRecordData.rankname)
}
inline void RankRecordData::set_rankname(const char* value, size_t size) {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  rankname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RankRecordData.rankname)
}
inline ::std::string* RankRecordData::mutable_rankname() {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RankRecordData.rankname)
  return rankname_;
}
inline ::std::string* RankRecordData::release_rankname() {
  clear_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rankname_;
    rankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RankRecordData::set_allocated_rankname(::std::string* rankname) {
  if (rankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rankname_;
  }
  if (rankname) {
    set_has_rankname();
    rankname_ = rankname;
  } else {
    clear_has_rankname();
    rankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RankRecordData.rankname)
}

// optional uint64 accid = 4;
inline bool RankRecordData::has_accid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RankRecordData::set_has_accid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RankRecordData::clear_has_accid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RankRecordData::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 RankRecordData::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.accid)
  return accid_;
}
inline void RankRecordData::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.accid)
}

// optional uint64 charid = 5;
inline bool RankRecordData::has_charid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RankRecordData::set_has_charid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RankRecordData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RankRecordData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RankRecordData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.charid)
  return charid_;
}
inline void RankRecordData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.charid)
}

// optional string charname = 6;
inline bool RankRecordData::has_charname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RankRecordData::set_has_charname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RankRecordData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RankRecordData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RankRecordData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.charname)
  return *charname_;
}
inline void RankRecordData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.charname)
}
inline void RankRecordData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RankRecordData.charname)
}
inline void RankRecordData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RankRecordData.charname)
}
inline ::std::string* RankRecordData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RankRecordData.charname)
  return charname_;
}
inline ::std::string* RankRecordData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RankRecordData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RankRecordData.charname)
}

// optional string profession = 7;
inline bool RankRecordData::has_profession() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RankRecordData::set_has_profession() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RankRecordData::clear_has_profession() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RankRecordData::clear_profession() {
  if (profession_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_->clear();
  }
  clear_has_profession();
}
inline const ::std::string& RankRecordData::profession() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.profession)
  return *profession_;
}
inline void RankRecordData::set_profession(const ::std::string& value) {
  set_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_ = new ::std::string;
  }
  profession_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.profession)
}
inline void RankRecordData::set_profession(const char* value) {
  set_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_ = new ::std::string;
  }
  profession_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RankRecordData.profession)
}
inline void RankRecordData::set_profession(const char* value, size_t size) {
  set_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_ = new ::std::string;
  }
  profession_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RankRecordData.profession)
}
inline ::std::string* RankRecordData::mutable_profession() {
  set_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RankRecordData.profession)
  return profession_;
}
inline ::std::string* RankRecordData::release_profession() {
  clear_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = profession_;
    profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RankRecordData::set_allocated_profession(::std::string* profession) {
  if (profession_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profession_;
  }
  if (profession) {
    set_has_profession();
    profession_ = profession;
  } else {
    clear_has_profession();
    profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RankRecordData.profession)
}

// optional uint32 power = 8;
inline bool RankRecordData::has_power() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RankRecordData::set_has_power() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RankRecordData::clear_has_power() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RankRecordData::clear_power() {
  power_ = 0u;
  clear_has_power();
}
inline ::google::protobuf::uint32 RankRecordData::power() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.power)
  return power_;
}
inline void RankRecordData::set_power(::google::protobuf::uint32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.power)
}

// optional uint64 ts = 9;
inline bool RankRecordData::has_ts() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RankRecordData::set_has_ts() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RankRecordData::clear_has_ts() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RankRecordData::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 RankRecordData::ts() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.ts)
  return ts_;
}
inline void RankRecordData::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.ts)
}

// optional string ext = 10;
inline bool RankRecordData::has_ext() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RankRecordData::set_has_ext() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RankRecordData::clear_has_ext() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RankRecordData::clear_ext() {
  if (ext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_->clear();
  }
  clear_has_ext();
}
inline const ::std::string& RankRecordData::ext() const {
  // @@protoc_insertion_point(field_get:Pmd.RankRecordData.ext)
  return *ext_;
}
inline void RankRecordData::set_ext(const ::std::string& value) {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  ext_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RankRecordData.ext)
}
inline void RankRecordData::set_ext(const char* value) {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  ext_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RankRecordData.ext)
}
inline void RankRecordData::set_ext(const char* value, size_t size) {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  ext_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RankRecordData.ext)
}
inline ::std::string* RankRecordData::mutable_ext() {
  set_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ext_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RankRecordData.ext)
  return ext_;
}
inline ::std::string* RankRecordData::release_ext() {
  clear_has_ext();
  if (ext_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ext_;
    ext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RankRecordData::set_allocated_ext(::std::string* ext) {
  if (ext_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ext_;
  }
  if (ext) {
    set_has_ext();
    ext_ = ext;
  } else {
    clear_has_ext();
    ext_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RankRecordData.ext)
}

// -------------------------------------------------------------------

// RequestRankRecordGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestRankRecordGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestRankRecordGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestRankRecordGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestRankRecordGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestRankRecordGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestRankRecordGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.zoneid)
}

// optional uint32 ranktype = 3;
inline bool RequestRankRecordGmUserPmd_CS::has_ranktype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_ranktype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_ranktype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_ranktype() {
  ranktype_ = 0u;
  clear_has_ranktype();
}
inline ::google::protobuf::uint32 RequestRankRecordGmUserPmd_CS::ranktype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.ranktype)
  return ranktype_;
}
inline void RequestRankRecordGmUserPmd_CS::set_ranktype(::google::protobuf::uint32 value) {
  set_has_ranktype();
  ranktype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.ranktype)
}

// optional string rankname = 4;
inline bool RequestRankRecordGmUserPmd_CS::has_rankname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_rankname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_rankname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_rankname() {
  if (rankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_->clear();
  }
  clear_has_rankname();
}
inline const ::std::string& RequestRankRecordGmUserPmd_CS::rankname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.rankname)
  return *rankname_;
}
inline void RequestRankRecordGmUserPmd_CS::set_rankname(const ::std::string& value) {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  rankname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.rankname)
}
inline void RequestRankRecordGmUserPmd_CS::set_rankname(const char* value) {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  rankname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestRankRecordGmUserPmd_CS.rankname)
}
inline void RequestRankRecordGmUserPmd_CS::set_rankname(const char* value, size_t size) {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  rankname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestRankRecordGmUserPmd_CS.rankname)
}
inline ::std::string* RequestRankRecordGmUserPmd_CS::mutable_rankname() {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRankRecordGmUserPmd_CS.rankname)
  return rankname_;
}
inline ::std::string* RequestRankRecordGmUserPmd_CS::release_rankname() {
  clear_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rankname_;
    rankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestRankRecordGmUserPmd_CS::set_allocated_rankname(::std::string* rankname) {
  if (rankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rankname_;
  }
  if (rankname) {
    set_has_rankname();
    rankname_ = rankname;
  } else {
    clear_has_rankname();
    rankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRankRecordGmUserPmd_CS.rankname)
}

// optional uint64 starttime = 5;
inline bool RequestRankRecordGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestRankRecordGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestRankRecordGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 6;
inline bool RequestRankRecordGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestRankRecordGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestRankRecordGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.endtime)
}

// repeated .Pmd.RankRecordData data = 7;
inline int RequestRankRecordGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestRankRecordGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::RankRecordData& RequestRankRecordGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::RankRecordData* RequestRankRecordGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRankRecordGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::RankRecordData* RequestRankRecordGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestRankRecordGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::RankRecordData >&
RequestRankRecordGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestRankRecordGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::RankRecordData >*
RequestRankRecordGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestRankRecordGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 gmid = 8;
inline bool RequestRankRecordGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestRankRecordGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestRankRecordGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 9;
inline bool RequestRankRecordGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestRankRecordGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestRankRecordGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 10;
inline bool RequestRankRecordGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestRankRecordGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestRankRecordGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 11;
inline bool RequestRankRecordGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestRankRecordGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestRankRecordGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestRankRecordGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRankRecordGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestRankRecordGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRankRecordGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// BossRecordData

// optional uint64 id = 1;
inline bool BossRecordData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossRecordData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossRecordData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossRecordData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 BossRecordData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.BossRecordData.id)
  return id_;
}
inline void BossRecordData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BossRecordData.id)
}

// optional uint32 bosstype = 2;
inline bool BossRecordData::has_bosstype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossRecordData::set_has_bosstype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossRecordData::clear_has_bosstype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossRecordData::clear_bosstype() {
  bosstype_ = 0u;
  clear_has_bosstype();
}
inline ::google::protobuf::uint32 BossRecordData::bosstype() const {
  // @@protoc_insertion_point(field_get:Pmd.BossRecordData.bosstype)
  return bosstype_;
}
inline void BossRecordData::set_bosstype(::google::protobuf::uint32 value) {
  set_has_bosstype();
  bosstype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BossRecordData.bosstype)
}

// optional string bossname = 3;
inline bool BossRecordData::has_bossname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BossRecordData::set_has_bossname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BossRecordData::clear_has_bossname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BossRecordData::clear_bossname() {
  if (bossname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_->clear();
  }
  clear_has_bossname();
}
inline const ::std::string& BossRecordData::bossname() const {
  // @@protoc_insertion_point(field_get:Pmd.BossRecordData.bossname)
  return *bossname_;
}
inline void BossRecordData::set_bossname(const ::std::string& value) {
  set_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_ = new ::std::string;
  }
  bossname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BossRecordData.bossname)
}
inline void BossRecordData::set_bossname(const char* value) {
  set_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_ = new ::std::string;
  }
  bossname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BossRecordData.bossname)
}
inline void BossRecordData::set_bossname(const char* value, size_t size) {
  set_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_ = new ::std::string;
  }
  bossname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BossRecordData.bossname)
}
inline ::std::string* BossRecordData::mutable_bossname() {
  set_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BossRecordData.bossname)
  return bossname_;
}
inline ::std::string* BossRecordData::release_bossname() {
  clear_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bossname_;
    bossname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BossRecordData::set_allocated_bossname(::std::string* bossname) {
  if (bossname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bossname_;
  }
  if (bossname) {
    set_has_bossname();
    bossname_ = bossname;
  } else {
    clear_has_bossname();
    bossname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BossRecordData.bossname)
}

// optional uint32 acttype = 4;
inline bool BossRecordData::has_acttype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BossRecordData::set_has_acttype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BossRecordData::clear_has_acttype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BossRecordData::clear_acttype() {
  acttype_ = 0u;
  clear_has_acttype();
}
inline ::google::protobuf::uint32 BossRecordData::acttype() const {
  // @@protoc_insertion_point(field_get:Pmd.BossRecordData.acttype)
  return acttype_;
}
inline void BossRecordData::set_acttype(::google::protobuf::uint32 value) {
  set_has_acttype();
  acttype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BossRecordData.acttype)
}

// optional string actcontent = 5;
inline bool BossRecordData::has_actcontent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BossRecordData::set_has_actcontent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BossRecordData::clear_has_actcontent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BossRecordData::clear_actcontent() {
  if (actcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actcontent_->clear();
  }
  clear_has_actcontent();
}
inline const ::std::string& BossRecordData::actcontent() const {
  // @@protoc_insertion_point(field_get:Pmd.BossRecordData.actcontent)
  return *actcontent_;
}
inline void BossRecordData::set_actcontent(const ::std::string& value) {
  set_has_actcontent();
  if (actcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actcontent_ = new ::std::string;
  }
  actcontent_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BossRecordData.actcontent)
}
inline void BossRecordData::set_actcontent(const char* value) {
  set_has_actcontent();
  if (actcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actcontent_ = new ::std::string;
  }
  actcontent_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BossRecordData.actcontent)
}
inline void BossRecordData::set_actcontent(const char* value, size_t size) {
  set_has_actcontent();
  if (actcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actcontent_ = new ::std::string;
  }
  actcontent_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BossRecordData.actcontent)
}
inline ::std::string* BossRecordData::mutable_actcontent() {
  set_has_actcontent();
  if (actcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    actcontent_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BossRecordData.actcontent)
  return actcontent_;
}
inline ::std::string* BossRecordData::release_actcontent() {
  clear_has_actcontent();
  if (actcontent_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = actcontent_;
    actcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BossRecordData::set_allocated_actcontent(::std::string* actcontent) {
  if (actcontent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete actcontent_;
  }
  if (actcontent) {
    set_has_actcontent();
    actcontent_ = actcontent;
  } else {
    clear_has_actcontent();
    actcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BossRecordData.actcontent)
}

// optional uint64 charid = 6;
inline bool BossRecordData::has_charid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BossRecordData::set_has_charid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BossRecordData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BossRecordData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 BossRecordData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.BossRecordData.charid)
  return charid_;
}
inline void BossRecordData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BossRecordData.charid)
}

// optional string charname = 7;
inline bool BossRecordData::has_charname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BossRecordData::set_has_charname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BossRecordData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BossRecordData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& BossRecordData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.BossRecordData.charname)
  return *charname_;
}
inline void BossRecordData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BossRecordData.charname)
}
inline void BossRecordData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BossRecordData.charname)
}
inline void BossRecordData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BossRecordData.charname)
}
inline ::std::string* BossRecordData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BossRecordData.charname)
  return charname_;
}
inline ::std::string* BossRecordData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BossRecordData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BossRecordData.charname)
}

// optional uint64 ts = 8;
inline bool BossRecordData::has_ts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BossRecordData::set_has_ts() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BossRecordData::clear_has_ts() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BossRecordData::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 BossRecordData::ts() const {
  // @@protoc_insertion_point(field_get:Pmd.BossRecordData.ts)
  return ts_;
}
inline void BossRecordData::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BossRecordData.ts)
}

// -------------------------------------------------------------------

// RequestBossRecordGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestBossRecordGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestBossRecordGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestBossRecordGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestBossRecordGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestBossRecordGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestBossRecordGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.zoneid)
}

// optional uint32 bosstype = 3;
inline bool RequestBossRecordGmUserPmd_CS::has_bosstype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_bosstype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_bosstype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_bosstype() {
  bosstype_ = 0u;
  clear_has_bosstype();
}
inline ::google::protobuf::uint32 RequestBossRecordGmUserPmd_CS::bosstype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.bosstype)
  return bosstype_;
}
inline void RequestBossRecordGmUserPmd_CS::set_bosstype(::google::protobuf::uint32 value) {
  set_has_bosstype();
  bosstype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.bosstype)
}

// optional string bossname = 4;
inline bool RequestBossRecordGmUserPmd_CS::has_bossname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_bossname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_bossname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_bossname() {
  if (bossname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_->clear();
  }
  clear_has_bossname();
}
inline const ::std::string& RequestBossRecordGmUserPmd_CS::bossname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.bossname)
  return *bossname_;
}
inline void RequestBossRecordGmUserPmd_CS::set_bossname(const ::std::string& value) {
  set_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_ = new ::std::string;
  }
  bossname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.bossname)
}
inline void RequestBossRecordGmUserPmd_CS::set_bossname(const char* value) {
  set_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_ = new ::std::string;
  }
  bossname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestBossRecordGmUserPmd_CS.bossname)
}
inline void RequestBossRecordGmUserPmd_CS::set_bossname(const char* value, size_t size) {
  set_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_ = new ::std::string;
  }
  bossname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestBossRecordGmUserPmd_CS.bossname)
}
inline ::std::string* RequestBossRecordGmUserPmd_CS::mutable_bossname() {
  set_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bossname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestBossRecordGmUserPmd_CS.bossname)
  return bossname_;
}
inline ::std::string* RequestBossRecordGmUserPmd_CS::release_bossname() {
  clear_has_bossname();
  if (bossname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bossname_;
    bossname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestBossRecordGmUserPmd_CS::set_allocated_bossname(::std::string* bossname) {
  if (bossname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bossname_;
  }
  if (bossname) {
    set_has_bossname();
    bossname_ = bossname;
  } else {
    clear_has_bossname();
    bossname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestBossRecordGmUserPmd_CS.bossname)
}

// optional uint64 starttime = 5;
inline bool RequestBossRecordGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestBossRecordGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestBossRecordGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 6;
inline bool RequestBossRecordGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestBossRecordGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestBossRecordGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.endtime)
}

// repeated .Pmd.BossRecordData data = 7;
inline int RequestBossRecordGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestBossRecordGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::BossRecordData& RequestBossRecordGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::BossRecordData* RequestBossRecordGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestBossRecordGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::BossRecordData* RequestBossRecordGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestBossRecordGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BossRecordData >&
RequestBossRecordGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestBossRecordGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::BossRecordData >*
RequestBossRecordGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestBossRecordGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 gmid = 8;
inline bool RequestBossRecordGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestBossRecordGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestBossRecordGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 9;
inline bool RequestBossRecordGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestBossRecordGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestBossRecordGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 10;
inline bool RequestBossRecordGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestBossRecordGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestBossRecordGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 11;
inline bool RequestBossRecordGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestBossRecordGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestBossRecordGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestBossRecordGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBossRecordGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestBossRecordGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBossRecordGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// RenameRecordData

// optional uint64 id = 1;
inline bool RenameRecordData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RenameRecordData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RenameRecordData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RenameRecordData::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 RenameRecordData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.RenameRecordData.id)
  return id_;
}
inline void RenameRecordData::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RenameRecordData.id)
}

// optional uint64 accid = 2;
inline bool RenameRecordData::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RenameRecordData::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RenameRecordData::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RenameRecordData::clear_accid() {
  accid_ = GOOGLE_ULONGLONG(0);
  clear_has_accid();
}
inline ::google::protobuf::uint64 RenameRecordData::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.RenameRecordData.accid)
  return accid_;
}
inline void RenameRecordData::set_accid(::google::protobuf::uint64 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RenameRecordData.accid)
}

// optional uint64 charid = 3;
inline bool RenameRecordData::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RenameRecordData::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RenameRecordData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RenameRecordData::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RenameRecordData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RenameRecordData.charid)
  return charid_;
}
inline void RenameRecordData::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RenameRecordData.charid)
}

// optional string oldname = 4;
inline bool RenameRecordData::has_oldname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RenameRecordData::set_has_oldname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RenameRecordData::clear_has_oldname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RenameRecordData::clear_oldname() {
  if (oldname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_->clear();
  }
  clear_has_oldname();
}
inline const ::std::string& RenameRecordData::oldname() const {
  // @@protoc_insertion_point(field_get:Pmd.RenameRecordData.oldname)
  return *oldname_;
}
inline void RenameRecordData::set_oldname(const ::std::string& value) {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  oldname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RenameRecordData.oldname)
}
inline void RenameRecordData::set_oldname(const char* value) {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  oldname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RenameRecordData.oldname)
}
inline void RenameRecordData::set_oldname(const char* value, size_t size) {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  oldname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RenameRecordData.oldname)
}
inline ::std::string* RenameRecordData::mutable_oldname() {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RenameRecordData.oldname)
  return oldname_;
}
inline ::std::string* RenameRecordData::release_oldname() {
  clear_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = oldname_;
    oldname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RenameRecordData::set_allocated_oldname(::std::string* oldname) {
  if (oldname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete oldname_;
  }
  if (oldname) {
    set_has_oldname();
    oldname_ = oldname;
  } else {
    clear_has_oldname();
    oldname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RenameRecordData.oldname)
}

// optional string newname = 5;
inline bool RenameRecordData::has_newname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RenameRecordData::set_has_newname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RenameRecordData::clear_has_newname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RenameRecordData::clear_newname() {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& RenameRecordData::newname() const {
  // @@protoc_insertion_point(field_get:Pmd.RenameRecordData.newname)
  return *newname_;
}
inline void RenameRecordData::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RenameRecordData.newname)
}
inline void RenameRecordData::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RenameRecordData.newname)
}
inline void RenameRecordData::set_newname(const char* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RenameRecordData.newname)
}
inline ::std::string* RenameRecordData::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RenameRecordData.newname)
  return newname_;
}
inline ::std::string* RenameRecordData::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RenameRecordData::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RenameRecordData.newname)
}

// optional uint64 ts = 6;
inline bool RenameRecordData::has_ts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RenameRecordData::set_has_ts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RenameRecordData::clear_has_ts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RenameRecordData::clear_ts() {
  ts_ = GOOGLE_ULONGLONG(0);
  clear_has_ts();
}
inline ::google::protobuf::uint64 RenameRecordData::ts() const {
  // @@protoc_insertion_point(field_get:Pmd.RenameRecordData.ts)
  return ts_;
}
inline void RenameRecordData::set_ts(::google::protobuf::uint64 value) {
  set_has_ts();
  ts_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RenameRecordData.ts)
}

// -------------------------------------------------------------------

// RequestRenameRecordGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestRenameRecordGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestRenameRecordGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestRenameRecordGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestRenameRecordGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestRenameRecordGmUserPmd_CS::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestRenameRecordGmUserPmd_CS::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.charid)
  return charid_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.charid)
}

// optional string oldname = 4;
inline bool RequestRenameRecordGmUserPmd_CS::has_oldname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_oldname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_oldname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_oldname() {
  if (oldname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_->clear();
  }
  clear_has_oldname();
}
inline const ::std::string& RequestRenameRecordGmUserPmd_CS::oldname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.oldname)
  return *oldname_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_oldname(const ::std::string& value) {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  oldname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.oldname)
}
inline void RequestRenameRecordGmUserPmd_CS::set_oldname(const char* value) {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  oldname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestRenameRecordGmUserPmd_CS.oldname)
}
inline void RequestRenameRecordGmUserPmd_CS::set_oldname(const char* value, size_t size) {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  oldname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestRenameRecordGmUserPmd_CS.oldname)
}
inline ::std::string* RequestRenameRecordGmUserPmd_CS::mutable_oldname() {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRenameRecordGmUserPmd_CS.oldname)
  return oldname_;
}
inline ::std::string* RequestRenameRecordGmUserPmd_CS::release_oldname() {
  clear_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = oldname_;
    oldname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestRenameRecordGmUserPmd_CS::set_allocated_oldname(::std::string* oldname) {
  if (oldname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete oldname_;
  }
  if (oldname) {
    set_has_oldname();
    oldname_ = oldname;
  } else {
    clear_has_oldname();
    oldname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRenameRecordGmUserPmd_CS.oldname)
}

// optional string newname = 5;
inline bool RequestRenameRecordGmUserPmd_CS::has_newname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_newname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_newname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_newname() {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& RequestRenameRecordGmUserPmd_CS::newname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.newname)
  return *newname_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.newname)
}
inline void RequestRenameRecordGmUserPmd_CS::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestRenameRecordGmUserPmd_CS.newname)
}
inline void RequestRenameRecordGmUserPmd_CS::set_newname(const char* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestRenameRecordGmUserPmd_CS.newname)
}
inline ::std::string* RequestRenameRecordGmUserPmd_CS::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRenameRecordGmUserPmd_CS.newname)
  return newname_;
}
inline ::std::string* RequestRenameRecordGmUserPmd_CS::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestRenameRecordGmUserPmd_CS::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestRenameRecordGmUserPmd_CS.newname)
}

// optional uint64 starttime = 6;
inline bool RequestRenameRecordGmUserPmd_CS::has_starttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_starttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestRenameRecordGmUserPmd_CS::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.starttime)
  return starttime_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.starttime)
}

// optional uint64 endtime = 7;
inline bool RequestRenameRecordGmUserPmd_CS::has_endtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_endtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestRenameRecordGmUserPmd_CS::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.endtime)
  return endtime_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.endtime)
}

// repeated .Pmd.RenameRecordData data = 8;
inline int RequestRenameRecordGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestRenameRecordGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::RenameRecordData& RequestRenameRecordGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::RenameRecordData* RequestRenameRecordGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestRenameRecordGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::RenameRecordData* RequestRenameRecordGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestRenameRecordGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::RenameRecordData >&
RequestRenameRecordGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestRenameRecordGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::RenameRecordData >*
RequestRenameRecordGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestRenameRecordGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 gmid = 9;
inline bool RequestRenameRecordGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestRenameRecordGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.gmid)
}

// optional uint32 curpage = 10;
inline bool RequestRenameRecordGmUserPmd_CS::has_curpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_curpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestRenameRecordGmUserPmd_CS::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.curpage)
  return curpage_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.curpage)
}

// optional uint32 maxpage = 11;
inline bool RequestRenameRecordGmUserPmd_CS::has_maxpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_maxpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestRenameRecordGmUserPmd_CS::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.maxpage)
  return maxpage_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.maxpage)
}

// optional uint32 perpage = 12;
inline bool RequestRenameRecordGmUserPmd_CS::has_perpage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RequestRenameRecordGmUserPmd_CS::set_has_perpage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RequestRenameRecordGmUserPmd_CS::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestRenameRecordGmUserPmd_CS::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestRenameRecordGmUserPmd_CS.perpage)
  return perpage_;
}
inline void RequestRenameRecordGmUserPmd_CS::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestRenameRecordGmUserPmd_CS.perpage)
}

// -------------------------------------------------------------------

// StartUpGameRequestGmPmd_C

// required string key = 1;
inline bool StartUpGameRequestGmPmd_C::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartUpGameRequestGmPmd_C::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartUpGameRequestGmPmd_C::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartUpGameRequestGmPmd_C::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& StartUpGameRequestGmPmd_C::key() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestGmPmd_C.key)
  return *key_;
}
inline void StartUpGameRequestGmPmd_C::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestGmPmd_C.key)
}
inline void StartUpGameRequestGmPmd_C::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameRequestGmPmd_C.key)
}
inline void StartUpGameRequestGmPmd_C::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameRequestGmPmd_C.key)
}
inline ::std::string* StartUpGameRequestGmPmd_C::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameRequestGmPmd_C.key)
  return key_;
}
inline ::std::string* StartUpGameRequestGmPmd_C::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameRequestGmPmd_C::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameRequestGmPmd_C.key)
}

// required uint32 version = 2;
inline bool StartUpGameRequestGmPmd_C::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartUpGameRequestGmPmd_C::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartUpGameRequestGmPmd_C::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartUpGameRequestGmPmd_C::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 StartUpGameRequestGmPmd_C::version() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestGmPmd_C.version)
  return version_;
}
inline void StartUpGameRequestGmPmd_C::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestGmPmd_C.version)
}

// optional string compress = 3;
inline bool StartUpGameRequestGmPmd_C::has_compress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StartUpGameRequestGmPmd_C::set_has_compress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StartUpGameRequestGmPmd_C::clear_has_compress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StartUpGameRequestGmPmd_C::clear_compress() {
  if (compress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_->clear();
  }
  clear_has_compress();
}
inline const ::std::string& StartUpGameRequestGmPmd_C::compress() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestGmPmd_C.compress)
  return *compress_;
}
inline void StartUpGameRequestGmPmd_C::set_compress(const ::std::string& value) {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  compress_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestGmPmd_C.compress)
}
inline void StartUpGameRequestGmPmd_C::set_compress(const char* value) {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  compress_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameRequestGmPmd_C.compress)
}
inline void StartUpGameRequestGmPmd_C::set_compress(const char* value, size_t size) {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  compress_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameRequestGmPmd_C.compress)
}
inline ::std::string* StartUpGameRequestGmPmd_C::mutable_compress() {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameRequestGmPmd_C.compress)
  return compress_;
}
inline ::std::string* StartUpGameRequestGmPmd_C::release_compress() {
  clear_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = compress_;
    compress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameRequestGmPmd_C::set_allocated_compress(::std::string* compress) {
  if (compress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete compress_;
  }
  if (compress) {
    set_has_compress();
    compress_ = compress;
  } else {
    clear_has_compress();
    compress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameRequestGmPmd_C.compress)
}

// optional string encrypt = 4;
inline bool StartUpGameRequestGmPmd_C::has_encrypt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StartUpGameRequestGmPmd_C::set_has_encrypt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StartUpGameRequestGmPmd_C::clear_has_encrypt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StartUpGameRequestGmPmd_C::clear_encrypt() {
  if (encrypt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_->clear();
  }
  clear_has_encrypt();
}
inline const ::std::string& StartUpGameRequestGmPmd_C::encrypt() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestGmPmd_C.encrypt)
  return *encrypt_;
}
inline void StartUpGameRequestGmPmd_C::set_encrypt(const ::std::string& value) {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  encrypt_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestGmPmd_C.encrypt)
}
inline void StartUpGameRequestGmPmd_C::set_encrypt(const char* value) {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  encrypt_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameRequestGmPmd_C.encrypt)
}
inline void StartUpGameRequestGmPmd_C::set_encrypt(const char* value, size_t size) {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  encrypt_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameRequestGmPmd_C.encrypt)
}
inline ::std::string* StartUpGameRequestGmPmd_C::mutable_encrypt() {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameRequestGmPmd_C.encrypt)
  return encrypt_;
}
inline ::std::string* StartUpGameRequestGmPmd_C::release_encrypt() {
  clear_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = encrypt_;
    encrypt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameRequestGmPmd_C::set_allocated_encrypt(::std::string* encrypt) {
  if (encrypt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encrypt_;
  }
  if (encrypt) {
    set_has_encrypt();
    encrypt_ = encrypt;
  } else {
    clear_has_encrypt();
    encrypt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameRequestGmPmd_C.encrypt)
}

// optional string encryptkey = 5;
inline bool StartUpGameRequestGmPmd_C::has_encryptkey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StartUpGameRequestGmPmd_C::set_has_encryptkey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StartUpGameRequestGmPmd_C::clear_has_encryptkey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StartUpGameRequestGmPmd_C::clear_encryptkey() {
  if (encryptkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_->clear();
  }
  clear_has_encryptkey();
}
inline const ::std::string& StartUpGameRequestGmPmd_C::encryptkey() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameRequestGmPmd_C.encryptkey)
  return *encryptkey_;
}
inline void StartUpGameRequestGmPmd_C::set_encryptkey(const ::std::string& value) {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameRequestGmPmd_C.encryptkey)
}
inline void StartUpGameRequestGmPmd_C::set_encryptkey(const char* value) {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameRequestGmPmd_C.encryptkey)
}
inline void StartUpGameRequestGmPmd_C::set_encryptkey(const char* value, size_t size) {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameRequestGmPmd_C.encryptkey)
}
inline ::std::string* StartUpGameRequestGmPmd_C::mutable_encryptkey() {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameRequestGmPmd_C.encryptkey)
  return encryptkey_;
}
inline ::std::string* StartUpGameRequestGmPmd_C::release_encryptkey() {
  clear_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = encryptkey_;
    encryptkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameRequestGmPmd_C::set_allocated_encryptkey(::std::string* encryptkey) {
  if (encryptkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encryptkey_;
  }
  if (encryptkey) {
    set_has_encryptkey();
    encryptkey_ = encryptkey;
  } else {
    clear_has_encryptkey();
    encryptkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameRequestGmPmd_C.encryptkey)
}

// -------------------------------------------------------------------

// StartUpGameReturnGmPmd_S

// required bool ret = 1;
inline bool StartUpGameReturnGmPmd_S::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StartUpGameReturnGmPmd_S::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StartUpGameReturnGmPmd_S::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StartUpGameReturnGmPmd_S::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool StartUpGameReturnGmPmd_S::ret() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameReturnGmPmd_S.ret)
  return ret_;
}
inline void StartUpGameReturnGmPmd_S::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameReturnGmPmd_S.ret)
}

// optional string retdesc = 2;
inline bool StartUpGameReturnGmPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StartUpGameReturnGmPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StartUpGameReturnGmPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StartUpGameReturnGmPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& StartUpGameReturnGmPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.StartUpGameReturnGmPmd_S.retdesc)
  return *retdesc_;
}
inline void StartUpGameReturnGmPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.StartUpGameReturnGmPmd_S.retdesc)
}
inline void StartUpGameReturnGmPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.StartUpGameReturnGmPmd_S.retdesc)
}
inline void StartUpGameReturnGmPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.StartUpGameReturnGmPmd_S.retdesc)
}
inline ::std::string* StartUpGameReturnGmPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.StartUpGameReturnGmPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* StartUpGameReturnGmPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StartUpGameReturnGmPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.StartUpGameReturnGmPmd_S.retdesc)
}

// -------------------------------------------------------------------

// SurportGameZoneRequestGmPmd_C

// -------------------------------------------------------------------

// SurportGameZoneReturnGmPmd_S

// -------------------------------------------------------------------

// ReconnectKickoutGmSmd_S

// optional string desc = 1;
inline bool ReconnectKickoutGmSmd_S::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReconnectKickoutGmSmd_S::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReconnectKickoutGmSmd_S::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReconnectKickoutGmSmd_S::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& ReconnectKickoutGmSmd_S::desc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReconnectKickoutGmSmd_S.desc)
  return *desc_;
}
inline void ReconnectKickoutGmSmd_S::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReconnectKickoutGmSmd_S.desc)
}
inline void ReconnectKickoutGmSmd_S::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReconnectKickoutGmSmd_S.desc)
}
inline void ReconnectKickoutGmSmd_S::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReconnectKickoutGmSmd_S.desc)
}
inline ::std::string* ReconnectKickoutGmSmd_S::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReconnectKickoutGmSmd_S.desc)
  return desc_;
}
inline ::std::string* ReconnectKickoutGmSmd_S::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReconnectKickoutGmSmd_S::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReconnectKickoutGmSmd_S.desc)
}

// -------------------------------------------------------------------

// GmUserInfo

// optional uint32 gmid = 1;
inline bool GmUserInfo::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GmUserInfo::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GmUserInfo::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GmUserInfo::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 GmUserInfo::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.gmid)
  return gmid_;
}
inline void GmUserInfo::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.gmid)
}

// optional string name = 2;
inline bool GmUserInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GmUserInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GmUserInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GmUserInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GmUserInfo::name() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.name)
  return *name_;
}
inline void GmUserInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.name)
}
inline void GmUserInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.GmUserInfo.name)
}
inline void GmUserInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.GmUserInfo.name)
}
inline ::std::string* GmUserInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.GmUserInfo.name)
  return name_;
}
inline ::std::string* GmUserInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GmUserInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.GmUserInfo.name)
}

// optional string password = 3;
inline bool GmUserInfo::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GmUserInfo::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GmUserInfo::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GmUserInfo::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& GmUserInfo::password() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.password)
  return *password_;
}
inline void GmUserInfo::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.password)
}
inline void GmUserInfo::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.GmUserInfo.password)
}
inline void GmUserInfo::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.GmUserInfo.password)
}
inline ::std::string* GmUserInfo::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.GmUserInfo.password)
  return password_;
}
inline ::std::string* GmUserInfo::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GmUserInfo::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.GmUserInfo.password)
}

// optional uint64 pri = 4;
inline bool GmUserInfo::has_pri() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GmUserInfo::set_has_pri() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GmUserInfo::clear_has_pri() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GmUserInfo::clear_pri() {
  pri_ = GOOGLE_ULONGLONG(0);
  clear_has_pri();
}
inline ::google::protobuf::uint64 GmUserInfo::pri() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.pri)
  return pri_;
}
inline void GmUserInfo::set_pri(::google::protobuf::uint64 value) {
  set_has_pri();
  pri_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.pri)
}

// optional uint32 qmaxnum = 5;
inline bool GmUserInfo::has_qmaxnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GmUserInfo::set_has_qmaxnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GmUserInfo::clear_has_qmaxnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GmUserInfo::clear_qmaxnum() {
  qmaxnum_ = 0u;
  clear_has_qmaxnum();
}
inline ::google::protobuf::uint32 GmUserInfo::qmaxnum() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.qmaxnum)
  return qmaxnum_;
}
inline void GmUserInfo::set_qmaxnum(::google::protobuf::uint32 value) {
  set_has_qmaxnum();
  qmaxnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.qmaxnum)
}

// optional uint32 autorecv = 6;
inline bool GmUserInfo::has_autorecv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GmUserInfo::set_has_autorecv() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GmUserInfo::clear_has_autorecv() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GmUserInfo::clear_autorecv() {
  autorecv_ = 0u;
  clear_has_autorecv();
}
inline ::google::protobuf::uint32 GmUserInfo::autorecv() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.autorecv)
  return autorecv_;
}
inline void GmUserInfo::set_autorecv(::google::protobuf::uint32 value) {
  set_has_autorecv();
  autorecv_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.autorecv)
}

// optional uint32 workstate = 7;
inline bool GmUserInfo::has_workstate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GmUserInfo::set_has_workstate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GmUserInfo::clear_has_workstate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GmUserInfo::clear_workstate() {
  workstate_ = 0u;
  clear_has_workstate();
}
inline ::google::protobuf::uint32 GmUserInfo::workstate() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.workstate)
  return workstate_;
}
inline void GmUserInfo::set_workstate(::google::protobuf::uint32 value) {
  set_has_workstate();
  workstate_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.workstate)
}

// optional uint32 winnum = 8;
inline bool GmUserInfo::has_winnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GmUserInfo::set_has_winnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GmUserInfo::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GmUserInfo::clear_winnum() {
  winnum_ = 0u;
  clear_has_winnum();
}
inline ::google::protobuf::uint32 GmUserInfo::winnum() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.winnum)
  return winnum_;
}
inline void GmUserInfo::set_winnum(::google::protobuf::uint32 value) {
  set_has_winnum();
  winnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.winnum)
}

// optional uint32 gameid = 9;
inline bool GmUserInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GmUserInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GmUserInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GmUserInfo::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 GmUserInfo::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.gameid)
  return gameid_;
}
inline void GmUserInfo::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.gameid)
}

// optional uint32 zoneid = 10;
inline bool GmUserInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GmUserInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GmUserInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GmUserInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 GmUserInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.zoneid)
  return zoneid_;
}
inline void GmUserInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.zoneid)
}

// optional uint32 bindip = 11;
inline bool GmUserInfo::has_bindip() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GmUserInfo::set_has_bindip() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GmUserInfo::clear_has_bindip() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GmUserInfo::clear_bindip() {
  bindip_ = 0u;
  clear_has_bindip();
}
inline ::google::protobuf::uint32 GmUserInfo::bindip() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.bindip)
  return bindip_;
}
inline void GmUserInfo::set_bindip(::google::protobuf::uint32 value) {
  set_has_bindip();
  bindip_ = value;
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.bindip)
}

// optional string config = 12;
inline bool GmUserInfo::has_config() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GmUserInfo::set_has_config() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GmUserInfo::clear_has_config() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GmUserInfo::clear_config() {
  if (config_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_->clear();
  }
  clear_has_config();
}
inline const ::std::string& GmUserInfo::config() const {
  // @@protoc_insertion_point(field_get:Pmd.GmUserInfo.config)
  return *config_;
}
inline void GmUserInfo::set_config(const ::std::string& value) {
  set_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_ = new ::std::string;
  }
  config_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.GmUserInfo.config)
}
inline void GmUserInfo::set_config(const char* value) {
  set_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_ = new ::std::string;
  }
  config_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.GmUserInfo.config)
}
inline void GmUserInfo::set_config(const char* value, size_t size) {
  set_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_ = new ::std::string;
  }
  config_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.GmUserInfo.config)
}
inline ::std::string* GmUserInfo::mutable_config() {
  set_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.GmUserInfo.config)
  return config_;
}
inline ::std::string* GmUserInfo::release_config() {
  clear_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = config_;
    config_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GmUserInfo::set_allocated_config(::std::string* config) {
  if (config_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete config_;
  }
  if (config) {
    set_has_config();
    config_ = config;
  } else {
    clear_has_config();
    config_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.GmUserInfo.config)
}

// -------------------------------------------------------------------

// RequestLoginGmUserPmd_C

// required string key = 1;
inline bool RequestLoginGmUserPmd_C::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestLoginGmUserPmd_C::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestLoginGmUserPmd_C::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestLoginGmUserPmd_C::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& RequestLoginGmUserPmd_C::key() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginGmUserPmd_C.key)
  return *key_;
}
inline void RequestLoginGmUserPmd_C::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginGmUserPmd_C.key)
}
inline void RequestLoginGmUserPmd_C::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestLoginGmUserPmd_C.key)
}
inline void RequestLoginGmUserPmd_C::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestLoginGmUserPmd_C.key)
}
inline ::std::string* RequestLoginGmUserPmd_C::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestLoginGmUserPmd_C.key)
  return key_;
}
inline ::std::string* RequestLoginGmUserPmd_C::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestLoginGmUserPmd_C::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestLoginGmUserPmd_C.key)
}

// required uint32 version = 2;
inline bool RequestLoginGmUserPmd_C::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestLoginGmUserPmd_C::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestLoginGmUserPmd_C::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestLoginGmUserPmd_C::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 RequestLoginGmUserPmd_C::version() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginGmUserPmd_C.version)
  return version_;
}
inline void RequestLoginGmUserPmd_C::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginGmUserPmd_C.version)
}

// optional string compress = 3;
inline bool RequestLoginGmUserPmd_C::has_compress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestLoginGmUserPmd_C::set_has_compress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestLoginGmUserPmd_C::clear_has_compress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestLoginGmUserPmd_C::clear_compress() {
  if (compress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_->clear();
  }
  clear_has_compress();
}
inline const ::std::string& RequestLoginGmUserPmd_C::compress() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginGmUserPmd_C.compress)
  return *compress_;
}
inline void RequestLoginGmUserPmd_C::set_compress(const ::std::string& value) {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  compress_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginGmUserPmd_C.compress)
}
inline void RequestLoginGmUserPmd_C::set_compress(const char* value) {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  compress_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestLoginGmUserPmd_C.compress)
}
inline void RequestLoginGmUserPmd_C::set_compress(const char* value, size_t size) {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  compress_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestLoginGmUserPmd_C.compress)
}
inline ::std::string* RequestLoginGmUserPmd_C::mutable_compress() {
  set_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    compress_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestLoginGmUserPmd_C.compress)
  return compress_;
}
inline ::std::string* RequestLoginGmUserPmd_C::release_compress() {
  clear_has_compress();
  if (compress_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = compress_;
    compress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestLoginGmUserPmd_C::set_allocated_compress(::std::string* compress) {
  if (compress_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete compress_;
  }
  if (compress) {
    set_has_compress();
    compress_ = compress;
  } else {
    clear_has_compress();
    compress_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestLoginGmUserPmd_C.compress)
}

// optional string encrypt = 4;
inline bool RequestLoginGmUserPmd_C::has_encrypt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestLoginGmUserPmd_C::set_has_encrypt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestLoginGmUserPmd_C::clear_has_encrypt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestLoginGmUserPmd_C::clear_encrypt() {
  if (encrypt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_->clear();
  }
  clear_has_encrypt();
}
inline const ::std::string& RequestLoginGmUserPmd_C::encrypt() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginGmUserPmd_C.encrypt)
  return *encrypt_;
}
inline void RequestLoginGmUserPmd_C::set_encrypt(const ::std::string& value) {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  encrypt_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginGmUserPmd_C.encrypt)
}
inline void RequestLoginGmUserPmd_C::set_encrypt(const char* value) {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  encrypt_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestLoginGmUserPmd_C.encrypt)
}
inline void RequestLoginGmUserPmd_C::set_encrypt(const char* value, size_t size) {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  encrypt_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestLoginGmUserPmd_C.encrypt)
}
inline ::std::string* RequestLoginGmUserPmd_C::mutable_encrypt() {
  set_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encrypt_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestLoginGmUserPmd_C.encrypt)
  return encrypt_;
}
inline ::std::string* RequestLoginGmUserPmd_C::release_encrypt() {
  clear_has_encrypt();
  if (encrypt_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = encrypt_;
    encrypt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestLoginGmUserPmd_C::set_allocated_encrypt(::std::string* encrypt) {
  if (encrypt_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encrypt_;
  }
  if (encrypt) {
    set_has_encrypt();
    encrypt_ = encrypt;
  } else {
    clear_has_encrypt();
    encrypt_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestLoginGmUserPmd_C.encrypt)
}

// optional string encryptkey = 5;
inline bool RequestLoginGmUserPmd_C::has_encryptkey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestLoginGmUserPmd_C::set_has_encryptkey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestLoginGmUserPmd_C::clear_has_encryptkey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestLoginGmUserPmd_C::clear_encryptkey() {
  if (encryptkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_->clear();
  }
  clear_has_encryptkey();
}
inline const ::std::string& RequestLoginGmUserPmd_C::encryptkey() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginGmUserPmd_C.encryptkey)
  return *encryptkey_;
}
inline void RequestLoginGmUserPmd_C::set_encryptkey(const ::std::string& value) {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginGmUserPmd_C.encryptkey)
}
inline void RequestLoginGmUserPmd_C::set_encryptkey(const char* value) {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestLoginGmUserPmd_C.encryptkey)
}
inline void RequestLoginGmUserPmd_C::set_encryptkey(const char* value, size_t size) {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  encryptkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestLoginGmUserPmd_C.encryptkey)
}
inline ::std::string* RequestLoginGmUserPmd_C::mutable_encryptkey() {
  set_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestLoginGmUserPmd_C.encryptkey)
  return encryptkey_;
}
inline ::std::string* RequestLoginGmUserPmd_C::release_encryptkey() {
  clear_has_encryptkey();
  if (encryptkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = encryptkey_;
    encryptkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestLoginGmUserPmd_C::set_allocated_encryptkey(::std::string* encryptkey) {
  if (encryptkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encryptkey_;
  }
  if (encryptkey) {
    set_has_encryptkey();
    encryptkey_ = encryptkey;
  } else {
    clear_has_encryptkey();
    encryptkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestLoginGmUserPmd_C.encryptkey)
}

// required string username = 6;
inline bool RequestLoginGmUserPmd_C::has_username() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestLoginGmUserPmd_C::set_has_username() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestLoginGmUserPmd_C::clear_has_username() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestLoginGmUserPmd_C::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& RequestLoginGmUserPmd_C::username() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginGmUserPmd_C.username)
  return *username_;
}
inline void RequestLoginGmUserPmd_C::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginGmUserPmd_C.username)
}
inline void RequestLoginGmUserPmd_C::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestLoginGmUserPmd_C.username)
}
inline void RequestLoginGmUserPmd_C::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestLoginGmUserPmd_C.username)
}
inline ::std::string* RequestLoginGmUserPmd_C::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestLoginGmUserPmd_C.username)
  return username_;
}
inline ::std::string* RequestLoginGmUserPmd_C::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestLoginGmUserPmd_C::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestLoginGmUserPmd_C.username)
}

// required string password = 7;
inline bool RequestLoginGmUserPmd_C::has_password() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestLoginGmUserPmd_C::set_has_password() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestLoginGmUserPmd_C::clear_has_password() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestLoginGmUserPmd_C::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& RequestLoginGmUserPmd_C::password() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginGmUserPmd_C.password)
  return *password_;
}
inline void RequestLoginGmUserPmd_C::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginGmUserPmd_C.password)
}
inline void RequestLoginGmUserPmd_C::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestLoginGmUserPmd_C.password)
}
inline void RequestLoginGmUserPmd_C::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestLoginGmUserPmd_C.password)
}
inline ::std::string* RequestLoginGmUserPmd_C::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestLoginGmUserPmd_C.password)
  return password_;
}
inline ::std::string* RequestLoginGmUserPmd_C::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestLoginGmUserPmd_C::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestLoginGmUserPmd_C.password)
}

// optional uint32 logintype = 8;
inline bool RequestLoginGmUserPmd_C::has_logintype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestLoginGmUserPmd_C::set_has_logintype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestLoginGmUserPmd_C::clear_has_logintype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestLoginGmUserPmd_C::clear_logintype() {
  logintype_ = 0u;
  clear_has_logintype();
}
inline ::google::protobuf::uint32 RequestLoginGmUserPmd_C::logintype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginGmUserPmd_C.logintype)
  return logintype_;
}
inline void RequestLoginGmUserPmd_C::set_logintype(::google::protobuf::uint32 value) {
  set_has_logintype();
  logintype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginGmUserPmd_C.logintype)
}

// optional uint32 loginip = 9;
inline bool RequestLoginGmUserPmd_C::has_loginip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestLoginGmUserPmd_C::set_has_loginip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestLoginGmUserPmd_C::clear_has_loginip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestLoginGmUserPmd_C::clear_loginip() {
  loginip_ = 0u;
  clear_has_loginip();
}
inline ::google::protobuf::uint32 RequestLoginGmUserPmd_C::loginip() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestLoginGmUserPmd_C.loginip)
  return loginip_;
}
inline void RequestLoginGmUserPmd_C::set_loginip(::google::protobuf::uint32 value) {
  set_has_loginip();
  loginip_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestLoginGmUserPmd_C.loginip)
}

// -------------------------------------------------------------------

// ReturnLoginGmUserPmd_S

// optional uint32 retcode = 1;
inline bool ReturnLoginGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnLoginGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnLoginGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnLoginGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnLoginGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnLoginGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnLoginGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnLoginGmUserPmd_S.retcode)
}

// optional .Pmd.GmUserInfo data = 2;
inline bool ReturnLoginGmUserPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnLoginGmUserPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnLoginGmUserPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnLoginGmUserPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::GmUserInfo::Clear();
  clear_has_data();
}
inline const ::Pmd::GmUserInfo& ReturnLoginGmUserPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnLoginGmUserPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::GmUserInfo* ReturnLoginGmUserPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::GmUserInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnLoginGmUserPmd_S.data)
  return data_;
}
inline ::Pmd::GmUserInfo* ReturnLoginGmUserPmd_S::release_data() {
  clear_has_data();
  ::Pmd::GmUserInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ReturnLoginGmUserPmd_S::set_allocated_data(::Pmd::GmUserInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnLoginGmUserPmd_S.data)
}

// repeated .Pmd.GameZoneInfo zoneinfo = 3;
inline int ReturnLoginGmUserPmd_S::zoneinfo_size() const {
  return zoneinfo_.size();
}
inline void ReturnLoginGmUserPmd_S::clear_zoneinfo() {
  zoneinfo_.Clear();
}
inline const ::Pmd::GameZoneInfo& ReturnLoginGmUserPmd_S::zoneinfo(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnLoginGmUserPmd_S.zoneinfo)
  return zoneinfo_.Get(index);
}
inline ::Pmd::GameZoneInfo* ReturnLoginGmUserPmd_S::mutable_zoneinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnLoginGmUserPmd_S.zoneinfo)
  return zoneinfo_.Mutable(index);
}
inline ::Pmd::GameZoneInfo* ReturnLoginGmUserPmd_S::add_zoneinfo() {
  // @@protoc_insertion_point(field_add:Pmd.ReturnLoginGmUserPmd_S.zoneinfo)
  return zoneinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::GameZoneInfo >&
ReturnLoginGmUserPmd_S::zoneinfo() const {
  // @@protoc_insertion_point(field_list:Pmd.ReturnLoginGmUserPmd_S.zoneinfo)
  return zoneinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::GameZoneInfo >*
ReturnLoginGmUserPmd_S::mutable_zoneinfo() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.ReturnLoginGmUserPmd_S.zoneinfo)
  return &zoneinfo_;
}

// -------------------------------------------------------------------

// SetPasswordGmUserPmd_CS

// required string oldpassword = 1;
inline bool SetPasswordGmUserPmd_CS::has_oldpassword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetPasswordGmUserPmd_CS::set_has_oldpassword() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetPasswordGmUserPmd_CS::clear_has_oldpassword() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetPasswordGmUserPmd_CS::clear_oldpassword() {
  if (oldpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpassword_->clear();
  }
  clear_has_oldpassword();
}
inline const ::std::string& SetPasswordGmUserPmd_CS::oldpassword() const {
  // @@protoc_insertion_point(field_get:Pmd.SetPasswordGmUserPmd_CS.oldpassword)
  return *oldpassword_;
}
inline void SetPasswordGmUserPmd_CS::set_oldpassword(const ::std::string& value) {
  set_has_oldpassword();
  if (oldpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpassword_ = new ::std::string;
  }
  oldpassword_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.SetPasswordGmUserPmd_CS.oldpassword)
}
inline void SetPasswordGmUserPmd_CS::set_oldpassword(const char* value) {
  set_has_oldpassword();
  if (oldpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpassword_ = new ::std::string;
  }
  oldpassword_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.SetPasswordGmUserPmd_CS.oldpassword)
}
inline void SetPasswordGmUserPmd_CS::set_oldpassword(const char* value, size_t size) {
  set_has_oldpassword();
  if (oldpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpassword_ = new ::std::string;
  }
  oldpassword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.SetPasswordGmUserPmd_CS.oldpassword)
}
inline ::std::string* SetPasswordGmUserPmd_CS::mutable_oldpassword() {
  set_has_oldpassword();
  if (oldpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpassword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.SetPasswordGmUserPmd_CS.oldpassword)
  return oldpassword_;
}
inline ::std::string* SetPasswordGmUserPmd_CS::release_oldpassword() {
  clear_has_oldpassword();
  if (oldpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = oldpassword_;
    oldpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetPasswordGmUserPmd_CS::set_allocated_oldpassword(::std::string* oldpassword) {
  if (oldpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete oldpassword_;
  }
  if (oldpassword) {
    set_has_oldpassword();
    oldpassword_ = oldpassword;
  } else {
    clear_has_oldpassword();
    oldpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.SetPasswordGmUserPmd_CS.oldpassword)
}

// required string newpassword = 2;
inline bool SetPasswordGmUserPmd_CS::has_newpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetPasswordGmUserPmd_CS::set_has_newpassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetPasswordGmUserPmd_CS::clear_has_newpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetPasswordGmUserPmd_CS::clear_newpassword() {
  if (newpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpassword_->clear();
  }
  clear_has_newpassword();
}
inline const ::std::string& SetPasswordGmUserPmd_CS::newpassword() const {
  // @@protoc_insertion_point(field_get:Pmd.SetPasswordGmUserPmd_CS.newpassword)
  return *newpassword_;
}
inline void SetPasswordGmUserPmd_CS::set_newpassword(const ::std::string& value) {
  set_has_newpassword();
  if (newpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpassword_ = new ::std::string;
  }
  newpassword_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.SetPasswordGmUserPmd_CS.newpassword)
}
inline void SetPasswordGmUserPmd_CS::set_newpassword(const char* value) {
  set_has_newpassword();
  if (newpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpassword_ = new ::std::string;
  }
  newpassword_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.SetPasswordGmUserPmd_CS.newpassword)
}
inline void SetPasswordGmUserPmd_CS::set_newpassword(const char* value, size_t size) {
  set_has_newpassword();
  if (newpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpassword_ = new ::std::string;
  }
  newpassword_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.SetPasswordGmUserPmd_CS.newpassword)
}
inline ::std::string* SetPasswordGmUserPmd_CS::mutable_newpassword() {
  set_has_newpassword();
  if (newpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpassword_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.SetPasswordGmUserPmd_CS.newpassword)
  return newpassword_;
}
inline ::std::string* SetPasswordGmUserPmd_CS::release_newpassword() {
  clear_has_newpassword();
  if (newpassword_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newpassword_;
    newpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetPasswordGmUserPmd_CS::set_allocated_newpassword(::std::string* newpassword) {
  if (newpassword_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newpassword_;
  }
  if (newpassword) {
    set_has_newpassword();
    newpassword_ = newpassword;
  } else {
    clear_has_newpassword();
    newpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.SetPasswordGmUserPmd_CS.newpassword)
}

// optional uint32 retcode = 3;
inline bool SetPasswordGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetPasswordGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetPasswordGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetPasswordGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 SetPasswordGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.SetPasswordGmUserPmd_CS.retcode)
  return retcode_;
}
inline void SetPasswordGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.SetPasswordGmUserPmd_CS.retcode)
}

// optional string retdesc = 4;
inline bool SetPasswordGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetPasswordGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetPasswordGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetPasswordGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& SetPasswordGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.SetPasswordGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void SetPasswordGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.SetPasswordGmUserPmd_CS.retdesc)
}
inline void SetPasswordGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.SetPasswordGmUserPmd_CS.retdesc)
}
inline void SetPasswordGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.SetPasswordGmUserPmd_CS.retdesc)
}
inline ::std::string* SetPasswordGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.SetPasswordGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* SetPasswordGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SetPasswordGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.SetPasswordGmUserPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// AddNewGmUserPmd_CS

// required .Pmd.GmUserInfo data = 1;
inline bool AddNewGmUserPmd_CS::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddNewGmUserPmd_CS::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddNewGmUserPmd_CS::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddNewGmUserPmd_CS::clear_data() {
  if (data_ != NULL) data_->::Pmd::GmUserInfo::Clear();
  clear_has_data();
}
inline const ::Pmd::GmUserInfo& AddNewGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_get:Pmd.AddNewGmUserPmd_CS.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::GmUserInfo* AddNewGmUserPmd_CS::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::GmUserInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.AddNewGmUserPmd_CS.data)
  return data_;
}
inline ::Pmd::GmUserInfo* AddNewGmUserPmd_CS::release_data() {
  clear_has_data();
  ::Pmd::GmUserInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void AddNewGmUserPmd_CS::set_allocated_data(::Pmd::GmUserInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.AddNewGmUserPmd_CS.data)
}

// optional uint32 retcode = 2;
inline bool AddNewGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddNewGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddNewGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddNewGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 AddNewGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.AddNewGmUserPmd_CS.retcode)
  return retcode_;
}
inline void AddNewGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.AddNewGmUserPmd_CS.retcode)
}

// optional string retdesc = 3;
inline bool AddNewGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddNewGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddNewGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddNewGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& AddNewGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.AddNewGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void AddNewGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.AddNewGmUserPmd_CS.retdesc)
}
inline void AddNewGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.AddNewGmUserPmd_CS.retdesc)
}
inline void AddNewGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.AddNewGmUserPmd_CS.retdesc)
}
inline ::std::string* AddNewGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.AddNewGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* AddNewGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AddNewGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.AddNewGmUserPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// GmAccountListGmUserPmd_CS

// repeated .Pmd.GmUserInfo data = 1;
inline int GmAccountListGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void GmAccountListGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::GmUserInfo& GmAccountListGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.GmAccountListGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::GmUserInfo* GmAccountListGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.GmAccountListGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::GmUserInfo* GmAccountListGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.GmAccountListGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::GmUserInfo >&
GmAccountListGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.GmAccountListGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::GmUserInfo >*
GmAccountListGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.GmAccountListGmUserPmd_CS.data)
  return &data_;
}

// -------------------------------------------------------------------

// RequestDelGmUserPmd_CS

// required uint32 gmid = 1;
inline bool RequestDelGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestDelGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestDelGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestDelGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestDelGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDelGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestDelGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDelGmUserPmd_CS.gmid)
}

// optional uint32 retcode = 2;
inline bool RequestDelGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestDelGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestDelGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestDelGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 RequestDelGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDelGmUserPmd_CS.retcode)
  return retcode_;
}
inline void RequestDelGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestDelGmUserPmd_CS.retcode)
}

// optional string retdesc = 3;
inline bool RequestDelGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestDelGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestDelGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestDelGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& RequestDelGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestDelGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void RequestDelGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestDelGmUserPmd_CS.retdesc)
}
inline void RequestDelGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestDelGmUserPmd_CS.retdesc)
}
inline void RequestDelGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestDelGmUserPmd_CS.retdesc)
}
inline ::std::string* RequestDelGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestDelGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* RequestDelGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestDelGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestDelGmUserPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// RequestModifyPriGmUserPmd_CS

// required uint32 gmid = 1;
inline bool RequestModifyPriGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestModifyPriGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestModifyPriGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyPriGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestModifyPriGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyPriGmUserPmd_CS.gmid)
}

// required uint64 pri = 2;
inline bool RequestModifyPriGmUserPmd_CS::has_pri() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestModifyPriGmUserPmd_CS::set_has_pri() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_has_pri() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_pri() {
  pri_ = GOOGLE_ULONGLONG(0);
  clear_has_pri();
}
inline ::google::protobuf::uint64 RequestModifyPriGmUserPmd_CS::pri() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyPriGmUserPmd_CS.pri)
  return pri_;
}
inline void RequestModifyPriGmUserPmd_CS::set_pri(::google::protobuf::uint64 value) {
  set_has_pri();
  pri_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyPriGmUserPmd_CS.pri)
}

// optional uint32 gameid = 3;
inline bool RequestModifyPriGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestModifyPriGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestModifyPriGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyPriGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestModifyPriGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyPriGmUserPmd_CS.gameid)
}

// optional uint32 zoneid = 4;
inline bool RequestModifyPriGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestModifyPriGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestModifyPriGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyPriGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestModifyPriGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyPriGmUserPmd_CS.zoneid)
}

// optional uint32 retcode = 5;
inline bool RequestModifyPriGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestModifyPriGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 RequestModifyPriGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyPriGmUserPmd_CS.retcode)
  return retcode_;
}
inline void RequestModifyPriGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyPriGmUserPmd_CS.retcode)
}

// optional string retdesc = 6;
inline bool RequestModifyPriGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestModifyPriGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestModifyPriGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& RequestModifyPriGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyPriGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void RequestModifyPriGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyPriGmUserPmd_CS.retdesc)
}
inline void RequestModifyPriGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestModifyPriGmUserPmd_CS.retdesc)
}
inline void RequestModifyPriGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestModifyPriGmUserPmd_CS.retdesc)
}
inline ::std::string* RequestModifyPriGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestModifyPriGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* RequestModifyPriGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestModifyPriGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestModifyPriGmUserPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// SelectGamezoneGmUserPmd_SC

// optional uint32 retcode = 1;
inline bool SelectGamezoneGmUserPmd_SC::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SelectGamezoneGmUserPmd_SC::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SelectGamezoneGmUserPmd_SC::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SelectGamezoneGmUserPmd_SC::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 SelectGamezoneGmUserPmd_SC::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.SelectGamezoneGmUserPmd_SC.retcode)
  return retcode_;
}
inline void SelectGamezoneGmUserPmd_SC::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.SelectGamezoneGmUserPmd_SC.retcode)
}

// required uint32 gameid = 2;
inline bool SelectGamezoneGmUserPmd_SC::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SelectGamezoneGmUserPmd_SC::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SelectGamezoneGmUserPmd_SC::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SelectGamezoneGmUserPmd_SC::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 SelectGamezoneGmUserPmd_SC::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.SelectGamezoneGmUserPmd_SC.gameid)
  return gameid_;
}
inline void SelectGamezoneGmUserPmd_SC::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.SelectGamezoneGmUserPmd_SC.gameid)
}

// required uint32 zoneid = 3;
inline bool SelectGamezoneGmUserPmd_SC::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SelectGamezoneGmUserPmd_SC::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SelectGamezoneGmUserPmd_SC::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SelectGamezoneGmUserPmd_SC::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 SelectGamezoneGmUserPmd_SC::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.SelectGamezoneGmUserPmd_SC.zoneid)
  return zoneid_;
}
inline void SelectGamezoneGmUserPmd_SC::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.SelectGamezoneGmUserPmd_SC.zoneid)
}

// -------------------------------------------------------------------

// BroadcastInfo

// optional uint32 taskid = 1;
inline bool BroadcastInfo::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastInfo::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastInfo::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastInfo::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 BroadcastInfo::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.taskid)
  return taskid_;
}
inline void BroadcastInfo::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.taskid)
}

// optional uint32 gameid = 2;
inline bool BroadcastInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastInfo::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 BroadcastInfo::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.gameid)
  return gameid_;
}
inline void BroadcastInfo::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.gameid)
}

// optional uint32 zoneid = 3;
inline bool BroadcastInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 BroadcastInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.zoneid)
  return zoneid_;
}
inline void BroadcastInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.zoneid)
}

// optional uint32 gmid = 4;
inline bool BroadcastInfo::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastInfo::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastInfo::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastInfo::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 BroadcastInfo::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.gmid)
  return gmid_;
}
inline void BroadcastInfo::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.gmid)
}

// optional uint32 countryid = 6;
inline bool BroadcastInfo::has_countryid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BroadcastInfo::set_has_countryid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BroadcastInfo::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BroadcastInfo::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 BroadcastInfo::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.countryid)
  return countryid_;
}
inline void BroadcastInfo::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.countryid)
}

// optional uint32 sceneid = 7;
inline bool BroadcastInfo::has_sceneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BroadcastInfo::set_has_sceneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BroadcastInfo::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BroadcastInfo::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 BroadcastInfo::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.sceneid)
  return sceneid_;
}
inline void BroadcastInfo::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.sceneid)
}

// optional uint32 starttime = 8;
inline bool BroadcastInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BroadcastInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BroadcastInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BroadcastInfo::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 BroadcastInfo::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.starttime)
  return starttime_;
}
inline void BroadcastInfo::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.starttime)
}

// optional uint32 endtime = 9;
inline bool BroadcastInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BroadcastInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BroadcastInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BroadcastInfo::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 BroadcastInfo::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.endtime)
  return endtime_;
}
inline void BroadcastInfo::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.endtime)
}

// optional uint32 intervaltime = 10;
inline bool BroadcastInfo::has_intervaltime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BroadcastInfo::set_has_intervaltime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BroadcastInfo::clear_has_intervaltime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BroadcastInfo::clear_intervaltime() {
  intervaltime_ = 0u;
  clear_has_intervaltime();
}
inline ::google::protobuf::uint32 BroadcastInfo::intervaltime() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.intervaltime)
  return intervaltime_;
}
inline void BroadcastInfo::set_intervaltime(::google::protobuf::uint32 value) {
  set_has_intervaltime();
  intervaltime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.intervaltime)
}

// optional uint32 btype = 11;
inline bool BroadcastInfo::has_btype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BroadcastInfo::set_has_btype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BroadcastInfo::clear_has_btype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BroadcastInfo::clear_btype() {
  btype_ = 0u;
  clear_has_btype();
}
inline ::google::protobuf::uint32 BroadcastInfo::btype() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.btype)
  return btype_;
}
inline void BroadcastInfo::set_btype(::google::protobuf::uint32 value) {
  set_has_btype();
  btype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.btype)
}

// optional string content = 12;
inline bool BroadcastInfo::has_content() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BroadcastInfo::set_has_content() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BroadcastInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BroadcastInfo::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& BroadcastInfo::content() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.content)
  return *content_;
}
inline void BroadcastInfo::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.content)
}
inline void BroadcastInfo::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.BroadcastInfo.content)
}
inline void BroadcastInfo::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.BroadcastInfo.content)
}
inline ::std::string* BroadcastInfo::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.BroadcastInfo.content)
  return content_;
}
inline ::std::string* BroadcastInfo::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BroadcastInfo::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BroadcastInfo.content)
}

// optional uint32 recordtime = 13;
inline bool BroadcastInfo::has_recordtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BroadcastInfo::set_has_recordtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BroadcastInfo::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BroadcastInfo::clear_recordtime() {
  recordtime_ = 0u;
  clear_has_recordtime();
}
inline ::google::protobuf::uint32 BroadcastInfo::recordtime() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastInfo.recordtime)
  return recordtime_;
}
inline void BroadcastInfo::set_recordtime(::google::protobuf::uint32 value) {
  set_has_recordtime();
  recordtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastInfo.recordtime)
}

// -------------------------------------------------------------------

// BroadcastNewGmUserPmd_C

// required .Pmd.BroadcastInfo data = 1;
inline bool BroadcastNewGmUserPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastNewGmUserPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastNewGmUserPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastNewGmUserPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::BroadcastInfo::Clear();
  clear_has_data();
}
inline const ::Pmd::BroadcastInfo& BroadcastNewGmUserPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastNewGmUserPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::BroadcastInfo* BroadcastNewGmUserPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::BroadcastInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.BroadcastNewGmUserPmd_C.data)
  return data_;
}
inline ::Pmd::BroadcastInfo* BroadcastNewGmUserPmd_C::release_data() {
  clear_has_data();
  ::Pmd::BroadcastInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void BroadcastNewGmUserPmd_C::set_allocated_data(::Pmd::BroadcastInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.BroadcastNewGmUserPmd_C.data)
}

// optional uint32 gameid = 2;
inline bool BroadcastNewGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastNewGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastNewGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastNewGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 BroadcastNewGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastNewGmUserPmd_C.gameid)
  return gameid_;
}
inline void BroadcastNewGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastNewGmUserPmd_C.gameid)
}

// optional uint32 zoneid = 3;
inline bool BroadcastNewGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastNewGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastNewGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastNewGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 BroadcastNewGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastNewGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void BroadcastNewGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastNewGmUserPmd_C.zoneid)
}

// optional uint32 gmid = 4;
inline bool BroadcastNewGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastNewGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastNewGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastNewGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 BroadcastNewGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastNewGmUserPmd_C.gmid)
  return gmid_;
}
inline void BroadcastNewGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastNewGmUserPmd_C.gmid)
}

// -------------------------------------------------------------------

// ReturnBroadcastNewGmUserPmd_S

// optional uint32 retcode = 1;
inline bool ReturnBroadcastNewGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnBroadcastNewGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnBroadcastNewGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnBroadcastNewGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnBroadcastNewGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastNewGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnBroadcastNewGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastNewGmUserPmd_S.retcode)
}

// optional string retdesc = 2;
inline bool ReturnBroadcastNewGmUserPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnBroadcastNewGmUserPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnBroadcastNewGmUserPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnBroadcastNewGmUserPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnBroadcastNewGmUserPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastNewGmUserPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnBroadcastNewGmUserPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastNewGmUserPmd_S.retdesc)
}
inline void ReturnBroadcastNewGmUserPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnBroadcastNewGmUserPmd_S.retdesc)
}
inline void ReturnBroadcastNewGmUserPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnBroadcastNewGmUserPmd_S.retdesc)
}
inline ::std::string* ReturnBroadcastNewGmUserPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnBroadcastNewGmUserPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnBroadcastNewGmUserPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnBroadcastNewGmUserPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnBroadcastNewGmUserPmd_S.retdesc)
}

// optional uint32 taskid = 3;
inline bool ReturnBroadcastNewGmUserPmd_S::has_taskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnBroadcastNewGmUserPmd_S::set_has_taskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnBroadcastNewGmUserPmd_S::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnBroadcastNewGmUserPmd_S::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 ReturnBroadcastNewGmUserPmd_S::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastNewGmUserPmd_S.taskid)
  return taskid_;
}
inline void ReturnBroadcastNewGmUserPmd_S::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastNewGmUserPmd_S.taskid)
}

// optional uint32 gmid = 4;
inline bool ReturnBroadcastNewGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnBroadcastNewGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnBroadcastNewGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnBroadcastNewGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnBroadcastNewGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastNewGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnBroadcastNewGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastNewGmUserPmd_S.gmid)
}

// -------------------------------------------------------------------

// BroadcastDeleteGmUserPmd_C

// optional uint32 taskid = 1;
inline bool BroadcastDeleteGmUserPmd_C::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BroadcastDeleteGmUserPmd_C::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BroadcastDeleteGmUserPmd_C::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BroadcastDeleteGmUserPmd_C::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 BroadcastDeleteGmUserPmd_C::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastDeleteGmUserPmd_C.taskid)
  return taskid_;
}
inline void BroadcastDeleteGmUserPmd_C::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastDeleteGmUserPmd_C.taskid)
}

// optional uint32 gameid = 2;
inline bool BroadcastDeleteGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BroadcastDeleteGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BroadcastDeleteGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BroadcastDeleteGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 BroadcastDeleteGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastDeleteGmUserPmd_C.gameid)
  return gameid_;
}
inline void BroadcastDeleteGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastDeleteGmUserPmd_C.gameid)
}

// optional uint32 zoneid = 3;
inline bool BroadcastDeleteGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BroadcastDeleteGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BroadcastDeleteGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BroadcastDeleteGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 BroadcastDeleteGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastDeleteGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void BroadcastDeleteGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastDeleteGmUserPmd_C.zoneid)
}

// optional uint32 gmid = 4;
inline bool BroadcastDeleteGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BroadcastDeleteGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BroadcastDeleteGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BroadcastDeleteGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 BroadcastDeleteGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.BroadcastDeleteGmUserPmd_C.gmid)
  return gmid_;
}
inline void BroadcastDeleteGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.BroadcastDeleteGmUserPmd_C.gmid)
}

// -------------------------------------------------------------------

// ReturnBroadcastDeleteGmUserPmd_S

// optional uint32 retcode = 1;
inline bool ReturnBroadcastDeleteGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnBroadcastDeleteGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastDeleteGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastDeleteGmUserPmd_S.retcode)
}

// optional string retdesc = 2;
inline bool ReturnBroadcastDeleteGmUserPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnBroadcastDeleteGmUserPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastDeleteGmUserPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastDeleteGmUserPmd_S.retdesc)
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnBroadcastDeleteGmUserPmd_S.retdesc)
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnBroadcastDeleteGmUserPmd_S.retdesc)
}
inline ::std::string* ReturnBroadcastDeleteGmUserPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnBroadcastDeleteGmUserPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnBroadcastDeleteGmUserPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnBroadcastDeleteGmUserPmd_S.retdesc)
}

// optional uint32 taskid = 3;
inline bool ReturnBroadcastDeleteGmUserPmd_S::has_taskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_has_taskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 ReturnBroadcastDeleteGmUserPmd_S::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastDeleteGmUserPmd_S.taskid)
  return taskid_;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastDeleteGmUserPmd_S.taskid)
}

// optional uint32 gmid = 4;
inline bool ReturnBroadcastDeleteGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnBroadcastDeleteGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastDeleteGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnBroadcastDeleteGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastDeleteGmUserPmd_S.gmid)
}

// -------------------------------------------------------------------

// RequestBroadcastListGmUserPmd_C

// optional uint32 gameid = 1;
inline bool RequestBroadcastListGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestBroadcastListGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestBroadcastListGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBroadcastListGmUserPmd_C.gameid)
  return gameid_;
}
inline void RequestBroadcastListGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBroadcastListGmUserPmd_C.gameid)
}

// optional uint32 zoneid = 2;
inline bool RequestBroadcastListGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestBroadcastListGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestBroadcastListGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBroadcastListGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void RequestBroadcastListGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBroadcastListGmUserPmd_C.zoneid)
}

// optional uint32 sceneid = 3;
inline bool RequestBroadcastListGmUserPmd_C::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestBroadcastListGmUserPmd_C::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 RequestBroadcastListGmUserPmd_C::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBroadcastListGmUserPmd_C.sceneid)
  return sceneid_;
}
inline void RequestBroadcastListGmUserPmd_C::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBroadcastListGmUserPmd_C.sceneid)
}

// optional uint32 countryid = 4;
inline bool RequestBroadcastListGmUserPmd_C::has_countryid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestBroadcastListGmUserPmd_C::set_has_countryid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 RequestBroadcastListGmUserPmd_C::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBroadcastListGmUserPmd_C.countryid)
  return countryid_;
}
inline void RequestBroadcastListGmUserPmd_C::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBroadcastListGmUserPmd_C.countryid)
}

// optional uint32 btype = 5;
inline bool RequestBroadcastListGmUserPmd_C::has_btype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestBroadcastListGmUserPmd_C::set_has_btype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_has_btype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_btype() {
  btype_ = 0u;
  clear_has_btype();
}
inline ::google::protobuf::uint32 RequestBroadcastListGmUserPmd_C::btype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBroadcastListGmUserPmd_C.btype)
  return btype_;
}
inline void RequestBroadcastListGmUserPmd_C::set_btype(::google::protobuf::uint32 value) {
  set_has_btype();
  btype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBroadcastListGmUserPmd_C.btype)
}

// optional uint32 endtime = 6;
inline bool RequestBroadcastListGmUserPmd_C::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestBroadcastListGmUserPmd_C::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 RequestBroadcastListGmUserPmd_C::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBroadcastListGmUserPmd_C.endtime)
  return endtime_;
}
inline void RequestBroadcastListGmUserPmd_C::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBroadcastListGmUserPmd_C.endtime)
}

// optional uint32 curpage = 7;
inline bool RequestBroadcastListGmUserPmd_C::has_curpage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestBroadcastListGmUserPmd_C::set_has_curpage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestBroadcastListGmUserPmd_C::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBroadcastListGmUserPmd_C.curpage)
  return curpage_;
}
inline void RequestBroadcastListGmUserPmd_C::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBroadcastListGmUserPmd_C.curpage)
}

// optional uint32 maxpage = 8;
inline bool RequestBroadcastListGmUserPmd_C::has_maxpage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestBroadcastListGmUserPmd_C::set_has_maxpage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestBroadcastListGmUserPmd_C::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBroadcastListGmUserPmd_C.maxpage)
  return maxpage_;
}
inline void RequestBroadcastListGmUserPmd_C::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBroadcastListGmUserPmd_C.maxpage)
}

// optional uint32 perpage = 9;
inline bool RequestBroadcastListGmUserPmd_C::has_perpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestBroadcastListGmUserPmd_C::set_has_perpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestBroadcastListGmUserPmd_C::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestBroadcastListGmUserPmd_C::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestBroadcastListGmUserPmd_C.perpage)
  return perpage_;
}
inline void RequestBroadcastListGmUserPmd_C::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestBroadcastListGmUserPmd_C.perpage)
}

// -------------------------------------------------------------------

// ReturnBroadcastListGmUserPmd_S

// repeated .Pmd.BroadcastInfo data = 1;
inline int ReturnBroadcastListGmUserPmd_S::data_size() const {
  return data_.size();
}
inline void ReturnBroadcastListGmUserPmd_S::clear_data() {
  data_.Clear();
}
inline const ::Pmd::BroadcastInfo& ReturnBroadcastListGmUserPmd_S::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastListGmUserPmd_S.data)
  return data_.Get(index);
}
inline ::Pmd::BroadcastInfo* ReturnBroadcastListGmUserPmd_S::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnBroadcastListGmUserPmd_S.data)
  return data_.Mutable(index);
}
inline ::Pmd::BroadcastInfo* ReturnBroadcastListGmUserPmd_S::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.ReturnBroadcastListGmUserPmd_S.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::BroadcastInfo >&
ReturnBroadcastListGmUserPmd_S::data() const {
  // @@protoc_insertion_point(field_list:Pmd.ReturnBroadcastListGmUserPmd_S.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::BroadcastInfo >*
ReturnBroadcastListGmUserPmd_S::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.ReturnBroadcastListGmUserPmd_S.data)
  return &data_;
}

// optional uint32 gmid = 2;
inline bool ReturnBroadcastListGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnBroadcastListGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnBroadcastListGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnBroadcastListGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnBroadcastListGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastListGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnBroadcastListGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastListGmUserPmd_S.gmid)
}

// optional uint32 curpage = 3;
inline bool ReturnBroadcastListGmUserPmd_S::has_curpage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnBroadcastListGmUserPmd_S::set_has_curpage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnBroadcastListGmUserPmd_S::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnBroadcastListGmUserPmd_S::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 ReturnBroadcastListGmUserPmd_S::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastListGmUserPmd_S.curpage)
  return curpage_;
}
inline void ReturnBroadcastListGmUserPmd_S::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastListGmUserPmd_S.curpage)
}

// optional uint32 maxpage = 4;
inline bool ReturnBroadcastListGmUserPmd_S::has_maxpage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnBroadcastListGmUserPmd_S::set_has_maxpage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnBroadcastListGmUserPmd_S::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnBroadcastListGmUserPmd_S::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 ReturnBroadcastListGmUserPmd_S::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastListGmUserPmd_S.maxpage)
  return maxpage_;
}
inline void ReturnBroadcastListGmUserPmd_S::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastListGmUserPmd_S.maxpage)
}

// optional uint32 perpage = 5;
inline bool ReturnBroadcastListGmUserPmd_S::has_perpage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReturnBroadcastListGmUserPmd_S::set_has_perpage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReturnBroadcastListGmUserPmd_S::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReturnBroadcastListGmUserPmd_S::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 ReturnBroadcastListGmUserPmd_S::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnBroadcastListGmUserPmd_S.perpage)
  return perpage_;
}
inline void ReturnBroadcastListGmUserPmd_S::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnBroadcastListGmUserPmd_S.perpage)
}

// -------------------------------------------------------------------

// PunishUserInfo

// optional uint32 taskid = 1;
inline bool PunishUserInfo::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PunishUserInfo::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PunishUserInfo::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PunishUserInfo::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 PunishUserInfo::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.taskid)
  return taskid_;
}
inline void PunishUserInfo::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.taskid)
}

// optional uint32 gameid = 2;
inline bool PunishUserInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PunishUserInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PunishUserInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PunishUserInfo::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 PunishUserInfo::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.gameid)
  return gameid_;
}
inline void PunishUserInfo::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.gameid)
}

// optional uint32 zoneid = 3;
inline bool PunishUserInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PunishUserInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PunishUserInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PunishUserInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 PunishUserInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.zoneid)
  return zoneid_;
}
inline void PunishUserInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.zoneid)
}

// optional uint64 charid = 4;
inline bool PunishUserInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PunishUserInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PunishUserInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PunishUserInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 PunishUserInfo::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.charid)
  return charid_;
}
inline void PunishUserInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.charid)
}

// optional string charname = 5;
inline bool PunishUserInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PunishUserInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PunishUserInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PunishUserInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& PunishUserInfo::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.charname)
  return *charname_;
}
inline void PunishUserInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.charname)
}
inline void PunishUserInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PunishUserInfo.charname)
}
inline void PunishUserInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PunishUserInfo.charname)
}
inline ::std::string* PunishUserInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PunishUserInfo.charname)
  return charname_;
}
inline ::std::string* PunishUserInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PunishUserInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PunishUserInfo.charname)
}

// optional uint32 ip = 6;
inline bool PunishUserInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PunishUserInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PunishUserInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PunishUserInfo::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 PunishUserInfo::ip() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.ip)
  return ip_;
}
inline void PunishUserInfo::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.ip)
}

// optional uint32 gmid = 7;
inline bool PunishUserInfo::has_gmid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PunishUserInfo::set_has_gmid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PunishUserInfo::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PunishUserInfo::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 PunishUserInfo::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.gmid)
  return gmid_;
}
inline void PunishUserInfo::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.gmid)
}

// optional string reason = 8;
inline bool PunishUserInfo::has_reason() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PunishUserInfo::set_has_reason() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PunishUserInfo::clear_has_reason() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PunishUserInfo::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& PunishUserInfo::reason() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.reason)
  return *reason_;
}
inline void PunishUserInfo::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.reason)
}
inline void PunishUserInfo::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.PunishUserInfo.reason)
}
inline void PunishUserInfo::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.PunishUserInfo.reason)
}
inline ::std::string* PunishUserInfo::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.PunishUserInfo.reason)
  return reason_;
}
inline ::std::string* PunishUserInfo::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PunishUserInfo::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PunishUserInfo.reason)
}

// optional uint32 ptype = 9;
inline bool PunishUserInfo::has_ptype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PunishUserInfo::set_has_ptype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PunishUserInfo::clear_has_ptype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PunishUserInfo::clear_ptype() {
  ptype_ = 0u;
  clear_has_ptype();
}
inline ::google::protobuf::uint32 PunishUserInfo::ptype() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.ptype)
  return ptype_;
}
inline void PunishUserInfo::set_ptype(::google::protobuf::uint32 value) {
  set_has_ptype();
  ptype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.ptype)
}

// optional uint64 starttime = 10;
inline bool PunishUserInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PunishUserInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PunishUserInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PunishUserInfo::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 PunishUserInfo::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.starttime)
  return starttime_;
}
inline void PunishUserInfo::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.starttime)
}

// optional uint64 endtime = 11;
inline bool PunishUserInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PunishUserInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PunishUserInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PunishUserInfo::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 PunishUserInfo::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.endtime)
  return endtime_;
}
inline void PunishUserInfo::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.endtime)
}

// optional uint64 punishtime = 12;
inline bool PunishUserInfo::has_punishtime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PunishUserInfo::set_has_punishtime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PunishUserInfo::clear_has_punishtime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PunishUserInfo::clear_punishtime() {
  punishtime_ = GOOGLE_ULONGLONG(0);
  clear_has_punishtime();
}
inline ::google::protobuf::uint64 PunishUserInfo::punishtime() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.punishtime)
  return punishtime_;
}
inline void PunishUserInfo::set_punishtime(::google::protobuf::uint64 value) {
  set_has_punishtime();
  punishtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.punishtime)
}

// optional uint32 state = 13;
inline bool PunishUserInfo::has_state() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PunishUserInfo::set_has_state() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PunishUserInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PunishUserInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 PunishUserInfo::state() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserInfo.state)
  return state_;
}
inline void PunishUserInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserInfo.state)
}

// -------------------------------------------------------------------

// PunishUserGmUserPmd_C

// required .Pmd.PunishUserInfo data = 1;
inline bool PunishUserGmUserPmd_C::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PunishUserGmUserPmd_C::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PunishUserGmUserPmd_C::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PunishUserGmUserPmd_C::clear_data() {
  if (data_ != NULL) data_->::Pmd::PunishUserInfo::Clear();
  clear_has_data();
}
inline const ::Pmd::PunishUserInfo& PunishUserGmUserPmd_C::data() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserGmUserPmd_C.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::PunishUserInfo* PunishUserGmUserPmd_C::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::PunishUserInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.PunishUserGmUserPmd_C.data)
  return data_;
}
inline ::Pmd::PunishUserInfo* PunishUserGmUserPmd_C::release_data() {
  clear_has_data();
  ::Pmd::PunishUserInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void PunishUserGmUserPmd_C::set_allocated_data(::Pmd::PunishUserInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.PunishUserGmUserPmd_C.data)
}

// optional uint32 gameid = 2;
inline bool PunishUserGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PunishUserGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PunishUserGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PunishUserGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 PunishUserGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserGmUserPmd_C.gameid)
  return gameid_;
}
inline void PunishUserGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserGmUserPmd_C.gameid)
}

// optional uint32 zoneid = 3;
inline bool PunishUserGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PunishUserGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PunishUserGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PunishUserGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 PunishUserGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void PunishUserGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserGmUserPmd_C.zoneid)
}

// optional uint32 gmid = 4;
inline bool PunishUserGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PunishUserGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PunishUserGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PunishUserGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 PunishUserGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.PunishUserGmUserPmd_C.gmid)
  return gmid_;
}
inline void PunishUserGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.PunishUserGmUserPmd_C.gmid)
}

// -------------------------------------------------------------------

// ReturnPunishUserGmUserPmd_S

// optional uint32 retcode = 1;
inline bool ReturnPunishUserGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnPunishUserGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnPunishUserGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnPunishUserGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnPunishUserGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnPunishUserGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnPunishUserGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnPunishUserGmUserPmd_S.retcode)
}

// optional string retdesc = 2;
inline bool ReturnPunishUserGmUserPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnPunishUserGmUserPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnPunishUserGmUserPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnPunishUserGmUserPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnPunishUserGmUserPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnPunishUserGmUserPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnPunishUserGmUserPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnPunishUserGmUserPmd_S.retdesc)
}
inline void ReturnPunishUserGmUserPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnPunishUserGmUserPmd_S.retdesc)
}
inline void ReturnPunishUserGmUserPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnPunishUserGmUserPmd_S.retdesc)
}
inline ::std::string* ReturnPunishUserGmUserPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnPunishUserGmUserPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnPunishUserGmUserPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnPunishUserGmUserPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnPunishUserGmUserPmd_S.retdesc)
}

// optional uint32 taskid = 3;
inline bool ReturnPunishUserGmUserPmd_S::has_taskid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnPunishUserGmUserPmd_S::set_has_taskid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnPunishUserGmUserPmd_S::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnPunishUserGmUserPmd_S::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 ReturnPunishUserGmUserPmd_S::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnPunishUserGmUserPmd_S.taskid)
  return taskid_;
}
inline void ReturnPunishUserGmUserPmd_S::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnPunishUserGmUserPmd_S.taskid)
}

// optional uint32 gmid = 4;
inline bool ReturnPunishUserGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnPunishUserGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnPunishUserGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnPunishUserGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnPunishUserGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnPunishUserGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnPunishUserGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnPunishUserGmUserPmd_S.gmid)
}

// -------------------------------------------------------------------

// DeletePunishUserGmUserPmd_C

// required uint32 taskid = 1;
inline bool DeletePunishUserGmUserPmd_C::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeletePunishUserGmUserPmd_C::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeletePunishUserGmUserPmd_C::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeletePunishUserGmUserPmd_C::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 DeletePunishUserGmUserPmd_C::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.DeletePunishUserGmUserPmd_C.taskid)
  return taskid_;
}
inline void DeletePunishUserGmUserPmd_C::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.DeletePunishUserGmUserPmd_C.taskid)
}

// optional uint32 gameid = 2;
inline bool DeletePunishUserGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeletePunishUserGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeletePunishUserGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeletePunishUserGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 DeletePunishUserGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.DeletePunishUserGmUserPmd_C.gameid)
  return gameid_;
}
inline void DeletePunishUserGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.DeletePunishUserGmUserPmd_C.gameid)
}

// optional uint32 zoneid = 3;
inline bool DeletePunishUserGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeletePunishUserGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeletePunishUserGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeletePunishUserGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 DeletePunishUserGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.DeletePunishUserGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void DeletePunishUserGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.DeletePunishUserGmUserPmd_C.zoneid)
}

// optional uint32 gmid = 4;
inline bool DeletePunishUserGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DeletePunishUserGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DeletePunishUserGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DeletePunishUserGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 DeletePunishUserGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.DeletePunishUserGmUserPmd_C.gmid)
  return gmid_;
}
inline void DeletePunishUserGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.DeletePunishUserGmUserPmd_C.gmid)
}

// -------------------------------------------------------------------

// ReturnDeletePunishUserGmUserPmd_S

// optional uint32 retcode = 1;
inline bool ReturnDeletePunishUserGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnDeletePunishUserGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnDeletePunishUserGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnDeletePunishUserGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnDeletePunishUserGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnDeletePunishUserGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnDeletePunishUserGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnDeletePunishUserGmUserPmd_S.retcode)
}

// optional uint32 taskid = 2;
inline bool ReturnDeletePunishUserGmUserPmd_S::has_taskid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnDeletePunishUserGmUserPmd_S::set_has_taskid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnDeletePunishUserGmUserPmd_S::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnDeletePunishUserGmUserPmd_S::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 ReturnDeletePunishUserGmUserPmd_S::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnDeletePunishUserGmUserPmd_S.taskid)
  return taskid_;
}
inline void ReturnDeletePunishUserGmUserPmd_S::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnDeletePunishUserGmUserPmd_S.taskid)
}

// optional uint32 zoneid = 3;
inline bool ReturnDeletePunishUserGmUserPmd_S::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnDeletePunishUserGmUserPmd_S::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnDeletePunishUserGmUserPmd_S::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnDeletePunishUserGmUserPmd_S::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 ReturnDeletePunishUserGmUserPmd_S::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnDeletePunishUserGmUserPmd_S.zoneid)
  return zoneid_;
}
inline void ReturnDeletePunishUserGmUserPmd_S::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnDeletePunishUserGmUserPmd_S.zoneid)
}

// optional uint32 gmid = 4;
inline bool ReturnDeletePunishUserGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnDeletePunishUserGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnDeletePunishUserGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnDeletePunishUserGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnDeletePunishUserGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnDeletePunishUserGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnDeletePunishUserGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnDeletePunishUserGmUserPmd_S.gmid)
}

// -------------------------------------------------------------------

// RequestPunishListGmUserPmd_C

// required uint32 gameid = 1;
inline bool RequestPunishListGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestPunishListGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestPunishListGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.gameid)
  return gameid_;
}
inline void RequestPunishListGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestPunishListGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestPunishListGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestPunishListGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void RequestPunishListGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestPunishListGmUserPmd_C::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestPunishListGmUserPmd_C::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestPunishListGmUserPmd_C::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.charid)
  return charid_;
}
inline void RequestPunishListGmUserPmd_C::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.charid)
}

// optional string charname = 4;
inline bool RequestPunishListGmUserPmd_C::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestPunishListGmUserPmd_C::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RequestPunishListGmUserPmd_C::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.charname)
  return *charname_;
}
inline void RequestPunishListGmUserPmd_C::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.charname)
}
inline void RequestPunishListGmUserPmd_C::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestPunishListGmUserPmd_C.charname)
}
inline void RequestPunishListGmUserPmd_C::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestPunishListGmUserPmd_C.charname)
}
inline ::std::string* RequestPunishListGmUserPmd_C::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestPunishListGmUserPmd_C.charname)
  return charname_;
}
inline ::std::string* RequestPunishListGmUserPmd_C::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestPunishListGmUserPmd_C::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestPunishListGmUserPmd_C.charname)
}

// optional uint32 gmid = 5;
inline bool RequestPunishListGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestPunishListGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestPunishListGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.gmid)
  return gmid_;
}
inline void RequestPunishListGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.gmid)
}

// optional uint32 ptype = 6;
inline bool RequestPunishListGmUserPmd_C::has_ptype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_ptype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_ptype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestPunishListGmUserPmd_C::clear_ptype() {
  ptype_ = 0u;
  clear_has_ptype();
}
inline ::google::protobuf::uint32 RequestPunishListGmUserPmd_C::ptype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.ptype)
  return ptype_;
}
inline void RequestPunishListGmUserPmd_C::set_ptype(::google::protobuf::uint32 value) {
  set_has_ptype();
  ptype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.ptype)
}

// optional uint32 state = 7;
inline bool RequestPunishListGmUserPmd_C::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestPunishListGmUserPmd_C::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 RequestPunishListGmUserPmd_C::state() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.state)
  return state_;
}
inline void RequestPunishListGmUserPmd_C::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.state)
}

// optional uint64 starttime = 8;
inline bool RequestPunishListGmUserPmd_C::has_starttime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_starttime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestPunishListGmUserPmd_C::clear_starttime() {
  starttime_ = GOOGLE_ULONGLONG(0);
  clear_has_starttime();
}
inline ::google::protobuf::uint64 RequestPunishListGmUserPmd_C::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.starttime)
  return starttime_;
}
inline void RequestPunishListGmUserPmd_C::set_starttime(::google::protobuf::uint64 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.starttime)
}

// optional uint64 endtime = 9;
inline bool RequestPunishListGmUserPmd_C::has_endtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_endtime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestPunishListGmUserPmd_C::clear_endtime() {
  endtime_ = GOOGLE_ULONGLONG(0);
  clear_has_endtime();
}
inline ::google::protobuf::uint64 RequestPunishListGmUserPmd_C::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.endtime)
  return endtime_;
}
inline void RequestPunishListGmUserPmd_C::set_endtime(::google::protobuf::uint64 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.endtime)
}

// optional uint32 curpage = 10;
inline bool RequestPunishListGmUserPmd_C::has_curpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_curpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestPunishListGmUserPmd_C::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestPunishListGmUserPmd_C::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.curpage)
  return curpage_;
}
inline void RequestPunishListGmUserPmd_C::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.curpage)
}

// optional uint32 maxpage = 11;
inline bool RequestPunishListGmUserPmd_C::has_maxpage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_maxpage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RequestPunishListGmUserPmd_C::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestPunishListGmUserPmd_C::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.maxpage)
  return maxpage_;
}
inline void RequestPunishListGmUserPmd_C::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.maxpage)
}

// optional uint32 perpage = 12;
inline bool RequestPunishListGmUserPmd_C::has_perpage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RequestPunishListGmUserPmd_C::set_has_perpage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RequestPunishListGmUserPmd_C::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RequestPunishListGmUserPmd_C::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestPunishListGmUserPmd_C::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestPunishListGmUserPmd_C.perpage)
  return perpage_;
}
inline void RequestPunishListGmUserPmd_C::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestPunishListGmUserPmd_C.perpage)
}

// -------------------------------------------------------------------

// ReturnPunishListGmUserPmd_S

// repeated .Pmd.PunishUserInfo data = 1;
inline int ReturnPunishListGmUserPmd_S::data_size() const {
  return data_.size();
}
inline void ReturnPunishListGmUserPmd_S::clear_data() {
  data_.Clear();
}
inline const ::Pmd::PunishUserInfo& ReturnPunishListGmUserPmd_S::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnPunishListGmUserPmd_S.data)
  return data_.Get(index);
}
inline ::Pmd::PunishUserInfo* ReturnPunishListGmUserPmd_S::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnPunishListGmUserPmd_S.data)
  return data_.Mutable(index);
}
inline ::Pmd::PunishUserInfo* ReturnPunishListGmUserPmd_S::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.ReturnPunishListGmUserPmd_S.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::PunishUserInfo >&
ReturnPunishListGmUserPmd_S::data() const {
  // @@protoc_insertion_point(field_list:Pmd.ReturnPunishListGmUserPmd_S.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::PunishUserInfo >*
ReturnPunishListGmUserPmd_S::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.ReturnPunishListGmUserPmd_S.data)
  return &data_;
}

// optional uint32 gmid = 2;
inline bool ReturnPunishListGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnPunishListGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnPunishListGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnPunishListGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnPunishListGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnPunishListGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnPunishListGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnPunishListGmUserPmd_S.gmid)
}

// optional uint32 curpage = 3;
inline bool ReturnPunishListGmUserPmd_S::has_curpage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnPunishListGmUserPmd_S::set_has_curpage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnPunishListGmUserPmd_S::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnPunishListGmUserPmd_S::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 ReturnPunishListGmUserPmd_S::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnPunishListGmUserPmd_S.curpage)
  return curpage_;
}
inline void ReturnPunishListGmUserPmd_S::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnPunishListGmUserPmd_S.curpage)
}

// optional uint32 maxpage = 4;
inline bool ReturnPunishListGmUserPmd_S::has_maxpage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnPunishListGmUserPmd_S::set_has_maxpage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnPunishListGmUserPmd_S::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnPunishListGmUserPmd_S::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 ReturnPunishListGmUserPmd_S::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnPunishListGmUserPmd_S.maxpage)
  return maxpage_;
}
inline void ReturnPunishListGmUserPmd_S::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnPunishListGmUserPmd_S.maxpage)
}

// optional uint32 perpage = 5;
inline bool ReturnPunishListGmUserPmd_S::has_perpage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReturnPunishListGmUserPmd_S::set_has_perpage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReturnPunishListGmUserPmd_S::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReturnPunishListGmUserPmd_S::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 ReturnPunishListGmUserPmd_S::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnPunishListGmUserPmd_S.perpage)
  return perpage_;
}
inline void ReturnPunishListGmUserPmd_S::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnPunishListGmUserPmd_S.perpage)
}

// -------------------------------------------------------------------

// ItemInfo

// required uint32 itemid = 1;
inline bool ItemInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemInfo::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 ItemInfo::itemid() const {
  // @@protoc_insertion_point(field_get:Pmd.ItemInfo.itemid)
  return itemid_;
}
inline void ItemInfo::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ItemInfo.itemid)
}

// optional string itemname = 2;
inline bool ItemInfo::has_itemname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemInfo::set_has_itemname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemInfo::clear_has_itemname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemInfo::clear_itemname() {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_->clear();
  }
  clear_has_itemname();
}
inline const ::std::string& ItemInfo::itemname() const {
  // @@protoc_insertion_point(field_get:Pmd.ItemInfo.itemname)
  return *itemname_;
}
inline void ItemInfo::set_itemname(const ::std::string& value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ItemInfo.itemname)
}
inline void ItemInfo::set_itemname(const char* value) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ItemInfo.itemname)
}
inline void ItemInfo::set_itemname(const char* value, size_t size) {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  itemname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ItemInfo.itemname)
}
inline ::std::string* ItemInfo::mutable_itemname() {
  set_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    itemname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ItemInfo.itemname)
  return itemname_;
}
inline ::std::string* ItemInfo::release_itemname() {
  clear_has_itemname();
  if (itemname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = itemname_;
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ItemInfo::set_allocated_itemname(::std::string* itemname) {
  if (itemname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete itemname_;
  }
  if (itemname) {
    set_has_itemname();
    itemname_ = itemname;
  } else {
    clear_has_itemname();
    itemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ItemInfo.itemname)
}

// optional uint32 itemnum = 3;
inline bool ItemInfo::has_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemInfo::set_has_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemInfo::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemInfo::clear_itemnum() {
  itemnum_ = 0u;
  clear_has_itemnum();
}
inline ::google::protobuf::uint32 ItemInfo::itemnum() const {
  // @@protoc_insertion_point(field_get:Pmd.ItemInfo.itemnum)
  return itemnum_;
}
inline void ItemInfo::set_itemnum(::google::protobuf::uint32 value) {
  set_has_itemnum();
  itemnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ItemInfo.itemnum)
}

// optional uint32 itemtype = 4;
inline bool ItemInfo::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemInfo::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemInfo::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemInfo::clear_itemtype() {
  itemtype_ = 0u;
  clear_has_itemtype();
}
inline ::google::protobuf::uint32 ItemInfo::itemtype() const {
  // @@protoc_insertion_point(field_get:Pmd.ItemInfo.itemtype)
  return itemtype_;
}
inline void ItemInfo::set_itemtype(::google::protobuf::uint32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ItemInfo.itemtype)
}

// -------------------------------------------------------------------

// ItemTypeInfo

// required uint32 itemtype = 1;
inline bool ItemTypeInfo::has_itemtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemTypeInfo::set_has_itemtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemTypeInfo::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemTypeInfo::clear_itemtype() {
  itemtype_ = 0u;
  clear_has_itemtype();
}
inline ::google::protobuf::uint32 ItemTypeInfo::itemtype() const {
  // @@protoc_insertion_point(field_get:Pmd.ItemTypeInfo.itemtype)
  return itemtype_;
}
inline void ItemTypeInfo::set_itemtype(::google::protobuf::uint32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ItemTypeInfo.itemtype)
}

// optional string typename = 2;
inline bool ItemTypeInfo::has_typename_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemTypeInfo::set_has_typename_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemTypeInfo::clear_has_typename_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemTypeInfo::clear_typename_() {
  if (typename__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__->clear();
  }
  clear_has_typename_();
}
inline const ::std::string& ItemTypeInfo::typename_() const {
  // @@protoc_insertion_point(field_get:Pmd.ItemTypeInfo.typename)
  return *typename__;
}
inline void ItemTypeInfo::set_typename_(const ::std::string& value) {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  typename__->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ItemTypeInfo.typename)
}
inline void ItemTypeInfo::set_typename_(const char* value) {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  typename__->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ItemTypeInfo.typename)
}
inline void ItemTypeInfo::set_typename_(const char* value, size_t size) {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  typename__->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ItemTypeInfo.typename)
}
inline ::std::string* ItemTypeInfo::mutable_typename_() {
  set_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    typename__ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ItemTypeInfo.typename)
  return typename__;
}
inline ::std::string* ItemTypeInfo::release_typename_() {
  clear_has_typename_();
  if (typename__ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = typename__;
    typename__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ItemTypeInfo::set_allocated_typename_(::std::string* typename_) {
  if (typename__ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete typename__;
  }
  if (typename_) {
    set_has_typename_();
    typename__ = typename_;
  } else {
    clear_has_typename_();
    typename__ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ItemTypeInfo.typename)
}

// repeated .Pmd.ItemInfo data = 3;
inline int ItemTypeInfo::data_size() const {
  return data_.size();
}
inline void ItemTypeInfo::clear_data() {
  data_.Clear();
}
inline const ::Pmd::ItemInfo& ItemTypeInfo::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.ItemTypeInfo.data)
  return data_.Get(index);
}
inline ::Pmd::ItemInfo* ItemTypeInfo::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.ItemTypeInfo.data)
  return data_.Mutable(index);
}
inline ::Pmd::ItemInfo* ItemTypeInfo::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.ItemTypeInfo.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo >&
ItemTypeInfo::data() const {
  // @@protoc_insertion_point(field_list:Pmd.ItemTypeInfo.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::ItemInfo >*
ItemTypeInfo::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.ItemTypeInfo.data)
  return &data_;
}

// -------------------------------------------------------------------

// RequestItemTypeInfoGmUserPmd_CS

// required uint32 gameid = 1;
inline bool RequestItemTypeInfoGmUserPmd_CS::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestItemTypeInfoGmUserPmd_CS::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestItemTypeInfoGmUserPmd_CS.gameid)
  return gameid_;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestItemTypeInfoGmUserPmd_CS.gameid)
}

// optional uint32 zoneid = 2;
inline bool RequestItemTypeInfoGmUserPmd_CS::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestItemTypeInfoGmUserPmd_CS::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestItemTypeInfoGmUserPmd_CS.zoneid)
  return zoneid_;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestItemTypeInfoGmUserPmd_CS.zoneid)
}

// optional uint32 gmid = 3;
inline bool RequestItemTypeInfoGmUserPmd_CS::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestItemTypeInfoGmUserPmd_CS::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestItemTypeInfoGmUserPmd_CS.gmid)
  return gmid_;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestItemTypeInfoGmUserPmd_CS.gmid)
}

// repeated .Pmd.ItemTypeInfo data = 4;
inline int RequestItemTypeInfoGmUserPmd_CS::data_size() const {
  return data_.size();
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_data() {
  data_.Clear();
}
inline const ::Pmd::ItemTypeInfo& RequestItemTypeInfoGmUserPmd_CS::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.RequestItemTypeInfoGmUserPmd_CS.data)
  return data_.Get(index);
}
inline ::Pmd::ItemTypeInfo* RequestItemTypeInfoGmUserPmd_CS::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.RequestItemTypeInfoGmUserPmd_CS.data)
  return data_.Mutable(index);
}
inline ::Pmd::ItemTypeInfo* RequestItemTypeInfoGmUserPmd_CS::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.RequestItemTypeInfoGmUserPmd_CS.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo >&
RequestItemTypeInfoGmUserPmd_CS::data() const {
  // @@protoc_insertion_point(field_list:Pmd.RequestItemTypeInfoGmUserPmd_CS.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo >*
RequestItemTypeInfoGmUserPmd_CS::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.RequestItemTypeInfoGmUserPmd_CS.data)
  return &data_;
}

// optional uint32 retcode = 5;
inline bool RequestItemTypeInfoGmUserPmd_CS::has_retcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_has_retcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 RequestItemTypeInfoGmUserPmd_CS::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestItemTypeInfoGmUserPmd_CS.retcode)
  return retcode_;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestItemTypeInfoGmUserPmd_CS.retcode)
}

// optional string retdesc = 6;
inline bool RequestItemTypeInfoGmUserPmd_CS::has_retdesc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_has_retdesc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestItemTypeInfoGmUserPmd_CS::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& RequestItemTypeInfoGmUserPmd_CS::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestItemTypeInfoGmUserPmd_CS.retdesc)
  return *retdesc_;
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestItemTypeInfoGmUserPmd_CS.retdesc)
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestItemTypeInfoGmUserPmd_CS.retdesc)
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestItemTypeInfoGmUserPmd_CS.retdesc)
}
inline ::std::string* RequestItemTypeInfoGmUserPmd_CS::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestItemTypeInfoGmUserPmd_CS.retdesc)
  return retdesc_;
}
inline ::std::string* RequestItemTypeInfoGmUserPmd_CS::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestItemTypeInfoGmUserPmd_CS::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestItemTypeInfoGmUserPmd_CS.retdesc)
}

// -------------------------------------------------------------------

// UserInfo

// optional uint32 gameid = 1;
inline bool UserInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfo::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 UserInfo::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.gameid)
  return gameid_;
}
inline void UserInfo::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.gameid)
}

// optional uint32 zoneid = 2;
inline bool UserInfo::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserInfo::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserInfo::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserInfo::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 UserInfo::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.zoneid)
  return zoneid_;
}
inline void UserInfo::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.zoneid)
}

// optional uint64 charid = 3;
inline bool UserInfo::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserInfo::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserInfo::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserInfo::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 UserInfo::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.charid)
  return charid_;
}
inline void UserInfo::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.charid)
}

// optional string charname = 4;
inline bool UserInfo::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserInfo::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserInfo::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserInfo::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& UserInfo::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.charname)
  return *charname_;
}
inline void UserInfo::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.charname)
}
inline void UserInfo::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.UserInfo.charname)
}
inline void UserInfo::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.UserInfo.charname)
}
inline ::std::string* UserInfo::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.UserInfo.charname)
  return charname_;
}
inline ::std::string* UserInfo::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserInfo::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.UserInfo.charname)
}

// optional string profession = 5;
inline bool UserInfo::has_profession() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserInfo::set_has_profession() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserInfo::clear_has_profession() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserInfo::clear_profession() {
  if (profession_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_->clear();
  }
  clear_has_profession();
}
inline const ::std::string& UserInfo::profession() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.profession)
  return *profession_;
}
inline void UserInfo::set_profession(const ::std::string& value) {
  set_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_ = new ::std::string;
  }
  profession_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.profession)
}
inline void UserInfo::set_profession(const char* value) {
  set_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_ = new ::std::string;
  }
  profession_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.UserInfo.profession)
}
inline void UserInfo::set_profession(const char* value, size_t size) {
  set_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_ = new ::std::string;
  }
  profession_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.UserInfo.profession)
}
inline ::std::string* UserInfo::mutable_profession() {
  set_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    profession_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.UserInfo.profession)
  return profession_;
}
inline ::std::string* UserInfo::release_profession() {
  clear_has_profession();
  if (profession_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = profession_;
    profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserInfo::set_allocated_profession(::std::string* profession) {
  if (profession_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete profession_;
  }
  if (profession) {
    set_has_profession();
    profession_ = profession;
  } else {
    clear_has_profession();
    profession_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.UserInfo.profession)
}

// optional string countryname = 6;
inline bool UserInfo::has_countryname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserInfo::set_has_countryname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserInfo::clear_has_countryname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserInfo::clear_countryname() {
  if (countryname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countryname_->clear();
  }
  clear_has_countryname();
}
inline const ::std::string& UserInfo::countryname() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.countryname)
  return *countryname_;
}
inline void UserInfo::set_countryname(const ::std::string& value) {
  set_has_countryname();
  if (countryname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countryname_ = new ::std::string;
  }
  countryname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.countryname)
}
inline void UserInfo::set_countryname(const char* value) {
  set_has_countryname();
  if (countryname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countryname_ = new ::std::string;
  }
  countryname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.UserInfo.countryname)
}
inline void UserInfo::set_countryname(const char* value, size_t size) {
  set_has_countryname();
  if (countryname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countryname_ = new ::std::string;
  }
  countryname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.UserInfo.countryname)
}
inline ::std::string* UserInfo::mutable_countryname() {
  set_has_countryname();
  if (countryname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    countryname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.UserInfo.countryname)
  return countryname_;
}
inline ::std::string* UserInfo::release_countryname() {
  clear_has_countryname();
  if (countryname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = countryname_;
    countryname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserInfo::set_allocated_countryname(::std::string* countryname) {
  if (countryname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete countryname_;
  }
  if (countryname) {
    set_has_countryname();
    countryname_ = countryname;
  } else {
    clear_has_countryname();
    countryname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.UserInfo.countryname)
}

// optional uint32 level = 7;
inline bool UserInfo::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserInfo::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 UserInfo::level() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.level)
  return level_;
}
inline void UserInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.level)
}

// optional uint32 viplevel = 8;
inline bool UserInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserInfo::clear_viplevel() {
  viplevel_ = 0u;
  clear_has_viplevel();
}
inline ::google::protobuf::uint32 UserInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.viplevel)
  return viplevel_;
}
inline void UserInfo::set_viplevel(::google::protobuf::uint32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.viplevel)
}

// optional uint32 oldzoneid = 9;
inline bool UserInfo::has_oldzoneid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void UserInfo::set_has_oldzoneid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void UserInfo::clear_has_oldzoneid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void UserInfo::clear_oldzoneid() {
  oldzoneid_ = 0u;
  clear_has_oldzoneid();
}
inline ::google::protobuf::uint32 UserInfo::oldzoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.oldzoneid)
  return oldzoneid_;
}
inline void UserInfo::set_oldzoneid(::google::protobuf::uint32 value) {
  set_has_oldzoneid();
  oldzoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.oldzoneid)
}

// optional uint32 lastofftime = 10;
inline bool UserInfo::has_lastofftime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserInfo::set_has_lastofftime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserInfo::clear_has_lastofftime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserInfo::clear_lastofftime() {
  lastofftime_ = 0u;
  clear_has_lastofftime();
}
inline ::google::protobuf::uint32 UserInfo::lastofftime() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.lastofftime)
  return lastofftime_;
}
inline void UserInfo::set_lastofftime(::google::protobuf::uint32 value) {
  set_has_lastofftime();
  lastofftime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.lastofftime)
}

// optional uint32 lastloginip = 11;
inline bool UserInfo::has_lastloginip() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void UserInfo::set_has_lastloginip() {
  _has_bits_[0] |= 0x00000400u;
}
inline void UserInfo::clear_has_lastloginip() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void UserInfo::clear_lastloginip() {
  lastloginip_ = 0u;
  clear_has_lastloginip();
}
inline ::google::protobuf::uint32 UserInfo::lastloginip() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.lastloginip)
  return lastloginip_;
}
inline void UserInfo::set_lastloginip(::google::protobuf::uint32 value) {
  set_has_lastloginip();
  lastloginip_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.lastloginip)
}

// optional uint32 gmlevel = 12;
inline bool UserInfo::has_gmlevel() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void UserInfo::set_has_gmlevel() {
  _has_bits_[0] |= 0x00000800u;
}
inline void UserInfo::clear_has_gmlevel() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void UserInfo::clear_gmlevel() {
  gmlevel_ = 0u;
  clear_has_gmlevel();
}
inline ::google::protobuf::uint32 UserInfo::gmlevel() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.gmlevel)
  return gmlevel_;
}
inline void UserInfo::set_gmlevel(::google::protobuf::uint32 value) {
  set_has_gmlevel();
  gmlevel_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.gmlevel)
}

// optional uint32 createtime = 13;
inline bool UserInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void UserInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void UserInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void UserInfo::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 UserInfo::createtime() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.createtime)
  return createtime_;
}
inline void UserInfo::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.createtime)
}

// optional uint32 isonline = 14;
inline bool UserInfo::has_isonline() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void UserInfo::set_has_isonline() {
  _has_bits_[0] |= 0x00002000u;
}
inline void UserInfo::clear_has_isonline() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void UserInfo::clear_isonline() {
  isonline_ = 0u;
  clear_has_isonline();
}
inline ::google::protobuf::uint32 UserInfo::isonline() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.isonline)
  return isonline_;
}
inline void UserInfo::set_isonline(::google::protobuf::uint32 value) {
  set_has_isonline();
  isonline_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.isonline)
}

// optional uint32 glodnum = 15;
inline bool UserInfo::has_glodnum() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void UserInfo::set_has_glodnum() {
  _has_bits_[0] |= 0x00004000u;
}
inline void UserInfo::clear_has_glodnum() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void UserInfo::clear_glodnum() {
  glodnum_ = 0u;
  clear_has_glodnum();
}
inline ::google::protobuf::uint32 UserInfo::glodnum() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.glodnum)
  return glodnum_;
}
inline void UserInfo::set_glodnum(::google::protobuf::uint32 value) {
  set_has_glodnum();
  glodnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.glodnum)
}

// optional uint32 money = 16;
inline bool UserInfo::has_money() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void UserInfo::set_has_money() {
  _has_bits_[0] |= 0x00008000u;
}
inline void UserInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void UserInfo::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 UserInfo::money() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.money)
  return money_;
}
inline void UserInfo::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.money)
}

// optional int64 totalwin = 17;
inline bool UserInfo::has_totalwin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void UserInfo::set_has_totalwin() {
  _has_bits_[0] |= 0x00010000u;
}
inline void UserInfo::clear_has_totalwin() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void UserInfo::clear_totalwin() {
  totalwin_ = GOOGLE_LONGLONG(0);
  clear_has_totalwin();
}
inline ::google::protobuf::int64 UserInfo::totalwin() const {
  // @@protoc_insertion_point(field_get:Pmd.UserInfo.totalwin)
  return totalwin_;
}
inline void UserInfo::set_totalwin(::google::protobuf::int64 value) {
  set_has_totalwin();
  totalwin_ = value;
  // @@protoc_insertion_point(field_set:Pmd.UserInfo.totalwin)
}

// -------------------------------------------------------------------

// RequestUserInfoGmUserPmd_C

// required uint32 gameid = 1;
inline bool RequestUserInfoGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestUserInfoGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestUserInfoGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestUserInfoGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestUserInfoGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserInfoGmUserPmd_C.gameid)
  return gameid_;
}
inline void RequestUserInfoGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserInfoGmUserPmd_C.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestUserInfoGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestUserInfoGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestUserInfoGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestUserInfoGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestUserInfoGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserInfoGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void RequestUserInfoGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserInfoGmUserPmd_C.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestUserInfoGmUserPmd_C::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestUserInfoGmUserPmd_C::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestUserInfoGmUserPmd_C::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestUserInfoGmUserPmd_C::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestUserInfoGmUserPmd_C::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserInfoGmUserPmd_C.charid)
  return charid_;
}
inline void RequestUserInfoGmUserPmd_C::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserInfoGmUserPmd_C.charid)
}

// optional string charname = 4;
inline bool RequestUserInfoGmUserPmd_C::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestUserInfoGmUserPmd_C::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestUserInfoGmUserPmd_C::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestUserInfoGmUserPmd_C::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RequestUserInfoGmUserPmd_C::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserInfoGmUserPmd_C.charname)
  return *charname_;
}
inline void RequestUserInfoGmUserPmd_C::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestUserInfoGmUserPmd_C.charname)
}
inline void RequestUserInfoGmUserPmd_C::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestUserInfoGmUserPmd_C.charname)
}
inline void RequestUserInfoGmUserPmd_C::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestUserInfoGmUserPmd_C.charname)
}
inline ::std::string* RequestUserInfoGmUserPmd_C::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestUserInfoGmUserPmd_C.charname)
  return charname_;
}
inline ::std::string* RequestUserInfoGmUserPmd_C::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestUserInfoGmUserPmd_C::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestUserInfoGmUserPmd_C.charname)
}

// optional uint32 gmid = 5;
inline bool RequestUserInfoGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestUserInfoGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestUserInfoGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestUserInfoGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestUserInfoGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserInfoGmUserPmd_C.gmid)
  return gmid_;
}
inline void RequestUserInfoGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserInfoGmUserPmd_C.gmid)
}

// -------------------------------------------------------------------

// ReturnUserInfoGmUserPmd_S

// required uint32 retcode = 1;
inline bool ReturnUserInfoGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnUserInfoGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnUserInfoGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnUserInfoGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnUserInfoGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserInfoGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnUserInfoGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserInfoGmUserPmd_S.retcode)
}

// optional string retdesc = 2;
inline bool ReturnUserInfoGmUserPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnUserInfoGmUserPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnUserInfoGmUserPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnUserInfoGmUserPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnUserInfoGmUserPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserInfoGmUserPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnUserInfoGmUserPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserInfoGmUserPmd_S.retdesc)
}
inline void ReturnUserInfoGmUserPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnUserInfoGmUserPmd_S.retdesc)
}
inline void ReturnUserInfoGmUserPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnUserInfoGmUserPmd_S.retdesc)
}
inline ::std::string* ReturnUserInfoGmUserPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnUserInfoGmUserPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnUserInfoGmUserPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnUserInfoGmUserPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnUserInfoGmUserPmd_S.retdesc)
}

// required .Pmd.UserInfo data = 3;
inline bool ReturnUserInfoGmUserPmd_S::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnUserInfoGmUserPmd_S::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnUserInfoGmUserPmd_S::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnUserInfoGmUserPmd_S::clear_data() {
  if (data_ != NULL) data_->::Pmd::UserInfo::Clear();
  clear_has_data();
}
inline const ::Pmd::UserInfo& ReturnUserInfoGmUserPmd_S::data() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserInfoGmUserPmd_S.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::UserInfo* ReturnUserInfoGmUserPmd_S::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::UserInfo;
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnUserInfoGmUserPmd_S.data)
  return data_;
}
inline ::Pmd::UserInfo* ReturnUserInfoGmUserPmd_S::release_data() {
  clear_has_data();
  ::Pmd::UserInfo* temp = data_;
  data_ = NULL;
  return temp;
}
inline void ReturnUserInfoGmUserPmd_S::set_allocated_data(::Pmd::UserInfo* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnUserInfoGmUserPmd_S.data)
}

// required uint32 gmid = 4;
inline bool ReturnUserInfoGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnUserInfoGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnUserInfoGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnUserInfoGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnUserInfoGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserInfoGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnUserInfoGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserInfoGmUserPmd_S.gmid)
}

// -------------------------------------------------------------------

// RequestUserPackageGmUserPmd_C

// required uint32 gameid = 1;
inline bool RequestUserPackageGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestUserPackageGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestUserPackageGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestUserPackageGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestUserPackageGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserPackageGmUserPmd_C.gameid)
  return gameid_;
}
inline void RequestUserPackageGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserPackageGmUserPmd_C.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestUserPackageGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestUserPackageGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestUserPackageGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestUserPackageGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestUserPackageGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserPackageGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void RequestUserPackageGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserPackageGmUserPmd_C.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestUserPackageGmUserPmd_C::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestUserPackageGmUserPmd_C::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestUserPackageGmUserPmd_C::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestUserPackageGmUserPmd_C::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestUserPackageGmUserPmd_C::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserPackageGmUserPmd_C.charid)
  return charid_;
}
inline void RequestUserPackageGmUserPmd_C::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserPackageGmUserPmd_C.charid)
}

// optional string charname = 4;
inline bool RequestUserPackageGmUserPmd_C::has_charname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestUserPackageGmUserPmd_C::set_has_charname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestUserPackageGmUserPmd_C::clear_has_charname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestUserPackageGmUserPmd_C::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RequestUserPackageGmUserPmd_C::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserPackageGmUserPmd_C.charname)
  return *charname_;
}
inline void RequestUserPackageGmUserPmd_C::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestUserPackageGmUserPmd_C.charname)
}
inline void RequestUserPackageGmUserPmd_C::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestUserPackageGmUserPmd_C.charname)
}
inline void RequestUserPackageGmUserPmd_C::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestUserPackageGmUserPmd_C.charname)
}
inline ::std::string* RequestUserPackageGmUserPmd_C::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestUserPackageGmUserPmd_C.charname)
  return charname_;
}
inline ::std::string* RequestUserPackageGmUserPmd_C::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestUserPackageGmUserPmd_C::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestUserPackageGmUserPmd_C.charname)
}

// optional uint32 gmid = 5;
inline bool RequestUserPackageGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestUserPackageGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestUserPackageGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestUserPackageGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestUserPackageGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserPackageGmUserPmd_C.gmid)
  return gmid_;
}
inline void RequestUserPackageGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserPackageGmUserPmd_C.gmid)
}

// -------------------------------------------------------------------

// ReturnUserPackageGmUserPmd_S

// repeated .Pmd.ItemTypeInfo data = 1;
inline int ReturnUserPackageGmUserPmd_S::data_size() const {
  return data_.size();
}
inline void ReturnUserPackageGmUserPmd_S::clear_data() {
  data_.Clear();
}
inline const ::Pmd::ItemTypeInfo& ReturnUserPackageGmUserPmd_S::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserPackageGmUserPmd_S.data)
  return data_.Get(index);
}
inline ::Pmd::ItemTypeInfo* ReturnUserPackageGmUserPmd_S::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnUserPackageGmUserPmd_S.data)
  return data_.Mutable(index);
}
inline ::Pmd::ItemTypeInfo* ReturnUserPackageGmUserPmd_S::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.ReturnUserPackageGmUserPmd_S.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo >&
ReturnUserPackageGmUserPmd_S::data() const {
  // @@protoc_insertion_point(field_list:Pmd.ReturnUserPackageGmUserPmd_S.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::ItemTypeInfo >*
ReturnUserPackageGmUserPmd_S::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.ReturnUserPackageGmUserPmd_S.data)
  return &data_;
}

// required uint32 gameid = 2;
inline bool ReturnUserPackageGmUserPmd_S::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnUserPackageGmUserPmd_S::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnUserPackageGmUserPmd_S::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnUserPackageGmUserPmd_S::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 ReturnUserPackageGmUserPmd_S::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserPackageGmUserPmd_S.gameid)
  return gameid_;
}
inline void ReturnUserPackageGmUserPmd_S::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserPackageGmUserPmd_S.gameid)
}

// required uint32 zoneid = 3;
inline bool ReturnUserPackageGmUserPmd_S::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnUserPackageGmUserPmd_S::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnUserPackageGmUserPmd_S::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnUserPackageGmUserPmd_S::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 ReturnUserPackageGmUserPmd_S::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserPackageGmUserPmd_S.zoneid)
  return zoneid_;
}
inline void ReturnUserPackageGmUserPmd_S::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserPackageGmUserPmd_S.zoneid)
}

// required uint64 charid = 4;
inline bool ReturnUserPackageGmUserPmd_S::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnUserPackageGmUserPmd_S::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnUserPackageGmUserPmd_S::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnUserPackageGmUserPmd_S::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ReturnUserPackageGmUserPmd_S::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserPackageGmUserPmd_S.charid)
  return charid_;
}
inline void ReturnUserPackageGmUserPmd_S::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserPackageGmUserPmd_S.charid)
}

// required uint32 gmid = 5;
inline bool ReturnUserPackageGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReturnUserPackageGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReturnUserPackageGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReturnUserPackageGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnUserPackageGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserPackageGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnUserPackageGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserPackageGmUserPmd_S.gmid)
}

// -------------------------------------------------------------------

// RequestModifyUserInfoGmUserPmd_C

// required uint32 gameid = 1;
inline bool RequestModifyUserInfoGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestModifyUserInfoGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyUserInfoGmUserPmd_C.gameid)
  return gameid_;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyUserInfoGmUserPmd_C.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestModifyUserInfoGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestModifyUserInfoGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyUserInfoGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyUserInfoGmUserPmd_C.zoneid)
}

// required uint64 charid = 3;
inline bool RequestModifyUserInfoGmUserPmd_C::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestModifyUserInfoGmUserPmd_C::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyUserInfoGmUserPmd_C.charid)
  return charid_;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyUserInfoGmUserPmd_C.charid)
}

// required uint32 optype = 4;
inline bool RequestModifyUserInfoGmUserPmd_C::has_optype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_has_optype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_has_optype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 RequestModifyUserInfoGmUserPmd_C::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyUserInfoGmUserPmd_C.optype)
  return optype_;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyUserInfoGmUserPmd_C.optype)
}

// optional string charname = 5;
inline bool RequestModifyUserInfoGmUserPmd_C::has_charname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_has_charname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_has_charname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RequestModifyUserInfoGmUserPmd_C::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyUserInfoGmUserPmd_C.charname)
  return *charname_;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyUserInfoGmUserPmd_C.charname)
}
inline void RequestModifyUserInfoGmUserPmd_C::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestModifyUserInfoGmUserPmd_C.charname)
}
inline void RequestModifyUserInfoGmUserPmd_C::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestModifyUserInfoGmUserPmd_C.charname)
}
inline ::std::string* RequestModifyUserInfoGmUserPmd_C::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestModifyUserInfoGmUserPmd_C.charname)
  return charname_;
}
inline ::std::string* RequestModifyUserInfoGmUserPmd_C::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestModifyUserInfoGmUserPmd_C::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestModifyUserInfoGmUserPmd_C.charname)
}

// optional uint32 opnum = 6;
inline bool RequestModifyUserInfoGmUserPmd_C::has_opnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_has_opnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_has_opnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_opnum() {
  opnum_ = 0u;
  clear_has_opnum();
}
inline ::google::protobuf::uint32 RequestModifyUserInfoGmUserPmd_C::opnum() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyUserInfoGmUserPmd_C.opnum)
  return opnum_;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_opnum(::google::protobuf::uint32 value) {
  set_has_opnum();
  opnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyUserInfoGmUserPmd_C.opnum)
}

// optional uint32 gmid = 7;
inline bool RequestModifyUserInfoGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestModifyUserInfoGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestModifyUserInfoGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestModifyUserInfoGmUserPmd_C.gmid)
  return gmid_;
}
inline void RequestModifyUserInfoGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestModifyUserInfoGmUserPmd_C.gmid)
}

// -------------------------------------------------------------------

// ReturnModifyUserInfoGmUserPmd_S

// optional uint32 retcode = 1;
inline bool ReturnModifyUserInfoGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnModifyUserInfoGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnModifyUserInfoGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnModifyUserInfoGmUserPmd_S.retcode)
}

// optional string retdesc = 2;
inline bool ReturnModifyUserInfoGmUserPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnModifyUserInfoGmUserPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnModifyUserInfoGmUserPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnModifyUserInfoGmUserPmd_S.retdesc)
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnModifyUserInfoGmUserPmd_S.retdesc)
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnModifyUserInfoGmUserPmd_S.retdesc)
}
inline ::std::string* ReturnModifyUserInfoGmUserPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnModifyUserInfoGmUserPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnModifyUserInfoGmUserPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnModifyUserInfoGmUserPmd_S.retdesc)
}

// optional uint32 zoneid = 3;
inline bool ReturnModifyUserInfoGmUserPmd_S::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 ReturnModifyUserInfoGmUserPmd_S::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnModifyUserInfoGmUserPmd_S.zoneid)
  return zoneid_;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnModifyUserInfoGmUserPmd_S.zoneid)
}

// optional uint64 charid = 4;
inline bool ReturnModifyUserInfoGmUserPmd_S::has_charid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_has_charid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_has_charid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ReturnModifyUserInfoGmUserPmd_S::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnModifyUserInfoGmUserPmd_S.charid)
  return charid_;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnModifyUserInfoGmUserPmd_S.charid)
}

// optional uint32 gmid = 5;
inline bool ReturnModifyUserInfoGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReturnModifyUserInfoGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnModifyUserInfoGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnModifyUserInfoGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnModifyUserInfoGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnModifyUserInfoGmUserPmd_S.gmid)
}

// -------------------------------------------------------------------

// RequestUserRecordGmUserPmd_C

// required uint32 gameid = 1;
inline bool RequestUserRecordGmUserPmd_C::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestUserRecordGmUserPmd_C::clear_gameid() {
  gameid_ = 0u;
  clear_has_gameid();
}
inline ::google::protobuf::uint32 RequestUserRecordGmUserPmd_C::gameid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.gameid)
  return gameid_;
}
inline void RequestUserRecordGmUserPmd_C::set_gameid(::google::protobuf::uint32 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.gameid)
}

// required uint32 zoneid = 2;
inline bool RequestUserRecordGmUserPmd_C::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestUserRecordGmUserPmd_C::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 RequestUserRecordGmUserPmd_C::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.zoneid)
  return zoneid_;
}
inline void RequestUserRecordGmUserPmd_C::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.zoneid)
}

// optional uint64 charid = 3;
inline bool RequestUserRecordGmUserPmd_C::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RequestUserRecordGmUserPmd_C::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 RequestUserRecordGmUserPmd_C::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.charid)
  return charid_;
}
inline void RequestUserRecordGmUserPmd_C::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.charid)
}

// required uint32 optype = 4;
inline bool RequestUserRecordGmUserPmd_C::has_optype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_optype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_optype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestUserRecordGmUserPmd_C::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 RequestUserRecordGmUserPmd_C::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.optype)
  return optype_;
}
inline void RequestUserRecordGmUserPmd_C::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.optype)
}

// optional string charname = 5;
inline bool RequestUserRecordGmUserPmd_C::has_charname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_charname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_charname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RequestUserRecordGmUserPmd_C::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& RequestUserRecordGmUserPmd_C::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.charname)
  return *charname_;
}
inline void RequestUserRecordGmUserPmd_C::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.charname)
}
inline void RequestUserRecordGmUserPmd_C::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.RequestUserRecordGmUserPmd_C.charname)
}
inline void RequestUserRecordGmUserPmd_C::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.RequestUserRecordGmUserPmd_C.charname)
}
inline ::std::string* RequestUserRecordGmUserPmd_C::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.RequestUserRecordGmUserPmd_C.charname)
  return charname_;
}
inline ::std::string* RequestUserRecordGmUserPmd_C::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RequestUserRecordGmUserPmd_C::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.RequestUserRecordGmUserPmd_C.charname)
}

// optional uint32 recordtime = 6;
inline bool RequestUserRecordGmUserPmd_C::has_recordtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_recordtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_recordtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RequestUserRecordGmUserPmd_C::clear_recordtime() {
  recordtime_ = 0u;
  clear_has_recordtime();
}
inline ::google::protobuf::uint32 RequestUserRecordGmUserPmd_C::recordtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.recordtime)
  return recordtime_;
}
inline void RequestUserRecordGmUserPmd_C::set_recordtime(::google::protobuf::uint32 value) {
  set_has_recordtime();
  recordtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.recordtime)
}

// optional uint32 gmid = 7;
inline bool RequestUserRecordGmUserPmd_C::has_gmid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_gmid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RequestUserRecordGmUserPmd_C::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 RequestUserRecordGmUserPmd_C::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.gmid)
  return gmid_;
}
inline void RequestUserRecordGmUserPmd_C::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.gmid)
}

// optional uint32 curpage = 8;
inline bool RequestUserRecordGmUserPmd_C::has_curpage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_curpage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RequestUserRecordGmUserPmd_C::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 RequestUserRecordGmUserPmd_C::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.curpage)
  return curpage_;
}
inline void RequestUserRecordGmUserPmd_C::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.curpage)
}

// optional uint32 maxpage = 9;
inline bool RequestUserRecordGmUserPmd_C::has_maxpage() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_maxpage() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RequestUserRecordGmUserPmd_C::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 RequestUserRecordGmUserPmd_C::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.maxpage)
  return maxpage_;
}
inline void RequestUserRecordGmUserPmd_C::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.maxpage)
}

// optional uint32 perpage = 10;
inline bool RequestUserRecordGmUserPmd_C::has_perpage() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RequestUserRecordGmUserPmd_C::set_has_perpage() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RequestUserRecordGmUserPmd_C::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RequestUserRecordGmUserPmd_C::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 RequestUserRecordGmUserPmd_C::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.RequestUserRecordGmUserPmd_C.perpage)
  return perpage_;
}
inline void RequestUserRecordGmUserPmd_C::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RequestUserRecordGmUserPmd_C.perpage)
}

// -------------------------------------------------------------------

// RecordInfo

// required uint32 recordid = 1;
inline bool RecordInfo::has_recordid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecordInfo::set_has_recordid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecordInfo::clear_has_recordid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecordInfo::clear_recordid() {
  recordid_ = 0u;
  clear_has_recordid();
}
inline ::google::protobuf::uint32 RecordInfo::recordid() const {
  // @@protoc_insertion_point(field_get:Pmd.RecordInfo.recordid)
  return recordid_;
}
inline void RecordInfo::set_recordid(::google::protobuf::uint32 value) {
  set_has_recordid();
  recordid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RecordInfo.recordid)
}

// required uint32 state = 2;
inline bool RecordInfo::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecordInfo::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecordInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecordInfo::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 RecordInfo::state() const {
  // @@protoc_insertion_point(field_get:Pmd.RecordInfo.state)
  return state_;
}
inline void RecordInfo::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RecordInfo.state)
}

// optional uint32 gold = 3;
inline bool RecordInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecordInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecordInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecordInfo::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 RecordInfo::gold() const {
  // @@protoc_insertion_point(field_get:Pmd.RecordInfo.gold)
  return gold_;
}
inline void RecordInfo::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RecordInfo.gold)
}

// optional uint32 coin = 4;
inline bool RecordInfo::has_coin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RecordInfo::set_has_coin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RecordInfo::clear_has_coin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RecordInfo::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 RecordInfo::coin() const {
  // @@protoc_insertion_point(field_get:Pmd.RecordInfo.coin)
  return coin_;
}
inline void RecordInfo::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RecordInfo.coin)
}

// required uint32 starttime = 5;
inline bool RecordInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RecordInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RecordInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RecordInfo::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 RecordInfo::starttime() const {
  // @@protoc_insertion_point(field_get:Pmd.RecordInfo.starttime)
  return starttime_;
}
inline void RecordInfo::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RecordInfo.starttime)
}

// optional uint32 endtime = 6;
inline bool RecordInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RecordInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RecordInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RecordInfo::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 RecordInfo::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.RecordInfo.endtime)
  return endtime_;
}
inline void RecordInfo::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.RecordInfo.endtime)
}

// -------------------------------------------------------------------

// ReturnUserRecordGmUserPmd_S

// required uint32 retcode = 1;
inline bool ReturnUserRecordGmUserPmd_S::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnUserRecordGmUserPmd_S::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 ReturnUserRecordGmUserPmd_S::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserRecordGmUserPmd_S.retcode)
  return retcode_;
}
inline void ReturnUserRecordGmUserPmd_S::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserRecordGmUserPmd_S.retcode)
}

// optional string retdesc = 2;
inline bool ReturnUserRecordGmUserPmd_S::has_retdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnUserRecordGmUserPmd_S::set_has_retdesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_has_retdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_retdesc() {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_->clear();
  }
  clear_has_retdesc();
}
inline const ::std::string& ReturnUserRecordGmUserPmd_S::retdesc() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserRecordGmUserPmd_S.retdesc)
  return *retdesc_;
}
inline void ReturnUserRecordGmUserPmd_S::set_retdesc(const ::std::string& value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserRecordGmUserPmd_S.retdesc)
}
inline void ReturnUserRecordGmUserPmd_S::set_retdesc(const char* value) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ReturnUserRecordGmUserPmd_S.retdesc)
}
inline void ReturnUserRecordGmUserPmd_S::set_retdesc(const char* value, size_t size) {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  retdesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ReturnUserRecordGmUserPmd_S.retdesc)
}
inline ::std::string* ReturnUserRecordGmUserPmd_S::mutable_retdesc() {
  set_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    retdesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnUserRecordGmUserPmd_S.retdesc)
  return retdesc_;
}
inline ::std::string* ReturnUserRecordGmUserPmd_S::release_retdesc() {
  clear_has_retdesc();
  if (retdesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = retdesc_;
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReturnUserRecordGmUserPmd_S::set_allocated_retdesc(::std::string* retdesc) {
  if (retdesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete retdesc_;
  }
  if (retdesc) {
    set_has_retdesc();
    retdesc_ = retdesc;
  } else {
    clear_has_retdesc();
    retdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ReturnUserRecordGmUserPmd_S.retdesc)
}

// repeated .Pmd.RecordInfo data = 3;
inline int ReturnUserRecordGmUserPmd_S::data_size() const {
  return data_.size();
}
inline void ReturnUserRecordGmUserPmd_S::clear_data() {
  data_.Clear();
}
inline const ::Pmd::RecordInfo& ReturnUserRecordGmUserPmd_S::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserRecordGmUserPmd_S.data)
  return data_.Get(index);
}
inline ::Pmd::RecordInfo* ReturnUserRecordGmUserPmd_S::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.ReturnUserRecordGmUserPmd_S.data)
  return data_.Mutable(index);
}
inline ::Pmd::RecordInfo* ReturnUserRecordGmUserPmd_S::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.ReturnUserRecordGmUserPmd_S.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::RecordInfo >&
ReturnUserRecordGmUserPmd_S::data() const {
  // @@protoc_insertion_point(field_list:Pmd.ReturnUserRecordGmUserPmd_S.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::RecordInfo >*
ReturnUserRecordGmUserPmd_S::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.ReturnUserRecordGmUserPmd_S.data)
  return &data_;
}

// optional uint32 recordnum = 4;
inline bool ReturnUserRecordGmUserPmd_S::has_recordnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReturnUserRecordGmUserPmd_S::set_has_recordnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_has_recordnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_recordnum() {
  recordnum_ = 0u;
  clear_has_recordnum();
}
inline ::google::protobuf::uint32 ReturnUserRecordGmUserPmd_S::recordnum() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserRecordGmUserPmd_S.recordnum)
  return recordnum_;
}
inline void ReturnUserRecordGmUserPmd_S::set_recordnum(::google::protobuf::uint32 value) {
  set_has_recordnum();
  recordnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserRecordGmUserPmd_S.recordnum)
}

// required uint32 gmid = 5;
inline bool ReturnUserRecordGmUserPmd_S::has_gmid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReturnUserRecordGmUserPmd_S::set_has_gmid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ReturnUserRecordGmUserPmd_S::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserRecordGmUserPmd_S.gmid)
  return gmid_;
}
inline void ReturnUserRecordGmUserPmd_S::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserRecordGmUserPmd_S.gmid)
}

// optional uint32 curpage = 6;
inline bool ReturnUserRecordGmUserPmd_S::has_curpage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReturnUserRecordGmUserPmd_S::set_has_curpage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_has_curpage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_curpage() {
  curpage_ = 0u;
  clear_has_curpage();
}
inline ::google::protobuf::uint32 ReturnUserRecordGmUserPmd_S::curpage() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserRecordGmUserPmd_S.curpage)
  return curpage_;
}
inline void ReturnUserRecordGmUserPmd_S::set_curpage(::google::protobuf::uint32 value) {
  set_has_curpage();
  curpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserRecordGmUserPmd_S.curpage)
}

// optional uint32 maxpage = 7;
inline bool ReturnUserRecordGmUserPmd_S::has_maxpage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReturnUserRecordGmUserPmd_S::set_has_maxpage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_has_maxpage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_maxpage() {
  maxpage_ = 0u;
  clear_has_maxpage();
}
inline ::google::protobuf::uint32 ReturnUserRecordGmUserPmd_S::maxpage() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserRecordGmUserPmd_S.maxpage)
  return maxpage_;
}
inline void ReturnUserRecordGmUserPmd_S::set_maxpage(::google::protobuf::uint32 value) {
  set_has_maxpage();
  maxpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserRecordGmUserPmd_S.maxpage)
}

// optional uint32 perpage = 8;
inline bool ReturnUserRecordGmUserPmd_S::has_perpage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReturnUserRecordGmUserPmd_S::set_has_perpage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_has_perpage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReturnUserRecordGmUserPmd_S::clear_perpage() {
  perpage_ = 0u;
  clear_has_perpage();
}
inline ::google::protobuf::uint32 ReturnUserRecordGmUserPmd_S::perpage() const {
  // @@protoc_insertion_point(field_get:Pmd.ReturnUserRecordGmUserPmd_S.perpage)
  return perpage_;
}
inline void ReturnUserRecordGmUserPmd_S::set_perpage(::google::protobuf::uint32 value) {
  set_has_perpage();
  perpage_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ReturnUserRecordGmUserPmd_S.perpage)
}

// -------------------------------------------------------------------

// QuestionBaseData

// optional uint32 time = 1;
inline bool QuestionBaseData::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QuestionBaseData::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QuestionBaseData::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QuestionBaseData::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 QuestionBaseData::time() const {
  // @@protoc_insertion_point(field_get:Pmd.QuestionBaseData.time)
  return time_;
}
inline void QuestionBaseData::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QuestionBaseData.time)
}

// optional uint32 id = 2;
inline bool QuestionBaseData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QuestionBaseData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QuestionBaseData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QuestionBaseData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 QuestionBaseData::id() const {
  // @@protoc_insertion_point(field_get:Pmd.QuestionBaseData.id)
  return id_;
}
inline void QuestionBaseData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QuestionBaseData.id)
}

// optional uint32 userid = 3;
inline bool QuestionBaseData::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QuestionBaseData::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QuestionBaseData::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QuestionBaseData::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 QuestionBaseData::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.QuestionBaseData.userid)
  return userid_;
}
inline void QuestionBaseData::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QuestionBaseData.userid)
}

// optional uint32 zoneid = 4;
inline bool QuestionBaseData::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QuestionBaseData::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QuestionBaseData::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QuestionBaseData::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 QuestionBaseData::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.QuestionBaseData.zoneid)
  return zoneid_;
}
inline void QuestionBaseData::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QuestionBaseData.zoneid)
}

// optional uint32 countyrid = 5;
inline bool QuestionBaseData::has_countyrid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QuestionBaseData::set_has_countyrid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QuestionBaseData::clear_has_countyrid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QuestionBaseData::clear_countyrid() {
  countyrid_ = 0u;
  clear_has_countyrid();
}
inline ::google::protobuf::uint32 QuestionBaseData::countyrid() const {
  // @@protoc_insertion_point(field_get:Pmd.QuestionBaseData.countyrid)
  return countyrid_;
}
inline void QuestionBaseData::set_countyrid(::google::protobuf::uint32 value) {
  set_has_countyrid();
  countyrid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QuestionBaseData.countyrid)
}

// optional uint32 sceneid = 6;
inline bool QuestionBaseData::has_sceneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QuestionBaseData::set_has_sceneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QuestionBaseData::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QuestionBaseData::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 QuestionBaseData::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.QuestionBaseData.sceneid)
  return sceneid_;
}
inline void QuestionBaseData::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.QuestionBaseData.sceneid)
}

// optional string name = 7;
inline bool QuestionBaseData::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QuestionBaseData::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QuestionBaseData::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QuestionBaseData::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& QuestionBaseData::name() const {
  // @@protoc_insertion_point(field_get:Pmd.QuestionBaseData.name)
  return *name_;
}
inline void QuestionBaseData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.QuestionBaseData.name)
}
inline void QuestionBaseData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.QuestionBaseData.name)
}
inline void QuestionBaseData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.QuestionBaseData.name)
}
inline ::std::string* QuestionBaseData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.QuestionBaseData.name)
  return name_;
}
inline ::std::string* QuestionBaseData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void QuestionBaseData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.QuestionBaseData.name)
}

// -------------------------------------------------------------------

// ForbidAccountData

// optional uint32 zoneid = 1;
inline bool ForbidAccountData::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ForbidAccountData::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ForbidAccountData::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ForbidAccountData::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 ForbidAccountData::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.zoneid)
  return zoneid_;
}
inline void ForbidAccountData::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.zoneid)
}

// optional uint32 gmid = 2;
inline bool ForbidAccountData::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ForbidAccountData::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ForbidAccountData::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ForbidAccountData::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 ForbidAccountData::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.gmid)
  return gmid_;
}
inline void ForbidAccountData::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.gmid)
}

// optional string gmname = 3;
inline bool ForbidAccountData::has_gmname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ForbidAccountData::set_has_gmname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ForbidAccountData::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ForbidAccountData::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& ForbidAccountData::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.gmname)
  return *gmname_;
}
inline void ForbidAccountData::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.gmname)
}
inline void ForbidAccountData::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ForbidAccountData.gmname)
}
inline void ForbidAccountData::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ForbidAccountData.gmname)
}
inline ::std::string* ForbidAccountData::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ForbidAccountData.gmname)
  return gmname_;
}
inline ::std::string* ForbidAccountData::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForbidAccountData::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ForbidAccountData.gmname)
}

// optional uint32 accid = 4;
inline bool ForbidAccountData::has_accid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ForbidAccountData::set_has_accid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ForbidAccountData::clear_has_accid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ForbidAccountData::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 ForbidAccountData::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.accid)
  return accid_;
}
inline void ForbidAccountData::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.accid)
}

// optional uint32 ip = 5;
inline bool ForbidAccountData::has_ip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ForbidAccountData::set_has_ip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ForbidAccountData::clear_has_ip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ForbidAccountData::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 ForbidAccountData::ip() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.ip)
  return ip_;
}
inline void ForbidAccountData::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.ip)
}

// optional uint32 forbidType = 6;
inline bool ForbidAccountData::has_forbidtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ForbidAccountData::set_has_forbidtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ForbidAccountData::clear_has_forbidtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ForbidAccountData::clear_forbidtype() {
  forbidtype_ = 0u;
  clear_has_forbidtype();
}
inline ::google::protobuf::uint32 ForbidAccountData::forbidtype() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.forbidType)
  return forbidtype_;
}
inline void ForbidAccountData::set_forbidtype(::google::protobuf::uint32 value) {
  set_has_forbidtype();
  forbidtype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.forbidType)
}

// optional string reserved = 7;
inline bool ForbidAccountData::has_reserved() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ForbidAccountData::set_has_reserved() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ForbidAccountData::clear_has_reserved() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ForbidAccountData::clear_reserved() {
  if (reserved_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reserved_->clear();
  }
  clear_has_reserved();
}
inline const ::std::string& ForbidAccountData::reserved() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.reserved)
  return *reserved_;
}
inline void ForbidAccountData::set_reserved(const ::std::string& value) {
  set_has_reserved();
  if (reserved_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reserved_ = new ::std::string;
  }
  reserved_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.reserved)
}
inline void ForbidAccountData::set_reserved(const char* value) {
  set_has_reserved();
  if (reserved_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reserved_ = new ::std::string;
  }
  reserved_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ForbidAccountData.reserved)
}
inline void ForbidAccountData::set_reserved(const char* value, size_t size) {
  set_has_reserved();
  if (reserved_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reserved_ = new ::std::string;
  }
  reserved_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ForbidAccountData.reserved)
}
inline ::std::string* ForbidAccountData::mutable_reserved() {
  set_has_reserved();
  if (reserved_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reserved_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ForbidAccountData.reserved)
  return reserved_;
}
inline ::std::string* ForbidAccountData::release_reserved() {
  clear_has_reserved();
  if (reserved_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reserved_;
    reserved_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForbidAccountData::set_allocated_reserved(::std::string* reserved) {
  if (reserved_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reserved_;
  }
  if (reserved) {
    set_has_reserved();
    reserved_ = reserved;
  } else {
    clear_has_reserved();
    reserved_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ForbidAccountData.reserved)
}

// optional uint32 charid = 8;
inline bool ForbidAccountData::has_charid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ForbidAccountData::set_has_charid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ForbidAccountData::clear_has_charid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ForbidAccountData::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 ForbidAccountData::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.charid)
  return charid_;
}
inline void ForbidAccountData::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.charid)
}

// optional string charname = 9;
inline bool ForbidAccountData::has_charname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ForbidAccountData::set_has_charname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ForbidAccountData::clear_has_charname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ForbidAccountData::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& ForbidAccountData::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.charname)
  return *charname_;
}
inline void ForbidAccountData::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.charname)
}
inline void ForbidAccountData::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ForbidAccountData.charname)
}
inline void ForbidAccountData::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ForbidAccountData.charname)
}
inline ::std::string* ForbidAccountData::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ForbidAccountData.charname)
  return charname_;
}
inline ::std::string* ForbidAccountData::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForbidAccountData::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ForbidAccountData.charname)
}

// optional uint32 begtime = 10;
inline bool ForbidAccountData::has_begtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ForbidAccountData::set_has_begtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ForbidAccountData::clear_has_begtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ForbidAccountData::clear_begtime() {
  begtime_ = 0u;
  clear_has_begtime();
}
inline ::google::protobuf::uint32 ForbidAccountData::begtime() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.begtime)
  return begtime_;
}
inline void ForbidAccountData::set_begtime(::google::protobuf::uint32 value) {
  set_has_begtime();
  begtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.begtime)
}

// optional uint32 endtime = 11;
inline bool ForbidAccountData::has_endtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ForbidAccountData::set_has_endtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ForbidAccountData::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ForbidAccountData::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 ForbidAccountData::endtime() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.endtime)
  return endtime_;
}
inline void ForbidAccountData::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.endtime)
}

// optional string desc = 12;
inline bool ForbidAccountData::has_desc() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ForbidAccountData::set_has_desc() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ForbidAccountData::clear_has_desc() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ForbidAccountData::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& ForbidAccountData::desc() const {
  // @@protoc_insertion_point(field_get:Pmd.ForbidAccountData.desc)
  return *desc_;
}
inline void ForbidAccountData::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.ForbidAccountData.desc)
}
inline void ForbidAccountData::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.ForbidAccountData.desc)
}
inline void ForbidAccountData::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.ForbidAccountData.desc)
}
inline ::std::string* ForbidAccountData::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.ForbidAccountData.desc)
  return desc_;
}
inline ::std::string* ForbidAccountData::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ForbidAccountData::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.ForbidAccountData.desc)
}

// -------------------------------------------------------------------

// stRequestLoginGmUserCmd

// optional string name = 1;
inline bool stRequestLoginGmUserCmd::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestLoginGmUserCmd::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestLoginGmUserCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestLoginGmUserCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& stRequestLoginGmUserCmd::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestLoginGmUserCmd.name)
  return *name_;
}
inline void stRequestLoginGmUserCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stRequestLoginGmUserCmd.name)
}
inline void stRequestLoginGmUserCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stRequestLoginGmUserCmd.name)
}
inline void stRequestLoginGmUserCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stRequestLoginGmUserCmd.name)
}
inline ::std::string* stRequestLoginGmUserCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestLoginGmUserCmd.name)
  return name_;
}
inline ::std::string* stRequestLoginGmUserCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stRequestLoginGmUserCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestLoginGmUserCmd.name)
}

// optional string password = 2;
inline bool stRequestLoginGmUserCmd::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stRequestLoginGmUserCmd::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stRequestLoginGmUserCmd::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stRequestLoginGmUserCmd::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& stRequestLoginGmUserCmd::password() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestLoginGmUserCmd.password)
  return *password_;
}
inline void stRequestLoginGmUserCmd::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stRequestLoginGmUserCmd.password)
}
inline void stRequestLoginGmUserCmd::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stRequestLoginGmUserCmd.password)
}
inline void stRequestLoginGmUserCmd::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stRequestLoginGmUserCmd.password)
}
inline ::std::string* stRequestLoginGmUserCmd::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestLoginGmUserCmd.password)
  return password_;
}
inline ::std::string* stRequestLoginGmUserCmd::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stRequestLoginGmUserCmd::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestLoginGmUserCmd.password)
}

// optional uint32 version = 3;
inline bool stRequestLoginGmUserCmd::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stRequestLoginGmUserCmd::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stRequestLoginGmUserCmd::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stRequestLoginGmUserCmd::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 stRequestLoginGmUserCmd::version() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestLoginGmUserCmd.version)
  return version_;
}
inline void stRequestLoginGmUserCmd::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestLoginGmUserCmd.version)
}

// -------------------------------------------------------------------

// stReturnLoginGmUserCmd

// optional uint32 retcode = 1;
inline bool stReturnLoginGmUserCmd::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnLoginGmUserCmd::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnLoginGmUserCmd::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnLoginGmUserCmd::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 stReturnLoginGmUserCmd::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnLoginGmUserCmd.retcode)
  return retcode_;
}
inline void stReturnLoginGmUserCmd::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnLoginGmUserCmd.retcode)
}

// optional uint32 gmID = 2;
inline bool stReturnLoginGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnLoginGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnLoginGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnLoginGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stReturnLoginGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnLoginGmUserCmd.gmID)
  return gmid_;
}
inline void stReturnLoginGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnLoginGmUserCmd.gmID)
}

// optional uint32 pri = 3;
inline bool stReturnLoginGmUserCmd::has_pri() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnLoginGmUserCmd::set_has_pri() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnLoginGmUserCmd::clear_has_pri() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnLoginGmUserCmd::clear_pri() {
  pri_ = 0u;
  clear_has_pri();
}
inline ::google::protobuf::uint32 stReturnLoginGmUserCmd::pri() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnLoginGmUserCmd.pri)
  return pri_;
}
inline void stReturnLoginGmUserCmd::set_pri(::google::protobuf::uint32 value) {
  set_has_pri();
  pri_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnLoginGmUserCmd.pri)
}

// optional uint32 qMaxNum = 4;
inline bool stReturnLoginGmUserCmd::has_qmaxnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stReturnLoginGmUserCmd::set_has_qmaxnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stReturnLoginGmUserCmd::clear_has_qmaxnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stReturnLoginGmUserCmd::clear_qmaxnum() {
  qmaxnum_ = 0u;
  clear_has_qmaxnum();
}
inline ::google::protobuf::uint32 stReturnLoginGmUserCmd::qmaxnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnLoginGmUserCmd.qMaxNum)
  return qmaxnum_;
}
inline void stReturnLoginGmUserCmd::set_qmaxnum(::google::protobuf::uint32 value) {
  set_has_qmaxnum();
  qmaxnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnLoginGmUserCmd.qMaxNum)
}

// optional uint32 autoRecv = 5;
inline bool stReturnLoginGmUserCmd::has_autorecv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stReturnLoginGmUserCmd::set_has_autorecv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stReturnLoginGmUserCmd::clear_has_autorecv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stReturnLoginGmUserCmd::clear_autorecv() {
  autorecv_ = 0u;
  clear_has_autorecv();
}
inline ::google::protobuf::uint32 stReturnLoginGmUserCmd::autorecv() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnLoginGmUserCmd.autoRecv)
  return autorecv_;
}
inline void stReturnLoginGmUserCmd::set_autorecv(::google::protobuf::uint32 value) {
  set_has_autorecv();
  autorecv_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnLoginGmUserCmd.autoRecv)
}

// optional uint32 workState = 6;
inline bool stReturnLoginGmUserCmd::has_workstate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stReturnLoginGmUserCmd::set_has_workstate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stReturnLoginGmUserCmd::clear_has_workstate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stReturnLoginGmUserCmd::clear_workstate() {
  workstate_ = 0u;
  clear_has_workstate();
}
inline ::google::protobuf::uint32 stReturnLoginGmUserCmd::workstate() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnLoginGmUserCmd.workState)
  return workstate_;
}
inline void stReturnLoginGmUserCmd::set_workstate(::google::protobuf::uint32 value) {
  set_has_workstate();
  workstate_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnLoginGmUserCmd.workState)
}

// optional uint32 winNum = 7;
inline bool stReturnLoginGmUserCmd::has_winnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stReturnLoginGmUserCmd::set_has_winnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stReturnLoginGmUserCmd::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stReturnLoginGmUserCmd::clear_winnum() {
  winnum_ = 0u;
  clear_has_winnum();
}
inline ::google::protobuf::uint32 stReturnLoginGmUserCmd::winnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnLoginGmUserCmd.winNum)
  return winnum_;
}
inline void stReturnLoginGmUserCmd::set_winnum(::google::protobuf::uint32 value) {
  set_has_winnum();
  winnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnLoginGmUserCmd.winNum)
}

// -------------------------------------------------------------------

// stConfigGmUserCmd

// optional uint32 num = 1;
inline bool stConfigGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stConfigGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stConfigGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stConfigGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stConfigGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stConfigGmUserCmd.num)
  return num_;
}
inline void stConfigGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stConfigGmUserCmd.num)
}

// optional bytes config = 2;
inline bool stConfigGmUserCmd::has_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stConfigGmUserCmd::set_has_config() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stConfigGmUserCmd::clear_has_config() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stConfigGmUserCmd::clear_config() {
  if (config_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_->clear();
  }
  clear_has_config();
}
inline const ::std::string& stConfigGmUserCmd::config() const {
  // @@protoc_insertion_point(field_get:Pmd.stConfigGmUserCmd.config)
  return *config_;
}
inline void stConfigGmUserCmd::set_config(const ::std::string& value) {
  set_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_ = new ::std::string;
  }
  config_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stConfigGmUserCmd.config)
}
inline void stConfigGmUserCmd::set_config(const char* value) {
  set_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_ = new ::std::string;
  }
  config_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stConfigGmUserCmd.config)
}
inline void stConfigGmUserCmd::set_config(const void* value, size_t size) {
  set_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_ = new ::std::string;
  }
  config_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stConfigGmUserCmd.config)
}
inline ::std::string* stConfigGmUserCmd::mutable_config() {
  set_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    config_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stConfigGmUserCmd.config)
  return config_;
}
inline ::std::string* stConfigGmUserCmd::release_config() {
  clear_has_config();
  if (config_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = config_;
    config_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stConfigGmUserCmd::set_allocated_config(::std::string* config) {
  if (config_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete config_;
  }
  if (config) {
    set_has_config();
    config_ = config;
  } else {
    clear_has_config();
    config_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stConfigGmUserCmd.config)
}

// -------------------------------------------------------------------

// stSetPasswordGmUserCmd

// optional string oldpasswd = 1;
inline bool stSetPasswordGmUserCmd::has_oldpasswd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stSetPasswordGmUserCmd::set_has_oldpasswd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stSetPasswordGmUserCmd::clear_has_oldpasswd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stSetPasswordGmUserCmd::clear_oldpasswd() {
  if (oldpasswd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpasswd_->clear();
  }
  clear_has_oldpasswd();
}
inline const ::std::string& stSetPasswordGmUserCmd::oldpasswd() const {
  // @@protoc_insertion_point(field_get:Pmd.stSetPasswordGmUserCmd.oldpasswd)
  return *oldpasswd_;
}
inline void stSetPasswordGmUserCmd::set_oldpasswd(const ::std::string& value) {
  set_has_oldpasswd();
  if (oldpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpasswd_ = new ::std::string;
  }
  oldpasswd_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stSetPasswordGmUserCmd.oldpasswd)
}
inline void stSetPasswordGmUserCmd::set_oldpasswd(const char* value) {
  set_has_oldpasswd();
  if (oldpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpasswd_ = new ::std::string;
  }
  oldpasswd_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stSetPasswordGmUserCmd.oldpasswd)
}
inline void stSetPasswordGmUserCmd::set_oldpasswd(const char* value, size_t size) {
  set_has_oldpasswd();
  if (oldpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpasswd_ = new ::std::string;
  }
  oldpasswd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stSetPasswordGmUserCmd.oldpasswd)
}
inline ::std::string* stSetPasswordGmUserCmd::mutable_oldpasswd() {
  set_has_oldpasswd();
  if (oldpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldpasswd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stSetPasswordGmUserCmd.oldpasswd)
  return oldpasswd_;
}
inline ::std::string* stSetPasswordGmUserCmd::release_oldpasswd() {
  clear_has_oldpasswd();
  if (oldpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = oldpasswd_;
    oldpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stSetPasswordGmUserCmd::set_allocated_oldpasswd(::std::string* oldpasswd) {
  if (oldpasswd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete oldpasswd_;
  }
  if (oldpasswd) {
    set_has_oldpasswd();
    oldpasswd_ = oldpasswd;
  } else {
    clear_has_oldpasswd();
    oldpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stSetPasswordGmUserCmd.oldpasswd)
}

// optional string newpasswd = 2;
inline bool stSetPasswordGmUserCmd::has_newpasswd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stSetPasswordGmUserCmd::set_has_newpasswd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stSetPasswordGmUserCmd::clear_has_newpasswd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stSetPasswordGmUserCmd::clear_newpasswd() {
  if (newpasswd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpasswd_->clear();
  }
  clear_has_newpasswd();
}
inline const ::std::string& stSetPasswordGmUserCmd::newpasswd() const {
  // @@protoc_insertion_point(field_get:Pmd.stSetPasswordGmUserCmd.newpasswd)
  return *newpasswd_;
}
inline void stSetPasswordGmUserCmd::set_newpasswd(const ::std::string& value) {
  set_has_newpasswd();
  if (newpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpasswd_ = new ::std::string;
  }
  newpasswd_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stSetPasswordGmUserCmd.newpasswd)
}
inline void stSetPasswordGmUserCmd::set_newpasswd(const char* value) {
  set_has_newpasswd();
  if (newpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpasswd_ = new ::std::string;
  }
  newpasswd_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stSetPasswordGmUserCmd.newpasswd)
}
inline void stSetPasswordGmUserCmd::set_newpasswd(const char* value, size_t size) {
  set_has_newpasswd();
  if (newpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpasswd_ = new ::std::string;
  }
  newpasswd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stSetPasswordGmUserCmd.newpasswd)
}
inline ::std::string* stSetPasswordGmUserCmd::mutable_newpasswd() {
  set_has_newpasswd();
  if (newpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newpasswd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stSetPasswordGmUserCmd.newpasswd)
  return newpasswd_;
}
inline ::std::string* stSetPasswordGmUserCmd::release_newpasswd() {
  clear_has_newpasswd();
  if (newpasswd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newpasswd_;
    newpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stSetPasswordGmUserCmd::set_allocated_newpasswd(::std::string* newpasswd) {
  if (newpasswd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newpasswd_;
  }
  if (newpasswd) {
    set_has_newpasswd();
    newpasswd_ = newpasswd;
  } else {
    clear_has_newpasswd();
    newpasswd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stSetPasswordGmUserCmd.newpasswd)
}

// -------------------------------------------------------------------

// stReturnPasswordGmUserCmd

// optional uint32 retcode = 1;
inline bool stReturnPasswordGmUserCmd::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnPasswordGmUserCmd::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnPasswordGmUserCmd::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnPasswordGmUserCmd::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 stReturnPasswordGmUserCmd::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnPasswordGmUserCmd.retcode)
  return retcode_;
}
inline void stReturnPasswordGmUserCmd::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnPasswordGmUserCmd.retcode)
}

// -------------------------------------------------------------------

// stAddNewGmUserCmd

// optional string name = 1;
inline bool stAddNewGmUserCmd::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stAddNewGmUserCmd::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stAddNewGmUserCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stAddNewGmUserCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& stAddNewGmUserCmd::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddNewGmUserCmd.name)
  return *name_;
}
inline void stAddNewGmUserCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stAddNewGmUserCmd.name)
}
inline void stAddNewGmUserCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stAddNewGmUserCmd.name)
}
inline void stAddNewGmUserCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stAddNewGmUserCmd.name)
}
inline ::std::string* stAddNewGmUserCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stAddNewGmUserCmd.name)
  return name_;
}
inline ::std::string* stAddNewGmUserCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stAddNewGmUserCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stAddNewGmUserCmd.name)
}

// optional string password = 2;
inline bool stAddNewGmUserCmd::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stAddNewGmUserCmd::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stAddNewGmUserCmd::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stAddNewGmUserCmd::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& stAddNewGmUserCmd::password() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddNewGmUserCmd.password)
  return *password_;
}
inline void stAddNewGmUserCmd::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stAddNewGmUserCmd.password)
}
inline void stAddNewGmUserCmd::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stAddNewGmUserCmd.password)
}
inline void stAddNewGmUserCmd::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stAddNewGmUserCmd.password)
}
inline ::std::string* stAddNewGmUserCmd::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stAddNewGmUserCmd.password)
  return password_;
}
inline ::std::string* stAddNewGmUserCmd::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stAddNewGmUserCmd::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stAddNewGmUserCmd.password)
}

// optional uint32 pri = 3;
inline bool stAddNewGmUserCmd::has_pri() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stAddNewGmUserCmd::set_has_pri() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stAddNewGmUserCmd::clear_has_pri() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stAddNewGmUserCmd::clear_pri() {
  pri_ = 0u;
  clear_has_pri();
}
inline ::google::protobuf::uint32 stAddNewGmUserCmd::pri() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddNewGmUserCmd.pri)
  return pri_;
}
inline void stAddNewGmUserCmd::set_pri(::google::protobuf::uint32 value) {
  set_has_pri();
  pri_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stAddNewGmUserCmd.pri)
}

// optional uint32 qMaxNum = 4;
inline bool stAddNewGmUserCmd::has_qmaxnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stAddNewGmUserCmd::set_has_qmaxnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stAddNewGmUserCmd::clear_has_qmaxnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stAddNewGmUserCmd::clear_qmaxnum() {
  qmaxnum_ = 0u;
  clear_has_qmaxnum();
}
inline ::google::protobuf::uint32 stAddNewGmUserCmd::qmaxnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddNewGmUserCmd.qMaxNum)
  return qmaxnum_;
}
inline void stAddNewGmUserCmd::set_qmaxnum(::google::protobuf::uint32 value) {
  set_has_qmaxnum();
  qmaxnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stAddNewGmUserCmd.qMaxNum)
}

// optional uint32 autoRecv = 5;
inline bool stAddNewGmUserCmd::has_autorecv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stAddNewGmUserCmd::set_has_autorecv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stAddNewGmUserCmd::clear_has_autorecv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stAddNewGmUserCmd::clear_autorecv() {
  autorecv_ = 0u;
  clear_has_autorecv();
}
inline ::google::protobuf::uint32 stAddNewGmUserCmd::autorecv() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddNewGmUserCmd.autoRecv)
  return autorecv_;
}
inline void stAddNewGmUserCmd::set_autorecv(::google::protobuf::uint32 value) {
  set_has_autorecv();
  autorecv_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stAddNewGmUserCmd.autoRecv)
}

// optional uint32 workState = 6;
inline bool stAddNewGmUserCmd::has_workstate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stAddNewGmUserCmd::set_has_workstate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stAddNewGmUserCmd::clear_has_workstate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stAddNewGmUserCmd::clear_workstate() {
  workstate_ = 0u;
  clear_has_workstate();
}
inline ::google::protobuf::uint32 stAddNewGmUserCmd::workstate() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddNewGmUserCmd.workState)
  return workstate_;
}
inline void stAddNewGmUserCmd::set_workstate(::google::protobuf::uint32 value) {
  set_has_workstate();
  workstate_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stAddNewGmUserCmd.workState)
}

// optional uint32 winNum = 7;
inline bool stAddNewGmUserCmd::has_winnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stAddNewGmUserCmd::set_has_winnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stAddNewGmUserCmd::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stAddNewGmUserCmd::clear_winnum() {
  winnum_ = 0u;
  clear_has_winnum();
}
inline ::google::protobuf::uint32 stAddNewGmUserCmd::winnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddNewGmUserCmd.winNum)
  return winnum_;
}
inline void stAddNewGmUserCmd::set_winnum(::google::protobuf::uint32 value) {
  set_has_winnum();
  winnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stAddNewGmUserCmd.winNum)
}

// -------------------------------------------------------------------

// stReturnAddNewGmUserCmd

// optional uint32 retcode = 1;
inline bool stReturnAddNewGmUserCmd::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnAddNewGmUserCmd::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnAddNewGmUserCmd::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnAddNewGmUserCmd::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 stReturnAddNewGmUserCmd::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnAddNewGmUserCmd.retcode)
  return retcode_;
}
inline void stReturnAddNewGmUserCmd::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnAddNewGmUserCmd.retcode)
}

// -------------------------------------------------------------------

// stQueryListGmUserCmd

// -------------------------------------------------------------------

// stReturnListGmUserCmd_Data

// optional uint32 id = 1;
inline bool stReturnListGmUserCmd_Data::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnListGmUserCmd_Data::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnListGmUserCmd_Data::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnListGmUserCmd_Data::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stReturnListGmUserCmd_Data::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnListGmUserCmd.Data.id)
  return id_;
}
inline void stReturnListGmUserCmd_Data::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnListGmUserCmd.Data.id)
}

// optional uint32 name = 2;
inline bool stReturnListGmUserCmd_Data::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnListGmUserCmd_Data::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnListGmUserCmd_Data::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnListGmUserCmd_Data::clear_name() {
  name_ = 0u;
  clear_has_name();
}
inline ::google::protobuf::uint32 stReturnListGmUserCmd_Data::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnListGmUserCmd.Data.name)
  return name_;
}
inline void stReturnListGmUserCmd_Data::set_name(::google::protobuf::uint32 value) {
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnListGmUserCmd.Data.name)
}

// optional uint32 pri = 3;
inline bool stReturnListGmUserCmd_Data::has_pri() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnListGmUserCmd_Data::set_has_pri() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnListGmUserCmd_Data::clear_has_pri() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnListGmUserCmd_Data::clear_pri() {
  pri_ = 0u;
  clear_has_pri();
}
inline ::google::protobuf::uint32 stReturnListGmUserCmd_Data::pri() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnListGmUserCmd.Data.pri)
  return pri_;
}
inline void stReturnListGmUserCmd_Data::set_pri(::google::protobuf::uint32 value) {
  set_has_pri();
  pri_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnListGmUserCmd.Data.pri)
}

// optional uint32 qMaxNum = 4;
inline bool stReturnListGmUserCmd_Data::has_qmaxnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stReturnListGmUserCmd_Data::set_has_qmaxnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stReturnListGmUserCmd_Data::clear_has_qmaxnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stReturnListGmUserCmd_Data::clear_qmaxnum() {
  qmaxnum_ = 0u;
  clear_has_qmaxnum();
}
inline ::google::protobuf::uint32 stReturnListGmUserCmd_Data::qmaxnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnListGmUserCmd.Data.qMaxNum)
  return qmaxnum_;
}
inline void stReturnListGmUserCmd_Data::set_qmaxnum(::google::protobuf::uint32 value) {
  set_has_qmaxnum();
  qmaxnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnListGmUserCmd.Data.qMaxNum)
}

// optional uint32 autoRecv = 5;
inline bool stReturnListGmUserCmd_Data::has_autorecv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stReturnListGmUserCmd_Data::set_has_autorecv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stReturnListGmUserCmd_Data::clear_has_autorecv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stReturnListGmUserCmd_Data::clear_autorecv() {
  autorecv_ = 0u;
  clear_has_autorecv();
}
inline ::google::protobuf::uint32 stReturnListGmUserCmd_Data::autorecv() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnListGmUserCmd.Data.autoRecv)
  return autorecv_;
}
inline void stReturnListGmUserCmd_Data::set_autorecv(::google::protobuf::uint32 value) {
  set_has_autorecv();
  autorecv_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnListGmUserCmd.Data.autoRecv)
}

// optional uint32 workState = 6;
inline bool stReturnListGmUserCmd_Data::has_workstate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stReturnListGmUserCmd_Data::set_has_workstate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stReturnListGmUserCmd_Data::clear_has_workstate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stReturnListGmUserCmd_Data::clear_workstate() {
  workstate_ = 0u;
  clear_has_workstate();
}
inline ::google::protobuf::uint32 stReturnListGmUserCmd_Data::workstate() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnListGmUserCmd.Data.workState)
  return workstate_;
}
inline void stReturnListGmUserCmd_Data::set_workstate(::google::protobuf::uint32 value) {
  set_has_workstate();
  workstate_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnListGmUserCmd.Data.workState)
}

// optional uint32 winNum = 7;
inline bool stReturnListGmUserCmd_Data::has_winnum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stReturnListGmUserCmd_Data::set_has_winnum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stReturnListGmUserCmd_Data::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stReturnListGmUserCmd_Data::clear_winnum() {
  winnum_ = 0u;
  clear_has_winnum();
}
inline ::google::protobuf::uint32 stReturnListGmUserCmd_Data::winnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnListGmUserCmd.Data.winNum)
  return winnum_;
}
inline void stReturnListGmUserCmd_Data::set_winnum(::google::protobuf::uint32 value) {
  set_has_winnum();
  winnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnListGmUserCmd.Data.winNum)
}

// -------------------------------------------------------------------

// stReturnListGmUserCmd

// optional uint32 num = 1;
inline bool stReturnListGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnListGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnListGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnListGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnListGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnListGmUserCmd.num)
  return num_;
}
inline void stReturnListGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnListGmUserCmd.num)
}

// repeated .Pmd.stReturnListGmUserCmd.Data data = 2;
inline int stReturnListGmUserCmd::data_size() const {
  return data_.size();
}
inline void stReturnListGmUserCmd::clear_data() {
  data_.Clear();
}
inline const ::Pmd::stReturnListGmUserCmd_Data& stReturnListGmUserCmd::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnListGmUserCmd.data)
  return data_.Get(index);
}
inline ::Pmd::stReturnListGmUserCmd_Data* stReturnListGmUserCmd::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnListGmUserCmd.data)
  return data_.Mutable(index);
}
inline ::Pmd::stReturnListGmUserCmd_Data* stReturnListGmUserCmd::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.stReturnListGmUserCmd.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnListGmUserCmd_Data >&
stReturnListGmUserCmd::data() const {
  // @@protoc_insertion_point(field_list:Pmd.stReturnListGmUserCmd.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnListGmUserCmd_Data >*
stReturnListGmUserCmd::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.stReturnListGmUserCmd.data)
  return &data_;
}

// -------------------------------------------------------------------

// stRequestZoneConfigGmUserCmd

// optional uint32 zoneid = 1;
inline bool stRequestZoneConfigGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestZoneConfigGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestZoneConfigGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestZoneConfigGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stRequestZoneConfigGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestZoneConfigGmUserCmd.zoneid)
  return zoneid_;
}
inline void stRequestZoneConfigGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestZoneConfigGmUserCmd.zoneid)
}

// -------------------------------------------------------------------

// stReturnZoneDicCountryGmUserCmd_Data

// optional uint32 countryid = 1;
inline bool stReturnZoneDicCountryGmUserCmd_Data::has_countryid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnZoneDicCountryGmUserCmd_Data::set_has_countryid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnZoneDicCountryGmUserCmd_Data::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnZoneDicCountryGmUserCmd_Data::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 stReturnZoneDicCountryGmUserCmd_Data::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicCountryGmUserCmd.Data.countryid)
  return countryid_;
}
inline void stReturnZoneDicCountryGmUserCmd_Data::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicCountryGmUserCmd.Data.countryid)
}

// optional uint32 name = 2;
inline bool stReturnZoneDicCountryGmUserCmd_Data::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnZoneDicCountryGmUserCmd_Data::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnZoneDicCountryGmUserCmd_Data::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnZoneDicCountryGmUserCmd_Data::clear_name() {
  name_ = 0u;
  clear_has_name();
}
inline ::google::protobuf::uint32 stReturnZoneDicCountryGmUserCmd_Data::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicCountryGmUserCmd.Data.name)
  return name_;
}
inline void stReturnZoneDicCountryGmUserCmd_Data::set_name(::google::protobuf::uint32 value) {
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicCountryGmUserCmd.Data.name)
}

// -------------------------------------------------------------------

// stReturnZoneDicCountryGmUserCmd

// optional uint32 zoneid = 1;
inline bool stReturnZoneDicCountryGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnZoneDicCountryGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnZoneDicCountryGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnZoneDicCountryGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stReturnZoneDicCountryGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicCountryGmUserCmd.zoneid)
  return zoneid_;
}
inline void stReturnZoneDicCountryGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicCountryGmUserCmd.zoneid)
}

// optional uint32 num = 2;
inline bool stReturnZoneDicCountryGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnZoneDicCountryGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnZoneDicCountryGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnZoneDicCountryGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnZoneDicCountryGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicCountryGmUserCmd.num)
  return num_;
}
inline void stReturnZoneDicCountryGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicCountryGmUserCmd.num)
}

// repeated .Pmd.stReturnZoneDicCountryGmUserCmd.Data data = 3;
inline int stReturnZoneDicCountryGmUserCmd::data_size() const {
  return data_.size();
}
inline void stReturnZoneDicCountryGmUserCmd::clear_data() {
  data_.Clear();
}
inline const ::Pmd::stReturnZoneDicCountryGmUserCmd_Data& stReturnZoneDicCountryGmUserCmd::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicCountryGmUserCmd.data)
  return data_.Get(index);
}
inline ::Pmd::stReturnZoneDicCountryGmUserCmd_Data* stReturnZoneDicCountryGmUserCmd::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnZoneDicCountryGmUserCmd.data)
  return data_.Mutable(index);
}
inline ::Pmd::stReturnZoneDicCountryGmUserCmd_Data* stReturnZoneDicCountryGmUserCmd::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.stReturnZoneDicCountryGmUserCmd.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicCountryGmUserCmd_Data >&
stReturnZoneDicCountryGmUserCmd::data() const {
  // @@protoc_insertion_point(field_list:Pmd.stReturnZoneDicCountryGmUserCmd.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicCountryGmUserCmd_Data >*
stReturnZoneDicCountryGmUserCmd::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.stReturnZoneDicCountryGmUserCmd.data)
  return &data_;
}

// -------------------------------------------------------------------

// stReturnZoneDicMapGmUserCmd_Data

// optional uint32 sceneid = 1;
inline bool stReturnZoneDicMapGmUserCmd_Data::has_sceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnZoneDicMapGmUserCmd_Data::set_has_sceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnZoneDicMapGmUserCmd_Data::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnZoneDicMapGmUserCmd_Data::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stReturnZoneDicMapGmUserCmd_Data::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicMapGmUserCmd.Data.sceneid)
  return sceneid_;
}
inline void stReturnZoneDicMapGmUserCmd_Data::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicMapGmUserCmd.Data.sceneid)
}

// optional uint32 name = 2;
inline bool stReturnZoneDicMapGmUserCmd_Data::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnZoneDicMapGmUserCmd_Data::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnZoneDicMapGmUserCmd_Data::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnZoneDicMapGmUserCmd_Data::clear_name() {
  name_ = 0u;
  clear_has_name();
}
inline ::google::protobuf::uint32 stReturnZoneDicMapGmUserCmd_Data::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicMapGmUserCmd.Data.name)
  return name_;
}
inline void stReturnZoneDicMapGmUserCmd_Data::set_name(::google::protobuf::uint32 value) {
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicMapGmUserCmd.Data.name)
}

// -------------------------------------------------------------------

// stReturnZoneDicMapGmUserCmd

// optional uint32 zoneid = 1;
inline bool stReturnZoneDicMapGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnZoneDicMapGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnZoneDicMapGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnZoneDicMapGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stReturnZoneDicMapGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicMapGmUserCmd.zoneid)
  return zoneid_;
}
inline void stReturnZoneDicMapGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicMapGmUserCmd.zoneid)
}

// optional uint32 num = 2;
inline bool stReturnZoneDicMapGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnZoneDicMapGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnZoneDicMapGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnZoneDicMapGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnZoneDicMapGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicMapGmUserCmd.num)
  return num_;
}
inline void stReturnZoneDicMapGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicMapGmUserCmd.num)
}

// repeated .Pmd.stReturnZoneDicMapGmUserCmd.Data data = 3;
inline int stReturnZoneDicMapGmUserCmd::data_size() const {
  return data_.size();
}
inline void stReturnZoneDicMapGmUserCmd::clear_data() {
  data_.Clear();
}
inline const ::Pmd::stReturnZoneDicMapGmUserCmd_Data& stReturnZoneDicMapGmUserCmd::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicMapGmUserCmd.data)
  return data_.Get(index);
}
inline ::Pmd::stReturnZoneDicMapGmUserCmd_Data* stReturnZoneDicMapGmUserCmd::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnZoneDicMapGmUserCmd.data)
  return data_.Mutable(index);
}
inline ::Pmd::stReturnZoneDicMapGmUserCmd_Data* stReturnZoneDicMapGmUserCmd::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.stReturnZoneDicMapGmUserCmd.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicMapGmUserCmd_Data >&
stReturnZoneDicMapGmUserCmd::data() const {
  // @@protoc_insertion_point(field_list:Pmd.stReturnZoneDicMapGmUserCmd.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicMapGmUserCmd_Data >*
stReturnZoneDicMapGmUserCmd::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.stReturnZoneDicMapGmUserCmd.data)
  return &data_;
}

// -------------------------------------------------------------------

// stForwardToAllGmUserCmd

// optional uint32 dwZoneID = 1;
inline bool stForwardToAllGmUserCmd::has_dwzoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stForwardToAllGmUserCmd::set_has_dwzoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stForwardToAllGmUserCmd::clear_has_dwzoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stForwardToAllGmUserCmd::clear_dwzoneid() {
  dwzoneid_ = 0u;
  clear_has_dwzoneid();
}
inline ::google::protobuf::uint32 stForwardToAllGmUserCmd::dwzoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToAllGmUserCmd.dwZoneID)
  return dwzoneid_;
}
inline void stForwardToAllGmUserCmd::set_dwzoneid(::google::protobuf::uint32 value) {
  set_has_dwzoneid();
  dwzoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToAllGmUserCmd.dwZoneID)
}

// optional uint32 wCountryID = 2;
inline bool stForwardToAllGmUserCmd::has_wcountryid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stForwardToAllGmUserCmd::set_has_wcountryid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stForwardToAllGmUserCmd::clear_has_wcountryid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stForwardToAllGmUserCmd::clear_wcountryid() {
  wcountryid_ = 0u;
  clear_has_wcountryid();
}
inline ::google::protobuf::uint32 stForwardToAllGmUserCmd::wcountryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToAllGmUserCmd.wCountryID)
  return wcountryid_;
}
inline void stForwardToAllGmUserCmd::set_wcountryid(::google::protobuf::uint32 value) {
  set_has_wcountryid();
  wcountryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToAllGmUserCmd.wCountryID)
}

// optional uint32 wSceneID = 3;
inline bool stForwardToAllGmUserCmd::has_wsceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stForwardToAllGmUserCmd::set_has_wsceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stForwardToAllGmUserCmd::clear_has_wsceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stForwardToAllGmUserCmd::clear_wsceneid() {
  wsceneid_ = 0u;
  clear_has_wsceneid();
}
inline ::google::protobuf::uint32 stForwardToAllGmUserCmd::wsceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToAllGmUserCmd.wSceneID)
  return wsceneid_;
}
inline void stForwardToAllGmUserCmd::set_wsceneid(::google::protobuf::uint32 value) {
  set_has_wsceneid();
  wsceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToAllGmUserCmd.wSceneID)
}

// optional uint32 dwUserID = 4;
inline bool stForwardToAllGmUserCmd::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stForwardToAllGmUserCmd::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stForwardToAllGmUserCmd::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stForwardToAllGmUserCmd::clear_dwuserid() {
  dwuserid_ = 0u;
  clear_has_dwuserid();
}
inline ::google::protobuf::uint32 stForwardToAllGmUserCmd::dwuserid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToAllGmUserCmd.dwUserID)
  return dwuserid_;
}
inline void stForwardToAllGmUserCmd::set_dwuserid(::google::protobuf::uint32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToAllGmUserCmd.dwUserID)
}

// optional uint32 dwProvinceID = 5;
inline bool stForwardToAllGmUserCmd::has_dwprovinceid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stForwardToAllGmUserCmd::set_has_dwprovinceid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stForwardToAllGmUserCmd::clear_has_dwprovinceid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stForwardToAllGmUserCmd::clear_dwprovinceid() {
  dwprovinceid_ = 0u;
  clear_has_dwprovinceid();
}
inline ::google::protobuf::uint32 stForwardToAllGmUserCmd::dwprovinceid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToAllGmUserCmd.dwProvinceID)
  return dwprovinceid_;
}
inline void stForwardToAllGmUserCmd::set_dwprovinceid(::google::protobuf::uint32 value) {
  set_has_dwprovinceid();
  dwprovinceid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToAllGmUserCmd.dwProvinceID)
}

// optional uint32 dwCityID = 6;
inline bool stForwardToAllGmUserCmd::has_dwcityid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stForwardToAllGmUserCmd::set_has_dwcityid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stForwardToAllGmUserCmd::clear_has_dwcityid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stForwardToAllGmUserCmd::clear_dwcityid() {
  dwcityid_ = 0u;
  clear_has_dwcityid();
}
inline ::google::protobuf::uint32 stForwardToAllGmUserCmd::dwcityid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToAllGmUserCmd.dwCityID)
  return dwcityid_;
}
inline void stForwardToAllGmUserCmd::set_dwcityid(::google::protobuf::uint32 value) {
  set_has_dwcityid();
  dwcityid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToAllGmUserCmd.dwCityID)
}

// optional string userName = 7;
inline bool stForwardToAllGmUserCmd::has_username() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stForwardToAllGmUserCmd::set_has_username() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stForwardToAllGmUserCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stForwardToAllGmUserCmd::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& stForwardToAllGmUserCmd::username() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToAllGmUserCmd.userName)
  return *username_;
}
inline void stForwardToAllGmUserCmd::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stForwardToAllGmUserCmd.userName)
}
inline void stForwardToAllGmUserCmd::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stForwardToAllGmUserCmd.userName)
}
inline void stForwardToAllGmUserCmd::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stForwardToAllGmUserCmd.userName)
}
inline ::std::string* stForwardToAllGmUserCmd::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stForwardToAllGmUserCmd.userName)
  return username_;
}
inline ::std::string* stForwardToAllGmUserCmd::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stForwardToAllGmUserCmd::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stForwardToAllGmUserCmd.userName)
}

// optional uint32 num = 8;
inline bool stForwardToAllGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stForwardToAllGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stForwardToAllGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stForwardToAllGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stForwardToAllGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToAllGmUserCmd.num)
  return num_;
}
inline void stForwardToAllGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToAllGmUserCmd.num)
}

// optional bytes data = 9;
inline bool stForwardToAllGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void stForwardToAllGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void stForwardToAllGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void stForwardToAllGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stForwardToAllGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToAllGmUserCmd.data)
  return *data_;
}
inline void stForwardToAllGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stForwardToAllGmUserCmd.data)
}
inline void stForwardToAllGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stForwardToAllGmUserCmd.data)
}
inline void stForwardToAllGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stForwardToAllGmUserCmd.data)
}
inline ::std::string* stForwardToAllGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stForwardToAllGmUserCmd.data)
  return data_;
}
inline ::std::string* stForwardToAllGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stForwardToAllGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stForwardToAllGmUserCmd.data)
}

// -------------------------------------------------------------------

// stForwardToOnlyGmUserCmd

// optional uint32 dwZoneID = 1;
inline bool stForwardToOnlyGmUserCmd::has_dwzoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stForwardToOnlyGmUserCmd::set_has_dwzoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stForwardToOnlyGmUserCmd::clear_has_dwzoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stForwardToOnlyGmUserCmd::clear_dwzoneid() {
  dwzoneid_ = 0u;
  clear_has_dwzoneid();
}
inline ::google::protobuf::uint32 stForwardToOnlyGmUserCmd::dwzoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToOnlyGmUserCmd.dwZoneID)
  return dwzoneid_;
}
inline void stForwardToOnlyGmUserCmd::set_dwzoneid(::google::protobuf::uint32 value) {
  set_has_dwzoneid();
  dwzoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToOnlyGmUserCmd.dwZoneID)
}

// optional uint32 wCountryID = 2;
inline bool stForwardToOnlyGmUserCmd::has_wcountryid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stForwardToOnlyGmUserCmd::set_has_wcountryid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stForwardToOnlyGmUserCmd::clear_has_wcountryid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stForwardToOnlyGmUserCmd::clear_wcountryid() {
  wcountryid_ = 0u;
  clear_has_wcountryid();
}
inline ::google::protobuf::uint32 stForwardToOnlyGmUserCmd::wcountryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToOnlyGmUserCmd.wCountryID)
  return wcountryid_;
}
inline void stForwardToOnlyGmUserCmd::set_wcountryid(::google::protobuf::uint32 value) {
  set_has_wcountryid();
  wcountryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToOnlyGmUserCmd.wCountryID)
}

// optional uint32 wSceneID = 3;
inline bool stForwardToOnlyGmUserCmd::has_wsceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stForwardToOnlyGmUserCmd::set_has_wsceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stForwardToOnlyGmUserCmd::clear_has_wsceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stForwardToOnlyGmUserCmd::clear_wsceneid() {
  wsceneid_ = 0u;
  clear_has_wsceneid();
}
inline ::google::protobuf::uint32 stForwardToOnlyGmUserCmd::wsceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToOnlyGmUserCmd.wSceneID)
  return wsceneid_;
}
inline void stForwardToOnlyGmUserCmd::set_wsceneid(::google::protobuf::uint32 value) {
  set_has_wsceneid();
  wsceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToOnlyGmUserCmd.wSceneID)
}

// optional uint32 dwUserID = 4;
inline bool stForwardToOnlyGmUserCmd::has_dwuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stForwardToOnlyGmUserCmd::set_has_dwuserid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stForwardToOnlyGmUserCmd::clear_has_dwuserid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stForwardToOnlyGmUserCmd::clear_dwuserid() {
  dwuserid_ = 0u;
  clear_has_dwuserid();
}
inline ::google::protobuf::uint32 stForwardToOnlyGmUserCmd::dwuserid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToOnlyGmUserCmd.dwUserID)
  return dwuserid_;
}
inline void stForwardToOnlyGmUserCmd::set_dwuserid(::google::protobuf::uint32 value) {
  set_has_dwuserid();
  dwuserid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToOnlyGmUserCmd.dwUserID)
}

// optional string userName = 5;
inline bool stForwardToOnlyGmUserCmd::has_username() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stForwardToOnlyGmUserCmd::set_has_username() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stForwardToOnlyGmUserCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stForwardToOnlyGmUserCmd::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& stForwardToOnlyGmUserCmd::username() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToOnlyGmUserCmd.userName)
  return *username_;
}
inline void stForwardToOnlyGmUserCmd::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stForwardToOnlyGmUserCmd.userName)
}
inline void stForwardToOnlyGmUserCmd::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stForwardToOnlyGmUserCmd.userName)
}
inline void stForwardToOnlyGmUserCmd::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stForwardToOnlyGmUserCmd.userName)
}
inline ::std::string* stForwardToOnlyGmUserCmd::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stForwardToOnlyGmUserCmd.userName)
  return username_;
}
inline ::std::string* stForwardToOnlyGmUserCmd::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stForwardToOnlyGmUserCmd::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stForwardToOnlyGmUserCmd.userName)
}

// optional uint32 gmID = 6;
inline bool stForwardToOnlyGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stForwardToOnlyGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stForwardToOnlyGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stForwardToOnlyGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stForwardToOnlyGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToOnlyGmUserCmd.gmID)
  return gmid_;
}
inline void stForwardToOnlyGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToOnlyGmUserCmd.gmID)
}

// optional string gmName = 7;
inline bool stForwardToOnlyGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stForwardToOnlyGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stForwardToOnlyGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stForwardToOnlyGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stForwardToOnlyGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToOnlyGmUserCmd.gmName)
  return *gmname_;
}
inline void stForwardToOnlyGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stForwardToOnlyGmUserCmd.gmName)
}
inline void stForwardToOnlyGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stForwardToOnlyGmUserCmd.gmName)
}
inline void stForwardToOnlyGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stForwardToOnlyGmUserCmd.gmName)
}
inline ::std::string* stForwardToOnlyGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stForwardToOnlyGmUserCmd.gmName)
  return gmname_;
}
inline ::std::string* stForwardToOnlyGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stForwardToOnlyGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stForwardToOnlyGmUserCmd.gmName)
}

// optional uint32 num = 8;
inline bool stForwardToOnlyGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stForwardToOnlyGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stForwardToOnlyGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stForwardToOnlyGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stForwardToOnlyGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToOnlyGmUserCmd.num)
  return num_;
}
inline void stForwardToOnlyGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForwardToOnlyGmUserCmd.num)
}

// optional bytes data = 9;
inline bool stForwardToOnlyGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void stForwardToOnlyGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void stForwardToOnlyGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void stForwardToOnlyGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stForwardToOnlyGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stForwardToOnlyGmUserCmd.data)
  return *data_;
}
inline void stForwardToOnlyGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stForwardToOnlyGmUserCmd.data)
}
inline void stForwardToOnlyGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stForwardToOnlyGmUserCmd.data)
}
inline void stForwardToOnlyGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stForwardToOnlyGmUserCmd.data)
}
inline ::std::string* stForwardToOnlyGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stForwardToOnlyGmUserCmd.data)
  return data_;
}
inline ::std::string* stForwardToOnlyGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stForwardToOnlyGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stForwardToOnlyGmUserCmd.data)
}

// -------------------------------------------------------------------

// stBroadcastNewGmUserCmd

// optional uint32 taskID = 1;
inline bool stBroadcastNewGmUserCmd::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stBroadcastNewGmUserCmd::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stBroadcastNewGmUserCmd::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.taskID)
  return taskid_;
}
inline void stBroadcastNewGmUserCmd::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.taskID)
}

// optional uint32 gmID = 2;
inline bool stBroadcastNewGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stBroadcastNewGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stBroadcastNewGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.gmID)
  return gmid_;
}
inline void stBroadcastNewGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.gmID)
}

// optional string gmName = 3;
inline bool stBroadcastNewGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stBroadcastNewGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stBroadcastNewGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stBroadcastNewGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.gmName)
  return *gmname_;
}
inline void stBroadcastNewGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.gmName)
}
inline void stBroadcastNewGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stBroadcastNewGmUserCmd.gmName)
}
inline void stBroadcastNewGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stBroadcastNewGmUserCmd.gmName)
}
inline ::std::string* stBroadcastNewGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stBroadcastNewGmUserCmd.gmName)
  return gmname_;
}
inline ::std::string* stBroadcastNewGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stBroadcastNewGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stBroadcastNewGmUserCmd.gmName)
}

// optional uint32 dwZoneID = 4;
inline bool stBroadcastNewGmUserCmd::has_dwzoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_dwzoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stBroadcastNewGmUserCmd::clear_has_dwzoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stBroadcastNewGmUserCmd::clear_dwzoneid() {
  dwzoneid_ = 0u;
  clear_has_dwzoneid();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::dwzoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.dwZoneID)
  return dwzoneid_;
}
inline void stBroadcastNewGmUserCmd::set_dwzoneid(::google::protobuf::uint32 value) {
  set_has_dwzoneid();
  dwzoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.dwZoneID)
}

// optional uint32 wCountryID = 5;
inline bool stBroadcastNewGmUserCmd::has_wcountryid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_wcountryid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stBroadcastNewGmUserCmd::clear_has_wcountryid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stBroadcastNewGmUserCmd::clear_wcountryid() {
  wcountryid_ = 0u;
  clear_has_wcountryid();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::wcountryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.wCountryID)
  return wcountryid_;
}
inline void stBroadcastNewGmUserCmd::set_wcountryid(::google::protobuf::uint32 value) {
  set_has_wcountryid();
  wcountryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.wCountryID)
}

// optional uint32 wSceneID = 6;
inline bool stBroadcastNewGmUserCmd::has_wsceneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_wsceneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stBroadcastNewGmUserCmd::clear_has_wsceneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stBroadcastNewGmUserCmd::clear_wsceneid() {
  wsceneid_ = 0u;
  clear_has_wsceneid();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::wsceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.wSceneID)
  return wsceneid_;
}
inline void stBroadcastNewGmUserCmd::set_wsceneid(::google::protobuf::uint32 value) {
  set_has_wsceneid();
  wsceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.wSceneID)
}

// optional uint32 dwTimeFrom = 7;
inline bool stBroadcastNewGmUserCmd::has_dwtimefrom() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_dwtimefrom() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stBroadcastNewGmUserCmd::clear_has_dwtimefrom() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stBroadcastNewGmUserCmd::clear_dwtimefrom() {
  dwtimefrom_ = 0u;
  clear_has_dwtimefrom();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::dwtimefrom() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.dwTimeFrom)
  return dwtimefrom_;
}
inline void stBroadcastNewGmUserCmd::set_dwtimefrom(::google::protobuf::uint32 value) {
  set_has_dwtimefrom();
  dwtimefrom_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.dwTimeFrom)
}

// optional uint32 dwTimeEnd = 8;
inline bool stBroadcastNewGmUserCmd::has_dwtimeend() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_dwtimeend() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stBroadcastNewGmUserCmd::clear_has_dwtimeend() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stBroadcastNewGmUserCmd::clear_dwtimeend() {
  dwtimeend_ = 0u;
  clear_has_dwtimeend();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::dwtimeend() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.dwTimeEnd)
  return dwtimeend_;
}
inline void stBroadcastNewGmUserCmd::set_dwtimeend(::google::protobuf::uint32 value) {
  set_has_dwtimeend();
  dwtimeend_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.dwTimeEnd)
}

// optional uint32 dwIntervalTime = 9;
inline bool stBroadcastNewGmUserCmd::has_dwintervaltime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_dwintervaltime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void stBroadcastNewGmUserCmd::clear_has_dwintervaltime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void stBroadcastNewGmUserCmd::clear_dwintervaltime() {
  dwintervaltime_ = 0u;
  clear_has_dwintervaltime();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::dwintervaltime() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.dwIntervalTime)
  return dwintervaltime_;
}
inline void stBroadcastNewGmUserCmd::set_dwintervaltime(::google::protobuf::uint32 value) {
  set_has_dwintervaltime();
  dwintervaltime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.dwIntervalTime)
}

// optional uint32 byPriority = 10;
inline bool stBroadcastNewGmUserCmd::has_bypriority() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_bypriority() {
  _has_bits_[0] |= 0x00000200u;
}
inline void stBroadcastNewGmUserCmd::clear_has_bypriority() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void stBroadcastNewGmUserCmd::clear_bypriority() {
  bypriority_ = 0u;
  clear_has_bypriority();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::bypriority() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.byPriority)
  return bypriority_;
}
inline void stBroadcastNewGmUserCmd::set_bypriority(::google::protobuf::uint32 value) {
  set_has_bypriority();
  bypriority_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.byPriority)
}

// optional uint32 num = 11;
inline bool stBroadcastNewGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000400u;
}
inline void stBroadcastNewGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void stBroadcastNewGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stBroadcastNewGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.num)
  return num_;
}
inline void stBroadcastNewGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.num)
}

// optional bytes data = 12;
inline bool stBroadcastNewGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void stBroadcastNewGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000800u;
}
inline void stBroadcastNewGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void stBroadcastNewGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stBroadcastNewGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastNewGmUserCmd.data)
  return *data_;
}
inline void stBroadcastNewGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastNewGmUserCmd.data)
}
inline void stBroadcastNewGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stBroadcastNewGmUserCmd.data)
}
inline void stBroadcastNewGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stBroadcastNewGmUserCmd.data)
}
inline ::std::string* stBroadcastNewGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stBroadcastNewGmUserCmd.data)
  return data_;
}
inline ::std::string* stBroadcastNewGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stBroadcastNewGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stBroadcastNewGmUserCmd.data)
}

// -------------------------------------------------------------------

// stBroadcastDeleteGmUserCmd

// optional uint32 taskID = 1;
inline bool stBroadcastDeleteGmUserCmd::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stBroadcastDeleteGmUserCmd::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stBroadcastDeleteGmUserCmd::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stBroadcastDeleteGmUserCmd::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 stBroadcastDeleteGmUserCmd::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastDeleteGmUserCmd.taskID)
  return taskid_;
}
inline void stBroadcastDeleteGmUserCmd::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastDeleteGmUserCmd.taskID)
}

// -------------------------------------------------------------------

// stBroadcastRequestGmUserCmd

// optional uint32 dwZoneID = 1;
inline bool stBroadcastRequestGmUserCmd::has_dwzoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stBroadcastRequestGmUserCmd::set_has_dwzoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stBroadcastRequestGmUserCmd::clear_has_dwzoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stBroadcastRequestGmUserCmd::clear_dwzoneid() {
  dwzoneid_ = 0u;
  clear_has_dwzoneid();
}
inline ::google::protobuf::uint32 stBroadcastRequestGmUserCmd::dwzoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastRequestGmUserCmd.dwZoneID)
  return dwzoneid_;
}
inline void stBroadcastRequestGmUserCmd::set_dwzoneid(::google::protobuf::uint32 value) {
  set_has_dwzoneid();
  dwzoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastRequestGmUserCmd.dwZoneID)
}

// optional uint32 wCountryID = 2;
inline bool stBroadcastRequestGmUserCmd::has_wcountryid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stBroadcastRequestGmUserCmd::set_has_wcountryid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stBroadcastRequestGmUserCmd::clear_has_wcountryid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stBroadcastRequestGmUserCmd::clear_wcountryid() {
  wcountryid_ = 0u;
  clear_has_wcountryid();
}
inline ::google::protobuf::uint32 stBroadcastRequestGmUserCmd::wcountryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastRequestGmUserCmd.wCountryID)
  return wcountryid_;
}
inline void stBroadcastRequestGmUserCmd::set_wcountryid(::google::protobuf::uint32 value) {
  set_has_wcountryid();
  wcountryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastRequestGmUserCmd.wCountryID)
}

// optional uint32 wSceneID = 3;
inline bool stBroadcastRequestGmUserCmd::has_wsceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stBroadcastRequestGmUserCmd::set_has_wsceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stBroadcastRequestGmUserCmd::clear_has_wsceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stBroadcastRequestGmUserCmd::clear_wsceneid() {
  wsceneid_ = 0u;
  clear_has_wsceneid();
}
inline ::google::protobuf::uint32 stBroadcastRequestGmUserCmd::wsceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastRequestGmUserCmd.wSceneID)
  return wsceneid_;
}
inline void stBroadcastRequestGmUserCmd::set_wsceneid(::google::protobuf::uint32 value) {
  set_has_wsceneid();
  wsceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastRequestGmUserCmd.wSceneID)
}

// optional uint32 dwTimeEnd = 4;
inline bool stBroadcastRequestGmUserCmd::has_dwtimeend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stBroadcastRequestGmUserCmd::set_has_dwtimeend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stBroadcastRequestGmUserCmd::clear_has_dwtimeend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stBroadcastRequestGmUserCmd::clear_dwtimeend() {
  dwtimeend_ = 0u;
  clear_has_dwtimeend();
}
inline ::google::protobuf::uint32 stBroadcastRequestGmUserCmd::dwtimeend() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastRequestGmUserCmd.dwTimeEnd)
  return dwtimeend_;
}
inline void stBroadcastRequestGmUserCmd::set_dwtimeend(::google::protobuf::uint32 value) {
  set_has_dwtimeend();
  dwtimeend_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastRequestGmUserCmd.dwTimeEnd)
}

// -------------------------------------------------------------------

// stRequestTimeGmUserCmd

// -------------------------------------------------------------------

// stReturnTimeGmUserCmd

// optional uint32 time = 1;
inline bool stReturnTimeGmUserCmd::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnTimeGmUserCmd::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnTimeGmUserCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnTimeGmUserCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 stReturnTimeGmUserCmd::time() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnTimeGmUserCmd.time)
  return time_;
}
inline void stReturnTimeGmUserCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnTimeGmUserCmd.time)
}

// -------------------------------------------------------------------

// stServerShutdownGmUserCmd

// optional uint32 zoneid = 1;
inline bool stServerShutdownGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stServerShutdownGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stServerShutdownGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stServerShutdownGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stServerShutdownGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerShutdownGmUserCmd.zoneid)
  return zoneid_;
}
inline void stServerShutdownGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerShutdownGmUserCmd.zoneid)
}

// optional uint32 serverid = 2;
inline bool stServerShutdownGmUserCmd::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stServerShutdownGmUserCmd::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stServerShutdownGmUserCmd::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stServerShutdownGmUserCmd::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 stServerShutdownGmUserCmd::serverid() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerShutdownGmUserCmd.serverid)
  return serverid_;
}
inline void stServerShutdownGmUserCmd::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerShutdownGmUserCmd.serverid)
}

// optional uint32 servertype = 3;
inline bool stServerShutdownGmUserCmd::has_servertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stServerShutdownGmUserCmd::set_has_servertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stServerShutdownGmUserCmd::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stServerShutdownGmUserCmd::clear_servertype() {
  servertype_ = 0u;
  clear_has_servertype();
}
inline ::google::protobuf::uint32 stServerShutdownGmUserCmd::servertype() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerShutdownGmUserCmd.servertype)
  return servertype_;
}
inline void stServerShutdownGmUserCmd::set_servertype(::google::protobuf::uint32 value) {
  set_has_servertype();
  servertype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerShutdownGmUserCmd.servertype)
}

// optional string servername = 4;
inline bool stServerShutdownGmUserCmd::has_servername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stServerShutdownGmUserCmd::set_has_servername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stServerShutdownGmUserCmd::clear_has_servername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stServerShutdownGmUserCmd::clear_servername() {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_->clear();
  }
  clear_has_servername();
}
inline const ::std::string& stServerShutdownGmUserCmd::servername() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerShutdownGmUserCmd.servername)
  return *servername_;
}
inline void stServerShutdownGmUserCmd::set_servername(const ::std::string& value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stServerShutdownGmUserCmd.servername)
}
inline void stServerShutdownGmUserCmd::set_servername(const char* value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stServerShutdownGmUserCmd.servername)
}
inline void stServerShutdownGmUserCmd::set_servername(const char* value, size_t size) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stServerShutdownGmUserCmd.servername)
}
inline ::std::string* stServerShutdownGmUserCmd::mutable_servername() {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stServerShutdownGmUserCmd.servername)
  return servername_;
}
inline ::std::string* stServerShutdownGmUserCmd::release_servername() {
  clear_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = servername_;
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stServerShutdownGmUserCmd::set_allocated_servername(::std::string* servername) {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete servername_;
  }
  if (servername) {
    set_has_servername();
    servername_ = servername;
  } else {
    clear_has_servername();
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stServerShutdownGmUserCmd.servername)
}

// optional uint32 serverip = 5;
inline bool stServerShutdownGmUserCmd::has_serverip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stServerShutdownGmUserCmd::set_has_serverip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stServerShutdownGmUserCmd::clear_has_serverip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stServerShutdownGmUserCmd::clear_serverip() {
  serverip_ = 0u;
  clear_has_serverip();
}
inline ::google::protobuf::uint32 stServerShutdownGmUserCmd::serverip() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerShutdownGmUserCmd.serverip)
  return serverip_;
}
inline void stServerShutdownGmUserCmd::set_serverip(::google::protobuf::uint32 value) {
  set_has_serverip();
  serverip_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerShutdownGmUserCmd.serverip)
}

// optional uint32 usernum = 6;
inline bool stServerShutdownGmUserCmd::has_usernum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stServerShutdownGmUserCmd::set_has_usernum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stServerShutdownGmUserCmd::clear_has_usernum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stServerShutdownGmUserCmd::clear_usernum() {
  usernum_ = 0u;
  clear_has_usernum();
}
inline ::google::protobuf::uint32 stServerShutdownGmUserCmd::usernum() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerShutdownGmUserCmd.usernum)
  return usernum_;
}
inline void stServerShutdownGmUserCmd::set_usernum(::google::protobuf::uint32 value) {
  set_has_usernum();
  usernum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerShutdownGmUserCmd.usernum)
}

// optional uint32 time = 7;
inline bool stServerShutdownGmUserCmd::has_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stServerShutdownGmUserCmd::set_has_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stServerShutdownGmUserCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stServerShutdownGmUserCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 stServerShutdownGmUserCmd::time() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerShutdownGmUserCmd.time)
  return time_;
}
inline void stServerShutdownGmUserCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerShutdownGmUserCmd.time)
}

// -------------------------------------------------------------------

// stRequestZoneDicGmUserCmd

// -------------------------------------------------------------------

// stReturnZoneDicGmUserCmd_Data

// optional uint32 zoneid = 1;
inline bool stReturnZoneDicGmUserCmd_Data::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnZoneDicGmUserCmd_Data::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnZoneDicGmUserCmd_Data::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnZoneDicGmUserCmd_Data::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stReturnZoneDicGmUserCmd_Data::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicGmUserCmd.Data.zoneid)
  return zoneid_;
}
inline void stReturnZoneDicGmUserCmd_Data::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicGmUserCmd.Data.zoneid)
}

// optional uint32 name = 2;
inline bool stReturnZoneDicGmUserCmd_Data::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnZoneDicGmUserCmd_Data::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnZoneDicGmUserCmd_Data::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnZoneDicGmUserCmd_Data::clear_name() {
  name_ = 0u;
  clear_has_name();
}
inline ::google::protobuf::uint32 stReturnZoneDicGmUserCmd_Data::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicGmUserCmd.Data.name)
  return name_;
}
inline void stReturnZoneDicGmUserCmd_Data::set_name(::google::protobuf::uint32 value) {
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicGmUserCmd.Data.name)
}

// -------------------------------------------------------------------

// stReturnZoneDicGmUserCmd

// optional uint32 num = 1;
inline bool stReturnZoneDicGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnZoneDicGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnZoneDicGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnZoneDicGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnZoneDicGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicGmUserCmd.num)
  return num_;
}
inline void stReturnZoneDicGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnZoneDicGmUserCmd.num)
}

// repeated .Pmd.stReturnZoneDicGmUserCmd.Data data = 2;
inline int stReturnZoneDicGmUserCmd::data_size() const {
  return data_.size();
}
inline void stReturnZoneDicGmUserCmd::clear_data() {
  data_.Clear();
}
inline const ::Pmd::stReturnZoneDicGmUserCmd_Data& stReturnZoneDicGmUserCmd::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnZoneDicGmUserCmd.data)
  return data_.Get(index);
}
inline ::Pmd::stReturnZoneDicGmUserCmd_Data* stReturnZoneDicGmUserCmd::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnZoneDicGmUserCmd.data)
  return data_.Mutable(index);
}
inline ::Pmd::stReturnZoneDicGmUserCmd_Data* stReturnZoneDicGmUserCmd::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.stReturnZoneDicGmUserCmd.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicGmUserCmd_Data >&
stReturnZoneDicGmUserCmd::data() const {
  // @@protoc_insertion_point(field_list:Pmd.stReturnZoneDicGmUserCmd.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnZoneDicGmUserCmd_Data >*
stReturnZoneDicGmUserCmd::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.stReturnZoneDicGmUserCmd.data)
  return &data_;
}

// -------------------------------------------------------------------

// stAddChatConfigGmUserCmd

// optional uint32 zoneid = 1;
inline bool stAddChatConfigGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stAddChatConfigGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stAddChatConfigGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stAddChatConfigGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stAddChatConfigGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddChatConfigGmUserCmd.zoneid)
  return zoneid_;
}
inline void stAddChatConfigGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stAddChatConfigGmUserCmd.zoneid)
}

// optional uint32 countyrid = 2;
inline bool stAddChatConfigGmUserCmd::has_countyrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stAddChatConfigGmUserCmd::set_has_countyrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stAddChatConfigGmUserCmd::clear_has_countyrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stAddChatConfigGmUserCmd::clear_countyrid() {
  countyrid_ = 0u;
  clear_has_countyrid();
}
inline ::google::protobuf::uint32 stAddChatConfigGmUserCmd::countyrid() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddChatConfigGmUserCmd.countyrid)
  return countyrid_;
}
inline void stAddChatConfigGmUserCmd::set_countyrid(::google::protobuf::uint32 value) {
  set_has_countyrid();
  countyrid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stAddChatConfigGmUserCmd.countyrid)
}

// optional uint32 sceneid = 3;
inline bool stAddChatConfigGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stAddChatConfigGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stAddChatConfigGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stAddChatConfigGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stAddChatConfigGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddChatConfigGmUserCmd.sceneid)
  return sceneid_;
}
inline void stAddChatConfigGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stAddChatConfigGmUserCmd.sceneid)
}

// optional uint32 channel = 4;
inline bool stAddChatConfigGmUserCmd::has_channel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stAddChatConfigGmUserCmd::set_has_channel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stAddChatConfigGmUserCmd::clear_has_channel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stAddChatConfigGmUserCmd::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 stAddChatConfigGmUserCmd::channel() const {
  // @@protoc_insertion_point(field_get:Pmd.stAddChatConfigGmUserCmd.channel)
  return channel_;
}
inline void stAddChatConfigGmUserCmd::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stAddChatConfigGmUserCmd.channel)
}

// -------------------------------------------------------------------

// stCancelChatConfigGmUserCmd

// optional uint32 zoneid = 1;
inline bool stCancelChatConfigGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stCancelChatConfigGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stCancelChatConfigGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stCancelChatConfigGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stCancelChatConfigGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stCancelChatConfigGmUserCmd.zoneid)
  return zoneid_;
}
inline void stCancelChatConfigGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stCancelChatConfigGmUserCmd.zoneid)
}

// optional uint32 countyrid = 2;
inline bool stCancelChatConfigGmUserCmd::has_countyrid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stCancelChatConfigGmUserCmd::set_has_countyrid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stCancelChatConfigGmUserCmd::clear_has_countyrid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stCancelChatConfigGmUserCmd::clear_countyrid() {
  countyrid_ = 0u;
  clear_has_countyrid();
}
inline ::google::protobuf::uint32 stCancelChatConfigGmUserCmd::countyrid() const {
  // @@protoc_insertion_point(field_get:Pmd.stCancelChatConfigGmUserCmd.countyrid)
  return countyrid_;
}
inline void stCancelChatConfigGmUserCmd::set_countyrid(::google::protobuf::uint32 value) {
  set_has_countyrid();
  countyrid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stCancelChatConfigGmUserCmd.countyrid)
}

// optional uint32 sceneid = 3;
inline bool stCancelChatConfigGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stCancelChatConfigGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stCancelChatConfigGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stCancelChatConfigGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stCancelChatConfigGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stCancelChatConfigGmUserCmd.sceneid)
  return sceneid_;
}
inline void stCancelChatConfigGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stCancelChatConfigGmUserCmd.sceneid)
}

// optional uint32 channel = 4;
inline bool stCancelChatConfigGmUserCmd::has_channel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stCancelChatConfigGmUserCmd::set_has_channel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stCancelChatConfigGmUserCmd::clear_has_channel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stCancelChatConfigGmUserCmd::clear_channel() {
  channel_ = 0u;
  clear_has_channel();
}
inline ::google::protobuf::uint32 stCancelChatConfigGmUserCmd::channel() const {
  // @@protoc_insertion_point(field_get:Pmd.stCancelChatConfigGmUserCmd.channel)
  return channel_;
}
inline void stCancelChatConfigGmUserCmd::set_channel(::google::protobuf::uint32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stCancelChatConfigGmUserCmd.channel)
}

// -------------------------------------------------------------------

// stRequestChatTypesGmUserCmd

// -------------------------------------------------------------------

// stReturnChatTypesGmUserCmd_Data

// optional uint32 chatType = 1;
inline bool stReturnChatTypesGmUserCmd_Data::has_chattype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnChatTypesGmUserCmd_Data::set_has_chattype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnChatTypesGmUserCmd_Data::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnChatTypesGmUserCmd_Data::clear_chattype() {
  chattype_ = 0u;
  clear_has_chattype();
}
inline ::google::protobuf::uint32 stReturnChatTypesGmUserCmd_Data::chattype() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnChatTypesGmUserCmd.Data.chatType)
  return chattype_;
}
inline void stReturnChatTypesGmUserCmd_Data::set_chattype(::google::protobuf::uint32 value) {
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnChatTypesGmUserCmd.Data.chatType)
}

// optional uint32 name = 2;
inline bool stReturnChatTypesGmUserCmd_Data::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnChatTypesGmUserCmd_Data::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnChatTypesGmUserCmd_Data::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnChatTypesGmUserCmd_Data::clear_name() {
  name_ = 0u;
  clear_has_name();
}
inline ::google::protobuf::uint32 stReturnChatTypesGmUserCmd_Data::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnChatTypesGmUserCmd.Data.name)
  return name_;
}
inline void stReturnChatTypesGmUserCmd_Data::set_name(::google::protobuf::uint32 value) {
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnChatTypesGmUserCmd.Data.name)
}

// -------------------------------------------------------------------

// stReturnChatTypesGmUserCmd

// optional uint32 num = 1;
inline bool stReturnChatTypesGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnChatTypesGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnChatTypesGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnChatTypesGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnChatTypesGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnChatTypesGmUserCmd.num)
  return num_;
}
inline void stReturnChatTypesGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnChatTypesGmUserCmd.num)
}

// repeated .Pmd.stReturnChatTypesGmUserCmd.Data data = 2;
inline int stReturnChatTypesGmUserCmd::data_size() const {
  return data_.size();
}
inline void stReturnChatTypesGmUserCmd::clear_data() {
  data_.Clear();
}
inline const ::Pmd::stReturnChatTypesGmUserCmd_Data& stReturnChatTypesGmUserCmd::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnChatTypesGmUserCmd.data)
  return data_.Get(index);
}
inline ::Pmd::stReturnChatTypesGmUserCmd_Data* stReturnChatTypesGmUserCmd::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnChatTypesGmUserCmd.data)
  return data_.Mutable(index);
}
inline ::Pmd::stReturnChatTypesGmUserCmd_Data* stReturnChatTypesGmUserCmd::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.stReturnChatTypesGmUserCmd.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnChatTypesGmUserCmd_Data >&
stReturnChatTypesGmUserCmd::data() const {
  // @@protoc_insertion_point(field_list:Pmd.stReturnChatTypesGmUserCmd.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnChatTypesGmUserCmd_Data >*
stReturnChatTypesGmUserCmd::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.stReturnChatTypesGmUserCmd.data)
  return &data_;
}

// -------------------------------------------------------------------

// stServerStartupGmUserCmd

// optional uint32 zoneid = 1;
inline bool stServerStartupGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stServerStartupGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stServerStartupGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stServerStartupGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stServerStartupGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerStartupGmUserCmd.zoneid)
  return zoneid_;
}
inline void stServerStartupGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerStartupGmUserCmd.zoneid)
}

// optional uint32 serverid = 2;
inline bool stServerStartupGmUserCmd::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stServerStartupGmUserCmd::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stServerStartupGmUserCmd::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stServerStartupGmUserCmd::clear_serverid() {
  serverid_ = 0u;
  clear_has_serverid();
}
inline ::google::protobuf::uint32 stServerStartupGmUserCmd::serverid() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerStartupGmUserCmd.serverid)
  return serverid_;
}
inline void stServerStartupGmUserCmd::set_serverid(::google::protobuf::uint32 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerStartupGmUserCmd.serverid)
}

// optional uint32 servertype = 3;
inline bool stServerStartupGmUserCmd::has_servertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stServerStartupGmUserCmd::set_has_servertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stServerStartupGmUserCmd::clear_has_servertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stServerStartupGmUserCmd::clear_servertype() {
  servertype_ = 0u;
  clear_has_servertype();
}
inline ::google::protobuf::uint32 stServerStartupGmUserCmd::servertype() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerStartupGmUserCmd.servertype)
  return servertype_;
}
inline void stServerStartupGmUserCmd::set_servertype(::google::protobuf::uint32 value) {
  set_has_servertype();
  servertype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerStartupGmUserCmd.servertype)
}

// optional string servername = 4;
inline bool stServerStartupGmUserCmd::has_servername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stServerStartupGmUserCmd::set_has_servername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stServerStartupGmUserCmd::clear_has_servername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stServerStartupGmUserCmd::clear_servername() {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_->clear();
  }
  clear_has_servername();
}
inline const ::std::string& stServerStartupGmUserCmd::servername() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerStartupGmUserCmd.servername)
  return *servername_;
}
inline void stServerStartupGmUserCmd::set_servername(const ::std::string& value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stServerStartupGmUserCmd.servername)
}
inline void stServerStartupGmUserCmd::set_servername(const char* value) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stServerStartupGmUserCmd.servername)
}
inline void stServerStartupGmUserCmd::set_servername(const char* value, size_t size) {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  servername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stServerStartupGmUserCmd.servername)
}
inline ::std::string* stServerStartupGmUserCmd::mutable_servername() {
  set_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    servername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stServerStartupGmUserCmd.servername)
  return servername_;
}
inline ::std::string* stServerStartupGmUserCmd::release_servername() {
  clear_has_servername();
  if (servername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = servername_;
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stServerStartupGmUserCmd::set_allocated_servername(::std::string* servername) {
  if (servername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete servername_;
  }
  if (servername) {
    set_has_servername();
    servername_ = servername;
  } else {
    clear_has_servername();
    servername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stServerStartupGmUserCmd.servername)
}

// optional uint32 serverip = 5;
inline bool stServerStartupGmUserCmd::has_serverip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stServerStartupGmUserCmd::set_has_serverip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stServerStartupGmUserCmd::clear_has_serverip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stServerStartupGmUserCmd::clear_serverip() {
  serverip_ = 0u;
  clear_has_serverip();
}
inline ::google::protobuf::uint32 stServerStartupGmUserCmd::serverip() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerStartupGmUserCmd.serverip)
  return serverip_;
}
inline void stServerStartupGmUserCmd::set_serverip(::google::protobuf::uint32 value) {
  set_has_serverip();
  serverip_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerStartupGmUserCmd.serverip)
}

// optional uint32 time = 6;
inline bool stServerStartupGmUserCmd::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stServerStartupGmUserCmd::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stServerStartupGmUserCmd::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stServerStartupGmUserCmd::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 stServerStartupGmUserCmd::time() const {
  // @@protoc_insertion_point(field_get:Pmd.stServerStartupGmUserCmd.time)
  return time_;
}
inline void stServerStartupGmUserCmd::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stServerStartupGmUserCmd.time)
}

// -------------------------------------------------------------------

// stNotifyShutdownGmUserCmd

// optional uint32 gmid = 1;
inline bool stNotifyShutdownGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stNotifyShutdownGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stNotifyShutdownGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stNotifyShutdownGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stNotifyShutdownGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stNotifyShutdownGmUserCmd.gmid)
  return gmid_;
}
inline void stNotifyShutdownGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stNotifyShutdownGmUserCmd.gmid)
}

// optional string gmName = 2;
inline bool stNotifyShutdownGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stNotifyShutdownGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stNotifyShutdownGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stNotifyShutdownGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stNotifyShutdownGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stNotifyShutdownGmUserCmd.gmName)
  return *gmname_;
}
inline void stNotifyShutdownGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stNotifyShutdownGmUserCmd.gmName)
}
inline void stNotifyShutdownGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stNotifyShutdownGmUserCmd.gmName)
}
inline void stNotifyShutdownGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stNotifyShutdownGmUserCmd.gmName)
}
inline ::std::string* stNotifyShutdownGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stNotifyShutdownGmUserCmd.gmName)
  return gmname_;
}
inline ::std::string* stNotifyShutdownGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stNotifyShutdownGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stNotifyShutdownGmUserCmd.gmName)
}

// optional uint32 zoneid = 3;
inline bool stNotifyShutdownGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stNotifyShutdownGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stNotifyShutdownGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stNotifyShutdownGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stNotifyShutdownGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stNotifyShutdownGmUserCmd.zoneid)
  return zoneid_;
}
inline void stNotifyShutdownGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stNotifyShutdownGmUserCmd.zoneid)
}

// optional uint32 leftTime = 4;
inline bool stNotifyShutdownGmUserCmd::has_lefttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stNotifyShutdownGmUserCmd::set_has_lefttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stNotifyShutdownGmUserCmd::clear_has_lefttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stNotifyShutdownGmUserCmd::clear_lefttime() {
  lefttime_ = 0u;
  clear_has_lefttime();
}
inline ::google::protobuf::uint32 stNotifyShutdownGmUserCmd::lefttime() const {
  // @@protoc_insertion_point(field_get:Pmd.stNotifyShutdownGmUserCmd.leftTime)
  return lefttime_;
}
inline void stNotifyShutdownGmUserCmd::set_lefttime(::google::protobuf::uint32 value) {
  set_has_lefttime();
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stNotifyShutdownGmUserCmd.leftTime)
}

// optional uint32 shutdownTime = 5;
inline bool stNotifyShutdownGmUserCmd::has_shutdowntime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stNotifyShutdownGmUserCmd::set_has_shutdowntime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stNotifyShutdownGmUserCmd::clear_has_shutdowntime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stNotifyShutdownGmUserCmd::clear_shutdowntime() {
  shutdowntime_ = 0u;
  clear_has_shutdowntime();
}
inline ::google::protobuf::uint32 stNotifyShutdownGmUserCmd::shutdowntime() const {
  // @@protoc_insertion_point(field_get:Pmd.stNotifyShutdownGmUserCmd.shutdownTime)
  return shutdowntime_;
}
inline void stNotifyShutdownGmUserCmd::set_shutdowntime(::google::protobuf::uint32 value) {
  set_has_shutdowntime();
  shutdowntime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stNotifyShutdownGmUserCmd.shutdownTime)
}

// optional string data = 6;
inline bool stNotifyShutdownGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stNotifyShutdownGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stNotifyShutdownGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stNotifyShutdownGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stNotifyShutdownGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stNotifyShutdownGmUserCmd.data)
  return *data_;
}
inline void stNotifyShutdownGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stNotifyShutdownGmUserCmd.data)
}
inline void stNotifyShutdownGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stNotifyShutdownGmUserCmd.data)
}
inline void stNotifyShutdownGmUserCmd::set_data(const char* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stNotifyShutdownGmUserCmd.data)
}
inline ::std::string* stNotifyShutdownGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stNotifyShutdownGmUserCmd.data)
  return data_;
}
inline ::std::string* stNotifyShutdownGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stNotifyShutdownGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stNotifyShutdownGmUserCmd.data)
}

// -------------------------------------------------------------------

// stCancelShutdownGmUserCmd

// optional uint32 zoneid = 1;
inline bool stCancelShutdownGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stCancelShutdownGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stCancelShutdownGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stCancelShutdownGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stCancelShutdownGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stCancelShutdownGmUserCmd.zoneid)
  return zoneid_;
}
inline void stCancelShutdownGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stCancelShutdownGmUserCmd.zoneid)
}

// -------------------------------------------------------------------

// stGmServerMessageGmUserCmd

// optional uint32 type = 1;
inline bool stGmServerMessageGmUserCmd::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stGmServerMessageGmUserCmd::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stGmServerMessageGmUserCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stGmServerMessageGmUserCmd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 stGmServerMessageGmUserCmd::type() const {
  // @@protoc_insertion_point(field_get:Pmd.stGmServerMessageGmUserCmd.type)
  return type_;
}
inline void stGmServerMessageGmUserCmd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGmServerMessageGmUserCmd.type)
}

// optional uint32 gmid = 2;
inline bool stGmServerMessageGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stGmServerMessageGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stGmServerMessageGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stGmServerMessageGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stGmServerMessageGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGmServerMessageGmUserCmd.gmid)
  return gmid_;
}
inline void stGmServerMessageGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGmServerMessageGmUserCmd.gmid)
}

// optional bytes data = 3;
inline bool stGmServerMessageGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stGmServerMessageGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stGmServerMessageGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stGmServerMessageGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stGmServerMessageGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stGmServerMessageGmUserCmd.data)
  return *data_;
}
inline void stGmServerMessageGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stGmServerMessageGmUserCmd.data)
}
inline void stGmServerMessageGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stGmServerMessageGmUserCmd.data)
}
inline void stGmServerMessageGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stGmServerMessageGmUserCmd.data)
}
inline ::std::string* stGmServerMessageGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stGmServerMessageGmUserCmd.data)
  return data_;
}
inline ::std::string* stGmServerMessageGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stGmServerMessageGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stGmServerMessageGmUserCmd.data)
}

// -------------------------------------------------------------------

// stRequestDelGmUserGmUserCmd

// optional uint32 id = 1;
inline bool stRequestDelGmUserGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestDelGmUserGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestDelGmUserGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestDelGmUserGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stRequestDelGmUserGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestDelGmUserGmUserCmd.id)
  return id_;
}
inline void stRequestDelGmUserGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestDelGmUserGmUserCmd.id)
}

// -------------------------------------------------------------------

// stRequestResetGmUserPasswordGmUserCmd

// optional uint32 id = 1;
inline bool stRequestResetGmUserPasswordGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestResetGmUserPasswordGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestResetGmUserPasswordGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestResetGmUserPasswordGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stRequestResetGmUserPasswordGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestResetGmUserPasswordGmUserCmd.id)
  return id_;
}
inline void stRequestResetGmUserPasswordGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestResetGmUserPasswordGmUserCmd.id)
}

// -------------------------------------------------------------------

// stQequestShutDownGmUserCmd

// optional uint32 zoneid = 1;
inline bool stQequestShutDownGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stQequestShutDownGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stQequestShutDownGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stQequestShutDownGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stQequestShutDownGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stQequestShutDownGmUserCmd.zoneid)
  return zoneid_;
}
inline void stQequestShutDownGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stQequestShutDownGmUserCmd.zoneid)
}

// -------------------------------------------------------------------

// stRequestForbidAccountGmUserCmd

// optional .Pmd.ForbidAccountData data = 1;
inline bool stRequestForbidAccountGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestForbidAccountGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestForbidAccountGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestForbidAccountGmUserCmd::clear_data() {
  if (data_ != NULL) data_->::Pmd::ForbidAccountData::Clear();
  clear_has_data();
}
inline const ::Pmd::ForbidAccountData& stRequestForbidAccountGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestForbidAccountGmUserCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::ForbidAccountData* stRequestForbidAccountGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::ForbidAccountData;
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestForbidAccountGmUserCmd.data)
  return data_;
}
inline ::Pmd::ForbidAccountData* stRequestForbidAccountGmUserCmd::release_data() {
  clear_has_data();
  ::Pmd::ForbidAccountData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void stRequestForbidAccountGmUserCmd::set_allocated_data(::Pmd::ForbidAccountData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestForbidAccountGmUserCmd.data)
}

// -------------------------------------------------------------------

// stQueryForbidAccountGmUserCmd

// optional .Pmd.ForbidAccountData data = 1;
inline bool stQueryForbidAccountGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stQueryForbidAccountGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stQueryForbidAccountGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stQueryForbidAccountGmUserCmd::clear_data() {
  if (data_ != NULL) data_->::Pmd::ForbidAccountData::Clear();
  clear_has_data();
}
inline const ::Pmd::ForbidAccountData& stQueryForbidAccountGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stQueryForbidAccountGmUserCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::ForbidAccountData* stQueryForbidAccountGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::ForbidAccountData;
  // @@protoc_insertion_point(field_mutable:Pmd.stQueryForbidAccountGmUserCmd.data)
  return data_;
}
inline ::Pmd::ForbidAccountData* stQueryForbidAccountGmUserCmd::release_data() {
  clear_has_data();
  ::Pmd::ForbidAccountData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void stQueryForbidAccountGmUserCmd::set_allocated_data(::Pmd::ForbidAccountData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stQueryForbidAccountGmUserCmd.data)
}

// -------------------------------------------------------------------

// stReturnForbidAccountListGmUserCmd

// optional uint32 num = 1;
inline bool stReturnForbidAccountListGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnForbidAccountListGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnForbidAccountListGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnForbidAccountListGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnForbidAccountListGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnForbidAccountListGmUserCmd.num)
  return num_;
}
inline void stReturnForbidAccountListGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnForbidAccountListGmUserCmd.num)
}

// -------------------------------------------------------------------

// stRequestUnForbidAccountGmUserCmd

// optional .Pmd.ForbidAccountData data = 1;
inline bool stRequestUnForbidAccountGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestUnForbidAccountGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestUnForbidAccountGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestUnForbidAccountGmUserCmd::clear_data() {
  if (data_ != NULL) data_->::Pmd::ForbidAccountData::Clear();
  clear_has_data();
}
inline const ::Pmd::ForbidAccountData& stRequestUnForbidAccountGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestUnForbidAccountGmUserCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::ForbidAccountData* stRequestUnForbidAccountGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::ForbidAccountData;
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestUnForbidAccountGmUserCmd.data)
  return data_;
}
inline ::Pmd::ForbidAccountData* stRequestUnForbidAccountGmUserCmd::release_data() {
  clear_has_data();
  ::Pmd::ForbidAccountData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void stRequestUnForbidAccountGmUserCmd::set_allocated_data(::Pmd::ForbidAccountData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestUnForbidAccountGmUserCmd.data)
}

// -------------------------------------------------------------------

// stBroadcastDeleteZoneGmUserCmd

// optional uint32 zoneID = 1;
inline bool stBroadcastDeleteZoneGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stBroadcastDeleteZoneGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stBroadcastDeleteZoneGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stBroadcastDeleteZoneGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stBroadcastDeleteZoneGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastDeleteZoneGmUserCmd.zoneID)
  return zoneid_;
}
inline void stBroadcastDeleteZoneGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastDeleteZoneGmUserCmd.zoneID)
}

// -------------------------------------------------------------------

// stRequestNameAccountGmUserCmd

// optional uint32 num = 1;
inline bool stRequestNameAccountGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestNameAccountGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestNameAccountGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestNameAccountGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stRequestNameAccountGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestNameAccountGmUserCmd.num)
  return num_;
}
inline void stRequestNameAccountGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestNameAccountGmUserCmd.num)
}

// -------------------------------------------------------------------

// stReturnNameAccountGmUserCmd

// optional uint32 num = 1;
inline bool stReturnNameAccountGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnNameAccountGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnNameAccountGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnNameAccountGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnNameAccountGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnNameAccountGmUserCmd.num)
  return num_;
}
inline void stReturnNameAccountGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnNameAccountGmUserCmd.num)
}

// -------------------------------------------------------------------

// stRequestDBConnectionConfigGmUserCmd

// -------------------------------------------------------------------

// stReturnDBConnectionConfigGmUserCmd

// optional uint32 num = 1;
inline bool stReturnDBConnectionConfigGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnDBConnectionConfigGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnDBConnectionConfigGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnDBConnectionConfigGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnDBConnectionConfigGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnDBConnectionConfigGmUserCmd.num)
  return num_;
}
inline void stReturnDBConnectionConfigGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnDBConnectionConfigGmUserCmd.num)
}

// optional bytes data = 2;
inline bool stReturnDBConnectionConfigGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnDBConnectionConfigGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnDBConnectionConfigGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnDBConnectionConfigGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stReturnDBConnectionConfigGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnDBConnectionConfigGmUserCmd.data)
  return *data_;
}
inline void stReturnDBConnectionConfigGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnDBConnectionConfigGmUserCmd.data)
}
inline void stReturnDBConnectionConfigGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnDBConnectionConfigGmUserCmd.data)
}
inline void stReturnDBConnectionConfigGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnDBConnectionConfigGmUserCmd.data)
}
inline ::std::string* stReturnDBConnectionConfigGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnDBConnectionConfigGmUserCmd.data)
  return data_;
}
inline ::std::string* stReturnDBConnectionConfigGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnDBConnectionConfigGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnDBConnectionConfigGmUserCmd.data)
}

// -------------------------------------------------------------------

// stQueryNameExistGmUserCmd

// optional string name = 1;
inline bool stQueryNameExistGmUserCmd::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stQueryNameExistGmUserCmd::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stQueryNameExistGmUserCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stQueryNameExistGmUserCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& stQueryNameExistGmUserCmd::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stQueryNameExistGmUserCmd.name)
  return *name_;
}
inline void stQueryNameExistGmUserCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stQueryNameExistGmUserCmd.name)
}
inline void stQueryNameExistGmUserCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stQueryNameExistGmUserCmd.name)
}
inline void stQueryNameExistGmUserCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stQueryNameExistGmUserCmd.name)
}
inline ::std::string* stQueryNameExistGmUserCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stQueryNameExistGmUserCmd.name)
  return name_;
}
inline ::std::string* stQueryNameExistGmUserCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stQueryNameExistGmUserCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stQueryNameExistGmUserCmd.name)
}

// optional uint32 optype = 2;
inline bool stQueryNameExistGmUserCmd::has_optype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stQueryNameExistGmUserCmd::set_has_optype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stQueryNameExistGmUserCmd::clear_has_optype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stQueryNameExistGmUserCmd::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 stQueryNameExistGmUserCmd::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.stQueryNameExistGmUserCmd.optype)
  return optype_;
}
inline void stQueryNameExistGmUserCmd::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stQueryNameExistGmUserCmd.optype)
}

// -------------------------------------------------------------------

// stForceInsertNameGmUserCmd

// optional string name = 1;
inline bool stForceInsertNameGmUserCmd::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stForceInsertNameGmUserCmd::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stForceInsertNameGmUserCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stForceInsertNameGmUserCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& stForceInsertNameGmUserCmd::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stForceInsertNameGmUserCmd.name)
  return *name_;
}
inline void stForceInsertNameGmUserCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stForceInsertNameGmUserCmd.name)
}
inline void stForceInsertNameGmUserCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stForceInsertNameGmUserCmd.name)
}
inline void stForceInsertNameGmUserCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stForceInsertNameGmUserCmd.name)
}
inline ::std::string* stForceInsertNameGmUserCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stForceInsertNameGmUserCmd.name)
  return name_;
}
inline ::std::string* stForceInsertNameGmUserCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stForceInsertNameGmUserCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stForceInsertNameGmUserCmd.name)
}

// optional uint32 optype = 2;
inline bool stForceInsertNameGmUserCmd::has_optype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stForceInsertNameGmUserCmd::set_has_optype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stForceInsertNameGmUserCmd::clear_has_optype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stForceInsertNameGmUserCmd::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 stForceInsertNameGmUserCmd::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.stForceInsertNameGmUserCmd.optype)
  return optype_;
}
inline void stForceInsertNameGmUserCmd::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForceInsertNameGmUserCmd.optype)
}

// -------------------------------------------------------------------

// stForceModifyNameGmUserCmd

// optional uint32 gmid = 1;
inline bool stForceModifyNameGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stForceModifyNameGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stForceModifyNameGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stForceModifyNameGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stForceModifyNameGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForceModifyNameGmUserCmd.gmid)
  return gmid_;
}
inline void stForceModifyNameGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForceModifyNameGmUserCmd.gmid)
}

// optional uint32 zoneid = 2;
inline bool stForceModifyNameGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stForceModifyNameGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stForceModifyNameGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stForceModifyNameGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stForceModifyNameGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForceModifyNameGmUserCmd.zoneid)
  return zoneid_;
}
inline void stForceModifyNameGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForceModifyNameGmUserCmd.zoneid)
}

// optional uint32 opid = 3;
inline bool stForceModifyNameGmUserCmd::has_opid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stForceModifyNameGmUserCmd::set_has_opid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stForceModifyNameGmUserCmd::clear_has_opid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stForceModifyNameGmUserCmd::clear_opid() {
  opid_ = 0u;
  clear_has_opid();
}
inline ::google::protobuf::uint32 stForceModifyNameGmUserCmd::opid() const {
  // @@protoc_insertion_point(field_get:Pmd.stForceModifyNameGmUserCmd.opid)
  return opid_;
}
inline void stForceModifyNameGmUserCmd::set_opid(::google::protobuf::uint32 value) {
  set_has_opid();
  opid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForceModifyNameGmUserCmd.opid)
}

// optional string oldname = 4;
inline bool stForceModifyNameGmUserCmd::has_oldname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stForceModifyNameGmUserCmd::set_has_oldname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stForceModifyNameGmUserCmd::clear_has_oldname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stForceModifyNameGmUserCmd::clear_oldname() {
  if (oldname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_->clear();
  }
  clear_has_oldname();
}
inline const ::std::string& stForceModifyNameGmUserCmd::oldname() const {
  // @@protoc_insertion_point(field_get:Pmd.stForceModifyNameGmUserCmd.oldname)
  return *oldname_;
}
inline void stForceModifyNameGmUserCmd::set_oldname(const ::std::string& value) {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  oldname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stForceModifyNameGmUserCmd.oldname)
}
inline void stForceModifyNameGmUserCmd::set_oldname(const char* value) {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  oldname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stForceModifyNameGmUserCmd.oldname)
}
inline void stForceModifyNameGmUserCmd::set_oldname(const char* value, size_t size) {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  oldname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stForceModifyNameGmUserCmd.oldname)
}
inline ::std::string* stForceModifyNameGmUserCmd::mutable_oldname() {
  set_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oldname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stForceModifyNameGmUserCmd.oldname)
  return oldname_;
}
inline ::std::string* stForceModifyNameGmUserCmd::release_oldname() {
  clear_has_oldname();
  if (oldname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = oldname_;
    oldname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stForceModifyNameGmUserCmd::set_allocated_oldname(::std::string* oldname) {
  if (oldname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete oldname_;
  }
  if (oldname) {
    set_has_oldname();
    oldname_ = oldname;
  } else {
    clear_has_oldname();
    oldname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stForceModifyNameGmUserCmd.oldname)
}

// optional string newname = 5;
inline bool stForceModifyNameGmUserCmd::has_newname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stForceModifyNameGmUserCmd::set_has_newname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stForceModifyNameGmUserCmd::clear_has_newname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stForceModifyNameGmUserCmd::clear_newname() {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_->clear();
  }
  clear_has_newname();
}
inline const ::std::string& stForceModifyNameGmUserCmd::newname() const {
  // @@protoc_insertion_point(field_get:Pmd.stForceModifyNameGmUserCmd.newname)
  return *newname_;
}
inline void stForceModifyNameGmUserCmd::set_newname(const ::std::string& value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stForceModifyNameGmUserCmd.newname)
}
inline void stForceModifyNameGmUserCmd::set_newname(const char* value) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stForceModifyNameGmUserCmd.newname)
}
inline void stForceModifyNameGmUserCmd::set_newname(const char* value, size_t size) {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  newname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stForceModifyNameGmUserCmd.newname)
}
inline ::std::string* stForceModifyNameGmUserCmd::mutable_newname() {
  set_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stForceModifyNameGmUserCmd.newname)
  return newname_;
}
inline ::std::string* stForceModifyNameGmUserCmd::release_newname() {
  clear_has_newname();
  if (newname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newname_;
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stForceModifyNameGmUserCmd::set_allocated_newname(::std::string* newname) {
  if (newname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newname_;
  }
  if (newname) {
    set_has_newname();
    newname_ = newname;
  } else {
    clear_has_newname();
    newname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stForceModifyNameGmUserCmd.newname)
}

// optional uint32 optype = 6;
inline bool stForceModifyNameGmUserCmd::has_optype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stForceModifyNameGmUserCmd::set_has_optype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stForceModifyNameGmUserCmd::clear_has_optype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stForceModifyNameGmUserCmd::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 stForceModifyNameGmUserCmd::optype() const {
  // @@protoc_insertion_point(field_get:Pmd.stForceModifyNameGmUserCmd.optype)
  return optype_;
}
inline void stForceModifyNameGmUserCmd::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stForceModifyNameGmUserCmd.optype)
}

// -------------------------------------------------------------------

// stCheckOnlineGmUserCmd

// optional uint32 zoneid = 1;
inline bool stCheckOnlineGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stCheckOnlineGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stCheckOnlineGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stCheckOnlineGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stCheckOnlineGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stCheckOnlineGmUserCmd.zoneid)
  return zoneid_;
}
inline void stCheckOnlineGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stCheckOnlineGmUserCmd.zoneid)
}

// optional string name = 2;
inline bool stCheckOnlineGmUserCmd::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stCheckOnlineGmUserCmd::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stCheckOnlineGmUserCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stCheckOnlineGmUserCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& stCheckOnlineGmUserCmd::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stCheckOnlineGmUserCmd.name)
  return *name_;
}
inline void stCheckOnlineGmUserCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stCheckOnlineGmUserCmd.name)
}
inline void stCheckOnlineGmUserCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stCheckOnlineGmUserCmd.name)
}
inline void stCheckOnlineGmUserCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stCheckOnlineGmUserCmd.name)
}
inline ::std::string* stCheckOnlineGmUserCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stCheckOnlineGmUserCmd.name)
  return name_;
}
inline ::std::string* stCheckOnlineGmUserCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stCheckOnlineGmUserCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stCheckOnlineGmUserCmd.name)
}

// -------------------------------------------------------------------

// stReturnCheckOnlineGmUserCmd

// optional uint32 zoneid = 1;
inline bool stReturnCheckOnlineGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnCheckOnlineGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnCheckOnlineGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnCheckOnlineGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stReturnCheckOnlineGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnCheckOnlineGmUserCmd.zoneid)
  return zoneid_;
}
inline void stReturnCheckOnlineGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnCheckOnlineGmUserCmd.zoneid)
}

// optional string name = 2;
inline bool stReturnCheckOnlineGmUserCmd::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnCheckOnlineGmUserCmd::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnCheckOnlineGmUserCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnCheckOnlineGmUserCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& stReturnCheckOnlineGmUserCmd::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnCheckOnlineGmUserCmd.name)
  return *name_;
}
inline void stReturnCheckOnlineGmUserCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnCheckOnlineGmUserCmd.name)
}
inline void stReturnCheckOnlineGmUserCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnCheckOnlineGmUserCmd.name)
}
inline void stReturnCheckOnlineGmUserCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnCheckOnlineGmUserCmd.name)
}
inline ::std::string* stReturnCheckOnlineGmUserCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnCheckOnlineGmUserCmd.name)
  return name_;
}
inline ::std::string* stReturnCheckOnlineGmUserCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnCheckOnlineGmUserCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnCheckOnlineGmUserCmd.name)
}

// optional uint32 retcode = 3;
inline bool stReturnCheckOnlineGmUserCmd::has_retcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnCheckOnlineGmUserCmd::set_has_retcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnCheckOnlineGmUserCmd::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnCheckOnlineGmUserCmd::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 stReturnCheckOnlineGmUserCmd::retcode() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnCheckOnlineGmUserCmd.retcode)
  return retcode_;
}
inline void stReturnCheckOnlineGmUserCmd::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnCheckOnlineGmUserCmd.retcode)
}

// -------------------------------------------------------------------

// stPunishUserGmUserCmd

// optional string userName = 1;
inline bool stPunishUserGmUserCmd::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stPunishUserGmUserCmd::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stPunishUserGmUserCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stPunishUserGmUserCmd::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& stPunishUserGmUserCmd::username() const {
  // @@protoc_insertion_point(field_get:Pmd.stPunishUserGmUserCmd.userName)
  return *username_;
}
inline void stPunishUserGmUserCmd::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stPunishUserGmUserCmd.userName)
}
inline void stPunishUserGmUserCmd::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stPunishUserGmUserCmd.userName)
}
inline void stPunishUserGmUserCmd::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stPunishUserGmUserCmd.userName)
}
inline ::std::string* stPunishUserGmUserCmd::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stPunishUserGmUserCmd.userName)
  return username_;
}
inline ::std::string* stPunishUserGmUserCmd::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stPunishUserGmUserCmd::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stPunishUserGmUserCmd.userName)
}

// optional string GM = 2;
inline bool stPunishUserGmUserCmd::has_gm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stPunishUserGmUserCmd::set_has_gm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stPunishUserGmUserCmd::clear_has_gm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stPunishUserGmUserCmd::clear_gm() {
  if (gm_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_->clear();
  }
  clear_has_gm();
}
inline const ::std::string& stPunishUserGmUserCmd::gm() const {
  // @@protoc_insertion_point(field_get:Pmd.stPunishUserGmUserCmd.GM)
  return *gm_;
}
inline void stPunishUserGmUserCmd::set_gm(const ::std::string& value) {
  set_has_gm();
  if (gm_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_ = new ::std::string;
  }
  gm_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stPunishUserGmUserCmd.GM)
}
inline void stPunishUserGmUserCmd::set_gm(const char* value) {
  set_has_gm();
  if (gm_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_ = new ::std::string;
  }
  gm_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stPunishUserGmUserCmd.GM)
}
inline void stPunishUserGmUserCmd::set_gm(const char* value, size_t size) {
  set_has_gm();
  if (gm_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_ = new ::std::string;
  }
  gm_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stPunishUserGmUserCmd.GM)
}
inline ::std::string* stPunishUserGmUserCmd::mutable_gm() {
  set_has_gm();
  if (gm_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gm_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stPunishUserGmUserCmd.GM)
  return gm_;
}
inline ::std::string* stPunishUserGmUserCmd::release_gm() {
  clear_has_gm();
  if (gm_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gm_;
    gm_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stPunishUserGmUserCmd::set_allocated_gm(::std::string* gm) {
  if (gm_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gm_;
  }
  if (gm) {
    set_has_gm();
    gm_ = gm;
  } else {
    clear_has_gm();
    gm_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stPunishUserGmUserCmd.GM)
}

// optional string reason = 3;
inline bool stPunishUserGmUserCmd::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stPunishUserGmUserCmd::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stPunishUserGmUserCmd::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stPunishUserGmUserCmd::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& stPunishUserGmUserCmd::reason() const {
  // @@protoc_insertion_point(field_get:Pmd.stPunishUserGmUserCmd.reason)
  return *reason_;
}
inline void stPunishUserGmUserCmd::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stPunishUserGmUserCmd.reason)
}
inline void stPunishUserGmUserCmd::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stPunishUserGmUserCmd.reason)
}
inline void stPunishUserGmUserCmd::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stPunishUserGmUserCmd.reason)
}
inline ::std::string* stPunishUserGmUserCmd::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stPunishUserGmUserCmd.reason)
  return reason_;
}
inline ::std::string* stPunishUserGmUserCmd::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stPunishUserGmUserCmd::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stPunishUserGmUserCmd.reason)
}

// optional uint32 operation = 4;
inline bool stPunishUserGmUserCmd::has_operation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stPunishUserGmUserCmd::set_has_operation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stPunishUserGmUserCmd::clear_has_operation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stPunishUserGmUserCmd::clear_operation() {
  operation_ = 0u;
  clear_has_operation();
}
inline ::google::protobuf::uint32 stPunishUserGmUserCmd::operation() const {
  // @@protoc_insertion_point(field_get:Pmd.stPunishUserGmUserCmd.operation)
  return operation_;
}
inline void stPunishUserGmUserCmd::set_operation(::google::protobuf::uint32 value) {
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPunishUserGmUserCmd.operation)
}

// optional uint32 delay = 5;
inline bool stPunishUserGmUserCmd::has_delay() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stPunishUserGmUserCmd::set_has_delay() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stPunishUserGmUserCmd::clear_has_delay() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stPunishUserGmUserCmd::clear_delay() {
  delay_ = 0u;
  clear_has_delay();
}
inline ::google::protobuf::uint32 stPunishUserGmUserCmd::delay() const {
  // @@protoc_insertion_point(field_get:Pmd.stPunishUserGmUserCmd.delay)
  return delay_;
}
inline void stPunishUserGmUserCmd::set_delay(::google::protobuf::uint32 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPunishUserGmUserCmd.delay)
}

// optional uint32 waitTime = 6;
inline bool stPunishUserGmUserCmd::has_waittime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stPunishUserGmUserCmd::set_has_waittime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stPunishUserGmUserCmd::clear_has_waittime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stPunishUserGmUserCmd::clear_waittime() {
  waittime_ = 0u;
  clear_has_waittime();
}
inline ::google::protobuf::uint32 stPunishUserGmUserCmd::waittime() const {
  // @@protoc_insertion_point(field_get:Pmd.stPunishUserGmUserCmd.waitTime)
  return waittime_;
}
inline void stPunishUserGmUserCmd::set_waittime(::google::protobuf::uint32 value) {
  set_has_waittime();
  waittime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPunishUserGmUserCmd.waitTime)
}

// optional uint32 accid = 7;
inline bool stPunishUserGmUserCmd::has_accid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stPunishUserGmUserCmd::set_has_accid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stPunishUserGmUserCmd::clear_has_accid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stPunishUserGmUserCmd::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 stPunishUserGmUserCmd::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.stPunishUserGmUserCmd.accid)
  return accid_;
}
inline void stPunishUserGmUserCmd::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPunishUserGmUserCmd.accid)
}

// optional uint32 ip = 8;
inline bool stPunishUserGmUserCmd::has_ip() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stPunishUserGmUserCmd::set_has_ip() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stPunishUserGmUserCmd::clear_has_ip() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stPunishUserGmUserCmd::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 stPunishUserGmUserCmd::ip() const {
  // @@protoc_insertion_point(field_get:Pmd.stPunishUserGmUserCmd.ip)
  return ip_;
}
inline void stPunishUserGmUserCmd::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPunishUserGmUserCmd.ip)
}

// -------------------------------------------------------------------

// stRequestUserPosUserGmUserCmd

// optional uint32 zoneid = 1;
inline bool stRequestUserPosUserGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestUserPosUserGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestUserPosUserGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestUserPosUserGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stRequestUserPosUserGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestUserPosUserGmUserCmd.zoneid)
  return zoneid_;
}
inline void stRequestUserPosUserGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestUserPosUserGmUserCmd.zoneid)
}

// optional uint32 sceneid = 2;
inline bool stRequestUserPosUserGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stRequestUserPosUserGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stRequestUserPosUserGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stRequestUserPosUserGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stRequestUserPosUserGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestUserPosUserGmUserCmd.sceneid)
  return sceneid_;
}
inline void stRequestUserPosUserGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestUserPosUserGmUserCmd.sceneid)
}

// -------------------------------------------------------------------

// stReturnUserPosUserGmUserCmd_Data

// optional uint32 x = 1;
inline bool stReturnUserPosUserGmUserCmd_Data::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnUserPosUserGmUserCmd_Data::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnUserPosUserGmUserCmd_Data::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnUserPosUserGmUserCmd_Data::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 stReturnUserPosUserGmUserCmd_Data::x() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnUserPosUserGmUserCmd.Data.x)
  return x_;
}
inline void stReturnUserPosUserGmUserCmd_Data::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnUserPosUserGmUserCmd.Data.x)
}

// optional uint32 y = 2;
inline bool stReturnUserPosUserGmUserCmd_Data::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnUserPosUserGmUserCmd_Data::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnUserPosUserGmUserCmd_Data::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnUserPosUserGmUserCmd_Data::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 stReturnUserPosUserGmUserCmd_Data::y() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnUserPosUserGmUserCmd.Data.y)
  return y_;
}
inline void stReturnUserPosUserGmUserCmd_Data::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnUserPosUserGmUserCmd.Data.y)
}

// -------------------------------------------------------------------

// stReturnUserPosUserGmUserCmd

// optional uint32 num = 1;
inline bool stReturnUserPosUserGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnUserPosUserGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnUserPosUserGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnUserPosUserGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnUserPosUserGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnUserPosUserGmUserCmd.num)
  return num_;
}
inline void stReturnUserPosUserGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnUserPosUserGmUserCmd.num)
}

// optional uint32 zoneid = 2;
inline bool stReturnUserPosUserGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnUserPosUserGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnUserPosUserGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnUserPosUserGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stReturnUserPosUserGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnUserPosUserGmUserCmd.zoneid)
  return zoneid_;
}
inline void stReturnUserPosUserGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnUserPosUserGmUserCmd.zoneid)
}

// optional uint32 sceneid = 3;
inline bool stReturnUserPosUserGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnUserPosUserGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnUserPosUserGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnUserPosUserGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stReturnUserPosUserGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnUserPosUserGmUserCmd.sceneid)
  return sceneid_;
}
inline void stReturnUserPosUserGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnUserPosUserGmUserCmd.sceneid)
}

// optional uint32 width = 4;
inline bool stReturnUserPosUserGmUserCmd::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stReturnUserPosUserGmUserCmd::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stReturnUserPosUserGmUserCmd::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stReturnUserPosUserGmUserCmd::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 stReturnUserPosUserGmUserCmd::width() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnUserPosUserGmUserCmd.width)
  return width_;
}
inline void stReturnUserPosUserGmUserCmd::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnUserPosUserGmUserCmd.width)
}

// optional uint32 height = 5;
inline bool stReturnUserPosUserGmUserCmd::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stReturnUserPosUserGmUserCmd::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stReturnUserPosUserGmUserCmd::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stReturnUserPosUserGmUserCmd::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 stReturnUserPosUserGmUserCmd::height() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnUserPosUserGmUserCmd.height)
  return height_;
}
inline void stReturnUserPosUserGmUserCmd::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnUserPosUserGmUserCmd.height)
}

// repeated .Pmd.stReturnUserPosUserGmUserCmd.Data data = 6;
inline int stReturnUserPosUserGmUserCmd::data_size() const {
  return data_.size();
}
inline void stReturnUserPosUserGmUserCmd::clear_data() {
  data_.Clear();
}
inline const ::Pmd::stReturnUserPosUserGmUserCmd_Data& stReturnUserPosUserGmUserCmd::data(int index) const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnUserPosUserGmUserCmd.data)
  return data_.Get(index);
}
inline ::Pmd::stReturnUserPosUserGmUserCmd_Data* stReturnUserPosUserGmUserCmd::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnUserPosUserGmUserCmd.data)
  return data_.Mutable(index);
}
inline ::Pmd::stReturnUserPosUserGmUserCmd_Data* stReturnUserPosUserGmUserCmd::add_data() {
  // @@protoc_insertion_point(field_add:Pmd.stReturnUserPosUserGmUserCmd.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnUserPosUserGmUserCmd_Data >&
stReturnUserPosUserGmUserCmd::data() const {
  // @@protoc_insertion_point(field_list:Pmd.stReturnUserPosUserGmUserCmd.data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Pmd::stReturnUserPosUserGmUserCmd_Data >*
stReturnUserPosUserGmUserCmd::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Pmd.stReturnUserPosUserGmUserCmd.data)
  return &data_;
}

// -------------------------------------------------------------------

// stEndUserPosUserGmUserCmd

// optional uint32 zoneid = 1;
inline bool stEndUserPosUserGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stEndUserPosUserGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stEndUserPosUserGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stEndUserPosUserGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stEndUserPosUserGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stEndUserPosUserGmUserCmd.zoneid)
  return zoneid_;
}
inline void stEndUserPosUserGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stEndUserPosUserGmUserCmd.zoneid)
}

// optional uint32 sceneid = 2;
inline bool stEndUserPosUserGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stEndUserPosUserGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stEndUserPosUserGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stEndUserPosUserGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stEndUserPosUserGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stEndUserPosUserGmUserCmd.sceneid)
  return sceneid_;
}
inline void stEndUserPosUserGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stEndUserPosUserGmUserCmd.sceneid)
}

// -------------------------------------------------------------------

// stBroadcastReallySendGmUserCmd

// optional uint32 taskID = 1;
inline bool stBroadcastReallySendGmUserCmd::has_taskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stBroadcastReallySendGmUserCmd::set_has_taskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stBroadcastReallySendGmUserCmd::clear_has_taskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stBroadcastReallySendGmUserCmd::clear_taskid() {
  taskid_ = 0u;
  clear_has_taskid();
}
inline ::google::protobuf::uint32 stBroadcastReallySendGmUserCmd::taskid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastReallySendGmUserCmd.taskID)
  return taskid_;
}
inline void stBroadcastReallySendGmUserCmd::set_taskid(::google::protobuf::uint32 value) {
  set_has_taskid();
  taskid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastReallySendGmUserCmd.taskID)
}

// optional uint32 dwZoneID = 2;
inline bool stBroadcastReallySendGmUserCmd::has_dwzoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stBroadcastReallySendGmUserCmd::set_has_dwzoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stBroadcastReallySendGmUserCmd::clear_has_dwzoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stBroadcastReallySendGmUserCmd::clear_dwzoneid() {
  dwzoneid_ = 0u;
  clear_has_dwzoneid();
}
inline ::google::protobuf::uint32 stBroadcastReallySendGmUserCmd::dwzoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastReallySendGmUserCmd.dwZoneID)
  return dwzoneid_;
}
inline void stBroadcastReallySendGmUserCmd::set_dwzoneid(::google::protobuf::uint32 value) {
  set_has_dwzoneid();
  dwzoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastReallySendGmUserCmd.dwZoneID)
}

// optional uint32 wCountryID = 3;
inline bool stBroadcastReallySendGmUserCmd::has_wcountryid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stBroadcastReallySendGmUserCmd::set_has_wcountryid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stBroadcastReallySendGmUserCmd::clear_has_wcountryid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stBroadcastReallySendGmUserCmd::clear_wcountryid() {
  wcountryid_ = 0u;
  clear_has_wcountryid();
}
inline ::google::protobuf::uint32 stBroadcastReallySendGmUserCmd::wcountryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastReallySendGmUserCmd.wCountryID)
  return wcountryid_;
}
inline void stBroadcastReallySendGmUserCmd::set_wcountryid(::google::protobuf::uint32 value) {
  set_has_wcountryid();
  wcountryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastReallySendGmUserCmd.wCountryID)
}

// optional uint32 wSceneID = 4;
inline bool stBroadcastReallySendGmUserCmd::has_wsceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stBroadcastReallySendGmUserCmd::set_has_wsceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stBroadcastReallySendGmUserCmd::clear_has_wsceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stBroadcastReallySendGmUserCmd::clear_wsceneid() {
  wsceneid_ = 0u;
  clear_has_wsceneid();
}
inline ::google::protobuf::uint32 stBroadcastReallySendGmUserCmd::wsceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastReallySendGmUserCmd.wSceneID)
  return wsceneid_;
}
inline void stBroadcastReallySendGmUserCmd::set_wsceneid(::google::protobuf::uint32 value) {
  set_has_wsceneid();
  wsceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastReallySendGmUserCmd.wSceneID)
}

// optional uint32 num = 5;
inline bool stBroadcastReallySendGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stBroadcastReallySendGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stBroadcastReallySendGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stBroadcastReallySendGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stBroadcastReallySendGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastReallySendGmUserCmd.num)
  return num_;
}
inline void stBroadcastReallySendGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastReallySendGmUserCmd.num)
}

// optional bytes data = 6;
inline bool stBroadcastReallySendGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stBroadcastReallySendGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stBroadcastReallySendGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stBroadcastReallySendGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stBroadcastReallySendGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastReallySendGmUserCmd.data)
  return *data_;
}
inline void stBroadcastReallySendGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastReallySendGmUserCmd.data)
}
inline void stBroadcastReallySendGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stBroadcastReallySendGmUserCmd.data)
}
inline void stBroadcastReallySendGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stBroadcastReallySendGmUserCmd.data)
}
inline ::std::string* stBroadcastReallySendGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stBroadcastReallySendGmUserCmd.data)
  return data_;
}
inline ::std::string* stBroadcastReallySendGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stBroadcastReallySendGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stBroadcastReallySendGmUserCmd.data)
}

// -------------------------------------------------------------------

// stDBQueryGmUserCmd

// optional uint32 byNoLimit = 1;
inline bool stDBQueryGmUserCmd::has_bynolimit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stDBQueryGmUserCmd::set_has_bynolimit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stDBQueryGmUserCmd::clear_has_bynolimit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stDBQueryGmUserCmd::clear_bynolimit() {
  bynolimit_ = 0u;
  clear_has_bynolimit();
}
inline ::google::protobuf::uint32 stDBQueryGmUserCmd::bynolimit() const {
  // @@protoc_insertion_point(field_get:Pmd.stDBQueryGmUserCmd.byNoLimit)
  return bynolimit_;
}
inline void stDBQueryGmUserCmd::set_bynolimit(::google::protobuf::uint32 value) {
  set_has_bynolimit();
  bynolimit_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDBQueryGmUserCmd.byNoLimit)
}

// optional string tablename = 2;
inline bool stDBQueryGmUserCmd::has_tablename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stDBQueryGmUserCmd::set_has_tablename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stDBQueryGmUserCmd::clear_has_tablename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stDBQueryGmUserCmd::clear_tablename() {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_->clear();
  }
  clear_has_tablename();
}
inline const ::std::string& stDBQueryGmUserCmd::tablename() const {
  // @@protoc_insertion_point(field_get:Pmd.stDBQueryGmUserCmd.tablename)
  return *tablename_;
}
inline void stDBQueryGmUserCmd::set_tablename(const ::std::string& value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stDBQueryGmUserCmd.tablename)
}
inline void stDBQueryGmUserCmd::set_tablename(const char* value) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stDBQueryGmUserCmd.tablename)
}
inline void stDBQueryGmUserCmd::set_tablename(const char* value, size_t size) {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  tablename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stDBQueryGmUserCmd.tablename)
}
inline ::std::string* stDBQueryGmUserCmd::mutable_tablename() {
  set_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tablename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stDBQueryGmUserCmd.tablename)
  return tablename_;
}
inline ::std::string* stDBQueryGmUserCmd::release_tablename() {
  clear_has_tablename();
  if (tablename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tablename_;
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stDBQueryGmUserCmd::set_allocated_tablename(::std::string* tablename) {
  if (tablename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tablename_;
  }
  if (tablename) {
    set_has_tablename();
    tablename_ = tablename;
  } else {
    clear_has_tablename();
    tablename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stDBQueryGmUserCmd.tablename)
}

// optional uint32 timebegin = 3;
inline bool stDBQueryGmUserCmd::has_timebegin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stDBQueryGmUserCmd::set_has_timebegin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stDBQueryGmUserCmd::clear_has_timebegin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stDBQueryGmUserCmd::clear_timebegin() {
  timebegin_ = 0u;
  clear_has_timebegin();
}
inline ::google::protobuf::uint32 stDBQueryGmUserCmd::timebegin() const {
  // @@protoc_insertion_point(field_get:Pmd.stDBQueryGmUserCmd.timebegin)
  return timebegin_;
}
inline void stDBQueryGmUserCmd::set_timebegin(::google::protobuf::uint32 value) {
  set_has_timebegin();
  timebegin_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDBQueryGmUserCmd.timebegin)
}

// optional uint32 timeend = 4;
inline bool stDBQueryGmUserCmd::has_timeend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stDBQueryGmUserCmd::set_has_timeend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stDBQueryGmUserCmd::clear_has_timeend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stDBQueryGmUserCmd::clear_timeend() {
  timeend_ = 0u;
  clear_has_timeend();
}
inline ::google::protobuf::uint32 stDBQueryGmUserCmd::timeend() const {
  // @@protoc_insertion_point(field_get:Pmd.stDBQueryGmUserCmd.timeend)
  return timeend_;
}
inline void stDBQueryGmUserCmd::set_timeend(::google::protobuf::uint32 value) {
  set_has_timeend();
  timeend_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDBQueryGmUserCmd.timeend)
}

// optional uint32 sqllen = 5;
inline bool stDBQueryGmUserCmd::has_sqllen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stDBQueryGmUserCmd::set_has_sqllen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stDBQueryGmUserCmd::clear_has_sqllen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stDBQueryGmUserCmd::clear_sqllen() {
  sqllen_ = 0u;
  clear_has_sqllen();
}
inline ::google::protobuf::uint32 stDBQueryGmUserCmd::sqllen() const {
  // @@protoc_insertion_point(field_get:Pmd.stDBQueryGmUserCmd.sqllen)
  return sqllen_;
}
inline void stDBQueryGmUserCmd::set_sqllen(::google::protobuf::uint32 value) {
  set_has_sqllen();
  sqllen_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDBQueryGmUserCmd.sqllen)
}

// optional uint32 typelen = 6;
inline bool stDBQueryGmUserCmd::has_typelen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stDBQueryGmUserCmd::set_has_typelen() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stDBQueryGmUserCmd::clear_has_typelen() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stDBQueryGmUserCmd::clear_typelen() {
  typelen_ = 0u;
  clear_has_typelen();
}
inline ::google::protobuf::uint32 stDBQueryGmUserCmd::typelen() const {
  // @@protoc_insertion_point(field_get:Pmd.stDBQueryGmUserCmd.typelen)
  return typelen_;
}
inline void stDBQueryGmUserCmd::set_typelen(::google::protobuf::uint32 value) {
  set_has_typelen();
  typelen_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDBQueryGmUserCmd.typelen)
}

// optional bytes data = 7;
inline bool stDBQueryGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stDBQueryGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stDBQueryGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stDBQueryGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stDBQueryGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stDBQueryGmUserCmd.data)
  return *data_;
}
inline void stDBQueryGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stDBQueryGmUserCmd.data)
}
inline void stDBQueryGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stDBQueryGmUserCmd.data)
}
inline void stDBQueryGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stDBQueryGmUserCmd.data)
}
inline ::std::string* stDBQueryGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stDBQueryGmUserCmd.data)
  return data_;
}
inline ::std::string* stDBQueryGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stDBQueryGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stDBQueryGmUserCmd.data)
}

// -------------------------------------------------------------------

// stDBReturnDataGmUserCmd

// optional uint32 num = 1;
inline bool stDBReturnDataGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stDBReturnDataGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stDBReturnDataGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stDBReturnDataGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stDBReturnDataGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stDBReturnDataGmUserCmd.num)
  return num_;
}
inline void stDBReturnDataGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDBReturnDataGmUserCmd.num)
}

// optional bytes data = 2;
inline bool stDBReturnDataGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stDBReturnDataGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stDBReturnDataGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stDBReturnDataGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stDBReturnDataGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stDBReturnDataGmUserCmd.data)
  return *data_;
}
inline void stDBReturnDataGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stDBReturnDataGmUserCmd.data)
}
inline void stDBReturnDataGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stDBReturnDataGmUserCmd.data)
}
inline void stDBReturnDataGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stDBReturnDataGmUserCmd.data)
}
inline ::std::string* stDBReturnDataGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stDBReturnDataGmUserCmd.data)
  return data_;
}
inline ::std::string* stDBReturnDataGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stDBReturnDataGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stDBReturnDataGmUserCmd.data)
}

// -------------------------------------------------------------------

// stDBReturnEndGmUserCmd

// -------------------------------------------------------------------

// stFullForbidAccountLogDataGmUserCmd

// optional uint32 byOperation = 1;
inline bool stFullForbidAccountLogDataGmUserCmd::has_byoperation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stFullForbidAccountLogDataGmUserCmd::set_has_byoperation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stFullForbidAccountLogDataGmUserCmd::clear_has_byoperation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stFullForbidAccountLogDataGmUserCmd::clear_byoperation() {
  byoperation_ = 0u;
  clear_has_byoperation();
}
inline ::google::protobuf::uint32 stFullForbidAccountLogDataGmUserCmd::byoperation() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullForbidAccountLogDataGmUserCmd.byOperation)
  return byoperation_;
}
inline void stFullForbidAccountLogDataGmUserCmd::set_byoperation(::google::protobuf::uint32 value) {
  set_has_byoperation();
  byoperation_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stFullForbidAccountLogDataGmUserCmd.byOperation)
}

// optional .Pmd.ForbidAccountData data = 2;
inline bool stFullForbidAccountLogDataGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stFullForbidAccountLogDataGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stFullForbidAccountLogDataGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stFullForbidAccountLogDataGmUserCmd::clear_data() {
  if (data_ != NULL) data_->::Pmd::ForbidAccountData::Clear();
  clear_has_data();
}
inline const ::Pmd::ForbidAccountData& stFullForbidAccountLogDataGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullForbidAccountLogDataGmUserCmd.data)
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::Pmd::ForbidAccountData* stFullForbidAccountLogDataGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::Pmd::ForbidAccountData;
  // @@protoc_insertion_point(field_mutable:Pmd.stFullForbidAccountLogDataGmUserCmd.data)
  return data_;
}
inline ::Pmd::ForbidAccountData* stFullForbidAccountLogDataGmUserCmd::release_data() {
  clear_has_data();
  ::Pmd::ForbidAccountData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void stFullForbidAccountLogDataGmUserCmd::set_allocated_data(::Pmd::ForbidAccountData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stFullForbidAccountLogDataGmUserCmd.data)
}

// -------------------------------------------------------------------

// stFullGameGmCmdLogDataGmUserCmd

// optional uint32 accID = 1;
inline bool stFullGameGmCmdLogDataGmUserCmd::has_accid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_has_accid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_has_accid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 stFullGameGmCmdLogDataGmUserCmd::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullGameGmCmdLogDataGmUserCmd.accID)
  return accid_;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stFullGameGmCmdLogDataGmUserCmd.accID)
}

// optional uint32 charID = 2;
inline bool stFullGameGmCmdLogDataGmUserCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 stFullGameGmCmdLogDataGmUserCmd::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullGameGmCmdLogDataGmUserCmd.charID)
  return charid_;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stFullGameGmCmdLogDataGmUserCmd.charID)
}

// optional string gmName = 3;
inline bool stFullGameGmCmdLogDataGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stFullGameGmCmdLogDataGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullGameGmCmdLogDataGmUserCmd.gmName)
  return *gmname_;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stFullGameGmCmdLogDataGmUserCmd.gmName)
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stFullGameGmCmdLogDataGmUserCmd.gmName)
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stFullGameGmCmdLogDataGmUserCmd.gmName)
}
inline ::std::string* stFullGameGmCmdLogDataGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stFullGameGmCmdLogDataGmUserCmd.gmName)
  return gmname_;
}
inline ::std::string* stFullGameGmCmdLogDataGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stFullGameGmCmdLogDataGmUserCmd.gmName)
}

// optional uint32 zoneID = 4;
inline bool stFullGameGmCmdLogDataGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stFullGameGmCmdLogDataGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullGameGmCmdLogDataGmUserCmd.zoneID)
  return zoneid_;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stFullGameGmCmdLogDataGmUserCmd.zoneID)
}

// optional uint32 countryID = 5;
inline bool stFullGameGmCmdLogDataGmUserCmd::has_countryid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_has_countryid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 stFullGameGmCmdLogDataGmUserCmd::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullGameGmCmdLogDataGmUserCmd.countryID)
  return countryid_;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stFullGameGmCmdLogDataGmUserCmd.countryID)
}

// optional uint32 sceneID = 6;
inline bool stFullGameGmCmdLogDataGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stFullGameGmCmdLogDataGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullGameGmCmdLogDataGmUserCmd.sceneID)
  return sceneid_;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stFullGameGmCmdLogDataGmUserCmd.sceneID)
}

// optional string cmd = 7;
inline bool stFullGameGmCmdLogDataGmUserCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_cmd() {
  if (cmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_->clear();
  }
  clear_has_cmd();
}
inline const ::std::string& stFullGameGmCmdLogDataGmUserCmd::cmd() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullGameGmCmdLogDataGmUserCmd.cmd)
  return *cmd_;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_cmd(const ::std::string& value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stFullGameGmCmdLogDataGmUserCmd.cmd)
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_cmd(const char* value) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stFullGameGmCmdLogDataGmUserCmd.cmd)
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stFullGameGmCmdLogDataGmUserCmd.cmd)
}
inline ::std::string* stFullGameGmCmdLogDataGmUserCmd::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cmd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stFullGameGmCmdLogDataGmUserCmd.cmd)
  return cmd_;
}
inline ::std::string* stFullGameGmCmdLogDataGmUserCmd::release_cmd() {
  clear_has_cmd();
  if (cmd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cmd_;
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_allocated_cmd(::std::string* cmd) {
  if (cmd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cmd_;
  }
  if (cmd) {
    set_has_cmd();
    cmd_ = cmd;
  } else {
    clear_has_cmd();
    cmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stFullGameGmCmdLogDataGmUserCmd.cmd)
}

// optional string content = 8;
inline bool stFullGameGmCmdLogDataGmUserCmd::has_content() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_has_content() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_has_content() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stFullGameGmCmdLogDataGmUserCmd::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& stFullGameGmCmdLogDataGmUserCmd::content() const {
  // @@protoc_insertion_point(field_get:Pmd.stFullGameGmCmdLogDataGmUserCmd.content)
  return *content_;
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stFullGameGmCmdLogDataGmUserCmd.content)
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stFullGameGmCmdLogDataGmUserCmd.content)
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stFullGameGmCmdLogDataGmUserCmd.content)
}
inline ::std::string* stFullGameGmCmdLogDataGmUserCmd::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stFullGameGmCmdLogDataGmUserCmd.content)
  return content_;
}
inline ::std::string* stFullGameGmCmdLogDataGmUserCmd::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stFullGameGmCmdLogDataGmUserCmd::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stFullGameGmCmdLogDataGmUserCmd.content)
}

// -------------------------------------------------------------------

// stRequestAddQuestionGmUserCmd

// optional .Pmd.QuestionBaseData head = 1;
inline bool stRequestAddQuestionGmUserCmd::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestAddQuestionGmUserCmd::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestAddQuestionGmUserCmd::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestAddQuestionGmUserCmd::clear_head() {
  if (head_ != NULL) head_->::Pmd::QuestionBaseData::Clear();
  clear_has_head();
}
inline const ::Pmd::QuestionBaseData& stRequestAddQuestionGmUserCmd::head() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestAddQuestionGmUserCmd.head)
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::Pmd::QuestionBaseData* stRequestAddQuestionGmUserCmd::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::Pmd::QuestionBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestAddQuestionGmUserCmd.head)
  return head_;
}
inline ::Pmd::QuestionBaseData* stRequestAddQuestionGmUserCmd::release_head() {
  clear_has_head();
  ::Pmd::QuestionBaseData* temp = head_;
  head_ = NULL;
  return temp;
}
inline void stRequestAddQuestionGmUserCmd::set_allocated_head(::Pmd::QuestionBaseData* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestAddQuestionGmUserCmd.head)
}

// optional string desc = 2;
inline bool stRequestAddQuestionGmUserCmd::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stRequestAddQuestionGmUserCmd::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stRequestAddQuestionGmUserCmd::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stRequestAddQuestionGmUserCmd::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& stRequestAddQuestionGmUserCmd::desc() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestAddQuestionGmUserCmd.desc)
  return *desc_;
}
inline void stRequestAddQuestionGmUserCmd::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stRequestAddQuestionGmUserCmd.desc)
}
inline void stRequestAddQuestionGmUserCmd::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stRequestAddQuestionGmUserCmd.desc)
}
inline void stRequestAddQuestionGmUserCmd::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stRequestAddQuestionGmUserCmd.desc)
}
inline ::std::string* stRequestAddQuestionGmUserCmd::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestAddQuestionGmUserCmd.desc)
  return desc_;
}
inline ::std::string* stRequestAddQuestionGmUserCmd::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stRequestAddQuestionGmUserCmd::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestAddQuestionGmUserCmd.desc)
}

// optional uint32 num = 3;
inline bool stRequestAddQuestionGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stRequestAddQuestionGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stRequestAddQuestionGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stRequestAddQuestionGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stRequestAddQuestionGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestAddQuestionGmUserCmd.num)
  return num_;
}
inline void stRequestAddQuestionGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestAddQuestionGmUserCmd.num)
}

// optional bytes data = 4;
inline bool stRequestAddQuestionGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stRequestAddQuestionGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stRequestAddQuestionGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stRequestAddQuestionGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stRequestAddQuestionGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestAddQuestionGmUserCmd.data)
  return *data_;
}
inline void stRequestAddQuestionGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stRequestAddQuestionGmUserCmd.data)
}
inline void stRequestAddQuestionGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stRequestAddQuestionGmUserCmd.data)
}
inline void stRequestAddQuestionGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stRequestAddQuestionGmUserCmd.data)
}
inline ::std::string* stRequestAddQuestionGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestAddQuestionGmUserCmd.data)
  return data_;
}
inline ::std::string* stRequestAddQuestionGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stRequestAddQuestionGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestAddQuestionGmUserCmd.data)
}

// -------------------------------------------------------------------

// stReturnQuestionGmUserCmd

// optional .Pmd.QuestionBaseData head = 1;
inline bool stReturnQuestionGmUserCmd::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnQuestionGmUserCmd::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnQuestionGmUserCmd::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnQuestionGmUserCmd::clear_head() {
  if (head_ != NULL) head_->::Pmd::QuestionBaseData::Clear();
  clear_has_head();
}
inline const ::Pmd::QuestionBaseData& stReturnQuestionGmUserCmd::head() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnQuestionGmUserCmd.head)
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::Pmd::QuestionBaseData* stReturnQuestionGmUserCmd::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::Pmd::QuestionBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnQuestionGmUserCmd.head)
  return head_;
}
inline ::Pmd::QuestionBaseData* stReturnQuestionGmUserCmd::release_head() {
  clear_has_head();
  ::Pmd::QuestionBaseData* temp = head_;
  head_ = NULL;
  return temp;
}
inline void stReturnQuestionGmUserCmd::set_allocated_head(::Pmd::QuestionBaseData* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnQuestionGmUserCmd.head)
}

// optional string desc = 2;
inline bool stReturnQuestionGmUserCmd::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnQuestionGmUserCmd::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnQuestionGmUserCmd::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnQuestionGmUserCmd::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& stReturnQuestionGmUserCmd::desc() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnQuestionGmUserCmd.desc)
  return *desc_;
}
inline void stReturnQuestionGmUserCmd::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnQuestionGmUserCmd.desc)
}
inline void stReturnQuestionGmUserCmd::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnQuestionGmUserCmd.desc)
}
inline void stReturnQuestionGmUserCmd::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnQuestionGmUserCmd.desc)
}
inline ::std::string* stReturnQuestionGmUserCmd::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnQuestionGmUserCmd.desc)
  return desc_;
}
inline ::std::string* stReturnQuestionGmUserCmd::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnQuestionGmUserCmd::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnQuestionGmUserCmd.desc)
}

// optional uint32 seq = 3;
inline bool stReturnQuestionGmUserCmd::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnQuestionGmUserCmd::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnQuestionGmUserCmd::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnQuestionGmUserCmd::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 stReturnQuestionGmUserCmd::seq() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnQuestionGmUserCmd.seq)
  return seq_;
}
inline void stReturnQuestionGmUserCmd::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnQuestionGmUserCmd.seq)
}

// optional uint32 num = 4;
inline bool stReturnQuestionGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stReturnQuestionGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stReturnQuestionGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stReturnQuestionGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnQuestionGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnQuestionGmUserCmd.num)
  return num_;
}
inline void stReturnQuestionGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnQuestionGmUserCmd.num)
}

// optional bytes data = 5;
inline bool stReturnQuestionGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stReturnQuestionGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stReturnQuestionGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stReturnQuestionGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stReturnQuestionGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnQuestionGmUserCmd.data)
  return *data_;
}
inline void stReturnQuestionGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnQuestionGmUserCmd.data)
}
inline void stReturnQuestionGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnQuestionGmUserCmd.data)
}
inline void stReturnQuestionGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnQuestionGmUserCmd.data)
}
inline ::std::string* stReturnQuestionGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnQuestionGmUserCmd.data)
  return data_;
}
inline ::std::string* stReturnQuestionGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnQuestionGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnQuestionGmUserCmd.data)
}

// -------------------------------------------------------------------

// stSequenceQuestionGmUserCmd

// optional uint32 id = 1;
inline bool stSequenceQuestionGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stSequenceQuestionGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stSequenceQuestionGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stSequenceQuestionGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stSequenceQuestionGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stSequenceQuestionGmUserCmd.id)
  return id_;
}
inline void stSequenceQuestionGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stSequenceQuestionGmUserCmd.id)
}

// optional uint32 seq = 2;
inline bool stSequenceQuestionGmUserCmd::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stSequenceQuestionGmUserCmd::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stSequenceQuestionGmUserCmd::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stSequenceQuestionGmUserCmd::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 stSequenceQuestionGmUserCmd::seq() const {
  // @@protoc_insertion_point(field_get:Pmd.stSequenceQuestionGmUserCmd.seq)
  return seq_;
}
inline void stSequenceQuestionGmUserCmd::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stSequenceQuestionGmUserCmd.seq)
}

// -------------------------------------------------------------------

// stDeleteQuestionGmUserCmd

// optional uint32 id = 1;
inline bool stDeleteQuestionGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stDeleteQuestionGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stDeleteQuestionGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stDeleteQuestionGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stDeleteQuestionGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stDeleteQuestionGmUserCmd.id)
  return id_;
}
inline void stDeleteQuestionGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDeleteQuestionGmUserCmd.id)
}

// optional uint32 userid = 2;
inline bool stDeleteQuestionGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stDeleteQuestionGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stDeleteQuestionGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stDeleteQuestionGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stDeleteQuestionGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stDeleteQuestionGmUserCmd.userid)
  return userid_;
}
inline void stDeleteQuestionGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDeleteQuestionGmUserCmd.userid)
}

// -------------------------------------------------------------------

// stRequestQuestionGmUserCmd

// optional uint32 userid = 1;
inline bool stRequestQuestionGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestQuestionGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestQuestionGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestQuestionGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stRequestQuestionGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestQuestionGmUserCmd.userid)
  return userid_;
}
inline void stRequestQuestionGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestQuestionGmUserCmd.userid)
}

// -------------------------------------------------------------------

// stRequestSeqQuestionGmUserCmd

// optional uint32 userid = 1;
inline bool stRequestSeqQuestionGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestSeqQuestionGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestSeqQuestionGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestSeqQuestionGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stRequestSeqQuestionGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSeqQuestionGmUserCmd.userid)
  return userid_;
}
inline void stRequestSeqQuestionGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestSeqQuestionGmUserCmd.userid)
}

// -------------------------------------------------------------------

// stReturnNoneQuestionGmUserCmd

// -------------------------------------------------------------------

// stUserCmdForwardGmUserCmd

// optional uint32 num = 1;
inline bool stUserCmdForwardGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stUserCmdForwardGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stUserCmdForwardGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stUserCmdForwardGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stUserCmdForwardGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stUserCmdForwardGmUserCmd.num)
  return num_;
}
inline void stUserCmdForwardGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stUserCmdForwardGmUserCmd.num)
}

// optional uint32 userid = 2;
inline bool stUserCmdForwardGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stUserCmdForwardGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stUserCmdForwardGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stUserCmdForwardGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stUserCmdForwardGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stUserCmdForwardGmUserCmd.userid)
  return userid_;
}
inline void stUserCmdForwardGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stUserCmdForwardGmUserCmd.userid)
}

// optional bytes data = 3;
inline bool stUserCmdForwardGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stUserCmdForwardGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stUserCmdForwardGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stUserCmdForwardGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stUserCmdForwardGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stUserCmdForwardGmUserCmd.data)
  return *data_;
}
inline void stUserCmdForwardGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stUserCmdForwardGmUserCmd.data)
}
inline void stUserCmdForwardGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stUserCmdForwardGmUserCmd.data)
}
inline void stUserCmdForwardGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stUserCmdForwardGmUserCmd.data)
}
inline ::std::string* stUserCmdForwardGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stUserCmdForwardGmUserCmd.data)
  return data_;
}
inline ::std::string* stUserCmdForwardGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stUserCmdForwardGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stUserCmdForwardGmUserCmd.data)
}

// -------------------------------------------------------------------

// stProcessQuestionGmUserCmd

// optional uint32 id = 1;
inline bool stProcessQuestionGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stProcessQuestionGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stProcessQuestionGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stProcessQuestionGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stProcessQuestionGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stProcessQuestionGmUserCmd.id)
  return id_;
}
inline void stProcessQuestionGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stProcessQuestionGmUserCmd.id)
}

// optional uint32 gmid = 2;
inline bool stProcessQuestionGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stProcessQuestionGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stProcessQuestionGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stProcessQuestionGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stProcessQuestionGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stProcessQuestionGmUserCmd.gmid)
  return gmid_;
}
inline void stProcessQuestionGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stProcessQuestionGmUserCmd.gmid)
}

// -------------------------------------------------------------------

// stGMToolBeginQuestionGmUserCmd

// optional uint32 gmid = 1;
inline bool stGMToolBeginQuestionGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stGMToolBeginQuestionGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stGMToolBeginQuestionGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stGMToolBeginQuestionGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stGMToolBeginQuestionGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGMToolBeginQuestionGmUserCmd.gmid)
  return gmid_;
}
inline void stGMToolBeginQuestionGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGMToolBeginQuestionGmUserCmd.gmid)
}

// -------------------------------------------------------------------

// stGMToolEndQuestionGmUserCmd

// optional uint32 gmid = 1;
inline bool stGMToolEndQuestionGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stGMToolEndQuestionGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stGMToolEndQuestionGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stGMToolEndQuestionGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stGMToolEndQuestionGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGMToolEndQuestionGmUserCmd.gmid)
  return gmid_;
}
inline void stGMToolEndQuestionGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGMToolEndQuestionGmUserCmd.gmid)
}

// -------------------------------------------------------------------

// stDisableGMChatInputGmUserCmd

// optional uint32 gmid = 1;
inline bool stDisableGMChatInputGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stDisableGMChatInputGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stDisableGMChatInputGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stDisableGMChatInputGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stDisableGMChatInputGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stDisableGMChatInputGmUserCmd.gmid)
  return gmid_;
}
inline void stDisableGMChatInputGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDisableGMChatInputGmUserCmd.gmid)
}

// optional string gmname = 2;
inline bool stDisableGMChatInputGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stDisableGMChatInputGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stDisableGMChatInputGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stDisableGMChatInputGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stDisableGMChatInputGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stDisableGMChatInputGmUserCmd.gmname)
  return *gmname_;
}
inline void stDisableGMChatInputGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stDisableGMChatInputGmUserCmd.gmname)
}
inline void stDisableGMChatInputGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stDisableGMChatInputGmUserCmd.gmname)
}
inline void stDisableGMChatInputGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stDisableGMChatInputGmUserCmd.gmname)
}
inline ::std::string* stDisableGMChatInputGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stDisableGMChatInputGmUserCmd.gmname)
  return gmname_;
}
inline ::std::string* stDisableGMChatInputGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stDisableGMChatInputGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stDisableGMChatInputGmUserCmd.gmname)
}

// optional string rolename = 3;
inline bool stDisableGMChatInputGmUserCmd::has_rolename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stDisableGMChatInputGmUserCmd::set_has_rolename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stDisableGMChatInputGmUserCmd::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stDisableGMChatInputGmUserCmd::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& stDisableGMChatInputGmUserCmd::rolename() const {
  // @@protoc_insertion_point(field_get:Pmd.stDisableGMChatInputGmUserCmd.rolename)
  return *rolename_;
}
inline void stDisableGMChatInputGmUserCmd::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stDisableGMChatInputGmUserCmd.rolename)
}
inline void stDisableGMChatInputGmUserCmd::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stDisableGMChatInputGmUserCmd.rolename)
}
inline void stDisableGMChatInputGmUserCmd::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stDisableGMChatInputGmUserCmd.rolename)
}
inline ::std::string* stDisableGMChatInputGmUserCmd::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stDisableGMChatInputGmUserCmd.rolename)
  return rolename_;
}
inline ::std::string* stDisableGMChatInputGmUserCmd::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stDisableGMChatInputGmUserCmd::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stDisableGMChatInputGmUserCmd.rolename)
}

// optional uint32 id = 4;
inline bool stDisableGMChatInputGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stDisableGMChatInputGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stDisableGMChatInputGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stDisableGMChatInputGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stDisableGMChatInputGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stDisableGMChatInputGmUserCmd.id)
  return id_;
}
inline void stDisableGMChatInputGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDisableGMChatInputGmUserCmd.id)
}

// -------------------------------------------------------------------

// stDeleteQuestionByGmUserCmd

// optional uint32 id = 1;
inline bool stDeleteQuestionByGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stDeleteQuestionByGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stDeleteQuestionByGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stDeleteQuestionByGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stDeleteQuestionByGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stDeleteQuestionByGmUserCmd.id)
  return id_;
}
inline void stDeleteQuestionByGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDeleteQuestionByGmUserCmd.id)
}

// optional uint32 userid = 2;
inline bool stDeleteQuestionByGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stDeleteQuestionByGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stDeleteQuestionByGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stDeleteQuestionByGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stDeleteQuestionByGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stDeleteQuestionByGmUserCmd.userid)
  return userid_;
}
inline void stDeleteQuestionByGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDeleteQuestionByGmUserCmd.userid)
}

// optional uint32 gmid = 3;
inline bool stDeleteQuestionByGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stDeleteQuestionByGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stDeleteQuestionByGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stDeleteQuestionByGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stDeleteQuestionByGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stDeleteQuestionByGmUserCmd.gmid)
  return gmid_;
}
inline void stDeleteQuestionByGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDeleteQuestionByGmUserCmd.gmid)
}

// -------------------------------------------------------------------

// stQuestionOverGmUserCmd

// optional uint32 reason = 1;
inline bool stQuestionOverGmUserCmd::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stQuestionOverGmUserCmd::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stQuestionOverGmUserCmd::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stQuestionOverGmUserCmd::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 stQuestionOverGmUserCmd::reason() const {
  // @@protoc_insertion_point(field_get:Pmd.stQuestionOverGmUserCmd.reason)
  return reason_;
}
inline void stQuestionOverGmUserCmd::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stQuestionOverGmUserCmd.reason)
}

// -------------------------------------------------------------------

// stQueryQuestionLimitGmUserCmd

// optional uint32 gmid = 1;
inline bool stQueryQuestionLimitGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stQueryQuestionLimitGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stQueryQuestionLimitGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stQueryQuestionLimitGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stQueryQuestionLimitGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stQueryQuestionLimitGmUserCmd.gmid)
  return gmid_;
}
inline void stQueryQuestionLimitGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stQueryQuestionLimitGmUserCmd.gmid)
}

// -------------------------------------------------------------------

// stReturnQuestionLimitGmUserCmd

// optional uint32 max = 1;
inline bool stReturnQuestionLimitGmUserCmd::has_max() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnQuestionLimitGmUserCmd::set_has_max() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnQuestionLimitGmUserCmd::clear_has_max() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnQuestionLimitGmUserCmd::clear_max() {
  max_ = 0u;
  clear_has_max();
}
inline ::google::protobuf::uint32 stReturnQuestionLimitGmUserCmd::max() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnQuestionLimitGmUserCmd.max)
  return max_;
}
inline void stReturnQuestionLimitGmUserCmd::set_max(::google::protobuf::uint32 value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnQuestionLimitGmUserCmd.max)
}

// optional uint32 maxWaitTime = 2;
inline bool stReturnQuestionLimitGmUserCmd::has_maxwaittime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnQuestionLimitGmUserCmd::set_has_maxwaittime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnQuestionLimitGmUserCmd::clear_has_maxwaittime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnQuestionLimitGmUserCmd::clear_maxwaittime() {
  maxwaittime_ = 0u;
  clear_has_maxwaittime();
}
inline ::google::protobuf::uint32 stReturnQuestionLimitGmUserCmd::maxwaittime() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnQuestionLimitGmUserCmd.maxWaitTime)
  return maxwaittime_;
}
inline void stReturnQuestionLimitGmUserCmd::set_maxwaittime(::google::protobuf::uint32 value) {
  set_has_maxwaittime();
  maxwaittime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnQuestionLimitGmUserCmd.maxWaitTime)
}

// optional uint32 num = 3;
inline bool stReturnQuestionLimitGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnQuestionLimitGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnQuestionLimitGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnQuestionLimitGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnQuestionLimitGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnQuestionLimitGmUserCmd.num)
  return num_;
}
inline void stReturnQuestionLimitGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnQuestionLimitGmUserCmd.num)
}

// optional bytes data = 4;
inline bool stReturnQuestionLimitGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stReturnQuestionLimitGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stReturnQuestionLimitGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stReturnQuestionLimitGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stReturnQuestionLimitGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnQuestionLimitGmUserCmd.data)
  return *data_;
}
inline void stReturnQuestionLimitGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnQuestionLimitGmUserCmd.data)
}
inline void stReturnQuestionLimitGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnQuestionLimitGmUserCmd.data)
}
inline void stReturnQuestionLimitGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnQuestionLimitGmUserCmd.data)
}
inline ::std::string* stReturnQuestionLimitGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnQuestionLimitGmUserCmd.data)
  return data_;
}
inline ::std::string* stReturnQuestionLimitGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnQuestionLimitGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnQuestionLimitGmUserCmd.data)
}

// -------------------------------------------------------------------

// stResetQuestionLimitGmUserCmd

// optional uint32 gmid = 1;
inline bool stResetQuestionLimitGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stResetQuestionLimitGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stResetQuestionLimitGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stResetQuestionLimitGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stResetQuestionLimitGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stResetQuestionLimitGmUserCmd.gmid)
  return gmid_;
}
inline void stResetQuestionLimitGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stResetQuestionLimitGmUserCmd.gmid)
}

// optional uint32 max = 2;
inline bool stResetQuestionLimitGmUserCmd::has_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stResetQuestionLimitGmUserCmd::set_has_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stResetQuestionLimitGmUserCmd::clear_has_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stResetQuestionLimitGmUserCmd::clear_max() {
  max_ = 0u;
  clear_has_max();
}
inline ::google::protobuf::uint32 stResetQuestionLimitGmUserCmd::max() const {
  // @@protoc_insertion_point(field_get:Pmd.stResetQuestionLimitGmUserCmd.max)
  return max_;
}
inline void stResetQuestionLimitGmUserCmd::set_max(::google::protobuf::uint32 value) {
  set_has_max();
  max_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stResetQuestionLimitGmUserCmd.max)
}

// optional uint32 maxWaitTime = 3;
inline bool stResetQuestionLimitGmUserCmd::has_maxwaittime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stResetQuestionLimitGmUserCmd::set_has_maxwaittime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stResetQuestionLimitGmUserCmd::clear_has_maxwaittime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stResetQuestionLimitGmUserCmd::clear_maxwaittime() {
  maxwaittime_ = 0u;
  clear_has_maxwaittime();
}
inline ::google::protobuf::uint32 stResetQuestionLimitGmUserCmd::maxwaittime() const {
  // @@protoc_insertion_point(field_get:Pmd.stResetQuestionLimitGmUserCmd.maxWaitTime)
  return maxwaittime_;
}
inline void stResetQuestionLimitGmUserCmd::set_maxwaittime(::google::protobuf::uint32 value) {
  set_has_maxwaittime();
  maxwaittime_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stResetQuestionLimitGmUserCmd.maxWaitTime)
}

// optional uint32 num = 4;
inline bool stResetQuestionLimitGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stResetQuestionLimitGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stResetQuestionLimitGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stResetQuestionLimitGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stResetQuestionLimitGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stResetQuestionLimitGmUserCmd.num)
  return num_;
}
inline void stResetQuestionLimitGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stResetQuestionLimitGmUserCmd.num)
}

// optional bytes data = 5;
inline bool stResetQuestionLimitGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stResetQuestionLimitGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stResetQuestionLimitGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stResetQuestionLimitGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stResetQuestionLimitGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stResetQuestionLimitGmUserCmd.data)
  return *data_;
}
inline void stResetQuestionLimitGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stResetQuestionLimitGmUserCmd.data)
}
inline void stResetQuestionLimitGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stResetQuestionLimitGmUserCmd.data)
}
inline void stResetQuestionLimitGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stResetQuestionLimitGmUserCmd.data)
}
inline ::std::string* stResetQuestionLimitGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stResetQuestionLimitGmUserCmd.data)
  return data_;
}
inline ::std::string* stResetQuestionLimitGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stResetQuestionLimitGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stResetQuestionLimitGmUserCmd.data)
}

// -------------------------------------------------------------------

// stBroadcastToWorldGmUserCmd

// optional string name = 1;
inline bool stBroadcastToWorldGmUserCmd::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stBroadcastToWorldGmUserCmd::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& stBroadcastToWorldGmUserCmd::name() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.name)
  return *name_;
}
inline void stBroadcastToWorldGmUserCmd::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.name)
}
inline void stBroadcastToWorldGmUserCmd::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stBroadcastToWorldGmUserCmd.name)
}
inline void stBroadcastToWorldGmUserCmd::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stBroadcastToWorldGmUserCmd.name)
}
inline ::std::string* stBroadcastToWorldGmUserCmd::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stBroadcastToWorldGmUserCmd.name)
  return name_;
}
inline ::std::string* stBroadcastToWorldGmUserCmd::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stBroadcastToWorldGmUserCmd::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stBroadcastToWorldGmUserCmd.name)
}

// optional uint32 zoneid = 2;
inline bool stBroadcastToWorldGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stBroadcastToWorldGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stBroadcastToWorldGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.zoneid)
  return zoneid_;
}
inline void stBroadcastToWorldGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.zoneid)
}

// optional uint32 countryid = 3;
inline bool stBroadcastToWorldGmUserCmd::has_countryid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_countryid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stBroadcastToWorldGmUserCmd::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 stBroadcastToWorldGmUserCmd::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.countryid)
  return countryid_;
}
inline void stBroadcastToWorldGmUserCmd::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.countryid)
}

// optional uint32 sceneid = 4;
inline bool stBroadcastToWorldGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stBroadcastToWorldGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stBroadcastToWorldGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.sceneid)
  return sceneid_;
}
inline void stBroadcastToWorldGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.sceneid)
}

// optional uint32 provinceid = 5;
inline bool stBroadcastToWorldGmUserCmd::has_provinceid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_provinceid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_provinceid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stBroadcastToWorldGmUserCmd::clear_provinceid() {
  provinceid_ = 0u;
  clear_has_provinceid();
}
inline ::google::protobuf::uint32 stBroadcastToWorldGmUserCmd::provinceid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.provinceid)
  return provinceid_;
}
inline void stBroadcastToWorldGmUserCmd::set_provinceid(::google::protobuf::uint32 value) {
  set_has_provinceid();
  provinceid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.provinceid)
}

// optional uint32 cityid = 6;
inline bool stBroadcastToWorldGmUserCmd::has_cityid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_cityid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_cityid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stBroadcastToWorldGmUserCmd::clear_cityid() {
  cityid_ = 0u;
  clear_has_cityid();
}
inline ::google::protobuf::uint32 stBroadcastToWorldGmUserCmd::cityid() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.cityid)
  return cityid_;
}
inline void stBroadcastToWorldGmUserCmd::set_cityid(::google::protobuf::uint32 value) {
  set_has_cityid();
  cityid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.cityid)
}

// optional uint32 chatType = 7;
inline bool stBroadcastToWorldGmUserCmd::has_chattype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_chattype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stBroadcastToWorldGmUserCmd::clear_chattype() {
  chattype_ = 0u;
  clear_has_chattype();
}
inline ::google::protobuf::uint32 stBroadcastToWorldGmUserCmd::chattype() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.chatType)
  return chattype_;
}
inline void stBroadcastToWorldGmUserCmd::set_chattype(::google::protobuf::uint32 value) {
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.chatType)
}

// optional uint32 chatpos = 8;
inline bool stBroadcastToWorldGmUserCmd::has_chatpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_chatpos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_chatpos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stBroadcastToWorldGmUserCmd::clear_chatpos() {
  chatpos_ = 0u;
  clear_has_chatpos();
}
inline ::google::protobuf::uint32 stBroadcastToWorldGmUserCmd::chatpos() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.chatpos)
  return chatpos_;
}
inline void stBroadcastToWorldGmUserCmd::set_chatpos(::google::protobuf::uint32 value) {
  set_has_chatpos();
  chatpos_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.chatpos)
}

// optional uint32 color = 9;
inline bool stBroadcastToWorldGmUserCmd::has_color() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_color() {
  _has_bits_[0] |= 0x00000100u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_color() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void stBroadcastToWorldGmUserCmd::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 stBroadcastToWorldGmUserCmd::color() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.color)
  return color_;
}
inline void stBroadcastToWorldGmUserCmd::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.color)
}

// optional uint32 num = 10;
inline bool stBroadcastToWorldGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000200u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void stBroadcastToWorldGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stBroadcastToWorldGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.num)
  return num_;
}
inline void stBroadcastToWorldGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.num)
}

// optional bytes data = 11;
inline bool stBroadcastToWorldGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void stBroadcastToWorldGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000400u;
}
inline void stBroadcastToWorldGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void stBroadcastToWorldGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stBroadcastToWorldGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stBroadcastToWorldGmUserCmd.data)
  return *data_;
}
inline void stBroadcastToWorldGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stBroadcastToWorldGmUserCmd.data)
}
inline void stBroadcastToWorldGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stBroadcastToWorldGmUserCmd.data)
}
inline void stBroadcastToWorldGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stBroadcastToWorldGmUserCmd.data)
}
inline ::std::string* stBroadcastToWorldGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stBroadcastToWorldGmUserCmd.data)
  return data_;
}
inline ::std::string* stBroadcastToWorldGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stBroadcastToWorldGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stBroadcastToWorldGmUserCmd.data)
}

// -------------------------------------------------------------------

// stSetActivityNoteGmUserCmd

// optional string gmname = 1;
inline bool stSetActivityNoteGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stSetActivityNoteGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stSetActivityNoteGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stSetActivityNoteGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stSetActivityNoteGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stSetActivityNoteGmUserCmd.gmname)
  return *gmname_;
}
inline void stSetActivityNoteGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stSetActivityNoteGmUserCmd.gmname)
}
inline void stSetActivityNoteGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stSetActivityNoteGmUserCmd.gmname)
}
inline void stSetActivityNoteGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stSetActivityNoteGmUserCmd.gmname)
}
inline ::std::string* stSetActivityNoteGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stSetActivityNoteGmUserCmd.gmname)
  return gmname_;
}
inline ::std::string* stSetActivityNoteGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stSetActivityNoteGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stSetActivityNoteGmUserCmd.gmname)
}

// optional uint32 zoneid = 2;
inline bool stSetActivityNoteGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stSetActivityNoteGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stSetActivityNoteGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stSetActivityNoteGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stSetActivityNoteGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stSetActivityNoteGmUserCmd.zoneid)
  return zoneid_;
}
inline void stSetActivityNoteGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stSetActivityNoteGmUserCmd.zoneid)
}

// optional uint32 num = 3;
inline bool stSetActivityNoteGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stSetActivityNoteGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stSetActivityNoteGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stSetActivityNoteGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stSetActivityNoteGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stSetActivityNoteGmUserCmd.num)
  return num_;
}
inline void stSetActivityNoteGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stSetActivityNoteGmUserCmd.num)
}

// optional bytes data = 4;
inline bool stSetActivityNoteGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stSetActivityNoteGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stSetActivityNoteGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stSetActivityNoteGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stSetActivityNoteGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stSetActivityNoteGmUserCmd.data)
  return *data_;
}
inline void stSetActivityNoteGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stSetActivityNoteGmUserCmd.data)
}
inline void stSetActivityNoteGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stSetActivityNoteGmUserCmd.data)
}
inline void stSetActivityNoteGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stSetActivityNoteGmUserCmd.data)
}
inline ::std::string* stSetActivityNoteGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stSetActivityNoteGmUserCmd.data)
  return data_;
}
inline ::std::string* stSetActivityNoteGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stSetActivityNoteGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stSetActivityNoteGmUserCmd.data)
}

// -------------------------------------------------------------------

// stRequestRefreshUserQuestionGmUserCmd

// -------------------------------------------------------------------

// stRequestSetUserGoldInGmUserCmd

// optional string szUserName = 1;
inline bool stRequestSetUserGoldInGmUserCmd::has_szusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestSetUserGoldInGmUserCmd::set_has_szusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestSetUserGoldInGmUserCmd::clear_has_szusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestSetUserGoldInGmUserCmd::clear_szusername() {
  if (szusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szusername_->clear();
  }
  clear_has_szusername();
}
inline const ::std::string& stRequestSetUserGoldInGmUserCmd::szusername() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSetUserGoldInGmUserCmd.szUserName)
  return *szusername_;
}
inline void stRequestSetUserGoldInGmUserCmd::set_szusername(const ::std::string& value) {
  set_has_szusername();
  if (szusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szusername_ = new ::std::string;
  }
  szusername_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stRequestSetUserGoldInGmUserCmd.szUserName)
}
inline void stRequestSetUserGoldInGmUserCmd::set_szusername(const char* value) {
  set_has_szusername();
  if (szusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szusername_ = new ::std::string;
  }
  szusername_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stRequestSetUserGoldInGmUserCmd.szUserName)
}
inline void stRequestSetUserGoldInGmUserCmd::set_szusername(const char* value, size_t size) {
  set_has_szusername();
  if (szusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szusername_ = new ::std::string;
  }
  szusername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stRequestSetUserGoldInGmUserCmd.szUserName)
}
inline ::std::string* stRequestSetUserGoldInGmUserCmd::mutable_szusername() {
  set_has_szusername();
  if (szusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szusername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestSetUserGoldInGmUserCmd.szUserName)
  return szusername_;
}
inline ::std::string* stRequestSetUserGoldInGmUserCmd::release_szusername() {
  clear_has_szusername();
  if (szusername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szusername_;
    szusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stRequestSetUserGoldInGmUserCmd::set_allocated_szusername(::std::string* szusername) {
  if (szusername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szusername_;
  }
  if (szusername) {
    set_has_szusername();
    szusername_ = szusername;
  } else {
    clear_has_szusername();
    szusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestSetUserGoldInGmUserCmd.szUserName)
}

// optional uint32 dwGold = 2;
inline bool stRequestSetUserGoldInGmUserCmd::has_dwgold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stRequestSetUserGoldInGmUserCmd::set_has_dwgold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stRequestSetUserGoldInGmUserCmd::clear_has_dwgold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stRequestSetUserGoldInGmUserCmd::clear_dwgold() {
  dwgold_ = 0u;
  clear_has_dwgold();
}
inline ::google::protobuf::uint32 stRequestSetUserGoldInGmUserCmd::dwgold() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSetUserGoldInGmUserCmd.dwGold)
  return dwgold_;
}
inline void stRequestSetUserGoldInGmUserCmd::set_dwgold(::google::protobuf::uint32 value) {
  set_has_dwgold();
  dwgold_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestSetUserGoldInGmUserCmd.dwGold)
}

// -------------------------------------------------------------------

// stSetPrivilegesGmUserCmd

// optional uint32 pri = 1;
inline bool stSetPrivilegesGmUserCmd::has_pri() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stSetPrivilegesGmUserCmd::set_has_pri() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stSetPrivilegesGmUserCmd::clear_has_pri() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stSetPrivilegesGmUserCmd::clear_pri() {
  pri_ = 0u;
  clear_has_pri();
}
inline ::google::protobuf::uint32 stSetPrivilegesGmUserCmd::pri() const {
  // @@protoc_insertion_point(field_get:Pmd.stSetPrivilegesGmUserCmd.pri)
  return pri_;
}
inline void stSetPrivilegesGmUserCmd::set_pri(::google::protobuf::uint32 value) {
  set_has_pri();
  pri_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stSetPrivilegesGmUserCmd.pri)
}

// optional uint32 id = 2;
inline bool stSetPrivilegesGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stSetPrivilegesGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stSetPrivilegesGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stSetPrivilegesGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stSetPrivilegesGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stSetPrivilegesGmUserCmd.id)
  return id_;
}
inline void stSetPrivilegesGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stSetPrivilegesGmUserCmd.id)
}

// -------------------------------------------------------------------

// stRequestSaveChatGmUserCmd

// optional uint32 hashnumber = 1;
inline bool stRequestSaveChatGmUserCmd::has_hashnumber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestSaveChatGmUserCmd::set_has_hashnumber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestSaveChatGmUserCmd::clear_has_hashnumber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestSaveChatGmUserCmd::clear_hashnumber() {
  hashnumber_ = 0u;
  clear_has_hashnumber();
}
inline ::google::protobuf::uint32 stRequestSaveChatGmUserCmd::hashnumber() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSaveChatGmUserCmd.hashnumber)
  return hashnumber_;
}
inline void stRequestSaveChatGmUserCmd::set_hashnumber(::google::protobuf::uint32 value) {
  set_has_hashnumber();
  hashnumber_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestSaveChatGmUserCmd.hashnumber)
}

// optional string gmname = 2;
inline bool stRequestSaveChatGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stRequestSaveChatGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stRequestSaveChatGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stRequestSaveChatGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stRequestSaveChatGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSaveChatGmUserCmd.gmname)
  return *gmname_;
}
inline void stRequestSaveChatGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stRequestSaveChatGmUserCmd.gmname)
}
inline void stRequestSaveChatGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stRequestSaveChatGmUserCmd.gmname)
}
inline void stRequestSaveChatGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stRequestSaveChatGmUserCmd.gmname)
}
inline ::std::string* stRequestSaveChatGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestSaveChatGmUserCmd.gmname)
  return gmname_;
}
inline ::std::string* stRequestSaveChatGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stRequestSaveChatGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestSaveChatGmUserCmd.gmname)
}

// optional uint32 chattype = 3;
inline bool stRequestSaveChatGmUserCmd::has_chattype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stRequestSaveChatGmUserCmd::set_has_chattype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stRequestSaveChatGmUserCmd::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stRequestSaveChatGmUserCmd::clear_chattype() {
  chattype_ = 0u;
  clear_has_chattype();
}
inline ::google::protobuf::uint32 stRequestSaveChatGmUserCmd::chattype() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSaveChatGmUserCmd.chattype)
  return chattype_;
}
inline void stRequestSaveChatGmUserCmd::set_chattype(::google::protobuf::uint32 value) {
  set_has_chattype();
  chattype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestSaveChatGmUserCmd.chattype)
}

// optional uint32 zoneid = 4;
inline bool stRequestSaveChatGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stRequestSaveChatGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stRequestSaveChatGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stRequestSaveChatGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stRequestSaveChatGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSaveChatGmUserCmd.zoneid)
  return zoneid_;
}
inline void stRequestSaveChatGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestSaveChatGmUserCmd.zoneid)
}

// optional uint32 countryid = 5;
inline bool stRequestSaveChatGmUserCmd::has_countryid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stRequestSaveChatGmUserCmd::set_has_countryid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stRequestSaveChatGmUserCmd::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stRequestSaveChatGmUserCmd::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 stRequestSaveChatGmUserCmd::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSaveChatGmUserCmd.countryid)
  return countryid_;
}
inline void stRequestSaveChatGmUserCmd::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestSaveChatGmUserCmd.countryid)
}

// optional uint32 sceneid = 6;
inline bool stRequestSaveChatGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stRequestSaveChatGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stRequestSaveChatGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stRequestSaveChatGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stRequestSaveChatGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSaveChatGmUserCmd.sceneid)
  return sceneid_;
}
inline void stRequestSaveChatGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestSaveChatGmUserCmd.sceneid)
}

// optional string rolename = 7;
inline bool stRequestSaveChatGmUserCmd::has_rolename() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stRequestSaveChatGmUserCmd::set_has_rolename() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stRequestSaveChatGmUserCmd::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stRequestSaveChatGmUserCmd::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& stRequestSaveChatGmUserCmd::rolename() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSaveChatGmUserCmd.rolename)
  return *rolename_;
}
inline void stRequestSaveChatGmUserCmd::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stRequestSaveChatGmUserCmd.rolename)
}
inline void stRequestSaveChatGmUserCmd::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stRequestSaveChatGmUserCmd.rolename)
}
inline void stRequestSaveChatGmUserCmd::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stRequestSaveChatGmUserCmd.rolename)
}
inline ::std::string* stRequestSaveChatGmUserCmd::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestSaveChatGmUserCmd.rolename)
  return rolename_;
}
inline ::std::string* stRequestSaveChatGmUserCmd::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stRequestSaveChatGmUserCmd::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestSaveChatGmUserCmd.rolename)
}

// optional uint32 num = 8;
inline bool stRequestSaveChatGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stRequestSaveChatGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stRequestSaveChatGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stRequestSaveChatGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stRequestSaveChatGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSaveChatGmUserCmd.num)
  return num_;
}
inline void stRequestSaveChatGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestSaveChatGmUserCmd.num)
}

// optional bytes data = 9;
inline bool stRequestSaveChatGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void stRequestSaveChatGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void stRequestSaveChatGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void stRequestSaveChatGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stRequestSaveChatGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestSaveChatGmUserCmd.data)
  return *data_;
}
inline void stRequestSaveChatGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stRequestSaveChatGmUserCmd.data)
}
inline void stRequestSaveChatGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stRequestSaveChatGmUserCmd.data)
}
inline void stRequestSaveChatGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stRequestSaveChatGmUserCmd.data)
}
inline ::std::string* stRequestSaveChatGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stRequestSaveChatGmUserCmd.data)
  return data_;
}
inline ::std::string* stRequestSaveChatGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stRequestSaveChatGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stRequestSaveChatGmUserCmd.data)
}

// -------------------------------------------------------------------

// stGameClientMessageBoxGmUserCmd

// optional string gmname = 1;
inline bool stGameClientMessageBoxGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stGameClientMessageBoxGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stGameClientMessageBoxGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientMessageBoxGmUserCmd.gmname)
  return *gmname_;
}
inline void stGameClientMessageBoxGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stGameClientMessageBoxGmUserCmd.gmname)
}
inline void stGameClientMessageBoxGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stGameClientMessageBoxGmUserCmd.gmname)
}
inline void stGameClientMessageBoxGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stGameClientMessageBoxGmUserCmd.gmname)
}
inline ::std::string* stGameClientMessageBoxGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stGameClientMessageBoxGmUserCmd.gmname)
  return gmname_;
}
inline ::std::string* stGameClientMessageBoxGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stGameClientMessageBoxGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stGameClientMessageBoxGmUserCmd.gmname)
}

// optional uint32 zoneid = 2;
inline bool stGameClientMessageBoxGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stGameClientMessageBoxGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stGameClientMessageBoxGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientMessageBoxGmUserCmd.zoneid)
  return zoneid_;
}
inline void stGameClientMessageBoxGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientMessageBoxGmUserCmd.zoneid)
}

// optional uint32 countryid = 3;
inline bool stGameClientMessageBoxGmUserCmd::has_countryid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stGameClientMessageBoxGmUserCmd::set_has_countryid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 stGameClientMessageBoxGmUserCmd::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientMessageBoxGmUserCmd.countryid)
  return countryid_;
}
inline void stGameClientMessageBoxGmUserCmd::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientMessageBoxGmUserCmd.countryid)
}

// optional uint32 sceneid = 4;
inline bool stGameClientMessageBoxGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stGameClientMessageBoxGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stGameClientMessageBoxGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientMessageBoxGmUserCmd.sceneid)
  return sceneid_;
}
inline void stGameClientMessageBoxGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientMessageBoxGmUserCmd.sceneid)
}

// optional uint32 num = 5;
inline bool stGameClientMessageBoxGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stGameClientMessageBoxGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stGameClientMessageBoxGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientMessageBoxGmUserCmd.num)
  return num_;
}
inline void stGameClientMessageBoxGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientMessageBoxGmUserCmd.num)
}

// optional bytes data = 6;
inline bool stGameClientMessageBoxGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stGameClientMessageBoxGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stGameClientMessageBoxGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stGameClientMessageBoxGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientMessageBoxGmUserCmd.data)
  return *data_;
}
inline void stGameClientMessageBoxGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stGameClientMessageBoxGmUserCmd.data)
}
inline void stGameClientMessageBoxGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stGameClientMessageBoxGmUserCmd.data)
}
inline void stGameClientMessageBoxGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stGameClientMessageBoxGmUserCmd.data)
}
inline ::std::string* stGameClientMessageBoxGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stGameClientMessageBoxGmUserCmd.data)
  return data_;
}
inline ::std::string* stGameClientMessageBoxGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stGameClientMessageBoxGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stGameClientMessageBoxGmUserCmd.data)
}

// -------------------------------------------------------------------

// stGameClientChatMessageGMUserCmd

// optional string gmname = 1;
inline bool stGameClientChatMessageGMUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stGameClientChatMessageGMUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stGameClientChatMessageGMUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.gmname)
  return *gmname_;
}
inline void stGameClientChatMessageGMUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.gmname)
}
inline void stGameClientChatMessageGMUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stGameClientChatMessageGMUserCmd.gmname)
}
inline void stGameClientChatMessageGMUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stGameClientChatMessageGMUserCmd.gmname)
}
inline ::std::string* stGameClientChatMessageGMUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stGameClientChatMessageGMUserCmd.gmname)
  return gmname_;
}
inline ::std::string* stGameClientChatMessageGMUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stGameClientChatMessageGMUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stGameClientChatMessageGMUserCmd.gmname)
}

// optional string username = 2;
inline bool stGameClientChatMessageGMUserCmd::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stGameClientChatMessageGMUserCmd::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& stGameClientChatMessageGMUserCmd::username() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.username)
  return *username_;
}
inline void stGameClientChatMessageGMUserCmd::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.username)
}
inline void stGameClientChatMessageGMUserCmd::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stGameClientChatMessageGMUserCmd.username)
}
inline void stGameClientChatMessageGMUserCmd::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stGameClientChatMessageGMUserCmd.username)
}
inline ::std::string* stGameClientChatMessageGMUserCmd::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stGameClientChatMessageGMUserCmd.username)
  return username_;
}
inline ::std::string* stGameClientChatMessageGMUserCmd::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stGameClientChatMessageGMUserCmd::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stGameClientChatMessageGMUserCmd.username)
}

// optional uint32 zoneid = 3;
inline bool stGameClientChatMessageGMUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stGameClientChatMessageGMUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stGameClientChatMessageGMUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.zoneid)
  return zoneid_;
}
inline void stGameClientChatMessageGMUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.zoneid)
}

// optional uint32 countryid = 4;
inline bool stGameClientChatMessageGMUserCmd::has_countryid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_countryid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stGameClientChatMessageGMUserCmd::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 stGameClientChatMessageGMUserCmd::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.countryid)
  return countryid_;
}
inline void stGameClientChatMessageGMUserCmd::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.countryid)
}

// optional uint32 sceneid = 5;
inline bool stGameClientChatMessageGMUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stGameClientChatMessageGMUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stGameClientChatMessageGMUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.sceneid)
  return sceneid_;
}
inline void stGameClientChatMessageGMUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.sceneid)
}

// optional uint32 byChatType = 6;
inline bool stGameClientChatMessageGMUserCmd::has_bychattype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_bychattype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_bychattype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stGameClientChatMessageGMUserCmd::clear_bychattype() {
  bychattype_ = 0u;
  clear_has_bychattype();
}
inline ::google::protobuf::uint32 stGameClientChatMessageGMUserCmd::bychattype() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.byChatType)
  return bychattype_;
}
inline void stGameClientChatMessageGMUserCmd::set_bychattype(::google::protobuf::uint32 value) {
  set_has_bychattype();
  bychattype_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.byChatType)
}

// optional uint32 byChatPos = 7;
inline bool stGameClientChatMessageGMUserCmd::has_bychatpos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_bychatpos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_bychatpos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stGameClientChatMessageGMUserCmd::clear_bychatpos() {
  bychatpos_ = 0u;
  clear_has_bychatpos();
}
inline ::google::protobuf::uint32 stGameClientChatMessageGMUserCmd::bychatpos() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.byChatPos)
  return bychatpos_;
}
inline void stGameClientChatMessageGMUserCmd::set_bychatpos(::google::protobuf::uint32 value) {
  set_has_bychatpos();
  bychatpos_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.byChatPos)
}

// optional uint32 color = 8;
inline bool stGameClientChatMessageGMUserCmd::has_color() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_color() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_color() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stGameClientChatMessageGMUserCmd::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 stGameClientChatMessageGMUserCmd::color() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.color)
  return color_;
}
inline void stGameClientChatMessageGMUserCmd::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.color)
}

// optional uint32 bySize = 9;
inline bool stGameClientChatMessageGMUserCmd::has_bysize() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_bysize() {
  _has_bits_[0] |= 0x00000100u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_bysize() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void stGameClientChatMessageGMUserCmd::clear_bysize() {
  bysize_ = 0u;
  clear_has_bysize();
}
inline ::google::protobuf::uint32 stGameClientChatMessageGMUserCmd::bysize() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.bySize)
  return bysize_;
}
inline void stGameClientChatMessageGMUserCmd::set_bysize(::google::protobuf::uint32 value) {
  set_has_bysize();
  bysize_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.bySize)
}

// optional bytes szInfo = 10;
inline bool stGameClientChatMessageGMUserCmd::has_szinfo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void stGameClientChatMessageGMUserCmd::set_has_szinfo() {
  _has_bits_[0] |= 0x00000200u;
}
inline void stGameClientChatMessageGMUserCmd::clear_has_szinfo() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void stGameClientChatMessageGMUserCmd::clear_szinfo() {
  if (szinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinfo_->clear();
  }
  clear_has_szinfo();
}
inline const ::std::string& stGameClientChatMessageGMUserCmd::szinfo() const {
  // @@protoc_insertion_point(field_get:Pmd.stGameClientChatMessageGMUserCmd.szInfo)
  return *szinfo_;
}
inline void stGameClientChatMessageGMUserCmd::set_szinfo(const ::std::string& value) {
  set_has_szinfo();
  if (szinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinfo_ = new ::std::string;
  }
  szinfo_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stGameClientChatMessageGMUserCmd.szInfo)
}
inline void stGameClientChatMessageGMUserCmd::set_szinfo(const char* value) {
  set_has_szinfo();
  if (szinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinfo_ = new ::std::string;
  }
  szinfo_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stGameClientChatMessageGMUserCmd.szInfo)
}
inline void stGameClientChatMessageGMUserCmd::set_szinfo(const void* value, size_t size) {
  set_has_szinfo();
  if (szinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinfo_ = new ::std::string;
  }
  szinfo_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stGameClientChatMessageGMUserCmd.szInfo)
}
inline ::std::string* stGameClientChatMessageGMUserCmd::mutable_szinfo() {
  set_has_szinfo();
  if (szinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    szinfo_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stGameClientChatMessageGMUserCmd.szInfo)
  return szinfo_;
}
inline ::std::string* stGameClientChatMessageGMUserCmd::release_szinfo() {
  clear_has_szinfo();
  if (szinfo_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = szinfo_;
    szinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stGameClientChatMessageGMUserCmd::set_allocated_szinfo(::std::string* szinfo) {
  if (szinfo_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete szinfo_;
  }
  if (szinfo) {
    set_has_szinfo();
    szinfo_ = szinfo;
  } else {
    clear_has_szinfo();
    szinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stGameClientChatMessageGMUserCmd.szInfo)
}

// -------------------------------------------------------------------

// stRequestGameClientMessageConfigGmUserCmd

// optional uint32 keyID = 1;
inline bool stRequestGameClientMessageConfigGmUserCmd::has_keyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestGameClientMessageConfigGmUserCmd::set_has_keyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestGameClientMessageConfigGmUserCmd::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestGameClientMessageConfigGmUserCmd::clear_keyid() {
  keyid_ = 0u;
  clear_has_keyid();
}
inline ::google::protobuf::uint32 stRequestGameClientMessageConfigGmUserCmd::keyid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestGameClientMessageConfigGmUserCmd.keyID)
  return keyid_;
}
inline void stRequestGameClientMessageConfigGmUserCmd::set_keyid(::google::protobuf::uint32 value) {
  set_has_keyid();
  keyid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestGameClientMessageConfigGmUserCmd.keyID)
}

// -------------------------------------------------------------------

// stReturnGameClientMessageConfigGmUserCmd

// optional uint32 keyID = 1;
inline bool stReturnGameClientMessageConfigGmUserCmd::has_keyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnGameClientMessageConfigGmUserCmd::set_has_keyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnGameClientMessageConfigGmUserCmd::clear_has_keyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnGameClientMessageConfigGmUserCmd::clear_keyid() {
  keyid_ = 0u;
  clear_has_keyid();
}
inline ::google::protobuf::uint32 stReturnGameClientMessageConfigGmUserCmd::keyid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnGameClientMessageConfigGmUserCmd.keyID)
  return keyid_;
}
inline void stReturnGameClientMessageConfigGmUserCmd::set_keyid(::google::protobuf::uint32 value) {
  set_has_keyid();
  keyid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnGameClientMessageConfigGmUserCmd.keyID)
}

// optional uint32 num = 2;
inline bool stReturnGameClientMessageConfigGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnGameClientMessageConfigGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnGameClientMessageConfigGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnGameClientMessageConfigGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnGameClientMessageConfigGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnGameClientMessageConfigGmUserCmd.num)
  return num_;
}
inline void stReturnGameClientMessageConfigGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnGameClientMessageConfigGmUserCmd.num)
}

// optional bytes data = 3;
inline bool stReturnGameClientMessageConfigGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnGameClientMessageConfigGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnGameClientMessageConfigGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnGameClientMessageConfigGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stReturnGameClientMessageConfigGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnGameClientMessageConfigGmUserCmd.data)
  return *data_;
}
inline void stReturnGameClientMessageConfigGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnGameClientMessageConfigGmUserCmd.data)
}
inline void stReturnGameClientMessageConfigGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnGameClientMessageConfigGmUserCmd.data)
}
inline void stReturnGameClientMessageConfigGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnGameClientMessageConfigGmUserCmd.data)
}
inline ::std::string* stReturnGameClientMessageConfigGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnGameClientMessageConfigGmUserCmd.data)
  return data_;
}
inline ::std::string* stReturnGameClientMessageConfigGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnGameClientMessageConfigGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnGameClientMessageConfigGmUserCmd.data)
}

// -------------------------------------------------------------------

// stPlayerSatisfactionGmUserCmd

// optional string gmname = 1;
inline bool stPlayerSatisfactionGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stPlayerSatisfactionGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stPlayerSatisfactionGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stPlayerSatisfactionGmUserCmd.gmname)
  return *gmname_;
}
inline void stPlayerSatisfactionGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stPlayerSatisfactionGmUserCmd.gmname)
}
inline void stPlayerSatisfactionGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stPlayerSatisfactionGmUserCmd.gmname)
}
inline void stPlayerSatisfactionGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stPlayerSatisfactionGmUserCmd.gmname)
}
inline ::std::string* stPlayerSatisfactionGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stPlayerSatisfactionGmUserCmd.gmname)
  return gmname_;
}
inline ::std::string* stPlayerSatisfactionGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stPlayerSatisfactionGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stPlayerSatisfactionGmUserCmd.gmname)
}

// optional string charname = 2;
inline bool stPlayerSatisfactionGmUserCmd::has_charname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stPlayerSatisfactionGmUserCmd::set_has_charname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_has_charname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_charname() {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_->clear();
  }
  clear_has_charname();
}
inline const ::std::string& stPlayerSatisfactionGmUserCmd::charname() const {
  // @@protoc_insertion_point(field_get:Pmd.stPlayerSatisfactionGmUserCmd.charname)
  return *charname_;
}
inline void stPlayerSatisfactionGmUserCmd::set_charname(const ::std::string& value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stPlayerSatisfactionGmUserCmd.charname)
}
inline void stPlayerSatisfactionGmUserCmd::set_charname(const char* value) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stPlayerSatisfactionGmUserCmd.charname)
}
inline void stPlayerSatisfactionGmUserCmd::set_charname(const char* value, size_t size) {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  charname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stPlayerSatisfactionGmUserCmd.charname)
}
inline ::std::string* stPlayerSatisfactionGmUserCmd::mutable_charname() {
  set_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    charname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stPlayerSatisfactionGmUserCmd.charname)
  return charname_;
}
inline ::std::string* stPlayerSatisfactionGmUserCmd::release_charname() {
  clear_has_charname();
  if (charname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = charname_;
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stPlayerSatisfactionGmUserCmd::set_allocated_charname(::std::string* charname) {
  if (charname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete charname_;
  }
  if (charname) {
    set_has_charname();
    charname_ = charname;
  } else {
    clear_has_charname();
    charname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stPlayerSatisfactionGmUserCmd.charname)
}

// optional uint32 charid = 3;
inline bool stPlayerSatisfactionGmUserCmd::has_charid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stPlayerSatisfactionGmUserCmd::set_has_charid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_has_charid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 stPlayerSatisfactionGmUserCmd::charid() const {
  // @@protoc_insertion_point(field_get:Pmd.stPlayerSatisfactionGmUserCmd.charid)
  return charid_;
}
inline void stPlayerSatisfactionGmUserCmd::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPlayerSatisfactionGmUserCmd.charid)
}

// optional uint32 zoneid = 4;
inline bool stPlayerSatisfactionGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stPlayerSatisfactionGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stPlayerSatisfactionGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stPlayerSatisfactionGmUserCmd.zoneid)
  return zoneid_;
}
inline void stPlayerSatisfactionGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPlayerSatisfactionGmUserCmd.zoneid)
}

// optional uint32 countryid = 5;
inline bool stPlayerSatisfactionGmUserCmd::has_countryid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stPlayerSatisfactionGmUserCmd::set_has_countryid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 stPlayerSatisfactionGmUserCmd::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stPlayerSatisfactionGmUserCmd.countryid)
  return countryid_;
}
inline void stPlayerSatisfactionGmUserCmd::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPlayerSatisfactionGmUserCmd.countryid)
}

// optional uint32 sceneid = 6;
inline bool stPlayerSatisfactionGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stPlayerSatisfactionGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stPlayerSatisfactionGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stPlayerSatisfactionGmUserCmd.sceneid)
  return sceneid_;
}
inline void stPlayerSatisfactionGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPlayerSatisfactionGmUserCmd.sceneid)
}

// optional uint32 questionid = 7;
inline bool stPlayerSatisfactionGmUserCmd::has_questionid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stPlayerSatisfactionGmUserCmd::set_has_questionid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_has_questionid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_questionid() {
  questionid_ = 0u;
  clear_has_questionid();
}
inline ::google::protobuf::uint32 stPlayerSatisfactionGmUserCmd::questionid() const {
  // @@protoc_insertion_point(field_get:Pmd.stPlayerSatisfactionGmUserCmd.questionid)
  return questionid_;
}
inline void stPlayerSatisfactionGmUserCmd::set_questionid(::google::protobuf::uint32 value) {
  set_has_questionid();
  questionid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPlayerSatisfactionGmUserCmd.questionid)
}

// optional uint32 satisfaction = 8;
inline bool stPlayerSatisfactionGmUserCmd::has_satisfaction() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void stPlayerSatisfactionGmUserCmd::set_has_satisfaction() {
  _has_bits_[0] |= 0x00000080u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_has_satisfaction() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_satisfaction() {
  satisfaction_ = 0u;
  clear_has_satisfaction();
}
inline ::google::protobuf::uint32 stPlayerSatisfactionGmUserCmd::satisfaction() const {
  // @@protoc_insertion_point(field_get:Pmd.stPlayerSatisfactionGmUserCmd.satisfaction)
  return satisfaction_;
}
inline void stPlayerSatisfactionGmUserCmd::set_satisfaction(::google::protobuf::uint32 value) {
  set_has_satisfaction();
  satisfaction_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stPlayerSatisfactionGmUserCmd.satisfaction)
}

// optional string desc = 9;
inline bool stPlayerSatisfactionGmUserCmd::has_desc() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void stPlayerSatisfactionGmUserCmd::set_has_desc() {
  _has_bits_[0] |= 0x00000100u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_has_desc() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void stPlayerSatisfactionGmUserCmd::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& stPlayerSatisfactionGmUserCmd::desc() const {
  // @@protoc_insertion_point(field_get:Pmd.stPlayerSatisfactionGmUserCmd.desc)
  return *desc_;
}
inline void stPlayerSatisfactionGmUserCmd::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stPlayerSatisfactionGmUserCmd.desc)
}
inline void stPlayerSatisfactionGmUserCmd::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stPlayerSatisfactionGmUserCmd.desc)
}
inline void stPlayerSatisfactionGmUserCmd::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stPlayerSatisfactionGmUserCmd.desc)
}
inline ::std::string* stPlayerSatisfactionGmUserCmd::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stPlayerSatisfactionGmUserCmd.desc)
  return desc_;
}
inline ::std::string* stPlayerSatisfactionGmUserCmd::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stPlayerSatisfactionGmUserCmd::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stPlayerSatisfactionGmUserCmd.desc)
}

// -------------------------------------------------------------------

// stRequestMyQuestionGmUserCmd

// optional uint32 userid = 1;
inline bool stRequestMyQuestionGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestMyQuestionGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestMyQuestionGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestMyQuestionGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stRequestMyQuestionGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestMyQuestionGmUserCmd.userid)
  return userid_;
}
inline void stRequestMyQuestionGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestMyQuestionGmUserCmd.userid)
}

// -------------------------------------------------------------------

// stRequestQuestionSubmitableGmUserCmd

// optional uint32 userid = 1;
inline bool stRequestQuestionSubmitableGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestQuestionSubmitableGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestQuestionSubmitableGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestQuestionSubmitableGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stRequestQuestionSubmitableGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestQuestionSubmitableGmUserCmd.userid)
  return userid_;
}
inline void stRequestQuestionSubmitableGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestQuestionSubmitableGmUserCmd.userid)
}

// -------------------------------------------------------------------

// stVerifyOnlineQaGmUserCmd

// optional uint32 stamp = 1;
inline bool stVerifyOnlineQaGmUserCmd::has_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stVerifyOnlineQaGmUserCmd::set_has_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_has_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_stamp() {
  stamp_ = 0u;
  clear_has_stamp();
}
inline ::google::protobuf::uint32 stVerifyOnlineQaGmUserCmd::stamp() const {
  // @@protoc_insertion_point(field_get:Pmd.stVerifyOnlineQaGmUserCmd.stamp)
  return stamp_;
}
inline void stVerifyOnlineQaGmUserCmd::set_stamp(::google::protobuf::uint32 value) {
  set_has_stamp();
  stamp_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stVerifyOnlineQaGmUserCmd.stamp)
}

// optional uint32 zoneid = 2;
inline bool stVerifyOnlineQaGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stVerifyOnlineQaGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stVerifyOnlineQaGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stVerifyOnlineQaGmUserCmd.zoneid)
  return zoneid_;
}
inline void stVerifyOnlineQaGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stVerifyOnlineQaGmUserCmd.zoneid)
}

// optional uint32 sceneid = 3;
inline bool stVerifyOnlineQaGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stVerifyOnlineQaGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stVerifyOnlineQaGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stVerifyOnlineQaGmUserCmd.sceneid)
  return sceneid_;
}
inline void stVerifyOnlineQaGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stVerifyOnlineQaGmUserCmd.sceneid)
}

// optional uint32 countryid = 4;
inline bool stVerifyOnlineQaGmUserCmd::has_countryid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stVerifyOnlineQaGmUserCmd::set_has_countryid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 stVerifyOnlineQaGmUserCmd::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stVerifyOnlineQaGmUserCmd.countryid)
  return countryid_;
}
inline void stVerifyOnlineQaGmUserCmd::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stVerifyOnlineQaGmUserCmd.countryid)
}

// optional string gmname = 5;
inline bool stVerifyOnlineQaGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stVerifyOnlineQaGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stVerifyOnlineQaGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stVerifyOnlineQaGmUserCmd.gmname)
  return *gmname_;
}
inline void stVerifyOnlineQaGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stVerifyOnlineQaGmUserCmd.gmname)
}
inline void stVerifyOnlineQaGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stVerifyOnlineQaGmUserCmd.gmname)
}
inline void stVerifyOnlineQaGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stVerifyOnlineQaGmUserCmd.gmname)
}
inline ::std::string* stVerifyOnlineQaGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stVerifyOnlineQaGmUserCmd.gmname)
  return gmname_;
}
inline ::std::string* stVerifyOnlineQaGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stVerifyOnlineQaGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stVerifyOnlineQaGmUserCmd.gmname)
}

// optional string username = 6;
inline bool stVerifyOnlineQaGmUserCmd::has_username() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stVerifyOnlineQaGmUserCmd::set_has_username() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stVerifyOnlineQaGmUserCmd::clear_username() {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& stVerifyOnlineQaGmUserCmd::username() const {
  // @@protoc_insertion_point(field_get:Pmd.stVerifyOnlineQaGmUserCmd.username)
  return *username_;
}
inline void stVerifyOnlineQaGmUserCmd::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stVerifyOnlineQaGmUserCmd.username)
}
inline void stVerifyOnlineQaGmUserCmd::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stVerifyOnlineQaGmUserCmd.username)
}
inline void stVerifyOnlineQaGmUserCmd::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stVerifyOnlineQaGmUserCmd.username)
}
inline ::std::string* stVerifyOnlineQaGmUserCmd::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stVerifyOnlineQaGmUserCmd.username)
  return username_;
}
inline ::std::string* stVerifyOnlineQaGmUserCmd::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stVerifyOnlineQaGmUserCmd::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stVerifyOnlineQaGmUserCmd.username)
}

// -------------------------------------------------------------------

// stNewGameClientMessageBoxGmUserCmd

// optional string gmname = 1;
inline bool stNewGameClientMessageBoxGmUserCmd::has_gmname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_has_gmname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_has_gmname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_gmname() {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_->clear();
  }
  clear_has_gmname();
}
inline const ::std::string& stNewGameClientMessageBoxGmUserCmd::gmname() const {
  // @@protoc_insertion_point(field_get:Pmd.stNewGameClientMessageBoxGmUserCmd.gmname)
  return *gmname_;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_gmname(const ::std::string& value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stNewGameClientMessageBoxGmUserCmd.gmname)
}
inline void stNewGameClientMessageBoxGmUserCmd::set_gmname(const char* value) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stNewGameClientMessageBoxGmUserCmd.gmname)
}
inline void stNewGameClientMessageBoxGmUserCmd::set_gmname(const char* value, size_t size) {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  gmname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stNewGameClientMessageBoxGmUserCmd.gmname)
}
inline ::std::string* stNewGameClientMessageBoxGmUserCmd::mutable_gmname() {
  set_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stNewGameClientMessageBoxGmUserCmd.gmname)
  return gmname_;
}
inline ::std::string* stNewGameClientMessageBoxGmUserCmd::release_gmname() {
  clear_has_gmname();
  if (gmname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmname_;
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stNewGameClientMessageBoxGmUserCmd::set_allocated_gmname(::std::string* gmname) {
  if (gmname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmname_;
  }
  if (gmname) {
    set_has_gmname();
    gmname_ = gmname;
  } else {
    clear_has_gmname();
    gmname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stNewGameClientMessageBoxGmUserCmd.gmname)
}

// optional uint32 zoneid = 2;
inline bool stNewGameClientMessageBoxGmUserCmd::has_zoneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_has_zoneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_has_zoneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_zoneid() {
  zoneid_ = 0u;
  clear_has_zoneid();
}
inline ::google::protobuf::uint32 stNewGameClientMessageBoxGmUserCmd::zoneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stNewGameClientMessageBoxGmUserCmd.zoneid)
  return zoneid_;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_zoneid(::google::protobuf::uint32 value) {
  set_has_zoneid();
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stNewGameClientMessageBoxGmUserCmd.zoneid)
}

// optional uint32 countryid = 3;
inline bool stNewGameClientMessageBoxGmUserCmd::has_countryid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_has_countryid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_has_countryid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_countryid() {
  countryid_ = 0u;
  clear_has_countryid();
}
inline ::google::protobuf::uint32 stNewGameClientMessageBoxGmUserCmd::countryid() const {
  // @@protoc_insertion_point(field_get:Pmd.stNewGameClientMessageBoxGmUserCmd.countryid)
  return countryid_;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_countryid(::google::protobuf::uint32 value) {
  set_has_countryid();
  countryid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stNewGameClientMessageBoxGmUserCmd.countryid)
}

// optional uint32 sceneid = 4;
inline bool stNewGameClientMessageBoxGmUserCmd::has_sceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_has_sceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_has_sceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_sceneid() {
  sceneid_ = 0u;
  clear_has_sceneid();
}
inline ::google::protobuf::uint32 stNewGameClientMessageBoxGmUserCmd::sceneid() const {
  // @@protoc_insertion_point(field_get:Pmd.stNewGameClientMessageBoxGmUserCmd.sceneid)
  return sceneid_;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_sceneid(::google::protobuf::uint32 value) {
  set_has_sceneid();
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stNewGameClientMessageBoxGmUserCmd.sceneid)
}

// optional uint32 num = 5;
inline bool stNewGameClientMessageBoxGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stNewGameClientMessageBoxGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stNewGameClientMessageBoxGmUserCmd.num)
  return num_;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stNewGameClientMessageBoxGmUserCmd.num)
}

// optional uint32 type = 6;
inline bool stNewGameClientMessageBoxGmUserCmd::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 stNewGameClientMessageBoxGmUserCmd::type() const {
  // @@protoc_insertion_point(field_get:Pmd.stNewGameClientMessageBoxGmUserCmd.type)
  return type_;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stNewGameClientMessageBoxGmUserCmd.type)
}

// optional bytes data = 7;
inline bool stNewGameClientMessageBoxGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void stNewGameClientMessageBoxGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stNewGameClientMessageBoxGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stNewGameClientMessageBoxGmUserCmd.data)
  return *data_;
}
inline void stNewGameClientMessageBoxGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stNewGameClientMessageBoxGmUserCmd.data)
}
inline void stNewGameClientMessageBoxGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stNewGameClientMessageBoxGmUserCmd.data)
}
inline void stNewGameClientMessageBoxGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stNewGameClientMessageBoxGmUserCmd.data)
}
inline ::std::string* stNewGameClientMessageBoxGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stNewGameClientMessageBoxGmUserCmd.data)
  return data_;
}
inline ::std::string* stNewGameClientMessageBoxGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stNewGameClientMessageBoxGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stNewGameClientMessageBoxGmUserCmd.data)
}

// -------------------------------------------------------------------

// stRequestPreProcessQuestionGmUserCmd

// optional uint32 id = 1;
inline bool stRequestPreProcessQuestionGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestPreProcessQuestionGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestPreProcessQuestionGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestPreProcessQuestionGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stRequestPreProcessQuestionGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestPreProcessQuestionGmUserCmd.id)
  return id_;
}
inline void stRequestPreProcessQuestionGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestPreProcessQuestionGmUserCmd.id)
}

// optional uint32 userid = 2;
inline bool stRequestPreProcessQuestionGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stRequestPreProcessQuestionGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stRequestPreProcessQuestionGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stRequestPreProcessQuestionGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stRequestPreProcessQuestionGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestPreProcessQuestionGmUserCmd.userid)
  return userid_;
}
inline void stRequestPreProcessQuestionGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestPreProcessQuestionGmUserCmd.userid)
}

// -------------------------------------------------------------------

// stReturnPreProcessQuestionGmUserCmd

// optional .Pmd.QuestionBaseData head = 1;
inline bool stReturnPreProcessQuestionGmUserCmd::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_head() {
  if (head_ != NULL) head_->::Pmd::QuestionBaseData::Clear();
  clear_has_head();
}
inline const ::Pmd::QuestionBaseData& stReturnPreProcessQuestionGmUserCmd::head() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnPreProcessQuestionGmUserCmd.head)
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::Pmd::QuestionBaseData* stReturnPreProcessQuestionGmUserCmd::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::Pmd::QuestionBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnPreProcessQuestionGmUserCmd.head)
  return head_;
}
inline ::Pmd::QuestionBaseData* stReturnPreProcessQuestionGmUserCmd::release_head() {
  clear_has_head();
  ::Pmd::QuestionBaseData* temp = head_;
  head_ = NULL;
  return temp;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_allocated_head(::Pmd::QuestionBaseData* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnPreProcessQuestionGmUserCmd.head)
}

// optional string desc = 2;
inline bool stReturnPreProcessQuestionGmUserCmd::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& stReturnPreProcessQuestionGmUserCmd::desc() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnPreProcessQuestionGmUserCmd.desc)
  return *desc_;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnPreProcessQuestionGmUserCmd.desc)
}
inline void stReturnPreProcessQuestionGmUserCmd::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnPreProcessQuestionGmUserCmd.desc)
}
inline void stReturnPreProcessQuestionGmUserCmd::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnPreProcessQuestionGmUserCmd.desc)
}
inline ::std::string* stReturnPreProcessQuestionGmUserCmd::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnPreProcessQuestionGmUserCmd.desc)
  return desc_;
}
inline ::std::string* stReturnPreProcessQuestionGmUserCmd::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnPreProcessQuestionGmUserCmd::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnPreProcessQuestionGmUserCmd.desc)
}

// optional uint32 seq = 3;
inline bool stReturnPreProcessQuestionGmUserCmd::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 stReturnPreProcessQuestionGmUserCmd::seq() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnPreProcessQuestionGmUserCmd.seq)
  return seq_;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnPreProcessQuestionGmUserCmd.seq)
}

// optional uint32 gmid = 4;
inline bool stReturnPreProcessQuestionGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stReturnPreProcessQuestionGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnPreProcessQuestionGmUserCmd.gmid)
  return gmid_;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnPreProcessQuestionGmUserCmd.gmid)
}

// optional uint32 num = 5;
inline bool stReturnPreProcessQuestionGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnPreProcessQuestionGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnPreProcessQuestionGmUserCmd.num)
  return num_;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnPreProcessQuestionGmUserCmd.num)
}

// optional bytes data = 6;
inline bool stReturnPreProcessQuestionGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stReturnPreProcessQuestionGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stReturnPreProcessQuestionGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnPreProcessQuestionGmUserCmd.data)
  return *data_;
}
inline void stReturnPreProcessQuestionGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnPreProcessQuestionGmUserCmd.data)
}
inline void stReturnPreProcessQuestionGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnPreProcessQuestionGmUserCmd.data)
}
inline void stReturnPreProcessQuestionGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnPreProcessQuestionGmUserCmd.data)
}
inline ::std::string* stReturnPreProcessQuestionGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnPreProcessQuestionGmUserCmd.data)
  return data_;
}
inline ::std::string* stReturnPreProcessQuestionGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnPreProcessQuestionGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnPreProcessQuestionGmUserCmd.data)
}

// -------------------------------------------------------------------

// stReturnNowPreProcessQusetGmUserCmd

// optional uint32 id = 1;
inline bool stReturnNowPreProcessQusetGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnNowPreProcessQusetGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnNowPreProcessQusetGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnNowPreProcessQusetGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stReturnNowPreProcessQusetGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnNowPreProcessQusetGmUserCmd.id)
  return id_;
}
inline void stReturnNowPreProcessQusetGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnNowPreProcessQusetGmUserCmd.id)
}

// optional uint32 userid = 2;
inline bool stReturnNowPreProcessQusetGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnNowPreProcessQusetGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnNowPreProcessQusetGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnNowPreProcessQusetGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stReturnNowPreProcessQusetGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnNowPreProcessQusetGmUserCmd.userid)
  return userid_;
}
inline void stReturnNowPreProcessQusetGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnNowPreProcessQusetGmUserCmd.userid)
}

// -------------------------------------------------------------------

// stDeleteProcessedQuestionGmUserCmd

// optional uint32 id = 1;
inline bool stDeleteProcessedQuestionGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stDeleteProcessedQuestionGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stDeleteProcessedQuestionGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stDeleteProcessedQuestionGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stDeleteProcessedQuestionGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stDeleteProcessedQuestionGmUserCmd.id)
  return id_;
}
inline void stDeleteProcessedQuestionGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDeleteProcessedQuestionGmUserCmd.id)
}

// optional uint32 userid = 2;
inline bool stDeleteProcessedQuestionGmUserCmd::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stDeleteProcessedQuestionGmUserCmd::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stDeleteProcessedQuestionGmUserCmd::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stDeleteProcessedQuestionGmUserCmd::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 stDeleteProcessedQuestionGmUserCmd::userid() const {
  // @@protoc_insertion_point(field_get:Pmd.stDeleteProcessedQuestionGmUserCmd.userid)
  return userid_;
}
inline void stDeleteProcessedQuestionGmUserCmd::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stDeleteProcessedQuestionGmUserCmd.userid)
}

// -------------------------------------------------------------------

// stRequestOneQuestionGmUserCmd

// optional uint32 gmid = 1;
inline bool stRequestOneQuestionGmUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestOneQuestionGmUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestOneQuestionGmUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestOneQuestionGmUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stRequestOneQuestionGmUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestOneQuestionGmUserCmd.gmid)
  return gmid_;
}
inline void stRequestOneQuestionGmUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestOneQuestionGmUserCmd.gmid)
}

// -------------------------------------------------------------------

// stReturnOneQuestionGmUserCmd

// optional uint32 flag = 1;
inline bool stReturnOneQuestionGmUserCmd::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnOneQuestionGmUserCmd::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnOneQuestionGmUserCmd::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnOneQuestionGmUserCmd::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 stReturnOneQuestionGmUserCmd::flag() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnOneQuestionGmUserCmd.flag)
  return flag_;
}
inline void stReturnOneQuestionGmUserCmd::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnOneQuestionGmUserCmd.flag)
}

// optional .Pmd.QuestionBaseData head = 2;
inline bool stReturnOneQuestionGmUserCmd::has_head() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnOneQuestionGmUserCmd::set_has_head() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnOneQuestionGmUserCmd::clear_has_head() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnOneQuestionGmUserCmd::clear_head() {
  if (head_ != NULL) head_->::Pmd::QuestionBaseData::Clear();
  clear_has_head();
}
inline const ::Pmd::QuestionBaseData& stReturnOneQuestionGmUserCmd::head() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnOneQuestionGmUserCmd.head)
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::Pmd::QuestionBaseData* stReturnOneQuestionGmUserCmd::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::Pmd::QuestionBaseData;
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnOneQuestionGmUserCmd.head)
  return head_;
}
inline ::Pmd::QuestionBaseData* stReturnOneQuestionGmUserCmd::release_head() {
  clear_has_head();
  ::Pmd::QuestionBaseData* temp = head_;
  head_ = NULL;
  return temp;
}
inline void stReturnOneQuestionGmUserCmd::set_allocated_head(::Pmd::QuestionBaseData* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnOneQuestionGmUserCmd.head)
}

// optional string desc = 3;
inline bool stReturnOneQuestionGmUserCmd::has_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnOneQuestionGmUserCmd::set_has_desc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnOneQuestionGmUserCmd::clear_has_desc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnOneQuestionGmUserCmd::clear_desc() {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& stReturnOneQuestionGmUserCmd::desc() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnOneQuestionGmUserCmd.desc)
  return *desc_;
}
inline void stReturnOneQuestionGmUserCmd::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnOneQuestionGmUserCmd.desc)
}
inline void stReturnOneQuestionGmUserCmd::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnOneQuestionGmUserCmd.desc)
}
inline void stReturnOneQuestionGmUserCmd::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnOneQuestionGmUserCmd.desc)
}
inline ::std::string* stReturnOneQuestionGmUserCmd::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnOneQuestionGmUserCmd.desc)
  return desc_;
}
inline ::std::string* stReturnOneQuestionGmUserCmd::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnOneQuestionGmUserCmd::set_allocated_desc(::std::string* desc) {
  if (desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete desc_;
  }
  if (desc) {
    set_has_desc();
    desc_ = desc;
  } else {
    clear_has_desc();
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnOneQuestionGmUserCmd.desc)
}

// optional uint32 seq = 4;
inline bool stReturnOneQuestionGmUserCmd::has_seq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stReturnOneQuestionGmUserCmd::set_has_seq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stReturnOneQuestionGmUserCmd::clear_has_seq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stReturnOneQuestionGmUserCmd::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 stReturnOneQuestionGmUserCmd::seq() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnOneQuestionGmUserCmd.seq)
  return seq_;
}
inline void stReturnOneQuestionGmUserCmd::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnOneQuestionGmUserCmd.seq)
}

// optional uint32 num = 5;
inline bool stReturnOneQuestionGmUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stReturnOneQuestionGmUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stReturnOneQuestionGmUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stReturnOneQuestionGmUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stReturnOneQuestionGmUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnOneQuestionGmUserCmd.num)
  return num_;
}
inline void stReturnOneQuestionGmUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnOneQuestionGmUserCmd.num)
}

// optional bytes data = 6;
inline bool stReturnOneQuestionGmUserCmd::has_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void stReturnOneQuestionGmUserCmd::set_has_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void stReturnOneQuestionGmUserCmd::clear_has_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void stReturnOneQuestionGmUserCmd::clear_data() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& stReturnOneQuestionGmUserCmd::data() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnOneQuestionGmUserCmd.data)
  return *data_;
}
inline void stReturnOneQuestionGmUserCmd::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stReturnOneQuestionGmUserCmd.data)
}
inline void stReturnOneQuestionGmUserCmd::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stReturnOneQuestionGmUserCmd.data)
}
inline void stReturnOneQuestionGmUserCmd::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stReturnOneQuestionGmUserCmd.data)
}
inline ::std::string* stReturnOneQuestionGmUserCmd::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stReturnOneQuestionGmUserCmd.data)
  return data_;
}
inline ::std::string* stReturnOneQuestionGmUserCmd::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stReturnOneQuestionGmUserCmd::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stReturnOneQuestionGmUserCmd.data)
}

// -------------------------------------------------------------------

// stRequestResetGmWorkStateGmUserCmd

// optional uint32 id = 1;
inline bool stRequestResetGmWorkStateGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stRequestResetGmWorkStateGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestResetGmWorkStateGmUserCmd.id)
  return id_;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestResetGmWorkStateGmUserCmd.id)
}

// optional uint32 qMaxNum = 2;
inline bool stRequestResetGmWorkStateGmUserCmd::has_qmaxnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_has_qmaxnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_has_qmaxnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_qmaxnum() {
  qmaxnum_ = 0u;
  clear_has_qmaxnum();
}
inline ::google::protobuf::uint32 stRequestResetGmWorkStateGmUserCmd::qmaxnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestResetGmWorkStateGmUserCmd.qMaxNum)
  return qmaxnum_;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_qmaxnum(::google::protobuf::uint32 value) {
  set_has_qmaxnum();
  qmaxnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestResetGmWorkStateGmUserCmd.qMaxNum)
}

// optional uint32 autoRecv = 3;
inline bool stRequestResetGmWorkStateGmUserCmd::has_autorecv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_has_autorecv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_has_autorecv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_autorecv() {
  autorecv_ = 0u;
  clear_has_autorecv();
}
inline ::google::protobuf::uint32 stRequestResetGmWorkStateGmUserCmd::autorecv() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestResetGmWorkStateGmUserCmd.autoRecv)
  return autorecv_;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_autorecv(::google::protobuf::uint32 value) {
  set_has_autorecv();
  autorecv_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestResetGmWorkStateGmUserCmd.autoRecv)
}

// optional uint32 workState = 4;
inline bool stRequestResetGmWorkStateGmUserCmd::has_workstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_has_workstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_has_workstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_workstate() {
  workstate_ = 0u;
  clear_has_workstate();
}
inline ::google::protobuf::uint32 stRequestResetGmWorkStateGmUserCmd::workstate() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestResetGmWorkStateGmUserCmd.workState)
  return workstate_;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_workstate(::google::protobuf::uint32 value) {
  set_has_workstate();
  workstate_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestResetGmWorkStateGmUserCmd.workState)
}

// optional uint32 winNum = 5;
inline bool stRequestResetGmWorkStateGmUserCmd::has_winnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_has_winnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stRequestResetGmWorkStateGmUserCmd::clear_winnum() {
  winnum_ = 0u;
  clear_has_winnum();
}
inline ::google::protobuf::uint32 stRequestResetGmWorkStateGmUserCmd::winnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestResetGmWorkStateGmUserCmd.winNum)
  return winnum_;
}
inline void stRequestResetGmWorkStateGmUserCmd::set_winnum(::google::protobuf::uint32 value) {
  set_has_winnum();
  winnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestResetGmWorkStateGmUserCmd.winNum)
}

// -------------------------------------------------------------------

// stReturnResetGmWorkStateGmUserCmd

// optional uint32 id = 1;
inline bool stReturnResetGmWorkStateGmUserCmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 stReturnResetGmWorkStateGmUserCmd::id() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnResetGmWorkStateGmUserCmd.id)
  return id_;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnResetGmWorkStateGmUserCmd.id)
}

// optional uint32 qMaxNum = 2;
inline bool stReturnResetGmWorkStateGmUserCmd::has_qmaxnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_has_qmaxnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_has_qmaxnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_qmaxnum() {
  qmaxnum_ = 0u;
  clear_has_qmaxnum();
}
inline ::google::protobuf::uint32 stReturnResetGmWorkStateGmUserCmd::qmaxnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnResetGmWorkStateGmUserCmd.qMaxNum)
  return qmaxnum_;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_qmaxnum(::google::protobuf::uint32 value) {
  set_has_qmaxnum();
  qmaxnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnResetGmWorkStateGmUserCmd.qMaxNum)
}

// optional uint32 autoRecv = 3;
inline bool stReturnResetGmWorkStateGmUserCmd::has_autorecv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_has_autorecv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_has_autorecv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_autorecv() {
  autorecv_ = 0u;
  clear_has_autorecv();
}
inline ::google::protobuf::uint32 stReturnResetGmWorkStateGmUserCmd::autorecv() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnResetGmWorkStateGmUserCmd.autoRecv)
  return autorecv_;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_autorecv(::google::protobuf::uint32 value) {
  set_has_autorecv();
  autorecv_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnResetGmWorkStateGmUserCmd.autoRecv)
}

// optional uint32 workState = 4;
inline bool stReturnResetGmWorkStateGmUserCmd::has_workstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_has_workstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_has_workstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_workstate() {
  workstate_ = 0u;
  clear_has_workstate();
}
inline ::google::protobuf::uint32 stReturnResetGmWorkStateGmUserCmd::workstate() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnResetGmWorkStateGmUserCmd.workState)
  return workstate_;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_workstate(::google::protobuf::uint32 value) {
  set_has_workstate();
  workstate_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnResetGmWorkStateGmUserCmd.workState)
}

// optional uint32 winNum = 5;
inline bool stReturnResetGmWorkStateGmUserCmd::has_winnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_has_winnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_has_winnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void stReturnResetGmWorkStateGmUserCmd::clear_winnum() {
  winnum_ = 0u;
  clear_has_winnum();
}
inline ::google::protobuf::uint32 stReturnResetGmWorkStateGmUserCmd::winnum() const {
  // @@protoc_insertion_point(field_get:Pmd.stReturnResetGmWorkStateGmUserCmd.winNum)
  return winnum_;
}
inline void stReturnResetGmWorkStateGmUserCmd::set_winnum(::google::protobuf::uint32 value) {
  set_has_winnum();
  winnum_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stReturnResetGmWorkStateGmUserCmd.winNum)
}

// -------------------------------------------------------------------

// stGmCommandUserCmd

// optional uint32 num = 1;
inline bool stGmCommandUserCmd::has_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stGmCommandUserCmd::set_has_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stGmCommandUserCmd::clear_has_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stGmCommandUserCmd::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 stGmCommandUserCmd::num() const {
  // @@protoc_insertion_point(field_get:Pmd.stGmCommandUserCmd.num)
  return num_;
}
inline void stGmCommandUserCmd::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGmCommandUserCmd.num)
}

// optional bytes str = 2;
inline bool stGmCommandUserCmd::has_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stGmCommandUserCmd::set_has_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stGmCommandUserCmd::clear_has_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stGmCommandUserCmd::clear_str() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& stGmCommandUserCmd::str() const {
  // @@protoc_insertion_point(field_get:Pmd.stGmCommandUserCmd.str)
  return *str_;
}
inline void stGmCommandUserCmd::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stGmCommandUserCmd.str)
}
inline void stGmCommandUserCmd::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stGmCommandUserCmd.str)
}
inline void stGmCommandUserCmd::set_str(const void* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stGmCommandUserCmd.str)
}
inline ::std::string* stGmCommandUserCmd::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stGmCommandUserCmd.str)
  return str_;
}
inline ::std::string* stGmCommandUserCmd::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stGmCommandUserCmd::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stGmCommandUserCmd.str)
}

// -------------------------------------------------------------------

// stGmCommandToSceneUserCmd

// optional uint32 gmid = 1;
inline bool stGmCommandToSceneUserCmd::has_gmid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stGmCommandToSceneUserCmd::set_has_gmid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stGmCommandToSceneUserCmd::clear_has_gmid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stGmCommandToSceneUserCmd::clear_gmid() {
  gmid_ = 0u;
  clear_has_gmid();
}
inline ::google::protobuf::uint32 stGmCommandToSceneUserCmd::gmid() const {
  // @@protoc_insertion_point(field_get:Pmd.stGmCommandToSceneUserCmd.gmid)
  return gmid_;
}
inline void stGmCommandToSceneUserCmd::set_gmid(::google::protobuf::uint32 value) {
  set_has_gmid();
  gmid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stGmCommandToSceneUserCmd.gmid)
}

// optional bytes str = 2;
inline bool stGmCommandToSceneUserCmd::has_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stGmCommandToSceneUserCmd::set_has_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stGmCommandToSceneUserCmd::clear_has_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stGmCommandToSceneUserCmd::clear_str() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& stGmCommandToSceneUserCmd::str() const {
  // @@protoc_insertion_point(field_get:Pmd.stGmCommandToSceneUserCmd.str)
  return *str_;
}
inline void stGmCommandToSceneUserCmd::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set:Pmd.stGmCommandToSceneUserCmd.str)
}
inline void stGmCommandToSceneUserCmd::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set_char:Pmd.stGmCommandToSceneUserCmd.str)
}
inline void stGmCommandToSceneUserCmd::set_str(const void* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Pmd.stGmCommandToSceneUserCmd.str)
}
inline ::std::string* stGmCommandToSceneUserCmd::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Pmd.stGmCommandToSceneUserCmd.str)
  return str_;
}
inline ::std::string* stGmCommandToSceneUserCmd::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void stGmCommandToSceneUserCmd::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Pmd.stGmCommandToSceneUserCmd.str)
}

// -------------------------------------------------------------------

// stForceChangeSexGmUserCmd

// -------------------------------------------------------------------

// stRequestMobileInfoGmUserCmd

// optional uint64 mobile = 1;
inline bool stRequestMobileInfoGmUserCmd::has_mobile() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void stRequestMobileInfoGmUserCmd::set_has_mobile() {
  _has_bits_[0] |= 0x00000001u;
}
inline void stRequestMobileInfoGmUserCmd::clear_has_mobile() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void stRequestMobileInfoGmUserCmd::clear_mobile() {
  mobile_ = GOOGLE_ULONGLONG(0);
  clear_has_mobile();
}
inline ::google::protobuf::uint64 stRequestMobileInfoGmUserCmd::mobile() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestMobileInfoGmUserCmd.mobile)
  return mobile_;
}
inline void stRequestMobileInfoGmUserCmd::set_mobile(::google::protobuf::uint64 value) {
  set_has_mobile();
  mobile_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestMobileInfoGmUserCmd.mobile)
}

// optional uint32 accid = 2;
inline bool stRequestMobileInfoGmUserCmd::has_accid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void stRequestMobileInfoGmUserCmd::set_has_accid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void stRequestMobileInfoGmUserCmd::clear_has_accid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void stRequestMobileInfoGmUserCmd::clear_accid() {
  accid_ = 0u;
  clear_has_accid();
}
inline ::google::protobuf::uint32 stRequestMobileInfoGmUserCmd::accid() const {
  // @@protoc_insertion_point(field_get:Pmd.stRequestMobileInfoGmUserCmd.accid)
  return accid_;
}
inline void stRequestMobileInfoGmUserCmd::set_accid(::google::protobuf::uint32 value) {
  set_has_accid();
  accid_ = value;
  // @@protoc_insertion_point(field_set:Pmd.stRequestMobileInfoGmUserCmd.accid)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Pmd

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Pmd::Gm_Param> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::Gm_Param>() {
  return ::Pmd::Gm_Param_descriptor();
}
template <> struct is_proto_enum< ::Pmd::ForbidAccountData_ForbidType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::ForbidAccountData_ForbidType>() {
  return ::Pmd::ForbidAccountData_ForbidType_descriptor();
}
template <> struct is_proto_enum< ::Pmd::GMToolRightKey> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::GMToolRightKey>() {
  return ::Pmd::GMToolRightKey_descriptor();
}
template <> struct is_proto_enum< ::Pmd::GMOptKey> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::GMOptKey>() {
  return ::Pmd::GMOptKey_descriptor();
}
template <> struct is_proto_enum< ::Pmd::UserType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::UserType>() {
  return ::Pmd::UserType_descriptor();
}
template <> struct is_proto_enum< ::Pmd::ReturnLoginGmType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::ReturnLoginGmType>() {
  return ::Pmd::ReturnLoginGmType_descriptor();
}
template <> struct is_proto_enum< ::Pmd::GmServerMessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::GmServerMessageType>() {
  return ::Pmd::GmServerMessageType_descriptor();
}
template <> struct is_proto_enum< ::Pmd::NameOperateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::NameOperateType>() {
  return ::Pmd::NameOperateType_descriptor();
}
template <> struct is_proto_enum< ::Pmd::dbtype> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::dbtype>() {
  return ::Pmd::dbtype_descriptor();
}
template <> struct is_proto_enum< ::Pmd::enumQuestionOver> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::enumQuestionOver>() {
  return ::Pmd::enumQuestionOver_descriptor();
}
template <> struct is_proto_enum< ::Pmd::GameClientMessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Pmd::GameClientMessageType>() {
  return ::Pmd::GameClientMessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gmcommand_2eproto__INCLUDED
