package Pmd;

message Gm
{
	enum Param
	{
		StartUpGameRequestGmPmd_C     = 1;   //游戏区服启动时发送给GMServer的第一个消息
		StartUpGameReturnGmPmd_S      = 2;   //游戏区服启动协议返回
		SurportGameZoneRequestGmPmd_C = 3;   //GMTool请求GMServer当前GM支持的区服
		SurportGameZoneReturnGmPmd_S  = 4;   //当前支持的游戏区服

        //GM账号相关
		RequestLoginGmUserPmd_C       = 5;   //GM请求登陆验证
		ReturnLoginGmUserPmd_S        = 6;   //GM登陆验证结果
		GmConfigDataGmUserPmd_CS      = 7;   //GM配置文件
		SetPasswordGmUserPmd_C        = 8;   //更改密码
		ReturnPasswordGmUserPmd_S     = 9;   //更改密码返回
		AddNewGmUserPmd_C             = 10;  //新加账号
		ReturnAddNewGmUserPmd_S       = 11;  //新加账号返回
		GMAccountListGmUserPmd_CS     = 12;  //请求GM账号列表
		RequestDelGmUserPmd_C         = 13;  //删除GM账号
        ReturnDelGmUserPmd_S          = 14;  //删除GM账号返回
        //修改GM账号权限
        //修改账号权限返回
        
        //公告相关
		BroadcastNewGmUserPmd_CS      = 17;   //公告任务指令。该指令可用于公告的添加、修改、查询返回
		BroadcastDeleteGmUserPmd_C    = 18;   //工具发给服务器的公告删除指令
		BroadcastRequestGmUserPmd_C   = 19;   //工具发给服务器的对未发送完毕的公告查询的指令
        
        //处罚玩家
        PunishUserGmUserPmd_CS        = 20;   //处罚玩家
        PunishRecordGmUserPmd_C       = 21;   //查询当前处罚记录  

        //补偿玩家
        
        //服务器信息查询
		stRequestTimeGmUserCmd        = 22;   //请求游戏服务器时间
		stReturnTimeGmUserCmd         = 23;   //返回游戏服务器时间
		stServerShutdownGmUserCmd     = 24;   //通知GM服务器down机了
		stRequestZoneDicGmUserCmd     = 25;   //请求游戏区服名称
		stReturnZoneDicGmUserCmd      = 26;   //返回所有区服名称
		stAddChatConfigGmUserCmd      = 27;   //添加某个区的聊天设置
		stCancelChatConfigGmUserCmd  = 28;   //
		stRequestChatTypesGmUserCmd   = 29;   // 向服务器请求聊天类型
		stReturnChatTypesGmUserCmd    = 30;
		stServerStartupGmUserCmd      = 31;   //服务器启动时发送的第一个协议
		stNotifyShutdownGmUserCmd     = 32;   // 通知刷新停机维护公告
		stCancelShutdownGmUserCmd     = 33;   /// 取消停机维护公共
		stGmServerMessageGmUserCmd    = 34;   // GmServer发给工具端的弹出消息
		stRequestDelGmUserGmUserCmd   = 35;   // 删除GM帐号
		stRequestResetGmUserPasswordGmUserCmd = 36;  //重置GM账号密码
		stQequestShutDownGmUserCmd    = 37;   // 查询当前正在发送和尚未发送的停机公告
		stRequestForbidAccountGmUserCmd = 38; // GM工具请求封停帐号
		stQueryForbidAccountGmUserCmd = 39;   // 查询一个玩家被封号的情况
		stReturnForbidAccountListGmUserCmd   = 40; // 返回GM工具请求封停帐号列表
		stRequestUnForbidAccountGmUserCmd    = 41; // GM工具请求解封帐号
		stBroadcastDeleteZoneGmUserCmd       = 42; // 删除指定区的公告（仅供较高权限GM紧急情况下使用）
		stRequestNameAccountGmUserCmd = 43;   // GM工具角色反查功能
		stReturnNameAccountGmUserCmd  = 44;
		stRequestDBConnectionConfigGmUserCmd = 45;  // 向服务器请求查询数据库的连接配置
		stReturnDBConnectionConfigGmUserCmd  = 46;  // 向服务器请求查询数据库的连接配置
		stQueryNameExistGmUserCmd     = 47;  // 查询给定的名称是否存在
		stForceInsertNameGmUserCmd    = 48;  // 强制向NameServer中插入一个名称
		stForceModifyNameGmUserCmd    = 49;  // 强制修改名称
		stCheckOnlineGmUserCmd        = 50;  // 角色是否在线查询
		stReturnCheckOnlineGmUserCmd  = 51;  // 角色是否在线查询
		stPunishUserGmUserCmd         = 52;  // 处罚玩家
		stRequestUserPosUserGmUserCmd = 53;  // 请求玩家坐标
		stReturnUserPosUserGmUserCmd  = 54;  // 返回玩家坐标
		stEndUserPosUserGmUserCmd     = 55;  // 地图玩家数据发完成消息
		stBroadcastReallySendGmUserCmd = 56; // 公告发送后服务器给工具端的通知消息
		stDBQueryGmUserCmd            = 57;  // GMTool向GMServer发送的数据库查询指令
		stDBReturnDataGmUserCmd       = 58;  // GMServer向GMTool返回的数据库查询结果
		stDBReturnEndGmUserCmd        = 59;  // GMServer向GMTool通知数据库查询结果已经发送完毕，以便客户端及时结束事务
		stFullForbidAccountLogDataGmUserCmd = 60;  //[与工具端无关]RecordServer填充完整的玩家封禁消息，用于GMServer日志
		stFullGameGmCmdLogDataGmUserCmd     = 61;  // [与工具端无关]ScenesServer填充完整的游戏GM指令信息，用于GMServer日志
		stRequestAddQuestionGmUserCmd = 63;  // 游戏客户端请求添加一个新的GM问题
		stReturnQuestionGmUserCmd     = 64;  // 发送给客户端或工具端请求的问题,序号
		stSequenceQuestionGmUserCmd   = 65;  // 向游戏客户端通知刷新问题的序号
		stDeleteQuestionGmUserCmd     = 66;  // 请求删除一个问题
		stRequestQuestionGmUserCmd    = 67;  // 游戏客户端向服务器请求属于自己的问题
		stRequestSeqQuestionGmUserCmd = 68;  // 游戏客户端向服务器请求自己问题的排队序号
		stReturnNoneQuestionGmUserCmd = 69;  // 当前用户没有任何问题在排队
		stUserCmdForwardGmUserCmd     = 70;  // 转发GMServer的消息直接到客户端,服务器使用，与客户端无关
		stProcessQuestionGmUserCmd    = 71;  // 工具请求处理一个问题
		stGMToolBeginQuestionGmUserCmd = 72;  // 工具端告知服务器开始参加在线答疑
		stGMToolEndQuestionGmUserCmd  = 74;  // 工具端告知服务器自己退出在线答疑的处理
		stDisableGMChatInputGmUserCmd = 75;  // 工具端通知游戏客户端禁止和GM对话的输入，并标志着一次会话的结束
		stQuestionOverGmUserCmd       = 76;  // 通知游戏客户端其提交的问题生命期已经结束。具体原因参考enumQuestionOver
		stQueryQuestionLimitGmUserCmd = 77;  // 工具端查询当前在线答疑系统的上限设置
		stReturnQuestionLimitGmUserCmd = 78;  // 服务器返回当前在线答疑系统的上限设置
		stResetQuestionLimitGmUserCmd = 79;  // 工具端重新设置在线答疑系统的上限设置
		stBroadcastToWorldGmUserCmd   = 80;  // 发送世界系统公告
		stSetActivityNoteGmUserCmd    = 81;  // 设置活动公告
		stRequestRefreshUserQuestionGmUserCmd = 82;  // 请求刷新在线答疑问题列表
		stRequestSetUserGoldInGmUserCmd = 83;  // 设置玩家冲钱数量
		stSetPrivilegesGmUserCmd      = 84;  // 设置权限
		stRequestSaveChatGmUserCmd    = 85;  // GMTool关注功能，保存特定的聊天消息到服务器
		stGameClientMessageBoxGmUserCmd = 86;  // 由工具发给游戏客户端的弹出消息框
		stGameClientChatMessageGMUserCmd = 87;  // 由游戏服务器转发给客户端的聊天类消息
		stRequestGameClientMessageConfigGmUserCmd = 88;  // 游戏客户端查询配置字符串
		stReturnGameClientMessageConfigGmUserCmd = 89;  // 应答游戏客户端配置字符串
		stPlayerSatisfactionGmUserCmd = 90;  // 玩家满意度反馈
		stRequestMyQuestionGmUserCmd  = 91;  // 游戏客户端向服务器请求属于自己的问题
		stRequestQuestionSubmitableGmUserCmd = 92;  // 查询在线答疑是否可以提问，服务器回发表示可以提问
		stVerifyOnlineQaGmUserCmd     = 94;  // 在线答疑消息验证
		stRequestPreProcessQuestionGmUserCmd = 95;  //在线答疑预处理，通过该消息将玩家提问的列表中相应的preprocess字段置
		stReturnPreProcessQuestionGmUserCmd = 96;   //发送经过预处理后的问题列表给GMTool
		stReturnNowPreProcessQusetGmUserCmd = 97;   //一个问题被预处理了，广播给GMTool，更新显示列表
		stDeleteProcessedQuestionGmUserCmd = 98;    //预处理过命令，接单后删除命令
		stRequestOneQuestionGmUserCmd = 99;   //GMTool 请求发送一个问题
		stReturnOneQuestionGmUserCmd  = 100;  //返回一个问题给请求问题的GM
		stRequestResetGmWorkStateGmUserCmd = 101;  // 设置GM 工作的相关状态  自动接单，接单最大数量，工作状态等 
		stReturnResetGmWorkStateGmUserCmd = 102;   // 当对GM回答问题状态权限改变后广播给GMTool
		stGmCommandUserCmd            = 103;  // 由GM工具发向游戏服务器的批量GM指令
		stGmCommandToSceneUserCmd     = 104;  // 由GMGServer转发GM指令到游戏服务器
		stForceChangeSexGmUserCmd     = 105;  // 强制修改名称
		stRequestMobileInfoGmUserCmd  = 106;  // 手机号反查
		stDeleteQuestionByGmUserCmd   = 107;  // GM工具要求删除一个问题
		stNewGameClientMessageBoxGmUserCmd = 108;  // 由工具发给游戏客户端的弹出消息框
	}
}

//此协议统一用于游戏服启动时连接其他服务器的协议，GM连接改为RequestLoginGmUserPmd_C
message StartUpGameRequestGmPmd_C
{
	required string key 		= 1;
	required uint32 version 	= 2;
	optional string compress	= 3;		// 压缩算法 ["gzip", "flate", "zlib", "lzw"]
	optional string encrypt		= 4;		// 加密算法
	optional string encryptkey	= 5;		// 加密key
	required string username	= 6;
	required string password	= 7;
}

// 返回给区服务器的连接验证状态,这里也发送区信息的原因是考虑游戏服务器可能连接名字验证服务器比连接登陆服务器快
message StartUpGameReturnGmPmd_S
{
	required bool   ret     = 1;		    // 返回成功标志
	optional string retdesc = 2;			// 返回描述
}

message SurportGameZoneRequestGmPmd_C
{
}

message SurportGameZoneReturnGmPmd_S
{
}

//GM账号相关
message GmUserInfo
{
    optional uint32 gmid      = 1;       //id, 用于登陆返回
    optional string name      = 2;       //账号，创建账号使用
    optional string password  = 3;       //密码，创建账号使用
    optional uint32 pri       = 4;       //权限
    optional uint32 qmaxnum   = 5;       //最大接单数
    optional uint32 autorecv  = 6;       //是否自动接单，
    optional uint32 workstate = 7;       //工作状态
    optional uint32 winnum    = 8;       //客户端打开窗口的数量
    optional uint32 gameid    = 9;       //游戏ID，登陆后保存在GMServer，不返回给客户端
    optional uint32 bindip    = 10;      //绑定IP 
    optional string config    = 11;      //GM配置
}

//GMClient连接GMServer的第一个协议
message RequestLoginGmUserPmd_C 
{
	required string key 		= 1;
	required uint32 version 	= 2;
	optional string compress	= 3;  // 压缩算法 ["gzip", "flate", "zlib", "lzw"]
	optional string encrypt		= 4;  // 加密算法
	optional string encryptkey	= 5;  // 加密key
	required string username	= 6;
	required string password	= 7;
	optional uint32 logintype   = 8;  // 登陆方式 0: 客户端登陆， 1:web登陆
	optional uint32 loginip     = 9;  // 登陆IP，当登陆方式为1时，需传入
}
//登陆验证返回
message ReturnLoginGmUserPmd_S 
{
    optional uint32 retcode   = 1;   // 验证结果, 0登陆成功，1密码错误， 2账号不存在， 3未知错误，4账号正在使用，5版本号错误
    optional GmUserInfo data  = 2;   // Gm账号信息 
}
//GM配置
message GmConfigDataGmUserPmd_CS
{
    optional string data      = 1;   // gm账号配置
}
//更改密码
message SetPasswordGmUserPmd_C
{
    required string oldpassword = 1; //老密码
    required string newpassword = 2; //新密码
}
//更改密码返回
message ReturnPasswordGmUserPmd_S
{
    optional uint32 retcode   = 1;  //0成功，1失败
}
//添加GM账号
message AddNewGmUserPmd_C
{
    required GmUserInfo data  = 1;  //GM账号数据
}
//添加GM账号返回
message ReturnAddNewGmUserPmd_S
{
    optional uint32 retcode   = 1;  //0成功，1失败
}
//请求获取GM账号列表
message GmAccountListGmUserPmd_CS
{
    repeated GmUserInfo data  = 1;  //GM账号列表
}
//请求删除GM账号
message RequestDelGmUserPmd_C
{
    required uint32 gmid      = 1;  //Gmid
}
//删除结果
message ReturnDelGmUserPmd_S
{
    optional uint32 retcode   = 1;  //0成功，1失败
}

//GM权限标识
enum GMToolRightKey
{
    RightKey_Login              = 1;    /**< 登陆 */
    RightKey_AccountManage      = 2;    /**< 帐号管理 */
    RightKey_Broadcast          = 4;    /**< 公告系统 */
    RightKey_ChatMonitor        = 8;    /**< 聊天监控 */
    RightKey_ShutDownNotify     = 16;   /**< 停机公告系统 */
    RightKey_Punish             = 32;   /**< 处罚玩家 */
    RightKey_PlayerInfo         = 64;   /**< 玩家信息查询 */
    RightKey_LogQuery           = 128;  /**< 操作日志查询 */
    RightKey_OnlineQA           = 256;  /**< 在线答疑 */
    RightKey_ProductionCenter   = 512;  /**< 产品中心权限 */
    RightKey_Namecontrol        = 1024; /**<名称插入修改 */
    RightKey_SetRecvQuestion    = 2048; /**<自动接单管理权限*/
    RightKey_NewVersion         = 4096; /**<兵王2新版本公告控制*/ 
    RightKey_GMCommand          = 8192; /**<由GM工具发向游戏服务器的批量GM指令*/ 
}

//公告相关
message BroadcastInfo
{
    optional uint32 taskid      = 1;   //公告ID
    optional uint32 gameid      = 2;   //游戏ID
    optional uint32 zoneid      = 3;   //区服ID
    optional uint32 gmid        = 4;   //发布公告的GM ID
    optional string gmname      = 5;   //GM账号名称
    optional uint32 countryid   = 6;   //国家ID
    optional uint32 sceneid     = 7;   //场景ID
    optional uint32 starttime   = 8;   //公告开始时间
    optional uint32 endtime     = 9;   //公告结束时间
    optional uint32 intervaltime=10;   //公告间隔时间
    optional uint32 type        =11;   //公告类型
    optional string content     =12;   //公告内容
}
//公告任务指令。该指令可用于公告的添加、修改、查询返回
message BroadcastNewGmUserPmd_CS
{
    repeated BroadcastInfo data = 1;   //公告信息
}
//工具发给服务器的公告删除指令
message BroadcastDeleteGmUserPmd_C
{
    optional uint32 taskid      = 1;   //公告ID
}
//工具发给服务器的对未发送完毕的公告查询的指令  
message BroadcastRequestGmUserPmd_C
{
    optional uint32 zoneid    = 1;    //区服ID
    optional uint32 sceneid   = 2;    //场景ID
    optional uint32 endtime   = 3;    //结束时间在此之后的
}

message PunishUserInfo
{
    optional uint32 gameid    = 1;   //游戏ID
    optional uint32 zoneid    = 2;   //区服ID   
    optional string username  = 3;   //玩家昵称 
    optional uint32 accid     = 4;   //玩家账号ID
    optional uint32 ip        = 5;   //玩家IP(封停账号时使用，针对单个IP封停)
    optional uint32 gmid      = 6;   //封停的GM ID
    optional string reason    = 7;   //处罚原因
    optional uint32 type      = 8;   //处罚操作,1警告，2禁言，3自言自语，4关禁闭，5踢下线，6封号
    optional uint32 delay     = 9;   //处罚时长/剩余处罚时间，单位分钟，0表示取消处罚
    optional uint32 waittime  = 10;  //延迟多久开始处罚

}
//处罚玩家、返回当前受处罚的玩家
message PunishUserGmUserPmd_C
{
    repeated PunishUserInfo data = 1; //处罚玩家信息
}
//游戏服返回的处罚结果
message PunishResultGmUserPmd_S
{
    optional uint32 retcode      = 1; //0成功，1失败 
}
//处罚当前所有处罚记录
message PunishRecordGmUserPmd_C
{
    optional uint32 zoneid       = 1; //区服ID，0则表示查询当前游戏的所有区服的处罚记录
}

